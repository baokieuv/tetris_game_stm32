
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00025478  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002c14  08025628  08025628  00026628  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0004289a  0802823c  0802823c  0002923c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000002e8  0806aad8  0806aad8  0006bad8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000008e  0806adc0  0806adc0  0006bdc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000b4cf8  0806ae50  0806ae50  0006be50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0811fb48  0811fb48  00121380  2**0
                  CONTENTS
  8 .ARM          00000008  0811fb48  0811fb48  00120b48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0811fb50  0811fb50  00121380  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0811fb50  0811fb50  00120b50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  0811fb64  0811fb64  00120b64  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  0811fb6c  00121000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000180  0811fcd8  00121180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000280  0811fdd8  00121280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          00016180  20000380  0811fed8  00121380  2**2
                  ALLOC
 16 ._user_heap_stack 00001400  20016500  0811fed8  00121500  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  00121380  2**0
                  CONTENTS, READONLY
 18 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00122000  2**2
                  ALLOC
 19 .debug_line   000607dc  00000000  00000000  001213b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 00000083  00000000  00000000  00181b8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_info   000dbb43  00000000  00000000  00181c0f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_abbrev 0001818a  00000000  00000000  0025d752  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_aranges 00003748  00000000  00000000  002758e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    0011a439  00000000  00000000  00279028  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_rnglists 000041c5  00000000  00000000  00393461  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 000204c3  00000000  00000000  00397626  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  000129e1  00000000  00000000  003b7ae9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  003ca4ca  2**0
                  CONTENTS, READONLY
 29 .debug_frame  00009d04  00000000  00000000  003ca58c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000380 	.word	0x20000380
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08025610 	.word	0x08025610

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000384 	.word	0x20000384
 80001ec:	08025610 	.word	0x08025610

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_ldivmod>:
 8000290:	b97b      	cbnz	r3, 80002b2 <__aeabi_ldivmod+0x22>
 8000292:	b972      	cbnz	r2, 80002b2 <__aeabi_ldivmod+0x22>
 8000294:	2900      	cmp	r1, #0
 8000296:	bfbe      	ittt	lt
 8000298:	2000      	movlt	r0, #0
 800029a:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 800029e:	e006      	blt.n	80002ae <__aeabi_ldivmod+0x1e>
 80002a0:	bf08      	it	eq
 80002a2:	2800      	cmpeq	r0, #0
 80002a4:	bf1c      	itt	ne
 80002a6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80002aa:	f04f 30ff 	movne.w	r0, #4294967295
 80002ae:	f000 b9d3 	b.w	8000658 <__aeabi_idiv0>
 80002b2:	f1ad 0c08 	sub.w	ip, sp, #8
 80002b6:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002ba:	2900      	cmp	r1, #0
 80002bc:	db09      	blt.n	80002d2 <__aeabi_ldivmod+0x42>
 80002be:	2b00      	cmp	r3, #0
 80002c0:	db1a      	blt.n	80002f8 <__aeabi_ldivmod+0x68>
 80002c2:	f000 f84d 	bl	8000360 <__udivmoddi4>
 80002c6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002ca:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ce:	b004      	add	sp, #16
 80002d0:	4770      	bx	lr
 80002d2:	4240      	negs	r0, r0
 80002d4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002d8:	2b00      	cmp	r3, #0
 80002da:	db1b      	blt.n	8000314 <__aeabi_ldivmod+0x84>
 80002dc:	f000 f840 	bl	8000360 <__udivmoddi4>
 80002e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002e8:	b004      	add	sp, #16
 80002ea:	4240      	negs	r0, r0
 80002ec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002f0:	4252      	negs	r2, r2
 80002f2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002f6:	4770      	bx	lr
 80002f8:	4252      	negs	r2, r2
 80002fa:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002fe:	f000 f82f 	bl	8000360 <__udivmoddi4>
 8000302:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000306:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800030a:	b004      	add	sp, #16
 800030c:	4240      	negs	r0, r0
 800030e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000312:	4770      	bx	lr
 8000314:	4252      	negs	r2, r2
 8000316:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800031a:	f000 f821 	bl	8000360 <__udivmoddi4>
 800031e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000322:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000326:	b004      	add	sp, #16
 8000328:	4252      	negs	r2, r2
 800032a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800032e:	4770      	bx	lr

08000330 <__aeabi_uldivmod>:
 8000330:	b953      	cbnz	r3, 8000348 <__aeabi_uldivmod+0x18>
 8000332:	b94a      	cbnz	r2, 8000348 <__aeabi_uldivmod+0x18>
 8000334:	2900      	cmp	r1, #0
 8000336:	bf08      	it	eq
 8000338:	2800      	cmpeq	r0, #0
 800033a:	bf1c      	itt	ne
 800033c:	f04f 31ff 	movne.w	r1, #4294967295
 8000340:	f04f 30ff 	movne.w	r0, #4294967295
 8000344:	f000 b988 	b.w	8000658 <__aeabi_idiv0>
 8000348:	f1ad 0c08 	sub.w	ip, sp, #8
 800034c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000350:	f000 f806 	bl	8000360 <__udivmoddi4>
 8000354:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000358:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800035c:	b004      	add	sp, #16
 800035e:	4770      	bx	lr

08000360 <__udivmoddi4>:
 8000360:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000364:	9d08      	ldr	r5, [sp, #32]
 8000366:	468e      	mov	lr, r1
 8000368:	4604      	mov	r4, r0
 800036a:	4688      	mov	r8, r1
 800036c:	2b00      	cmp	r3, #0
 800036e:	d14a      	bne.n	8000406 <__udivmoddi4+0xa6>
 8000370:	428a      	cmp	r2, r1
 8000372:	4617      	mov	r7, r2
 8000374:	d962      	bls.n	800043c <__udivmoddi4+0xdc>
 8000376:	fab2 f682 	clz	r6, r2
 800037a:	b14e      	cbz	r6, 8000390 <__udivmoddi4+0x30>
 800037c:	f1c6 0320 	rsb	r3, r6, #32
 8000380:	fa01 f806 	lsl.w	r8, r1, r6
 8000384:	fa20 f303 	lsr.w	r3, r0, r3
 8000388:	40b7      	lsls	r7, r6
 800038a:	ea43 0808 	orr.w	r8, r3, r8
 800038e:	40b4      	lsls	r4, r6
 8000390:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000394:	fa1f fc87 	uxth.w	ip, r7
 8000398:	fbb8 f1fe 	udiv	r1, r8, lr
 800039c:	0c23      	lsrs	r3, r4, #16
 800039e:	fb0e 8811 	mls	r8, lr, r1, r8
 80003a2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80003a6:	fb01 f20c 	mul.w	r2, r1, ip
 80003aa:	429a      	cmp	r2, r3
 80003ac:	d909      	bls.n	80003c2 <__udivmoddi4+0x62>
 80003ae:	18fb      	adds	r3, r7, r3
 80003b0:	f101 30ff 	add.w	r0, r1, #4294967295
 80003b4:	f080 80ea 	bcs.w	800058c <__udivmoddi4+0x22c>
 80003b8:	429a      	cmp	r2, r3
 80003ba:	f240 80e7 	bls.w	800058c <__udivmoddi4+0x22c>
 80003be:	3902      	subs	r1, #2
 80003c0:	443b      	add	r3, r7
 80003c2:	1a9a      	subs	r2, r3, r2
 80003c4:	b2a3      	uxth	r3, r4
 80003c6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ca:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ce:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003d2:	fb00 fc0c 	mul.w	ip, r0, ip
 80003d6:	459c      	cmp	ip, r3
 80003d8:	d909      	bls.n	80003ee <__udivmoddi4+0x8e>
 80003da:	18fb      	adds	r3, r7, r3
 80003dc:	f100 32ff 	add.w	r2, r0, #4294967295
 80003e0:	f080 80d6 	bcs.w	8000590 <__udivmoddi4+0x230>
 80003e4:	459c      	cmp	ip, r3
 80003e6:	f240 80d3 	bls.w	8000590 <__udivmoddi4+0x230>
 80003ea:	443b      	add	r3, r7
 80003ec:	3802      	subs	r0, #2
 80003ee:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80003f2:	eba3 030c 	sub.w	r3, r3, ip
 80003f6:	2100      	movs	r1, #0
 80003f8:	b11d      	cbz	r5, 8000402 <__udivmoddi4+0xa2>
 80003fa:	40f3      	lsrs	r3, r6
 80003fc:	2200      	movs	r2, #0
 80003fe:	e9c5 3200 	strd	r3, r2, [r5]
 8000402:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000406:	428b      	cmp	r3, r1
 8000408:	d905      	bls.n	8000416 <__udivmoddi4+0xb6>
 800040a:	b10d      	cbz	r5, 8000410 <__udivmoddi4+0xb0>
 800040c:	e9c5 0100 	strd	r0, r1, [r5]
 8000410:	2100      	movs	r1, #0
 8000412:	4608      	mov	r0, r1
 8000414:	e7f5      	b.n	8000402 <__udivmoddi4+0xa2>
 8000416:	fab3 f183 	clz	r1, r3
 800041a:	2900      	cmp	r1, #0
 800041c:	d146      	bne.n	80004ac <__udivmoddi4+0x14c>
 800041e:	4573      	cmp	r3, lr
 8000420:	d302      	bcc.n	8000428 <__udivmoddi4+0xc8>
 8000422:	4282      	cmp	r2, r0
 8000424:	f200 8105 	bhi.w	8000632 <__udivmoddi4+0x2d2>
 8000428:	1a84      	subs	r4, r0, r2
 800042a:	eb6e 0203 	sbc.w	r2, lr, r3
 800042e:	2001      	movs	r0, #1
 8000430:	4690      	mov	r8, r2
 8000432:	2d00      	cmp	r5, #0
 8000434:	d0e5      	beq.n	8000402 <__udivmoddi4+0xa2>
 8000436:	e9c5 4800 	strd	r4, r8, [r5]
 800043a:	e7e2      	b.n	8000402 <__udivmoddi4+0xa2>
 800043c:	2a00      	cmp	r2, #0
 800043e:	f000 8090 	beq.w	8000562 <__udivmoddi4+0x202>
 8000442:	fab2 f682 	clz	r6, r2
 8000446:	2e00      	cmp	r6, #0
 8000448:	f040 80a4 	bne.w	8000594 <__udivmoddi4+0x234>
 800044c:	1a8a      	subs	r2, r1, r2
 800044e:	0c03      	lsrs	r3, r0, #16
 8000450:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000454:	b280      	uxth	r0, r0
 8000456:	b2bc      	uxth	r4, r7
 8000458:	2101      	movs	r1, #1
 800045a:	fbb2 fcfe 	udiv	ip, r2, lr
 800045e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000462:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000466:	fb04 f20c 	mul.w	r2, r4, ip
 800046a:	429a      	cmp	r2, r3
 800046c:	d907      	bls.n	800047e <__udivmoddi4+0x11e>
 800046e:	18fb      	adds	r3, r7, r3
 8000470:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000474:	d202      	bcs.n	800047c <__udivmoddi4+0x11c>
 8000476:	429a      	cmp	r2, r3
 8000478:	f200 80e0 	bhi.w	800063c <__udivmoddi4+0x2dc>
 800047c:	46c4      	mov	ip, r8
 800047e:	1a9b      	subs	r3, r3, r2
 8000480:	fbb3 f2fe 	udiv	r2, r3, lr
 8000484:	fb0e 3312 	mls	r3, lr, r2, r3
 8000488:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800048c:	fb02 f404 	mul.w	r4, r2, r4
 8000490:	429c      	cmp	r4, r3
 8000492:	d907      	bls.n	80004a4 <__udivmoddi4+0x144>
 8000494:	18fb      	adds	r3, r7, r3
 8000496:	f102 30ff 	add.w	r0, r2, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x142>
 800049c:	429c      	cmp	r4, r3
 800049e:	f200 80ca 	bhi.w	8000636 <__udivmoddi4+0x2d6>
 80004a2:	4602      	mov	r2, r0
 80004a4:	1b1b      	subs	r3, r3, r4
 80004a6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80004aa:	e7a5      	b.n	80003f8 <__udivmoddi4+0x98>
 80004ac:	f1c1 0620 	rsb	r6, r1, #32
 80004b0:	408b      	lsls	r3, r1
 80004b2:	fa22 f706 	lsr.w	r7, r2, r6
 80004b6:	431f      	orrs	r7, r3
 80004b8:	fa0e f401 	lsl.w	r4, lr, r1
 80004bc:	fa20 f306 	lsr.w	r3, r0, r6
 80004c0:	fa2e fe06 	lsr.w	lr, lr, r6
 80004c4:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80004c8:	4323      	orrs	r3, r4
 80004ca:	fa00 f801 	lsl.w	r8, r0, r1
 80004ce:	fa1f fc87 	uxth.w	ip, r7
 80004d2:	fbbe f0f9 	udiv	r0, lr, r9
 80004d6:	0c1c      	lsrs	r4, r3, #16
 80004d8:	fb09 ee10 	mls	lr, r9, r0, lr
 80004dc:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80004e0:	fb00 fe0c 	mul.w	lr, r0, ip
 80004e4:	45a6      	cmp	lr, r4
 80004e6:	fa02 f201 	lsl.w	r2, r2, r1
 80004ea:	d909      	bls.n	8000500 <__udivmoddi4+0x1a0>
 80004ec:	193c      	adds	r4, r7, r4
 80004ee:	f100 3aff 	add.w	sl, r0, #4294967295
 80004f2:	f080 809c 	bcs.w	800062e <__udivmoddi4+0x2ce>
 80004f6:	45a6      	cmp	lr, r4
 80004f8:	f240 8099 	bls.w	800062e <__udivmoddi4+0x2ce>
 80004fc:	3802      	subs	r0, #2
 80004fe:	443c      	add	r4, r7
 8000500:	eba4 040e 	sub.w	r4, r4, lr
 8000504:	fa1f fe83 	uxth.w	lr, r3
 8000508:	fbb4 f3f9 	udiv	r3, r4, r9
 800050c:	fb09 4413 	mls	r4, r9, r3, r4
 8000510:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000514:	fb03 fc0c 	mul.w	ip, r3, ip
 8000518:	45a4      	cmp	ip, r4
 800051a:	d908      	bls.n	800052e <__udivmoddi4+0x1ce>
 800051c:	193c      	adds	r4, r7, r4
 800051e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000522:	f080 8082 	bcs.w	800062a <__udivmoddi4+0x2ca>
 8000526:	45a4      	cmp	ip, r4
 8000528:	d97f      	bls.n	800062a <__udivmoddi4+0x2ca>
 800052a:	3b02      	subs	r3, #2
 800052c:	443c      	add	r4, r7
 800052e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000532:	eba4 040c 	sub.w	r4, r4, ip
 8000536:	fba0 ec02 	umull	lr, ip, r0, r2
 800053a:	4564      	cmp	r4, ip
 800053c:	4673      	mov	r3, lr
 800053e:	46e1      	mov	r9, ip
 8000540:	d362      	bcc.n	8000608 <__udivmoddi4+0x2a8>
 8000542:	d05f      	beq.n	8000604 <__udivmoddi4+0x2a4>
 8000544:	b15d      	cbz	r5, 800055e <__udivmoddi4+0x1fe>
 8000546:	ebb8 0203 	subs.w	r2, r8, r3
 800054a:	eb64 0409 	sbc.w	r4, r4, r9
 800054e:	fa04 f606 	lsl.w	r6, r4, r6
 8000552:	fa22 f301 	lsr.w	r3, r2, r1
 8000556:	431e      	orrs	r6, r3
 8000558:	40cc      	lsrs	r4, r1
 800055a:	e9c5 6400 	strd	r6, r4, [r5]
 800055e:	2100      	movs	r1, #0
 8000560:	e74f      	b.n	8000402 <__udivmoddi4+0xa2>
 8000562:	fbb1 fcf2 	udiv	ip, r1, r2
 8000566:	0c01      	lsrs	r1, r0, #16
 8000568:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800056c:	b280      	uxth	r0, r0
 800056e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000572:	463b      	mov	r3, r7
 8000574:	4638      	mov	r0, r7
 8000576:	463c      	mov	r4, r7
 8000578:	46b8      	mov	r8, r7
 800057a:	46be      	mov	lr, r7
 800057c:	2620      	movs	r6, #32
 800057e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000582:	eba2 0208 	sub.w	r2, r2, r8
 8000586:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800058a:	e766      	b.n	800045a <__udivmoddi4+0xfa>
 800058c:	4601      	mov	r1, r0
 800058e:	e718      	b.n	80003c2 <__udivmoddi4+0x62>
 8000590:	4610      	mov	r0, r2
 8000592:	e72c      	b.n	80003ee <__udivmoddi4+0x8e>
 8000594:	f1c6 0220 	rsb	r2, r6, #32
 8000598:	fa2e f302 	lsr.w	r3, lr, r2
 800059c:	40b7      	lsls	r7, r6
 800059e:	40b1      	lsls	r1, r6
 80005a0:	fa20 f202 	lsr.w	r2, r0, r2
 80005a4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80005a8:	430a      	orrs	r2, r1
 80005aa:	fbb3 f8fe 	udiv	r8, r3, lr
 80005ae:	b2bc      	uxth	r4, r7
 80005b0:	fb0e 3318 	mls	r3, lr, r8, r3
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80005ba:	fb08 f904 	mul.w	r9, r8, r4
 80005be:	40b0      	lsls	r0, r6
 80005c0:	4589      	cmp	r9, r1
 80005c2:	ea4f 4310 	mov.w	r3, r0, lsr #16
 80005c6:	b280      	uxth	r0, r0
 80005c8:	d93e      	bls.n	8000648 <__udivmoddi4+0x2e8>
 80005ca:	1879      	adds	r1, r7, r1
 80005cc:	f108 3cff 	add.w	ip, r8, #4294967295
 80005d0:	d201      	bcs.n	80005d6 <__udivmoddi4+0x276>
 80005d2:	4589      	cmp	r9, r1
 80005d4:	d81f      	bhi.n	8000616 <__udivmoddi4+0x2b6>
 80005d6:	eba1 0109 	sub.w	r1, r1, r9
 80005da:	fbb1 f9fe 	udiv	r9, r1, lr
 80005de:	fb09 f804 	mul.w	r8, r9, r4
 80005e2:	fb0e 1119 	mls	r1, lr, r9, r1
 80005e6:	b292      	uxth	r2, r2
 80005e8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005ec:	4542      	cmp	r2, r8
 80005ee:	d229      	bcs.n	8000644 <__udivmoddi4+0x2e4>
 80005f0:	18ba      	adds	r2, r7, r2
 80005f2:	f109 31ff 	add.w	r1, r9, #4294967295
 80005f6:	d2c4      	bcs.n	8000582 <__udivmoddi4+0x222>
 80005f8:	4542      	cmp	r2, r8
 80005fa:	d2c2      	bcs.n	8000582 <__udivmoddi4+0x222>
 80005fc:	f1a9 0102 	sub.w	r1, r9, #2
 8000600:	443a      	add	r2, r7
 8000602:	e7be      	b.n	8000582 <__udivmoddi4+0x222>
 8000604:	45f0      	cmp	r8, lr
 8000606:	d29d      	bcs.n	8000544 <__udivmoddi4+0x1e4>
 8000608:	ebbe 0302 	subs.w	r3, lr, r2
 800060c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000610:	3801      	subs	r0, #1
 8000612:	46e1      	mov	r9, ip
 8000614:	e796      	b.n	8000544 <__udivmoddi4+0x1e4>
 8000616:	eba7 0909 	sub.w	r9, r7, r9
 800061a:	4449      	add	r1, r9
 800061c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000620:	fbb1 f9fe 	udiv	r9, r1, lr
 8000624:	fb09 f804 	mul.w	r8, r9, r4
 8000628:	e7db      	b.n	80005e2 <__udivmoddi4+0x282>
 800062a:	4673      	mov	r3, lr
 800062c:	e77f      	b.n	800052e <__udivmoddi4+0x1ce>
 800062e:	4650      	mov	r0, sl
 8000630:	e766      	b.n	8000500 <__udivmoddi4+0x1a0>
 8000632:	4608      	mov	r0, r1
 8000634:	e6fd      	b.n	8000432 <__udivmoddi4+0xd2>
 8000636:	443b      	add	r3, r7
 8000638:	3a02      	subs	r2, #2
 800063a:	e733      	b.n	80004a4 <__udivmoddi4+0x144>
 800063c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000640:	443b      	add	r3, r7
 8000642:	e71c      	b.n	800047e <__udivmoddi4+0x11e>
 8000644:	4649      	mov	r1, r9
 8000646:	e79c      	b.n	8000582 <__udivmoddi4+0x222>
 8000648:	eba1 0109 	sub.w	r1, r1, r9
 800064c:	46c4      	mov	ip, r8
 800064e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000652:	fb09 f804 	mul.w	r8, r9, r4
 8000656:	e7c4      	b.n	80005e2 <__udivmoddi4+0x282>

08000658 <__aeabi_idiv0>:
 8000658:	4770      	bx	lr
 800065a:	bf00      	nop

0800065c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800065c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000694 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000660:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000662:	e003      	b.n	800066c <LoopCopyDataInit>

08000664 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000664:	4b0c      	ldr	r3, [pc, #48]	@ (8000698 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000666:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000668:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800066a:	3104      	adds	r1, #4

0800066c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800066c:	480b      	ldr	r0, [pc, #44]	@ (800069c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800066e:	4b0c      	ldr	r3, [pc, #48]	@ (80006a0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000670:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000674:	d3f6      	bcc.n	8000664 <CopyDataInit>
  ldr  r2, =_sbss
 8000676:	4a0b      	ldr	r2, [pc, #44]	@ (80006a4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000678:	e002      	b.n	8000680 <LoopFillZerobss>

0800067a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800067a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800067c:	f842 3b04 	str.w	r3, [r2], #4

08000680 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000680:	4b09      	ldr	r3, [pc, #36]	@ (80006a8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000682:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000684:	d3f9      	bcc.n	800067a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000686:	f005 f8bf 	bl	8005808 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800068a:	f024 fa53 	bl	8024b34 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800068e:	f000 fc53 	bl	8000f38 <main>
  bx  lr    
 8000692:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000694:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000698:	0811fb6c 	.word	0x0811fb6c
  ldr  r0, =_sdata
 800069c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80006a0:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80006a4:	20000380 	.word	0x20000380
  ldr  r3, = _ebss
 80006a8:	20016500 	.word	0x20016500

080006ac <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80006ac:	e7fe      	b.n	80006ac <ADC_IRQHandler>
	...

080006b0 <_Z7my_randv>:

TetrisEngine::TetrisEngine() {
	init();
}

uint32_t my_rand() {
 80006b0:	b538      	push	{r3, r4, r5, lr}
    // Tham số chuẩn của LCG: a = 1664525, c = 1013904223, m = 2^32
	static uint32_t seed = 123456789;
    seed = seed * 1664525 + osKernelGetTickCount();
 80006b2:	4d07      	ldr	r5, [pc, #28]	@ (80006d0 <_Z7my_randv+0x20>)
 80006b4:	4c07      	ldr	r4, [pc, #28]	@ (80006d4 <_Z7my_randv+0x24>)
 80006b6:	6828      	ldr	r0, [r5, #0]
 80006b8:	4344      	muls	r4, r0
 80006ba:	f007 fe81 	bl	80083c0 <osKernelGetTickCount>
 80006be:	4420      	add	r0, r4

    seed ^= seed << 13;
 80006c0:	ea80 3040 	eor.w	r0, r0, r0, lsl #13
    seed ^= seed >> 17;
 80006c4:	ea80 4050 	eor.w	r0, r0, r0, lsr #17
    seed ^= seed << 5;
 80006c8:	ea80 1040 	eor.w	r0, r0, r0, lsl #5
 80006cc:	6028      	str	r0, [r5, #0]

    return seed;
}
 80006ce:	bd38      	pop	{r3, r4, r5, pc}
 80006d0:	20000004 	.word	0x20000004
 80006d4:	0019660d 	.word	0x0019660d

080006d8 <_ZN12TetrisEngine17generateNextBlockEv>:
/**
 * @brief	Tạo khối mới và color cho khối
 * @param	None
 * @retval	None
 */
void TetrisEngine::generateNextBlock() {
 80006d8:	b538      	push	{r3, r4, r5, lr}
 80006da:	4604      	mov	r4, r0
    nextBlockId = my_rand() % 7;	//lấy next box dựa trên tick hệ thống
 80006dc:	f7ff ffe8 	bl	80006b0 <_Z7my_randv>
 80006e0:	2307      	movs	r3, #7
 80006e2:	fbb0 f3f3 	udiv	r3, r0, r3
 80006e6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 80006ea:	1ac0      	subs	r0, r0, r3
 80006ec:	f8c4 037c 	str.w	r0, [r4, #892]	@ 0x37c
//	nextBlockId = 6;
    nextBlockSize = (nextBlockId == 0) ? 4 : 3;
 80006f0:	b310      	cbz	r0, 8000738 <_ZN12TetrisEngine17generateNextBlockEv+0x60>
    nextBlockSize = (nextBlockId == 1) ? 2 : nextBlockSize;
 80006f2:	2801      	cmp	r0, #1
 80006f4:	bf14      	ite	ne
 80006f6:	2303      	movne	r3, #3
 80006f8:	2302      	moveq	r3, #2
 80006fa:	f8c4 3378 	str.w	r3, [r4, #888]	@ 0x378
    nextBlockColor = my_rand() % 7;
 80006fe:	f7ff ffd7 	bl	80006b0 <_Z7my_randv>
 8000702:	2307      	movs	r3, #7
 8000704:	fbb0 f3f3 	udiv	r3, r0, r3
 8000708:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
    for (int i = 0; i < 4; ++i)
        for (int j = 0; j < 4; ++j)
            nextBlock[i][j] = Tetrominoes[nextBlockId][i][j]; //đánh dấu các ô có thể hiển thị cho next block
 800070c:	f8d4 237c 	ldr.w	r2, [r4, #892]	@ 0x37c
    nextBlockColor = my_rand() % 7;
 8000710:	1ac0      	subs	r0, r0, r3
            nextBlock[i][j] = Tetrominoes[nextBlockId][i][j]; //đánh dấu các ô có thể hiển thị cho next block
 8000712:	4b0a      	ldr	r3, [pc, #40]	@ (800073c <_ZN12TetrisEngine17generateNextBlockEv+0x64>)
    nextBlockColor = my_rand() % 7;
 8000714:	f8c4 03c4 	str.w	r0, [r4, #964]	@ 0x3c4
            nextBlock[i][j] = Tetrominoes[nextBlockId][i][j]; //đánh dấu các ô có thể hiển thị cho next block
 8000718:	eb03 1382 	add.w	r3, r3, r2, lsl #6
 800071c:	f504 7460 	add.w	r4, r4, #896	@ 0x380
 8000720:	f103 0540 	add.w	r5, r3, #64	@ 0x40
 8000724:	461a      	mov	r2, r3
 8000726:	ca03      	ldmia	r2!, {r0, r1}
 8000728:	42aa      	cmp	r2, r5
 800072a:	6020      	str	r0, [r4, #0]
 800072c:	6061      	str	r1, [r4, #4]
 800072e:	4613      	mov	r3, r2
 8000730:	f104 0408 	add.w	r4, r4, #8
 8000734:	d1f6      	bne.n	8000724 <_ZN12TetrisEngine17generateNextBlockEv+0x4c>
}
 8000736:	bd38      	pop	{r3, r4, r5, pc}
    nextBlockSize = (nextBlockId == 0) ? 4 : 3;
 8000738:	2304      	movs	r3, #4
 800073a:	e7de      	b.n	80006fa <_ZN12TetrisEngine17generateNextBlockEv+0x22>
 800073c:	08025678 	.word	0x08025678

08000740 <_ZNK12TetrisEngine12getNextBlockERSt5arrayIS0_IiLj4EELj4EERiRt>:
 * @param	block: BlockMatrix& khối cần thay đổi
 * @param	size: int& biểu diễn kích thước của khối
 * @param	color: uint16_t& biểu diễn màu của khối
 * @retval	None
 */
void TetrisEngine::getNextBlock(BlockMatrix& block, int& size, uint16_t& color) const {
 8000740:	b5f0      	push	{r4, r5, r6, r7, lr}
	block = nextBlock;
 8000742:	f500 7560 	add.w	r5, r0, #896	@ 0x380
void TetrisEngine::getNextBlock(BlockMatrix& block, int& size, uint16_t& color) const {
 8000746:	4606      	mov	r6, r0
 8000748:	4694      	mov	ip, r2
 800074a:	461f      	mov	r7, r3
	block = nextBlock;
 800074c:	460c      	mov	r4, r1
 800074e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000750:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000752:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000754:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000756:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000758:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800075a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800075e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	size = nextBlockSize;
 8000762:	f8d6 3378 	ldr.w	r3, [r6, #888]	@ 0x378
 8000766:	f8cc 3000 	str.w	r3, [ip]
	color = ColorPallette[nextBlockColor];
 800076a:	f8d6 23c4 	ldr.w	r2, [r6, #964]	@ 0x3c4
 800076e:	4b02      	ldr	r3, [pc, #8]	@ (8000778 <_ZNK12TetrisEngine12getNextBlockERSt5arrayIS0_IiLj4EELj4EERiRt+0x38>)
 8000770:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8000774:	803b      	strh	r3, [r7, #0]
}
 8000776:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000778:	08025668 	.word	0x08025668

0800077c <_ZN12TetrisEngine10spawnBlockEv>:
 * @brief	Gán khối mới cho khối hiện tại
 * @param	None
 * @retval	None
 */
void TetrisEngine::spawnBlock() {
    if (nextBlockId == -1) generateNextBlock(); // Spawn đầu
 800077c:	f8d0 337c 	ldr.w	r3, [r0, #892]	@ 0x37c
 8000780:	3301      	adds	r3, #1
void TetrisEngine::spawnBlock() {
 8000782:	b510      	push	{r4, lr}
 8000784:	4604      	mov	r4, r0
    if (nextBlockId == -1) generateNextBlock(); // Spawn đầu
 8000786:	d101      	bne.n	800078c <_ZN12TetrisEngine10spawnBlockEv+0x10>
 8000788:	f7ff ffa6 	bl	80006d8 <_ZN12TetrisEngine17generateNextBlockEv>
    for (int i = 0; i < 4; ++i)
 800078c:	4623      	mov	r3, r4
 800078e:	f104 0240 	add.w	r2, r4, #64	@ 0x40
        for (int j = 0; j < 4; ++j)
            currBlock[i][j] = nextBlock[i][j];	//gán nextBlock cho currBlock
 8000792:	f8d3 1380 	ldr.w	r1, [r3, #896]	@ 0x380
 8000796:	f8c3 1320 	str.w	r1, [r3, #800]	@ 0x320
 800079a:	f8d3 1384 	ldr.w	r1, [r3, #900]	@ 0x384
 800079e:	f8c3 1324 	str.w	r1, [r3, #804]	@ 0x324
 80007a2:	f8d3 1388 	ldr.w	r1, [r3, #904]	@ 0x388
 80007a6:	f8c3 1328 	str.w	r1, [r3, #808]	@ 0x328
 80007aa:	f8d3 138c 	ldr.w	r1, [r3, #908]	@ 0x38c
 80007ae:	f8c3 132c 	str.w	r1, [r3, #812]	@ 0x32c
    for (int i = 0; i < 4; ++i)
 80007b2:	3310      	adds	r3, #16
 80007b4:	4293      	cmp	r3, r2
 80007b6:	d1ec      	bne.n	8000792 <_ZN12TetrisEngine10spawnBlockEv+0x16>
    blockSize = nextBlockSize;
 80007b8:	f8d4 3378 	ldr.w	r3, [r4, #888]	@ 0x378
 80007bc:	f8c4 3368 	str.w	r3, [r4, #872]	@ 0x368
    currBlockColor = nextBlockColor;

    //bắt đầu rơi tại vị trí giữa trên cùng
    currX = (GRID_WIDTH - blockSize) / 2;
 80007c0:	f1c3 030a 	rsb	r3, r3, #10
 80007c4:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80007c8:	105b      	asrs	r3, r3, #1
    currBlockColor = nextBlockColor;
 80007ca:	f8d4 23c4 	ldr.w	r2, [r4, #964]	@ 0x3c4
    currX = (GRID_WIDTH - blockSize) / 2;
 80007ce:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    currY = 0;
 80007d2:	2300      	movs	r3, #0
    currBlockColor = nextBlockColor;
 80007d4:	f8c4 23c0 	str.w	r2, [r4, #960]	@ 0x3c0
    currY = 0;
 80007d8:	f8c4 3364 	str.w	r3, [r4, #868]	@ 0x364
    generateNextBlock(); // Tạo khối tiếp theo
 80007dc:	4620      	mov	r0, r4
}
 80007de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    generateNextBlock(); // Tạo khối tiếp theo
 80007e2:	f7ff bf79 	b.w	80006d8 <_ZN12TetrisEngine17generateNextBlockEv>

080007e6 <_ZN12TetrisEngine4initEv>:
void TetrisEngine::init() {
 80007e6:	b510      	push	{r4, lr}
      }

      [[__nodiscard__, __gnu__::__const__, __gnu__::__always_inline__]]
      _GLIBCXX17_CONSTEXPR pointer
      data() noexcept
      { return static_cast<pointer>(_M_elems); }
 80007e8:	4603      	mov	r3, r0
 80007ea:	4604      	mov	r4, r0
      { return iterator(data() + _Nm); }
 80007ec:	f500 7148 	add.w	r1, r0, #800	@ 0x320
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
	      const _Tp& __value)
    {
      const _Tp __tmp = __value;
      for (; __first != __last; ++__first)
	*__first = __tmp;
 80007f0:	2000      	movs	r0, #0
    for (auto& row : grid) row.fill(0);
 80007f2:	428b      	cmp	r3, r1
 80007f4:	d112      	bne.n	800081c <_ZN12TetrisEngine4initEv+0x36>
    gameOver = false;
 80007f6:	2300      	movs	r3, #0
	nextBlockId = -1;
 80007f8:	f04f 32ff 	mov.w	r2, #4294967295
	generateNextBlock();
 80007fc:	4620      	mov	r0, r4
    gameOver = false;
 80007fe:	f884 336c 	strb.w	r3, [r4, #876]	@ 0x36c
    score = 0;
 8000802:	f8c4 3370 	str.w	r3, [r4, #880]	@ 0x370
	nextBlockId = -1;
 8000806:	f8c4 237c 	str.w	r2, [r4, #892]	@ 0x37c
	nextBlockColor = 0;
 800080a:	f8c4 33c4 	str.w	r3, [r4, #964]	@ 0x3c4
	generateNextBlock();
 800080e:	f7ff ff63 	bl	80006d8 <_ZN12TetrisEngine17generateNextBlockEv>
    spawnBlock();
 8000812:	4620      	mov	r0, r4
}
 8000814:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    spawnBlock();
 8000818:	f7ff bfb0 	b.w	800077c <_ZN12TetrisEngine10spawnBlockEv>
      { return static_cast<pointer>(_M_elems); }
 800081c:	461a      	mov	r2, r3
      if (__n <= 0)
	return __first;

      __glibcxx_requires_can_increment(__first, __n);

      std::__fill_a(__first, __first + __n, __value);
 800081e:	3328      	adds	r3, #40	@ 0x28
      for (; __first != __last; ++__first)
 8000820:	4293      	cmp	r3, r2
 8000822:	d0e6      	beq.n	80007f2 <_ZN12TetrisEngine4initEv+0xc>
	*__first = __tmp;
 8000824:	f842 0b04 	str.w	r0, [r2], #4
 8000828:	e7fa      	b.n	8000820 <_ZN12TetrisEngine4initEv+0x3a>

0800082a <_ZN12TetrisEngineC1Ev>:
TetrisEngine::TetrisEngine() {
 800082a:	b510      	push	{r4, lr}
 800082c:	4604      	mov	r4, r0
	init();
 800082e:	f7ff ffda 	bl	80007e6 <_ZN12TetrisEngine4initEv>
}
 8000832:	4620      	mov	r0, r4
 8000834:	bd10      	pop	{r4, pc}

08000836 <_ZN12TetrisEngine12rotateMatrixERSt5arrayIS0_IiLj4EELj4EE>:
/**
 * @brief	Xoay block
 * @param	None
 * @retval	None
 */
void TetrisEngine::rotateMatrix(BlockMatrix& mat) {
 8000836:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000838:	4605      	mov	r5, r0
 800083a:	b091      	sub	sp, #68	@ 0x44
 800083c:	460c      	mov	r4, r1
    BlockMatrix temp = {};
 800083e:	2240      	movs	r2, #64	@ 0x40
 8000840:	2100      	movs	r1, #0
 8000842:	4668      	mov	r0, sp
 8000844:	f024 f8cd 	bl	80249e2 <memset>
    for (int i = 0; i < blockSize; ++i)
 8000848:	f8d5 2368 	ldr.w	r2, [r5, #872]	@ 0x368
 800084c:	2300      	movs	r3, #0
 800084e:	eb0d 0182 	add.w	r1, sp, r2, lsl #2
 8000852:	eb04 0082 	add.w	r0, r4, r2, lsl #2
 8000856:	429a      	cmp	r2, r3
 8000858:	dc0c      	bgt.n	8000874 <_ZN12TetrisEngine12rotateMatrixERSt5arrayIS0_IiLj4EELj4EE+0x3e>
        for (int j = 0; j < blockSize; ++j)
            temp[j][blockSize - 1 - i] = mat[i][j];
    mat = temp;
 800085a:	466d      	mov	r5, sp
 800085c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800085e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000860:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000862:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000864:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000866:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000868:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800086c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 8000870:	b011      	add	sp, #68	@ 0x44
 8000872:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000874:	eb04 1503 	add.w	r5, r4, r3, lsl #4
    for (int i = 0; i < blockSize; ++i)
 8000878:	460e      	mov	r6, r1
            temp[j][blockSize - 1 - i] = mat[i][j];
 800087a:	f855 7b04 	ldr.w	r7, [r5], #4
 800087e:	f846 7c04 	str.w	r7, [r6, #-4]
        for (int j = 0; j < blockSize; ++j)
 8000882:	4285      	cmp	r5, r0
 8000884:	f106 0610 	add.w	r6, r6, #16
 8000888:	d1f7      	bne.n	800087a <_ZN12TetrisEngine12rotateMatrixERSt5arrayIS0_IiLj4EELj4EE+0x44>
    for (int i = 0; i < blockSize; ++i)
 800088a:	3301      	adds	r3, #1
 800088c:	3904      	subs	r1, #4
 800088e:	3010      	adds	r0, #16
 8000890:	e7e1      	b.n	8000856 <_ZN12TetrisEngine12rotateMatrixERSt5arrayIS0_IiLj4EELj4EE+0x20>

08000892 <_ZN12TetrisEngine14getBlockBoundsERKSt5arrayIS0_IiLj4EELj4EERiS5_S5_S5_>:
 * @param	maxX: int& lưu tọa độ x lớn nhất
 * @param	minY: int& lưu tọa độ y nhỏ nhất
 * @param	maxY: int& lưu tọa độ y lớn nhất
 * @retval	None
 */
void TetrisEngine::getBlockBounds(const BlockMatrix& block, int& minX, int& maxX, int& minY, int& maxY) {
 8000892:	b5f0      	push	{r4, r5, r6, r7, lr}
    minX = blockSize; maxX = 0; minY = blockSize; maxY = 0;
 8000894:	f8d0 4368 	ldr.w	r4, [r0, #872]	@ 0x368
 8000898:	6014      	str	r4, [r2, #0]
void TetrisEngine::getBlockBounds(const BlockMatrix& block, int& minX, int& maxX, int& minY, int& maxY) {
 800089a:	e9dd 6c05 	ldrd	r6, ip, [sp, #20]
    minX = blockSize; maxX = 0; minY = blockSize; maxY = 0;
 800089e:	2400      	movs	r4, #0
 80008a0:	601c      	str	r4, [r3, #0]
 80008a2:	f8d0 5368 	ldr.w	r5, [r0, #872]	@ 0x368
 80008a6:	6035      	str	r5, [r6, #0]
 80008a8:	f8cc 4000 	str.w	r4, [ip]
    for (int i = 0; i < blockSize; ++i)
 80008ac:	f8d0 5368 	ldr.w	r5, [r0, #872]	@ 0x368
 80008b0:	42a5      	cmp	r5, r4
 80008b2:	dd1f      	ble.n	80008f4 <_ZN12TetrisEngine14getBlockBoundsERKSt5arrayIS0_IiLj4EELj4EERiS5_S5_S5_+0x62>
 80008b4:	eb01 1e04 	add.w	lr, r1, r4, lsl #4
        for (int j = 0; j < blockSize; ++j)
 80008b8:	2500      	movs	r5, #0
 80008ba:	e015      	b.n	80008e8 <_ZN12TetrisEngine14getBlockBoundsERKSt5arrayIS0_IiLj4EELj4EERiS5_S5_S5_+0x56>
            if (block[i][j]) {
 80008bc:	f85e 7b04 	ldr.w	r7, [lr], #4
 80008c0:	b18f      	cbz	r7, 80008e6 <_ZN12TetrisEngine14getBlockBoundsERKSt5arrayIS0_IiLj4EELj4EERiS5_S5_S5_+0x54>
                if (j < minX) minX = j;
 80008c2:	6817      	ldr	r7, [r2, #0]
 80008c4:	42af      	cmp	r7, r5
 80008c6:	bfc8      	it	gt
 80008c8:	6015      	strgt	r5, [r2, #0]
                if (j > maxX) maxX = j;
 80008ca:	681f      	ldr	r7, [r3, #0]
 80008cc:	42af      	cmp	r7, r5
 80008ce:	bfb8      	it	lt
 80008d0:	601d      	strlt	r5, [r3, #0]
                if (i < minY) minY = i;
 80008d2:	6837      	ldr	r7, [r6, #0]
 80008d4:	42a7      	cmp	r7, r4
 80008d6:	bfc8      	it	gt
 80008d8:	6034      	strgt	r4, [r6, #0]
                if (i > maxY) maxY = i;
 80008da:	f8dc 7000 	ldr.w	r7, [ip]
 80008de:	42a7      	cmp	r7, r4
 80008e0:	bfb8      	it	lt
 80008e2:	f8cc 4000 	strlt.w	r4, [ip]
        for (int j = 0; j < blockSize; ++j)
 80008e6:	3501      	adds	r5, #1
 80008e8:	f8d0 7368 	ldr.w	r7, [r0, #872]	@ 0x368
 80008ec:	42af      	cmp	r7, r5
 80008ee:	dce5      	bgt.n	80008bc <_ZN12TetrisEngine14getBlockBoundsERKSt5arrayIS0_IiLj4EELj4EERiS5_S5_S5_+0x2a>
    for (int i = 0; i < blockSize; ++i)
 80008f0:	3401      	adds	r4, #1
 80008f2:	e7db      	b.n	80008ac <_ZN12TetrisEngine14getBlockBoundsERKSt5arrayIS0_IiLj4EELj4EERiS5_S5_S5_+0x1a>
            }
}
 80008f4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080008f6 <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE>:
 * @param	newX: int mô tả tọa độ x cần kiểm tra
 * @param	newY: int mô tả tọa độ y cần kiểm tra
 * @param	block: BlockMatrix& khối cần kiểm tra
 * @retval	boolean True - va chạm, False - không va chạm
 */
bool TetrisEngine::checkCollision(int newX, int newY, const BlockMatrix& block) {
 80008f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80008fa:	b087      	sub	sp, #28
 80008fc:	460e      	mov	r6, r1
 80008fe:	4619      	mov	r1, r3
    int minX, maxX, minY, maxY;

    //lấy bao ngoài của block
    getBlockBounds(block, minX, maxX, minY, maxY);
 8000900:	ab05      	add	r3, sp, #20
 8000902:	9301      	str	r3, [sp, #4]
 8000904:	ab04      	add	r3, sp, #16
bool TetrisEngine::checkCollision(int newX, int newY, const BlockMatrix& block) {
 8000906:	4614      	mov	r4, r2
    getBlockBounds(block, minX, maxX, minY, maxY);
 8000908:	9300      	str	r3, [sp, #0]
 800090a:	aa02      	add	r2, sp, #8
 800090c:	ab03      	add	r3, sp, #12
 800090e:	f7ff ffc0 	bl	8000892 <_ZN12TetrisEngine14getBlockBoundsERKSt5arrayIS0_IiLj4EELj4EERiS5_S5_S5_>
bool TetrisEngine::checkCollision(int newX, int newY, const BlockMatrix& block) {
 8000912:	4605      	mov	r5, r0
    for (int i = minY; i <= maxY; ++i)
 8000914:	e9dd 0e04 	ldrd	r0, lr, [sp, #16]
        for (int j = minX; j <= maxX; ++j)
 8000918:	e9dd bc02 	ldrd	fp, ip, [sp, #8]
 800091c:	1902      	adds	r2, r0, r4
 800091e:	eb05 0586 	add.w	r5, r5, r6, lsl #2
 8000922:	f04f 0828 	mov.w	r8, #40	@ 0x28
    for (int i = minY; i <= maxY; ++i)
 8000926:	4586      	cmp	lr, r0
 8000928:	db1c      	blt.n	8000964 <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE+0x6e>
 800092a:	eb01 1900 	add.w	r9, r1, r0, lsl #4
 800092e:	fb08 5702 	mla	r7, r8, r2, r5
        for (int j = minX; j <= maxX; ++j)
 8000932:	465c      	mov	r4, fp
 8000934:	e00d      	b.n	8000952 <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE+0x5c>
            if (block[i][j]) {
 8000936:	f859 3024 	ldr.w	r3, [r9, r4, lsl #2]
 800093a:	b14b      	cbz	r3, 8000950 <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE+0x5a>
                int gx = newX + j;
                int gy = newY + i;

                //ra ngoài hoặc ô đã được đặt -> va chạm -> return true
                if (gx < 0 || gx >= GRID_WIDTH || gy < 0 || gy >= GRID_HEIGHT) return true;
 800093c:	eb04 0a06 	add.w	sl, r4, r6
 8000940:	f1ba 0f09 	cmp.w	sl, #9
 8000944:	d80a      	bhi.n	800095c <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE+0x66>
 8000946:	2a13      	cmp	r2, #19
 8000948:	d808      	bhi.n	800095c <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE+0x66>
                if (grid[gy][gx]) return true;
 800094a:	f857 3024 	ldr.w	r3, [r7, r4, lsl #2]
 800094e:	b92b      	cbnz	r3, 800095c <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE+0x66>
        for (int j = minX; j <= maxX; ++j)
 8000950:	3401      	adds	r4, #1
 8000952:	45a4      	cmp	ip, r4
 8000954:	daef      	bge.n	8000936 <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE+0x40>
    for (int i = minY; i <= maxY; ++i)
 8000956:	3001      	adds	r0, #1
 8000958:	3201      	adds	r2, #1
 800095a:	e7e4      	b.n	8000926 <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE+0x30>
                if (gx < 0 || gx >= GRID_WIDTH || gy < 0 || gy >= GRID_HEIGHT) return true;
 800095c:	2001      	movs	r0, #1
            }
    return false;
}
 800095e:	b007      	add	sp, #28
 8000960:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return false;
 8000964:	2000      	movs	r0, #0
 8000966:	e7fa      	b.n	800095e <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE+0x68>

08000968 <_ZN12TetrisEngine10clearLinesEv>:
/**
 * @brief	Xóa line nếu cả hàng đã full
 * @param	None
 * @retval	None
 */
void TetrisEngine::clearLines() {
 8000968:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800096c:	f04f 0e28 	mov.w	lr, #40	@ 0x28
 8000970:	4606      	mov	r6, r0
	//kiểm tra các hàng từ dưới lên trên
    for (int y = GRID_HEIGHT - 1; y >= 0; --y) {
 8000972:	2713      	movs	r7, #19
        bool full = true;
        for (int x = 0; x < GRID_WIDTH; ++x)
            if (!grid[y][x]) full = false; //-> có 1 ô chưa được đánh dấu -> chưa đầy hàng

        if (full) {
        	takeScore = true; //đánh dấu được tăng điểm -> bật buzzer sau đó
 8000974:	f04f 0901 	mov.w	r9, #1
 8000978:	eb00 080e 	add.w	r8, r0, lr
 800097c:	f04f 0a00 	mov.w	sl, #0
        for (int x = 0; x < GRID_WIDTH; ++x)
 8000980:	fb0e 6107 	mla	r1, lr, r7, r6
 8000984:	2200      	movs	r2, #0
        bool full = true;
 8000986:	2301      	movs	r3, #1
            if (!grid[y][x]) full = false; //-> có 1 ô chưa được đánh dấu -> chưa đầy hàng
 8000988:	f851 0b04 	ldr.w	r0, [r1], #4
        for (int x = 0; x < GRID_WIDTH; ++x)
 800098c:	3201      	adds	r2, #1
            if (!grid[y][x]) full = false; //-> có 1 ô chưa được đánh dấu -> chưa đầy hàng
 800098e:	2800      	cmp	r0, #0
 8000990:	bf08      	it	eq
 8000992:	2300      	moveq	r3, #0
        for (int x = 0; x < GRID_WIDTH; ++x)
 8000994:	2a0a      	cmp	r2, #10
 8000996:	d1f7      	bne.n	8000988 <_ZN12TetrisEngine10clearLinesEv+0x20>
        if (full) {
 8000998:	b303      	cbz	r3, 80009dc <_ZN12TetrisEngine10clearLinesEv+0x74>
        	score++; //tăng điểm
 800099a:	f8d6 3370 	ldr.w	r3, [r6, #880]	@ 0x370
        	takeScore = true; //đánh dấu được tăng điểm -> bật buzzer sau đó
 800099e:	f886 9374 	strb.w	r9, [r6, #884]	@ 0x374
        	score++; //tăng điểm
 80009a2:	3301      	adds	r3, #1
 80009a4:	f8c6 3370 	str.w	r3, [r6, #880]	@ 0x370
            for (int row = y; row > 0; --row)
 80009a8:	46bc      	mov	ip, r7
 80009aa:	f1bc 0f00 	cmp.w	ip, #0
 80009ae:	d105      	bne.n	80009bc <_ZN12TetrisEngine10clearLinesEv+0x54>
 80009b0:	4633      	mov	r3, r6
      for (; __first != __last; ++__first)
 80009b2:	4598      	cmp	r8, r3
 80009b4:	d0e4      	beq.n	8000980 <_ZN12TetrisEngine10clearLinesEv+0x18>
	*__first = __tmp;
 80009b6:	f843 ab04 	str.w	sl, [r3], #4
 80009ba:	e7fa      	b.n	80009b2 <_ZN12TetrisEngine10clearLinesEv+0x4a>
                grid[row] = grid[row - 1];
 80009bc:	f10c 3cff 	add.w	ip, ip, #4294967295
 80009c0:	fb0e f40c 	mul.w	r4, lr, ip
 80009c4:	eb08 0504 	add.w	r5, r8, r4
 80009c8:	4434      	add	r4, r6
 80009ca:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80009cc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80009ce:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80009d0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80009d2:	e894 0003 	ldmia.w	r4, {r0, r1}
 80009d6:	e885 0003 	stmia.w	r5, {r0, r1}
            for (int row = y; row > 0; --row)
 80009da:	e7e6      	b.n	80009aa <_ZN12TetrisEngine10clearLinesEv+0x42>
    for (int y = GRID_HEIGHT - 1; y >= 0; --y) {
 80009dc:	3f01      	subs	r7, #1
 80009de:	d2cf      	bcs.n	8000980 <_ZN12TetrisEngine10clearLinesEv+0x18>
            grid[0].fill(0);
            ++y; // re-check this row
        }
    }
}
 80009e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080009e4 <_ZN12TetrisEngine9lockBlockEv>:
void TetrisEngine::lockBlock() {
 80009e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    for (int i = 0; i < blockSize; ++i)
 80009e6:	f8d0 6368 	ldr.w	r6, [r0, #872]	@ 0x368
void TetrisEngine::lockBlock() {
 80009ea:	4604      	mov	r4, r0
 80009ec:	f500 7547 	add.w	r5, r0, #796	@ 0x31c
    for (int i = 0; i < blockSize; ++i)
 80009f0:	2200      	movs	r2, #0
                    grid[gy][gx] = currBlockColor + 1;
 80009f2:	f04f 0c0a 	mov.w	ip, #10
    for (int i = 0; i < blockSize; ++i)
 80009f6:	4296      	cmp	r6, r2
 80009f8:	dc07      	bgt.n	8000a0a <_ZN12TetrisEngine9lockBlockEv+0x26>
    clearLines();
 80009fa:	4620      	mov	r0, r4
 80009fc:	f7ff ffb4 	bl	8000968 <_ZN12TetrisEngine10clearLinesEv>
    spawnBlock();
 8000a00:	4620      	mov	r0, r4
}
 8000a02:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    spawnBlock();
 8000a06:	f7ff beb9 	b.w	800077c <_ZN12TetrisEngine10spawnBlockEv>
 8000a0a:	462f      	mov	r7, r5
        for (int j = 0; j < blockSize; ++j)
 8000a0c:	2100      	movs	r1, #0
            if (currBlock[i][j]) {
 8000a0e:	f857 3f04 	ldr.w	r3, [r7, #4]!
 8000a12:	b183      	cbz	r3, 8000a36 <_ZN12TetrisEngine9lockBlockEv+0x52>
                int gy = currY + i;
 8000a14:	f8d4 0364 	ldr.w	r0, [r4, #868]	@ 0x364
 8000a18:	4410      	add	r0, r2
                if (gy >= 0 && gy < GRID_HEIGHT && gx >= 0 && gx < GRID_WIDTH)
 8000a1a:	2813      	cmp	r0, #19
 8000a1c:	d80b      	bhi.n	8000a36 <_ZN12TetrisEngine9lockBlockEv+0x52>
                int gx = currX + j;
 8000a1e:	f8d4 3360 	ldr.w	r3, [r4, #864]	@ 0x360
 8000a22:	440b      	add	r3, r1
                if (gy >= 0 && gy < GRID_HEIGHT && gx >= 0 && gx < GRID_WIDTH)
 8000a24:	2b09      	cmp	r3, #9
                    grid[gy][gx] = currBlockColor + 1;
 8000a26:	bf9f      	itttt	ls
 8000a28:	fb0c 3300 	mlals	r3, ip, r0, r3
 8000a2c:	f8d4 03c0 	ldrls.w	r0, [r4, #960]	@ 0x3c0
 8000a30:	3001      	addls	r0, #1
 8000a32:	f844 0023 	strls.w	r0, [r4, r3, lsl #2]
        for (int j = 0; j < blockSize; ++j)
 8000a36:	3101      	adds	r1, #1
 8000a38:	428e      	cmp	r6, r1
 8000a3a:	d1e8      	bne.n	8000a0e <_ZN12TetrisEngine9lockBlockEv+0x2a>
    for (int i = 0; i < blockSize; ++i)
 8000a3c:	3201      	adds	r2, #1
 8000a3e:	3510      	adds	r5, #16
 8000a40:	e7d9      	b.n	80009f6 <_ZN12TetrisEngine9lockBlockEv+0x12>

08000a42 <_ZN12TetrisEngine6updateEv>:
/**
 * @brief	Check va chạm + khóa khối nếu được
 * @param	None
 * @retval	None
 */
void TetrisEngine::update() {
 8000a42:	b538      	push	{r3, r4, r5, lr}
	if(!gameOver){
 8000a44:	f890 336c 	ldrb.w	r3, [r0, #876]	@ 0x36c
void TetrisEngine::update() {
 8000a48:	4604      	mov	r4, r0
	if(!gameOver){
 8000a4a:	b963      	cbnz	r3, 8000a66 <_ZN12TetrisEngine6updateEv+0x24>
		if (!checkCollision(currX, currY + 1, currBlock))
 8000a4c:	f8d0 5364 	ldr.w	r5, [r0, #868]	@ 0x364
 8000a50:	f8d0 1360 	ldr.w	r1, [r0, #864]	@ 0x360
 8000a54:	3501      	adds	r5, #1
 8000a56:	f500 7348 	add.w	r3, r0, #800	@ 0x320
 8000a5a:	462a      	mov	r2, r5
 8000a5c:	f7ff ff4b 	bl	80008f6 <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE>
 8000a60:	b910      	cbnz	r0, 8000a68 <_ZN12TetrisEngine6updateEv+0x26>
			currY++;
 8000a62:	f8c4 5364 	str.w	r5, [r4, #868]	@ 0x364
			for(int i = 0; i < GRID_WIDTH; i++)
				if(grid[0][i]) gameOver = true; //hàng trên cùng có khối -> game over
		}
	}

}
 8000a66:	bd38      	pop	{r3, r4, r5, pc}
			lockBlock();
 8000a68:	4620      	mov	r0, r4
 8000a6a:	f7ff ffbb 	bl	80009e4 <_ZN12TetrisEngine9lockBlockEv>
			for(int i = 0; i < GRID_WIDTH; i++)
 8000a6e:	1f23      	subs	r3, r4, #4
 8000a70:	f104 0224 	add.w	r2, r4, #36	@ 0x24
				if(grid[0][i]) gameOver = true; //hàng trên cùng có khối -> game over
 8000a74:	2101      	movs	r1, #1
 8000a76:	f853 0f04 	ldr.w	r0, [r3, #4]!
 8000a7a:	b108      	cbz	r0, 8000a80 <_ZN12TetrisEngine6updateEv+0x3e>
 8000a7c:	f884 136c 	strb.w	r1, [r4, #876]	@ 0x36c
			for(int i = 0; i < GRID_WIDTH; i++)
 8000a80:	4293      	cmp	r3, r2
 8000a82:	d1f8      	bne.n	8000a76 <_ZN12TetrisEngine6updateEv+0x34>
 8000a84:	e7ef      	b.n	8000a66 <_ZN12TetrisEngine6updateEv+0x24>

08000a86 <_ZN12TetrisEngine8moveLeftEv>:
/**
 * @brief	Di chuyển trái
 * @param	None
 * @retval	None
 */
void TetrisEngine::moveLeft() {
 8000a86:	b538      	push	{r3, r4, r5, lr}
	if(gameOver) return;
 8000a88:	f890 336c 	ldrb.w	r3, [r0, #876]	@ 0x36c
void TetrisEngine::moveLeft() {
 8000a8c:	4604      	mov	r4, r0
	if(gameOver) return;
 8000a8e:	b963      	cbnz	r3, 8000aaa <_ZN12TetrisEngine8moveLeftEv+0x24>
	//kiểm tra trước khi di chuyển
    if (!checkCollision(currX - 1, currY, currBlock)) currX--;
 8000a90:	f8d0 5360 	ldr.w	r5, [r0, #864]	@ 0x360
 8000a94:	f8d0 2364 	ldr.w	r2, [r0, #868]	@ 0x364
 8000a98:	3d01      	subs	r5, #1
 8000a9a:	f500 7348 	add.w	r3, r0, #800	@ 0x320
 8000a9e:	4629      	mov	r1, r5
 8000aa0:	f7ff ff29 	bl	80008f6 <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE>
 8000aa4:	b908      	cbnz	r0, 8000aaa <_ZN12TetrisEngine8moveLeftEv+0x24>
 8000aa6:	f8c4 5360 	str.w	r5, [r4, #864]	@ 0x360
}
 8000aaa:	bd38      	pop	{r3, r4, r5, pc}

08000aac <_ZN12TetrisEngine9moveRightEv>:
/**
 * @brief	Di chuyển phải
 * @param	None
 * @retval	None
 */
void TetrisEngine::moveRight() {
 8000aac:	b538      	push	{r3, r4, r5, lr}
	if(gameOver) return;
 8000aae:	f890 336c 	ldrb.w	r3, [r0, #876]	@ 0x36c
void TetrisEngine::moveRight() {
 8000ab2:	4604      	mov	r4, r0
	if(gameOver) return;
 8000ab4:	b963      	cbnz	r3, 8000ad0 <_ZN12TetrisEngine9moveRightEv+0x24>
	//kiểm tra trước khi di chuyển
    if (!checkCollision(currX + 1, currY, currBlock)) currX++;
 8000ab6:	f8d0 5360 	ldr.w	r5, [r0, #864]	@ 0x360
 8000aba:	f8d0 2364 	ldr.w	r2, [r0, #868]	@ 0x364
 8000abe:	3501      	adds	r5, #1
 8000ac0:	f500 7348 	add.w	r3, r0, #800	@ 0x320
 8000ac4:	4629      	mov	r1, r5
 8000ac6:	f7ff ff16 	bl	80008f6 <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE>
 8000aca:	b908      	cbnz	r0, 8000ad0 <_ZN12TetrisEngine9moveRightEv+0x24>
 8000acc:	f8c4 5360 	str.w	r5, [r4, #864]	@ 0x360
}
 8000ad0:	bd38      	pop	{r3, r4, r5, pc}

08000ad2 <_ZN12TetrisEngine4dropEv>:
/**
 * @brief	Thả block
 * @param	None
 * @retval	None
 */
void TetrisEngine::drop() {
 8000ad2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if(gameOver) return;
 8000ad4:	f890 336c 	ldrb.w	r3, [r0, #876]	@ 0x36c
void TetrisEngine::drop() {
 8000ad8:	4604      	mov	r4, r0
	if(gameOver) return;
 8000ada:	b9ab      	cbnz	r3, 8000b08 <_ZN12TetrisEngine4dropEv+0x36>
	//kiểm tra trước khi di chuyển
    while (!checkCollision(currX, currY + 1, currBlock)) currY++;
 8000adc:	f8d0 6360 	ldr.w	r6, [r0, #864]	@ 0x360
 8000ae0:	f500 7748 	add.w	r7, r0, #800	@ 0x320
 8000ae4:	f8d4 5364 	ldr.w	r5, [r4, #868]	@ 0x364
 8000ae8:	3501      	adds	r5, #1
 8000aea:	463b      	mov	r3, r7
 8000aec:	462a      	mov	r2, r5
 8000aee:	4631      	mov	r1, r6
 8000af0:	4620      	mov	r0, r4
 8000af2:	f7ff ff00 	bl	80008f6 <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE>
 8000af6:	b120      	cbz	r0, 8000b02 <_ZN12TetrisEngine4dropEv+0x30>
    lockBlock();
 8000af8:	4620      	mov	r0, r4
}
 8000afa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    lockBlock();
 8000afe:	f7ff bf71 	b.w	80009e4 <_ZN12TetrisEngine9lockBlockEv>
    while (!checkCollision(currX, currY + 1, currBlock)) currY++;
 8000b02:	f8c4 5364 	str.w	r5, [r4, #868]	@ 0x364
 8000b06:	e7ed      	b.n	8000ae4 <_ZN12TetrisEngine4dropEv+0x12>
}
 8000b08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000b0a <_ZN12TetrisEngine6rotateEv>:
/**
 * @brief	Xoay block
 * @param	None
 * @retval	None
 */
void TetrisEngine::rotate() {
 8000b0a:	b570      	push	{r4, r5, r6, lr}
	if(gameOver) return;
 8000b0c:	f890 336c 	ldrb.w	r3, [r0, #876]	@ 0x36c
void TetrisEngine::rotate() {
 8000b10:	b090      	sub	sp, #64	@ 0x40
 8000b12:	4604      	mov	r4, r0
	if(gameOver) return;
 8000b14:	bb23      	cbnz	r3, 8000b60 <_ZN12TetrisEngine6rotateEv+0x56>
    BlockMatrix temp = currBlock;
 8000b16:	f500 7648 	add.w	r6, r0, #800	@ 0x320
 8000b1a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8000b1c:	466d      	mov	r5, sp
 8000b1e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b20:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8000b22:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b24:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8000b26:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b28:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8000b2c:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
    rotateMatrix(temp);
 8000b30:	4620      	mov	r0, r4
 8000b32:	4669      	mov	r1, sp
 8000b34:	f7ff fe7f 	bl	8000836 <_ZN12TetrisEngine12rotateMatrixERSt5arrayIS0_IiLj4EELj4EE>
    //kiểm tra trước khi di chuyển
    if (!checkCollision(currX, currY, temp))
 8000b38:	e9d4 12d8 	ldrd	r1, r2, [r4, #864]	@ 0x360
 8000b3c:	4620      	mov	r0, r4
 8000b3e:	466b      	mov	r3, sp
 8000b40:	f7ff fed9 	bl	80008f6 <_ZN12TetrisEngine14checkCollisionEiiRKSt5arrayIS0_IiLj4EELj4EE>
 8000b44:	f504 7448 	add.w	r4, r4, #800	@ 0x320
 8000b48:	b950      	cbnz	r0, 8000b60 <_ZN12TetrisEngine6rotateEv+0x56>
        currBlock = temp;
 8000b4a:	466d      	mov	r5, sp
 8000b4c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000b4e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000b50:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000b52:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000b54:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000b56:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000b58:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8000b5c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 8000b60:	b010      	add	sp, #64	@ 0x40
 8000b62:	bd70      	pop	{r4, r5, r6, pc}

08000b64 <_ZNK12TetrisEngine20getCurrentBlockColorEv>:
 * @brief	Lấy màu của khối đang rơi
 * @param	None
 * @retval	uint16_t màu của khối
 */
uint16_t TetrisEngine::getCurrentBlockColor() const {
	return ColorPallette[currBlockColor];
 8000b64:	f8d0 23c0 	ldr.w	r2, [r0, #960]	@ 0x3c0
}
 8000b68:	4b01      	ldr	r3, [pc, #4]	@ (8000b70 <_ZNK12TetrisEngine20getCurrentBlockColorEv+0xc>)
 8000b6a:	f833 0012 	ldrh.w	r0, [r3, r2, lsl #1]
 8000b6e:	4770      	bx	lr
 8000b70:	08025668 	.word	0x08025668

08000b74 <_ZNK12TetrisEngine12getGridColorEii>:
 * @param	x: int biểu diễn tọa độ cần lấy màu
 * @param	y: int biểu diễn tọa độ cần lấy màu
 * @retval	uint16_t màu của ô
 */
uint16_t TetrisEngine::getGridColor(int x, int y) const {
	if(grid[y][x] == 0) return 0x0000;
 8000b74:	230a      	movs	r3, #10
 8000b76:	fb03 1102 	mla	r1, r3, r2, r1
 8000b7a:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 8000b7e:	b118      	cbz	r0, 8000b88 <_ZNK12TetrisEngine12getGridColorEii+0x14>
	return ColorPallette[grid[y][x] - 1];
 8000b80:	4b02      	ldr	r3, [pc, #8]	@ (8000b8c <_ZNK12TetrisEngine12getGridColorEii+0x18>)
 8000b82:	3801      	subs	r0, #1
 8000b84:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
}
 8000b88:	4770      	bx	lr
 8000b8a:	bf00      	nop
 8000b8c:	08025668 	.word	0x08025668

08000b90 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8000b90:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8000b92:	4b06      	ldr	r3, [pc, #24]	@ (8000bac <SPI5_Write+0x1c>)
{
 8000b94:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8000b98:	681b      	ldr	r3, [r3, #0]
 8000b9a:	4805      	ldr	r0, [pc, #20]	@ (8000bb0 <SPI5_Write+0x20>)
 8000b9c:	2201      	movs	r2, #1
 8000b9e:	f10d 0106 	add.w	r1, sp, #6
 8000ba2:	f006 fe57 	bl	8007854 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8000ba6:	b003      	add	sp, #12
 8000ba8:	f85d fb04 	ldr.w	pc, [sp], #4
 8000bac:	20000008 	.word	0x20000008
 8000bb0:	2000044c 	.word	0x2000044c

08000bb4 <MovingTask>:
/**
  * @brief	Task moving chờ sự kiện bấm nút để xử lý
  * @param  argument: void* not used
  * @retval None
  */
void MovingTask(void *argument){
 8000bb4:	b538      	push	{r3, r4, r5, lr}

		//chờ cờ 0x01 được set (chờ -> block state)
        uint32_t evt = osThreadFlagsWait(0x01, osFlagsWaitAny, osWaitForever);
        if (evt & 0x01)
        {
            if (last_button != 0)
 8000bb6:	4c0d      	ldr	r4, [pc, #52]	@ (8000bec <MovingTask+0x38>)
            {
            	if(osMessageQueueGetCount(movingQueueHandle) < 1){
 8000bb8:	4d0d      	ldr	r5, [pc, #52]	@ (8000bf0 <MovingTask+0x3c>)
        uint32_t evt = osThreadFlagsWait(0x01, osFlagsWaitAny, osWaitForever);
 8000bba:	f04f 32ff 	mov.w	r2, #4294967295
 8000bbe:	2100      	movs	r1, #0
 8000bc0:	2001      	movs	r0, #1
 8000bc2:	f007 fc87 	bl	80084d4 <osThreadFlagsWait>
        if (evt & 0x01)
 8000bc6:	07c3      	lsls	r3, r0, #31
 8000bc8:	d5f7      	bpl.n	8000bba <MovingTask+0x6>
            if (last_button != 0)
 8000bca:	7823      	ldrb	r3, [r4, #0]
 8000bcc:	2b00      	cmp	r3, #0
 8000bce:	d0f4      	beq.n	8000bba <MovingTask+0x6>
            	if(osMessageQueueGetCount(movingQueueHandle) < 1){
 8000bd0:	6828      	ldr	r0, [r5, #0]
 8000bd2:	f007 fe1d 	bl	8008810 <osMessageQueueGetCount>
 8000bd6:	4602      	mov	r2, r0
 8000bd8:	b920      	cbnz	r0, 8000be4 <MovingTask+0x30>
            		//nếu queue chưa có phần tử -> gửi nút bấm được bấm gần nhất và queue
            		osMessageQueuePut(movingQueueHandle, &last_button, 0, 10);
 8000bda:	6828      	ldr	r0, [r5, #0]
 8000bdc:	230a      	movs	r3, #10
 8000bde:	4621      	mov	r1, r4
 8000be0:	f007 fdb5 	bl	800874e <osMessageQueuePut>
            	}
                last_button = 0;
 8000be4:	2300      	movs	r3, #0
 8000be6:	7023      	strb	r3, [r4, #0]
 8000be8:	e7e7      	b.n	8000bba <MovingTask+0x6>
 8000bea:	bf00      	nop
 8000bec:	200003cc 	.word	0x200003cc
 8000bf0:	200003c0 	.word	0x200003c0

08000bf4 <SystemClock_Config>:
{
 8000bf4:	b510      	push	{r4, lr}
 8000bf6:	b094      	sub	sp, #80	@ 0x50
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000bf8:	2210      	movs	r2, #16
 8000bfa:	2100      	movs	r1, #0
 8000bfc:	a80a      	add	r0, sp, #40	@ 0x28
 8000bfe:	f023 fef0 	bl	80249e2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000c02:	2214      	movs	r2, #20
 8000c04:	2100      	movs	r1, #0
 8000c06:	a803      	add	r0, sp, #12
 8000c08:	f023 feeb 	bl	80249e2 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8000c0c:	4b21      	ldr	r3, [pc, #132]	@ (8000c94 <SystemClock_Config+0xa0>)
 8000c0e:	2100      	movs	r1, #0
 8000c10:	9101      	str	r1, [sp, #4]
 8000c12:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000c14:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8000c18:	641a      	str	r2, [r3, #64]	@ 0x40
 8000c1a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000c1c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000c20:	9301      	str	r3, [sp, #4]
 8000c22:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000c24:	4b1c      	ldr	r3, [pc, #112]	@ (8000c98 <SystemClock_Config+0xa4>)
 8000c26:	9102      	str	r1, [sp, #8]
 8000c28:	681a      	ldr	r2, [r3, #0]
 8000c2a:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8000c2e:	601a      	str	r2, [r3, #0]
 8000c30:	681b      	ldr	r3, [r3, #0]
 8000c32:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000c36:	9302      	str	r3, [sp, #8]
 8000c38:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000c3a:	2101      	movs	r1, #1
 8000c3c:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000c40:	2402      	movs	r4, #2
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000c42:	e9cd 1308 	strd	r1, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000c46:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8000c4a:	2008      	movs	r0, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000c4c:	e9cd 430e 	strd	r4, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 360;
 8000c50:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8000c54:	e9cd 0310 	strd	r0, r3, [sp, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8000c58:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000c5a:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000c5c:	9412      	str	r4, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8000c5e:	9313      	str	r3, [sp, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000c60:	f006 f8a0 	bl	8006da4 <HAL_RCC_OscConfig>
 8000c64:	b100      	cbz	r0, 8000c68 <SystemClock_Config+0x74>
 8000c66:	e7fe      	b.n	8000c66 <SystemClock_Config+0x72>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000c68:	f006 f862 	bl	8006d30 <HAL_PWREx_EnableOverDrive>
 8000c6c:	b100      	cbz	r0, 8000c70 <SystemClock_Config+0x7c>
 8000c6e:	e7fe      	b.n	8000c6e <SystemClock_Config+0x7a>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000c70:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000c72:	e9cd 3403 	strd	r3, r4, [sp, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000c76:	9005      	str	r0, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000c78:	f44f 52a0 	mov.w	r2, #5120	@ 0x1400
 8000c7c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000c80:	2105      	movs	r1, #5
 8000c82:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000c84:	e9cd 2306 	strd	r2, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000c88:	f006 fa68 	bl	800715c <HAL_RCC_ClockConfig>
 8000c8c:	b100      	cbz	r0, 8000c90 <SystemClock_Config+0x9c>
 8000c8e:	e7fe      	b.n	8000c8e <SystemClock_Config+0x9a>
}
 8000c90:	b014      	add	sp, #80	@ 0x50
 8000c92:	bd10      	pop	{r4, pc}
 8000c94:	40023800 	.word	0x40023800
 8000c98:	40007000 	.word	0x40007000

08000c9c <IOE_Init>:
}
 8000c9c:	4770      	bx	lr

08000c9e <IOE_ITConfig>:
void IOE_ITConfig(void)
 8000c9e:	4770      	bx	lr

08000ca0 <IOE_Write>:
{
 8000ca0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8000ca2:	4b09      	ldr	r3, [pc, #36]	@ (8000cc8 <IOE_Write+0x28>)
 8000ca4:	f88d 2017 	strb.w	r2, [sp, #23]
 8000ca8:	681b      	ldr	r3, [r3, #0]
 8000caa:	9302      	str	r3, [sp, #8]
 8000cac:	f10d 0217 	add.w	r2, sp, #23
 8000cb0:	2301      	movs	r3, #1
 8000cb2:	9200      	str	r2, [sp, #0]
 8000cb4:	9301      	str	r3, [sp, #4]
 8000cb6:	460a      	mov	r2, r1
 8000cb8:	4601      	mov	r1, r0
 8000cba:	4804      	ldr	r0, [pc, #16]	@ (8000ccc <IOE_Write+0x2c>)
 8000cbc:	f005 fcc8 	bl	8006650 <HAL_I2C_Mem_Write>
}
 8000cc0:	b007      	add	sp, #28
 8000cc2:	f85d fb04 	ldr.w	pc, [sp], #4
 8000cc6:	bf00      	nop
 8000cc8:	2000000c 	.word	0x2000000c
 8000ccc:	2000054c 	.word	0x2000054c

08000cd0 <IOE_Read>:
{
 8000cd0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8000cd2:	2300      	movs	r3, #0
 8000cd4:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000cd8:	4b08      	ldr	r3, [pc, #32]	@ (8000cfc <IOE_Read+0x2c>)
 8000cda:	681b      	ldr	r3, [r3, #0]
 8000cdc:	9302      	str	r3, [sp, #8]
{
 8000cde:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000ce0:	2301      	movs	r3, #1
 8000ce2:	f10d 0117 	add.w	r1, sp, #23
 8000ce6:	9100      	str	r1, [sp, #0]
 8000ce8:	9301      	str	r3, [sp, #4]
 8000cea:	4601      	mov	r1, r0
 8000cec:	4804      	ldr	r0, [pc, #16]	@ (8000d00 <IOE_Read+0x30>)
 8000cee:	f005 fd3f 	bl	8006770 <HAL_I2C_Mem_Read>
}
 8000cf2:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8000cf6:	b007      	add	sp, #28
 8000cf8:	f85d fb04 	ldr.w	pc, [sp], #4
 8000cfc:	2000000c 	.word	0x2000000c
 8000d00:	2000054c 	.word	0x2000054c

08000d04 <IOE_ReadMultiple>:
{
 8000d04:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8000d06:	4c08      	ldr	r4, [pc, #32]	@ (8000d28 <IOE_ReadMultiple+0x24>)
 8000d08:	6824      	ldr	r4, [r4, #0]
 8000d0a:	9200      	str	r2, [sp, #0]
 8000d0c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000d10:	460a      	mov	r2, r1
 8000d12:	2301      	movs	r3, #1
 8000d14:	4601      	mov	r1, r0
 8000d16:	4805      	ldr	r0, [pc, #20]	@ (8000d2c <IOE_ReadMultiple+0x28>)
 8000d18:	f005 fd2a 	bl	8006770 <HAL_I2C_Mem_Read>
}
 8000d1c:	3800      	subs	r0, #0
 8000d1e:	bf18      	it	ne
 8000d20:	2001      	movne	r0, #1
 8000d22:	b004      	add	sp, #16
 8000d24:	bd10      	pop	{r4, pc}
 8000d26:	bf00      	nop
 8000d28:	2000000c 	.word	0x2000000c
 8000d2c:	2000054c 	.word	0x2000054c

08000d30 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8000d30:	f004 bda4 	b.w	800587c <HAL_Delay>

08000d34 <LCD_IO_Init>:
{
 8000d34:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000d36:	4c06      	ldr	r4, [pc, #24]	@ (8000d50 <LCD_IO_Init+0x1c>)
 8000d38:	2200      	movs	r2, #0
 8000d3a:	4620      	mov	r0, r4
 8000d3c:	2104      	movs	r1, #4
 8000d3e:	f005 f9c5 	bl	80060cc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000d42:	4620      	mov	r0, r4
 8000d44:	2201      	movs	r2, #1
}
 8000d46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000d4a:	2104      	movs	r1, #4
 8000d4c:	f005 b9be 	b.w	80060cc <HAL_GPIO_WritePin>
 8000d50:	40020800 	.word	0x40020800

08000d54 <LCD_IO_WriteData>:
{
 8000d54:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000d56:	4d0b      	ldr	r5, [pc, #44]	@ (8000d84 <LCD_IO_WriteData+0x30>)
{
 8000d58:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8000d5a:	2201      	movs	r2, #1
 8000d5c:	480a      	ldr	r0, [pc, #40]	@ (8000d88 <LCD_IO_WriteData+0x34>)
 8000d5e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000d62:	f005 f9b3 	bl	80060cc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000d66:	2200      	movs	r2, #0
 8000d68:	2104      	movs	r1, #4
 8000d6a:	4628      	mov	r0, r5
 8000d6c:	f005 f9ae 	bl	80060cc <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8000d70:	4620      	mov	r0, r4
 8000d72:	f7ff ff0d 	bl	8000b90 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000d76:	4628      	mov	r0, r5
 8000d78:	2201      	movs	r2, #1
}
 8000d7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000d7e:	2104      	movs	r1, #4
 8000d80:	f005 b9a4 	b.w	80060cc <HAL_GPIO_WritePin>
 8000d84:	40020800 	.word	0x40020800
 8000d88:	40020c00 	.word	0x40020c00

08000d8c <LCD_IO_WriteReg>:
{
 8000d8c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000d8e:	4d0b      	ldr	r5, [pc, #44]	@ (8000dbc <LCD_IO_WriteReg+0x30>)
{
 8000d90:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8000d92:	2200      	movs	r2, #0
 8000d94:	480a      	ldr	r0, [pc, #40]	@ (8000dc0 <LCD_IO_WriteReg+0x34>)
 8000d96:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000d9a:	f005 f997 	bl	80060cc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000d9e:	2200      	movs	r2, #0
 8000da0:	2104      	movs	r1, #4
 8000da2:	4628      	mov	r0, r5
 8000da4:	f005 f992 	bl	80060cc <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8000da8:	4620      	mov	r0, r4
 8000daa:	f7ff fef1 	bl	8000b90 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000dae:	4628      	mov	r0, r5
 8000db0:	2201      	movs	r2, #1
}
 8000db2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000db6:	2104      	movs	r1, #4
 8000db8:	f005 b988 	b.w	80060cc <HAL_GPIO_WritePin>
 8000dbc:	40020800 	.word	0x40020800
 8000dc0:	40020c00 	.word	0x40020c00

08000dc4 <LCD_IO_ReadData>:
{
 8000dc4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000dc6:	4e14      	ldr	r6, [pc, #80]	@ (8000e18 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8000dc8:	4f14      	ldr	r7, [pc, #80]	@ (8000e1c <LCD_IO_ReadData+0x58>)
{
 8000dca:	4605      	mov	r5, r0
 8000dcc:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000dce:	4630      	mov	r0, r6
 8000dd0:	2200      	movs	r2, #0
 8000dd2:	2104      	movs	r1, #4
 8000dd4:	f005 f97a 	bl	80060cc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8000dd8:	2200      	movs	r2, #0
 8000dda:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000dde:	4638      	mov	r0, r7
 8000de0:	f005 f974 	bl	80060cc <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8000de4:	4628      	mov	r0, r5
 8000de6:	f7ff fed3 	bl	8000b90 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8000dea:	4b0d      	ldr	r3, [pc, #52]	@ (8000e20 <LCD_IO_ReadData+0x5c>)
 8000dec:	480d      	ldr	r0, [pc, #52]	@ (8000e24 <LCD_IO_ReadData+0x60>)
 8000dee:	681b      	ldr	r3, [r3, #0]
 8000df0:	4622      	mov	r2, r4
 8000df2:	a901      	add	r1, sp, #4
 8000df4:	f006 feda 	bl	8007bac <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8000df8:	4638      	mov	r0, r7
 8000dfa:	2201      	movs	r2, #1
 8000dfc:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8000e00:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8000e02:	f005 f963 	bl	80060cc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000e06:	4630      	mov	r0, r6
 8000e08:	2201      	movs	r2, #1
 8000e0a:	2104      	movs	r1, #4
 8000e0c:	f005 f95e 	bl	80060cc <HAL_GPIO_WritePin>
}
 8000e10:	4620      	mov	r0, r4
 8000e12:	b003      	add	sp, #12
 8000e14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e16:	bf00      	nop
 8000e18:	40020800 	.word	0x40020800
 8000e1c:	40020c00 	.word	0x40020c00
 8000e20:	20000008 	.word	0x20000008
 8000e24:	2000044c 	.word	0x2000044c

08000e28 <LCD_Delay>:
  HAL_Delay(Delay);
 8000e28:	f004 bd28 	b.w	800587c <HAL_Delay>

08000e2c <SingleBeepTask>:
  * @brief	Task cho bật buzzer (beep)
  * @param  param: void* not used
  * @retval None
  */
void SingleBeepTask(void *param){
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_SET);
 8000e2c:	4c0a      	ldr	r4, [pc, #40]	@ (8000e58 <SingleBeepTask+0x2c>)
void SingleBeepTask(void *param){
 8000e2e:	b508      	push	{r3, lr}
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_SET);
 8000e30:	2201      	movs	r2, #1
 8000e32:	2108      	movs	r1, #8
 8000e34:	4620      	mov	r0, r4
 8000e36:	f005 f949 	bl	80060cc <HAL_GPIO_WritePin>
	osDelay(50);
 8000e3a:	2032      	movs	r0, #50	@ 0x32
 8000e3c:	f007 fb98 	bl	8008570 <osDelay>
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_RESET);
 8000e40:	2200      	movs	r2, #0
 8000e42:	2108      	movs	r1, #8
 8000e44:	4620      	mov	r0, r4
 8000e46:	f005 f941 	bl	80060cc <HAL_GPIO_WritePin>
	HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8000e4a:	4804      	ldr	r0, [pc, #16]	@ (8000e5c <SingleBeepTask+0x30>)
 8000e4c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000e50:	f005 f941 	bl	80060d6 <HAL_GPIO_TogglePin>
	osThreadExit();
 8000e54:	f007 faff 	bl	8008456 <osThreadExit>
 8000e58:	40020800 	.word	0x40020800
 8000e5c:	40021800 	.word	0x40021800

08000e60 <DoubleBeepTask>:
  * @brief	Task cho bật buzzer (beep - beep)
  * @param  param: void* not used
  * @retval None
  */
void DoubleBeepTask(void *param){
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_SET);
 8000e60:	4c10      	ldr	r4, [pc, #64]	@ (8000ea4 <DoubleBeepTask+0x44>)
void DoubleBeepTask(void *param){
 8000e62:	b508      	push	{r3, lr}
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_SET);
 8000e64:	2201      	movs	r2, #1
 8000e66:	2108      	movs	r1, #8
 8000e68:	4620      	mov	r0, r4
 8000e6a:	f005 f92f 	bl	80060cc <HAL_GPIO_WritePin>
	osDelay(50);
 8000e6e:	2032      	movs	r0, #50	@ 0x32
 8000e70:	f007 fb7e 	bl	8008570 <osDelay>
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_RESET);
 8000e74:	2200      	movs	r2, #0
 8000e76:	2108      	movs	r1, #8
 8000e78:	4620      	mov	r0, r4
 8000e7a:	f005 f927 	bl	80060cc <HAL_GPIO_WritePin>
	osDelay(50);
 8000e7e:	2032      	movs	r0, #50	@ 0x32
 8000e80:	f007 fb76 	bl	8008570 <osDelay>
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_SET);
 8000e84:	2201      	movs	r2, #1
 8000e86:	2108      	movs	r1, #8
 8000e88:	4620      	mov	r0, r4
 8000e8a:	f005 f91f 	bl	80060cc <HAL_GPIO_WritePin>
	osDelay(50);
 8000e8e:	2032      	movs	r0, #50	@ 0x32
 8000e90:	f007 fb6e 	bl	8008570 <osDelay>
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_RESET);
 8000e94:	2200      	movs	r2, #0
 8000e96:	2108      	movs	r1, #8
 8000e98:	4620      	mov	r0, r4
 8000e9a:	f005 f917 	bl	80060cc <HAL_GPIO_WritePin>
	osThreadExit();
 8000e9e:	f007 fada 	bl	8008456 <osThreadExit>
 8000ea2:	bf00      	nop
 8000ea4:	40020800 	.word	0x40020800

08000ea8 <DF_SendCommand>:
  * @param  cmd: uint8_t command cần gửi
  * @param  param1: uint8_t tham số thứ nhất
  * @param  param2: uint8_t tham số thứ hai
  * @retval None
  */
void DF_SendCommand(uint8_t cmd, uint8_t param1, uint8_t param2){
 8000ea8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	uint8_t buffer[10] = {0x7E, 0xFF, 0x06, cmd, 0x00, param1, param2, 0x00, 0x00, 0xEF};
 8000eaa:	f64f 737e 	movw	r3, #65406	@ 0xff7e
 8000eae:	f88d 200a 	strb.w	r2, [sp, #10]
	uint16_t checksum = -(buffer[1] + buffer[2] + buffer[3] + buffer[4] + buffer[5] + buffer[6]);
 8000eb2:	f202 1205 	addw	r2, r2, #261	@ 0x105
	uint8_t buffer[10] = {0x7E, 0xFF, 0x06, cmd, 0x00, param1, param2, 0x00, 0x00, 0xEF};
 8000eb6:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000eba:	f88d 1009 	strb.w	r1, [sp, #9]
 8000ebe:	2306      	movs	r3, #6
	uint16_t checksum = -(buffer[1] + buffer[2] + buffer[3] + buffer[4] + buffer[5] + buffer[6]);
 8000ec0:	4411      	add	r1, r2
	uint8_t buffer[10] = {0x7E, 0xFF, 0x06, cmd, 0x00, param1, param2, 0x00, 0x00, 0xEF};
 8000ec2:	f88d 3006 	strb.w	r3, [sp, #6]
 8000ec6:	f88d 0007 	strb.w	r0, [sp, #7]
 8000eca:	2300      	movs	r3, #0
	uint16_t checksum = -(buffer[1] + buffer[2] + buffer[3] + buffer[4] + buffer[5] + buffer[6]);
 8000ecc:	4408      	add	r0, r1
	uint8_t buffer[10] = {0x7E, 0xFF, 0x06, cmd, 0x00, param1, param2, 0x00, 0x00, 0xEF};
 8000ece:	f88d 3008 	strb.w	r3, [sp, #8]
	uint16_t checksum = -(buffer[1] + buffer[2] + buffer[3] + buffer[4] + buffer[5] + buffer[6]);
 8000ed2:	4240      	negs	r0, r0
	uint8_t buffer[10] = {0x7E, 0xFF, 0x06, cmd, 0x00, param1, param2, 0x00, 0x00, 0xEF};
 8000ed4:	23ef      	movs	r3, #239	@ 0xef
 8000ed6:	f88d 300d 	strb.w	r3, [sp, #13]
	buffer[7] = (checksum >> 8) & 0xFF;
 8000eda:	f3c0 2307 	ubfx	r3, r0, #8, #8
 8000ede:	f88d 300b 	strb.w	r3, [sp, #11]
	buffer[8] = checksum & 0xFF;
 8000ee2:	f88d 000c 	strb.w	r0, [sp, #12]

	HAL_UART_Transmit(&huart4, buffer, 10, HAL_MAX_DELAY);
 8000ee6:	f04f 33ff 	mov.w	r3, #4294967295
 8000eea:	220a      	movs	r2, #10
 8000eec:	a901      	add	r1, sp, #4
 8000eee:	4803      	ldr	r0, [pc, #12]	@ (8000efc <DF_SendCommand+0x54>)
 8000ef0:	f007 f947 	bl	8008182 <HAL_UART_Transmit>
}
 8000ef4:	b005      	add	sp, #20
 8000ef6:	f85d fb04 	ldr.w	pc, [sp], #4
 8000efa:	bf00      	nop
 8000efc:	200003d0 	.word	0x200003d0

08000f00 <GameOverTask>:
void GameOverTask(void *param){
 8000f00:	b508      	push	{r3, lr}
	DF_SendCommand(0x0F, 0x02, 0x03);
 8000f02:	2203      	movs	r2, #3
 8000f04:	2102      	movs	r1, #2
 8000f06:	200f      	movs	r0, #15
 8000f08:	f7ff ffce 	bl	8000ea8 <DF_SendCommand>
	osDelay(2000);
 8000f0c:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 8000f10:	f007 fb2e 	bl	8008570 <osDelay>
	if(currScreen == 1)	DF_SendCommand(0x0F, 0x02, 0x02);
 8000f14:	4b07      	ldr	r3, [pc, #28]	@ (8000f34 <GameOverTask+0x34>)
 8000f16:	781b      	ldrb	r3, [r3, #0]
 8000f18:	2b01      	cmp	r3, #1
 8000f1a:	d106      	bne.n	8000f2a <GameOverTask+0x2a>
 8000f1c:	2202      	movs	r2, #2
	else if(currScreen == 3) DF_SendCommand(0x0F, 0x02, 0x01);
 8000f1e:	2102      	movs	r1, #2
 8000f20:	200f      	movs	r0, #15
 8000f22:	f7ff ffc1 	bl	8000ea8 <DF_SendCommand>
	osThreadExit();
 8000f26:	f007 fa96 	bl	8008456 <osThreadExit>
	else if(currScreen == 3) DF_SendCommand(0x0F, 0x02, 0x01);
 8000f2a:	2b03      	cmp	r3, #3
 8000f2c:	d1fb      	bne.n	8000f26 <GameOverTask+0x26>
 8000f2e:	2201      	movs	r2, #1
 8000f30:	e7f5      	b.n	8000f1e <GameOverTask+0x1e>
 8000f32:	bf00      	nop
 8000f34:	20000010 	.word	0x20000010

08000f38 <main>:
{
 8000f38:	b580      	push	{r7, lr}
 8000f3a:	b09a      	sub	sp, #104	@ 0x68
  HAL_Init();
 8000f3c:	f004 fc72 	bl	8005824 <HAL_Init>
  SystemClock_Config();
 8000f40:	f7ff fe58 	bl	8000bf4 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f44:	2214      	movs	r2, #20
 8000f46:	2100      	movs	r1, #0
 8000f48:	a80d      	add	r0, sp, #52	@ 0x34
 8000f4a:	f023 fd4a 	bl	80249e2 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000f4e:	2400      	movs	r4, #0
 8000f50:	4bb4      	ldr	r3, [pc, #720]	@ (8001224 <main+0x2ec>)
 8000f52:	9400      	str	r4, [sp, #0]
 8000f54:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000f56:	48b4      	ldr	r0, [pc, #720]	@ (8001228 <main+0x2f0>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000f58:	f042 0210 	orr.w	r2, r2, #16
 8000f5c:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f5e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f60:	f002 0210 	and.w	r2, r2, #16
 8000f64:	9200      	str	r2, [sp, #0]
 8000f66:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000f68:	9401      	str	r4, [sp, #4]
 8000f6a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f6c:	f042 0220 	orr.w	r2, r2, #32
 8000f70:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f72:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f74:	f002 0220 	and.w	r2, r2, #32
 8000f78:	9201      	str	r2, [sp, #4]
 8000f7a:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000f7c:	9402      	str	r4, [sp, #8]
 8000f7e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f80:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000f84:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f86:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f88:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8000f8c:	9202      	str	r2, [sp, #8]
 8000f8e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000f90:	9403      	str	r4, [sp, #12]
 8000f92:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f94:	f042 0204 	orr.w	r2, r2, #4
 8000f98:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f9a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f9c:	f002 0204 	and.w	r2, r2, #4
 8000fa0:	9203      	str	r2, [sp, #12]
 8000fa2:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000fa4:	9404      	str	r4, [sp, #16]
 8000fa6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000fa8:	f042 0201 	orr.w	r2, r2, #1
 8000fac:	631a      	str	r2, [r3, #48]	@ 0x30
 8000fae:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000fb0:	f002 0201 	and.w	r2, r2, #1
 8000fb4:	9204      	str	r2, [sp, #16]
 8000fb6:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000fb8:	9405      	str	r4, [sp, #20]
 8000fba:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000fbc:	f042 0202 	orr.w	r2, r2, #2
 8000fc0:	631a      	str	r2, [r3, #48]	@ 0x30
 8000fc2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000fc4:	f002 0202 	and.w	r2, r2, #2
 8000fc8:	9205      	str	r2, [sp, #20]
 8000fca:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000fcc:	9406      	str	r4, [sp, #24]
 8000fce:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000fd0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8000fd4:	631a      	str	r2, [r3, #48]	@ 0x30
 8000fd6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000fd8:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8000fdc:	9206      	str	r2, [sp, #24]
 8000fde:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000fe0:	9407      	str	r4, [sp, #28]
 8000fe2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000fe4:	f042 0208 	orr.w	r2, r2, #8
 8000fe8:	631a      	str	r2, [r3, #48]	@ 0x30
 8000fea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000fec:	f003 0308 	and.w	r3, r3, #8
 8000ff0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000ff2:	4622      	mov	r2, r4
 8000ff4:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000ff6:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000ff8:	f005 f868 	bl	80060cc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8000ffc:	488b      	ldr	r0, [pc, #556]	@ (800122c <main+0x2f4>)
 8000ffe:	2201      	movs	r2, #1
 8001000:	2102      	movs	r1, #2
 8001002:	f005 f863 	bl	80060cc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001006:	4889      	ldr	r0, [pc, #548]	@ (800122c <main+0x2f4>)
 8001008:	4622      	mov	r2, r4
 800100a:	2104      	movs	r1, #4
 800100c:	f005 f85e 	bl	80060cc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001010:	4622      	mov	r2, r4
 8001012:	4887      	ldr	r0, [pc, #540]	@ (8001230 <main+0x2f8>)
 8001014:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8001018:	f005 f858 	bl	80060cc <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800101c:	2501      	movs	r5, #1
 800101e:	233c      	movs	r3, #60	@ 0x3c
 8001020:	e9cd 350d 	strd	r3, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001024:	4880      	ldr	r0, [pc, #512]	@ (8001228 <main+0x2f0>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001026:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001028:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800102a:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = SPI5_NCS_Pin;
 800102c:	2602      	movs	r6, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800102e:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001030:	f004 ff62 	bl	8005ef8 <HAL_GPIO_Init>
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8001034:	487d      	ldr	r0, [pc, #500]	@ (800122c <main+0x2f4>)
 8001036:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001038:	e9cd 650d 	strd	r6, r5, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800103c:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8001040:	f004 ff5a 	bl	8005ef8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001044:	2304      	movs	r3, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001046:	4879      	ldr	r0, [pc, #484]	@ (800122c <main+0x2f4>)
 8001048:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800104a:	e9cd 350d 	strd	r3, r5, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800104e:	f44f 5940 	mov.w	r9, #12288	@ 0x3000
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001052:	e9cd 460f 	strd	r4, r6, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001056:	f004 ff4f 	bl	8005ef8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800105a:	4875      	ldr	r0, [pc, #468]	@ (8001230 <main+0x2f8>)
 800105c:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 800105e:	2708      	movs	r7, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001060:	e9cd 950d 	strd	r9, r5, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001064:	e9cd 460f 	strd	r4, r6, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001068:	f004 ff46 	bl	8005ef8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800106c:	486f      	ldr	r0, [pc, #444]	@ (800122c <main+0x2f4>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800106e:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001070:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001072:	e9cd 750d 	strd	r7, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001076:	f004 ff3f 	bl	8005ef8 <HAL_GPIO_Init>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_RESET);
 800107a:	4622      	mov	r2, r4
 800107c:	486b      	ldr	r0, [pc, #428]	@ (800122c <main+0x2f4>)
 800107e:	4639      	mov	r1, r7
 8001080:	f005 f824 	bl	80060cc <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001084:	f44f 1888 	mov.w	r8, #1114112	@ 0x110000
 8001088:	230c      	movs	r3, #12
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800108a:	486a      	ldr	r0, [pc, #424]	@ (8001234 <main+0x2fc>)
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800108c:	960f      	str	r6, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800108e:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001090:	e9cd 380d 	strd	r3, r8, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001094:	f004 ff30 	bl	8005ef8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001098:	4867      	ldr	r0, [pc, #412]	@ (8001238 <main+0x300>)
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800109a:	960f      	str	r6, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800109c:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800109e:	e9cd 980d 	strd	r9, r8, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80010a2:	f004 ff29 	bl	8005ef8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 80010a6:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80010aa:	4862      	ldr	r0, [pc, #392]	@ (8001234 <main+0x2fc>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010ac:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80010ae:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80010b0:	e9cd 350d 	strd	r3, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80010b4:	f004 ff20 	bl	8005ef8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010b8:	4860      	ldr	r0, [pc, #384]	@ (800123c <main+0x304>)
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80010ba:	960f      	str	r6, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010bc:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80010be:	e9cd 580d 	strd	r5, r8, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010c2:	f004 ff19 	bl	8005ef8 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI0_IRQn, configMAX_SYSCALL_INTERRUPT_PRIORITY + 5, 0);
 80010c6:	4622      	mov	r2, r4
 80010c8:	2155      	movs	r1, #85	@ 0x55
 80010ca:	2006      	movs	r0, #6
 80010cc:	f004 fbfc 	bl	80058c8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 80010d0:	2006      	movs	r0, #6
 80010d2:	f004 fc2b 	bl	800592c <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, configMAX_SYSCALL_INTERRUPT_PRIORITY + 5, 0);
 80010d6:	4622      	mov	r2, r4
 80010d8:	2155      	movs	r1, #85	@ 0x55
 80010da:	2028      	movs	r0, #40	@ 0x28
 80010dc:	f004 fbf4 	bl	80058c8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 80010e0:	2028      	movs	r0, #40	@ 0x28
 80010e2:	f004 fc23 	bl	800592c <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(EXTI2_IRQn, configMAX_SYSCALL_INTERRUPT_PRIORITY + 5, 0);
 80010e6:	4622      	mov	r2, r4
 80010e8:	2155      	movs	r1, #85	@ 0x55
 80010ea:	4638      	mov	r0, r7
 80010ec:	f004 fbec 	bl	80058c8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 80010f0:	4638      	mov	r0, r7
 80010f2:	f004 fc1b 	bl	800592c <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(EXTI3_IRQn, configMAX_SYSCALL_INTERRUPT_PRIORITY + 5, 0);
 80010f6:	4622      	mov	r2, r4
 80010f8:	2155      	movs	r1, #85	@ 0x55
 80010fa:	2009      	movs	r0, #9
 80010fc:	f004 fbe4 	bl	80058c8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001100:	2009      	movs	r0, #9
 8001102:	f004 fc13 	bl	800592c <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001106:	484e      	ldr	r0, [pc, #312]	@ (8001240 <main+0x308>)
 8001108:	4b4e      	ldr	r3, [pc, #312]	@ (8001244 <main+0x30c>)
 800110a:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800110c:	f004 fc1c 	bl	8005948 <HAL_CRC_Init>
 8001110:	b100      	cbz	r0, 8001114 <main+0x1dc>
 8001112:	e7fe      	b.n	8001112 <main+0x1da>
  hi2c3.Instance = I2C3;
 8001114:	4c4c      	ldr	r4, [pc, #304]	@ (8001248 <main+0x310>)
  hi2c3.Init.ClockSpeed = 100000;
 8001116:	4b4d      	ldr	r3, [pc, #308]	@ (800124c <main+0x314>)
 8001118:	494d      	ldr	r1, [pc, #308]	@ (8001250 <main+0x318>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800111a:	6220      	str	r0, [r4, #32]
  hi2c3.Init.ClockSpeed = 100000;
 800111c:	e9c4 1300 	strd	r1, r3, [r4]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001120:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.OwnAddress1 = 0;
 8001124:	e9c4 0002 	strd	r0, r0, [r4, #8]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001128:	e9c4 3004 	strd	r3, r0, [r4, #16]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800112c:	e9c4 0006 	strd	r0, r0, [r4, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001130:	4620      	mov	r0, r4
 8001132:	f005 f9e5 	bl	8006500 <HAL_I2C_Init>
 8001136:	b100      	cbz	r0, 800113a <main+0x202>
 8001138:	e7fe      	b.n	8001138 <main+0x200>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800113a:	2110      	movs	r1, #16
 800113c:	4620      	mov	r0, r4
 800113e:	f005 fc27 	bl	8006990 <HAL_I2CEx_ConfigAnalogFilter>
 8001142:	4601      	mov	r1, r0
 8001144:	b100      	cbz	r0, 8001148 <main+0x210>
 8001146:	e7fe      	b.n	8001146 <main+0x20e>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001148:	4620      	mov	r0, r4
 800114a:	f005 fc40 	bl	80069ce <HAL_I2CEx_ConfigDigitalFilter>
 800114e:	b100      	cbz	r0, 8001152 <main+0x21a>
 8001150:	e7fe      	b.n	8001150 <main+0x218>
  hspi5.Instance = SPI5;
 8001152:	4c40      	ldr	r4, [pc, #256]	@ (8001254 <main+0x31c>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001154:	f8df a10c 	ldr.w	sl, [pc, #268]	@ 8001264 <main+0x32c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001158:	62a0      	str	r0, [r4, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800115a:	f44f 7382 	mov.w	r3, #260	@ 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800115e:	f44f 7200 	mov.w	r2, #512	@ 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001162:	e9c4 a300 	strd	sl, r3, [r4]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001166:	2318      	movs	r3, #24
 8001168:	e9c4 2306 	strd	r2, r3, [r4, #24]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800116c:	e9c4 0002 	strd	r0, r0, [r4, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001170:	e9c4 0004 	strd	r0, r0, [r4, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001174:	e9c4 0008 	strd	r0, r0, [r4, #32]
  hspi5.Init.CRCPolynomial = 10;
 8001178:	230a      	movs	r3, #10
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800117a:	4620      	mov	r0, r4
  hspi5.Init.CRCPolynomial = 10;
 800117c:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800117e:	f006 fb0d 	bl	800779c <HAL_SPI_Init>
 8001182:	4602      	mov	r2, r0
 8001184:	b100      	cbz	r0, 8001188 <main+0x250>
 8001186:	e7fe      	b.n	8001186 <main+0x24e>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001188:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 800118a:	4631      	mov	r1, r6
  uint8_t pdata = 0;
 800118c:	f88d 0034 	strb.w	r0, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001190:	4826      	ldr	r0, [pc, #152]	@ (800122c <main+0x2f4>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001192:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001196:	f004 ff99 	bl	80060cc <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 800119a:	462a      	mov	r2, r5
 800119c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80011a0:	a909      	add	r1, sp, #36	@ 0x24
 80011a2:	4620      	mov	r0, r4
 80011a4:	f006 fb56 	bl	8007854 <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 80011a8:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80011ac:	462a      	mov	r2, r5
 80011ae:	a90d      	add	r1, sp, #52	@ 0x34
 80011b0:	4620      	mov	r0, r4
 80011b2:	f006 fcfb 	bl	8007bac <HAL_SPI_Receive>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 80011b6:	462a      	mov	r2, r5
 80011b8:	4631      	mov	r1, r6
 80011ba:	481c      	ldr	r0, [pc, #112]	@ (800122c <main+0x2f4>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80011bc:	4c26      	ldr	r4, [pc, #152]	@ (8001258 <main+0x320>)
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 80011be:	f004 ff85 	bl	80060cc <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 80011c2:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 80011c6:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 80011c8:	bf04      	itt	eq
 80011ca:	4b24      	ldreq	r3, [pc, #144]	@ (800125c <main+0x324>)
 80011cc:	701d      	strbeq	r5, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80011ce:	4b24      	ldr	r3, [pc, #144]	@ (8001260 <main+0x328>)
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80011d0:	2240      	movs	r2, #64	@ 0x40
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80011d2:	2601      	movs	r6, #1
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80011d4:	f04f 0910 	mov.w	r9, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80011d8:	e9c4 3600 	strd	r3, r6, [r4]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80011dc:	e9c4 9204 	strd	r9, r2, [r4, #16]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80011e0:	2300      	movs	r3, #0
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80011e2:	f44f 72c0 	mov.w	r2, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80011e6:	e9c4 2306 	strd	r2, r3, [r4, #24]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80011ea:	f04f 0804 	mov.w	r8, #4
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80011ee:	f44f 6200 	mov.w	r2, #2048	@ 0x800
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80011f2:	e9c4 3802 	strd	r3, r8, [r4, #8]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80011f6:	e9c4 2308 	strd	r2, r3, [r4, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80011fa:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 80011fe:	2702      	movs	r7, #2
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001200:	62a3      	str	r3, [r4, #40]	@ 0x28
  SdramTiming.WriteRecoveryTime = 3;
 8001202:	f04f 0a03 	mov.w	sl, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001206:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001208:	a90d      	add	r1, sp, #52	@ 0x34
 800120a:	4620      	mov	r0, r4
  SdramTiming.ExitSelfRefreshDelay = 7;
 800120c:	e9cd 730d 	strd	r7, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 8001210:	e9cd 830f 	strd	r8, r3, [sp, #60]	@ 0x3c
  SdramTiming.RPDelay = 2;
 8001214:	e9cd a711 	strd	sl, r7, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 8001218:	9713      	str	r7, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800121a:	f006 f9a3 	bl	8007564 <HAL_SDRAM_Init>
 800121e:	4605      	mov	r5, r0
 8001220:	b310      	cbz	r0, 8001268 <main+0x330>
 8001222:	e7fe      	b.n	8001222 <main+0x2ea>
 8001224:	40023800 	.word	0x40023800
 8001228:	40021000 	.word	0x40021000
 800122c:	40020800 	.word	0x40020800
 8001230:	40020c00 	.word	0x40020c00
 8001234:	40021800 	.word	0x40021800
 8001238:	40020400 	.word	0x40020400
 800123c:	40020000 	.word	0x40020000
 8001240:	200005e0 	.word	0x200005e0
 8001244:	40023000 	.word	0x40023000
 8001248:	2000054c 	.word	0x2000054c
 800124c:	000186a0 	.word	0x000186a0
 8001250:	40005c00 	.word	0x40005c00
 8001254:	2000044c 	.word	0x2000044c
 8001258:	20000418 	.word	0x20000418
 800125c:	200003b8 	.word	0x200003b8
 8001260:	a0000140 	.word	0xa0000140
 8001264:	40015000 	.word	0x40015000
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001268:	f04f 0908 	mov.w	r9, #8
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800126c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001270:	a909      	add	r1, sp, #36	@ 0x24
 __IO uint32_t tmpmrd =0;
 8001272:	9008      	str	r0, [sp, #32]
  Command->ModeRegisterDefinition  = 0;
 8001274:	900c      	str	r0, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001276:	4620      	mov	r0, r4
  Command->AutoRefreshNumber       = 1;
 8001278:	e9cd 960a 	strd	r9, r6, [sp, #40]	@ 0x28
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 800127c:	9609      	str	r6, [sp, #36]	@ 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800127e:	f006 f991 	bl	80075a4 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001282:	4630      	mov	r0, r6
 8001284:	f004 fafa 	bl	800587c <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001288:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800128c:	a909      	add	r1, sp, #36	@ 0x24
 800128e:	4620      	mov	r0, r4
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001290:	e9cd 7909 	strd	r7, r9, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001294:	e9cd 650b 	strd	r6, r5, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001298:	f006 f984 	bl	80075a4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800129c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80012a0:	a909      	add	r1, sp, #36	@ 0x24
 80012a2:	4620      	mov	r0, r4
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80012a4:	e9cd a909 	strd	sl, r9, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 80012a8:	e9cd 850b 	strd	r8, r5, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80012ac:	f006 f97a 	bl	80075a4 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80012b0:	f44f 730c 	mov.w	r3, #560	@ 0x230
 80012b4:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80012b6:	9b08      	ldr	r3, [sp, #32]
 80012b8:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80012ba:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80012be:	a909      	add	r1, sp, #36	@ 0x24
 80012c0:	4620      	mov	r0, r4
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80012c2:	e9cd 8909 	strd	r8, r9, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 80012c6:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80012c8:	f006 f96c 	bl	80075a4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80012cc:	f240 516a 	movw	r1, #1386	@ 0x56a
 80012d0:	4620      	mov	r0, r4
 80012d2:	f006 f985 	bl	80075e0 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80012d6:	2234      	movs	r2, #52	@ 0x34
 80012d8:	eb0d 0002 	add.w	r0, sp, r2
 80012dc:	4629      	mov	r1, r5
 80012de:	f023 fb80 	bl	80249e2 <memset>
  hltdc.Instance = LTDC;
 80012e2:	4c57      	ldr	r4, [pc, #348]	@ (8001440 <main+0x508>)
 80012e4:	4b57      	ldr	r3, [pc, #348]	@ (8001444 <main+0x50c>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80012e6:	6125      	str	r5, [r4, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80012e8:	e9c4 3500 	strd	r3, r5, [r4]
  hltdc.Init.HorizontalSync = 9;
 80012ec:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 80012ee:	e9c4 3605 	strd	r3, r6, [r4, #20]
  hltdc.Init.AccumulatedHBP = 29;
 80012f2:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 80012f4:	e9c4 3a07 	strd	r3, sl, [r4, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80012f8:	f240 1c0d 	movw	ip, #269	@ 0x10d
 80012fc:	f240 1343 	movw	r3, #323	@ 0x143
 8001300:	e9c4 c309 	strd	ip, r3, [r4, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 8001304:	f240 1e17 	movw	lr, #279	@ 0x117
 8001308:	f240 1347 	movw	r3, #327	@ 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800130c:	4620      	mov	r0, r4
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800130e:	e9c4 5502 	strd	r5, r5, [r4, #8]
  hltdc.Init.TotalHeigh = 327;
 8001312:	e9c4 e30b 	strd	lr, r3, [r4, #44]	@ 0x2c
  hltdc.Init.Backcolor.Blue = 0;
 8001316:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8001318:	f884 5036 	strb.w	r5, [r4, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800131c:	f005 fbf2 	bl	8006b04 <HAL_LTDC_Init>
 8001320:	4602      	mov	r2, r0
 8001322:	b100      	cbz	r0, 8001326 <main+0x3ee>
 8001324:	e7fe      	b.n	8001324 <main+0x3ec>
  pLayerCfg.WindowX1 = 240;
 8001326:	21f0      	movs	r1, #240	@ 0xf0
  pLayerCfg.WindowY0 = 0;
 8001328:	e9cd 100e 	strd	r1, r0, [sp, #56]	@ 0x38
  pLayerCfg.WindowX0 = 0;
 800132c:	900d      	str	r0, [sp, #52]	@ 0x34
  pLayerCfg.Alpha = 255;
 800132e:	20ff      	movs	r0, #255	@ 0xff
  pLayerCfg.Alpha0 = 0;
 8001330:	e9cd 0212 	strd	r0, r2, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001334:	f44f 6580 	mov.w	r5, #1024	@ 0x400
 8001338:	2005      	movs	r0, #5
 800133a:	e9cd 5014 	strd	r5, r0, [sp, #80]	@ 0x50
  pLayerCfg.WindowY1 = 320;
 800133e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.ImageWidth = 240;
 8001342:	e9cd 2116 	strd	r2, r1, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001346:	4620      	mov	r0, r4
 8001348:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800134a:	e9cd 3710 	strd	r3, r7, [sp, #64]	@ 0x40
  pLayerCfg.ImageHeight = 320;
 800134e:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001350:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001354:	f88d 2066 	strb.w	r2, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001358:	f005 fc9f 	bl	8006c9a <HAL_LTDC_ConfigLayer>
 800135c:	4605      	mov	r5, r0
 800135e:	b100      	cbz	r0, 8001362 <main+0x42a>
 8001360:	e7fe      	b.n	8001360 <main+0x428>
  LcdDrv = &ili9341_drv;
 8001362:	4c39      	ldr	r4, [pc, #228]	@ (8001448 <main+0x510>)
 8001364:	4b39      	ldr	r3, [pc, #228]	@ (800144c <main+0x514>)
 8001366:	6023      	str	r3, [r4, #0]
  LcdDrv->Init();
 8001368:	681b      	ldr	r3, [r3, #0]
 800136a:	4798      	blx	r3
  LcdDrv->DisplayOff();
 800136c:	6823      	ldr	r3, [r4, #0]
  hdma2d.Instance = DMA2D;
 800136e:	4c38      	ldr	r4, [pc, #224]	@ (8001450 <main+0x518>)
  LcdDrv->DisplayOff();
 8001370:	68db      	ldr	r3, [r3, #12]
 8001372:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001374:	4b37      	ldr	r3, [pc, #220]	@ (8001454 <main+0x51c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001376:	4620      	mov	r0, r4
  hdma2d.Init.Mode = DMA2D_M2M;
 8001378:	e9c4 3500 	strd	r3, r5, [r4]
  hdma2d.Init.OutputOffset = 0;
 800137c:	e9c4 7502 	strd	r7, r5, [r4, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001380:	e9c4 570a 	strd	r5, r7, [r4, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001384:	e9c4 550c 	strd	r5, r5, [r4, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001388:	f004 faee 	bl	8005968 <HAL_DMA2D_Init>
 800138c:	b100      	cbz	r0, 8001390 <main+0x458>
 800138e:	e7fe      	b.n	800138e <main+0x456>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001390:	4620      	mov	r0, r4
 8001392:	4631      	mov	r1, r6
 8001394:	f004 fb9e 	bl	8005ad4 <HAL_DMA2D_ConfigLayer>
 8001398:	4604      	mov	r4, r0
 800139a:	b100      	cbz	r0, 800139e <main+0x466>
 800139c:	e7fe      	b.n	800139c <main+0x464>
  MX_TouchGFX_Init();
 800139e:	f000 fd02 	bl	8001da6 <MX_TouchGFX_Init>
	  huart4.Instance = UART4;
 80013a2:	482d      	ldr	r0, [pc, #180]	@ (8001458 <main+0x520>)
	  huart4.Init.BaudRate = 9600;
 80013a4:	4a2d      	ldr	r2, [pc, #180]	@ (800145c <main+0x524>)
	  huart4.Init.Parity = UART_PARITY_NONE;
 80013a6:	6104      	str	r4, [r0, #16]
	  huart4.Init.BaudRate = 9600;
 80013a8:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 80013ac:	e9c0 2300 	strd	r2, r3, [r0]
	  huart4.Init.Mode = UART_MODE_TX_RX;
 80013b0:	230c      	movs	r3, #12
	  huart4.Init.StopBits = UART_STOPBITS_1;
 80013b2:	e9c0 4402 	strd	r4, r4, [r0, #8]
	  huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80013b6:	e9c0 3405 	strd	r3, r4, [r0, #20]
	  huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 80013ba:	61c4      	str	r4, [r0, #28]
	  if (HAL_UART_Init(&huart4) != HAL_OK)
 80013bc:	f006 feb2 	bl	8008124 <HAL_UART_Init>
 80013c0:	4604      	mov	r4, r0
 80013c2:	b100      	cbz	r0, 80013c6 <main+0x48e>
 80013c4:	e7fe      	b.n	80013c4 <main+0x48c>
  MX_TouchGFX_PreOSInit();
 80013c6:	f000 fced 	bl	8001da4 <MX_TouchGFX_PreOSInit>
  HAL_Delay(1000);
 80013ca:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80013ce:	f004 fa55 	bl	800587c <HAL_Delay>
  DF_SendCommand(0x3F, 0, 0);
 80013d2:	4622      	mov	r2, r4
 80013d4:	4621      	mov	r1, r4
 80013d6:	203f      	movs	r0, #63	@ 0x3f
 80013d8:	f7ff fd66 	bl	8000ea8 <DF_SendCommand>
  HAL_Delay(200);
 80013dc:	20c8      	movs	r0, #200	@ 0xc8
 80013de:	f004 fa4d 	bl	800587c <HAL_Delay>
  DF_SendCommand(0x06, 0x00, 15);
 80013e2:	220f      	movs	r2, #15
 80013e4:	4621      	mov	r1, r4
 80013e6:	2006      	movs	r0, #6
 80013e8:	f7ff fd5e 	bl	8000ea8 <DF_SendCommand>
  HAL_Delay(200);
 80013ec:	20c8      	movs	r0, #200	@ 0xc8
 80013ee:	f004 fa45 	bl	800587c <HAL_Delay>
  DF_SendCommand(0x0F, 0x02, 0x02);
 80013f2:	463a      	mov	r2, r7
 80013f4:	4639      	mov	r1, r7
 80013f6:	200f      	movs	r0, #15
 80013f8:	f7ff fd56 	bl	8000ea8 <DF_SendCommand>
  osKernelInitialize();
 80013fc:	f006 ffb4 	bl	8008368 <osKernelInitialize>
  movingQueueHandle = osMessageQueueNew(4, sizeof(char), &movingQueue_attributes);
 8001400:	4a17      	ldr	r2, [pc, #92]	@ (8001460 <main+0x528>)
 8001402:	4631      	mov	r1, r6
 8001404:	4640      	mov	r0, r8
 8001406:	f007 f967 	bl	80086d8 <osMessageQueueNew>
 800140a:	4b16      	ldr	r3, [pc, #88]	@ (8001464 <main+0x52c>)
  levelQueueHandle = osMessageQueueNew(4, sizeof(char), &levelQueue_attributes);
 800140c:	4a16      	ldr	r2, [pc, #88]	@ (8001468 <main+0x530>)
  movingQueueHandle = osMessageQueueNew(4, sizeof(char), &movingQueue_attributes);
 800140e:	6018      	str	r0, [r3, #0]
  levelQueueHandle = osMessageQueueNew(4, sizeof(char), &levelQueue_attributes);
 8001410:	4631      	mov	r1, r6
 8001412:	4640      	mov	r0, r8
 8001414:	f007 f960 	bl	80086d8 <osMessageQueueNew>
 8001418:	4b14      	ldr	r3, [pc, #80]	@ (800146c <main+0x534>)
  movingTaskHandle = osThreadNew(MovingTask, NULL, &movingTask_attributes);
 800141a:	4a15      	ldr	r2, [pc, #84]	@ (8001470 <main+0x538>)
  levelQueueHandle = osMessageQueueNew(4, sizeof(char), &levelQueue_attributes);
 800141c:	6018      	str	r0, [r3, #0]
  movingTaskHandle = osThreadNew(MovingTask, NULL, &movingTask_attributes);
 800141e:	4621      	mov	r1, r4
 8001420:	4814      	ldr	r0, [pc, #80]	@ (8001474 <main+0x53c>)
 8001422:	f006 ffd4 	bl	80083ce <osThreadNew>
 8001426:	4b14      	ldr	r3, [pc, #80]	@ (8001478 <main+0x540>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001428:	4a14      	ldr	r2, [pc, #80]	@ (800147c <main+0x544>)
  movingTaskHandle = osThreadNew(MovingTask, NULL, &movingTask_attributes);
 800142a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800142c:	4621      	mov	r1, r4
 800142e:	4814      	ldr	r0, [pc, #80]	@ (8001480 <main+0x548>)
 8001430:	f006 ffcd 	bl	80083ce <osThreadNew>
 8001434:	4b13      	ldr	r3, [pc, #76]	@ (8001484 <main+0x54c>)
 8001436:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001438:	f006 ffa8 	bl	800838c <osKernelStart>
  while (1)
 800143c:	e7fe      	b.n	800143c <main+0x504>
 800143e:	bf00      	nop
 8001440:	200004a4 	.word	0x200004a4
 8001444:	40016800 	.word	0x40016800
 8001448:	200003b4 	.word	0x200003b4
 800144c:	2000001c 	.word	0x2000001c
 8001450:	200005a0 	.word	0x200005a0
 8001454:	4002b000 	.word	0x4002b000
 8001458:	200003d0 	.word	0x200003d0
 800145c:	40004c00 	.word	0x40004c00
 8001460:	080267b0 	.word	0x080267b0
 8001464:	200003c0 	.word	0x200003c0
 8001468:	08026798 	.word	0x08026798
 800146c:	200003bc 	.word	0x200003bc
 8001470:	080267ec 	.word	0x080267ec
 8001474:	08000bb5 	.word	0x08000bb5
 8001478:	200003c8 	.word	0x200003c8
 800147c:	080267c8 	.word	0x080267c8
 8001480:	08001db5 	.word	0x08001db5
 8001484:	200003c4 	.word	0x200003c4

08001488 <GetSector>:

uint32_t GetSector(uint32_t Address)
{
    if (Address < 0x08004000) return FLASH_SECTOR_0;
 8001488:	4b45      	ldr	r3, [pc, #276]	@ (80015a0 <GetSector+0x118>)
 800148a:	4298      	cmp	r0, r3
 800148c:	d35a      	bcc.n	8001544 <GetSector+0xbc>
    else if (Address < 0x08008000) return FLASH_SECTOR_1;
 800148e:	f503 4380 	add.w	r3, r3, #16384	@ 0x4000
 8001492:	4298      	cmp	r0, r3
 8001494:	d358      	bcc.n	8001548 <GetSector+0xc0>
    else if (Address < 0x0800C000) return FLASH_SECTOR_2;
 8001496:	f503 4380 	add.w	r3, r3, #16384	@ 0x4000
 800149a:	4298      	cmp	r0, r3
 800149c:	d356      	bcc.n	800154c <GetSector+0xc4>
    else if (Address < 0x08010000) return FLASH_SECTOR_3;
 800149e:	4b41      	ldr	r3, [pc, #260]	@ (80015a4 <GetSector+0x11c>)
 80014a0:	4298      	cmp	r0, r3
 80014a2:	d955      	bls.n	8001550 <GetSector+0xc8>
    else if (Address < 0x08020000) return FLASH_SECTOR_4;
 80014a4:	f503 3380 	add.w	r3, r3, #65536	@ 0x10000
 80014a8:	4298      	cmp	r0, r3
 80014aa:	d953      	bls.n	8001554 <GetSector+0xcc>
    else if (Address < 0x08040000) return FLASH_SECTOR_5;
 80014ac:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 80014b0:	4298      	cmp	r0, r3
 80014b2:	d951      	bls.n	8001558 <GetSector+0xd0>
    else if (Address < 0x08060000) return FLASH_SECTOR_6;
 80014b4:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 80014b8:	4298      	cmp	r0, r3
 80014ba:	d94f      	bls.n	800155c <GetSector+0xd4>
    else if (Address < 0x08080000) return FLASH_SECTOR_7;
 80014bc:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 80014c0:	4298      	cmp	r0, r3
 80014c2:	d94d      	bls.n	8001560 <GetSector+0xd8>
    else if (Address < 0x080A0000) return FLASH_SECTOR_8;
 80014c4:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 80014c8:	4298      	cmp	r0, r3
 80014ca:	d94b      	bls.n	8001564 <GetSector+0xdc>
    else if (Address < 0x080C0000) return FLASH_SECTOR_9;
 80014cc:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 80014d0:	4298      	cmp	r0, r3
 80014d2:	d949      	bls.n	8001568 <GetSector+0xe0>
    else if (Address < 0x080E0000) return FLASH_SECTOR_10;
 80014d4:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 80014d8:	4298      	cmp	r0, r3
 80014da:	d947      	bls.n	800156c <GetSector+0xe4>
    else if (Address < 0x08100000) return FLASH_SECTOR_11;
 80014dc:	f1b0 6f01 	cmp.w	r0, #135266304	@ 0x8100000
 80014e0:	d346      	bcc.n	8001570 <GetSector+0xe8>
    else if (Address < 0x08104000) return FLASH_SECTOR_12;
 80014e2:	4b31      	ldr	r3, [pc, #196]	@ (80015a8 <GetSector+0x120>)
 80014e4:	4298      	cmp	r0, r3
 80014e6:	d345      	bcc.n	8001574 <GetSector+0xec>
    else if (Address < 0x08108000) return FLASH_SECTOR_13;
 80014e8:	f503 4380 	add.w	r3, r3, #16384	@ 0x4000
 80014ec:	4298      	cmp	r0, r3
 80014ee:	d343      	bcc.n	8001578 <GetSector+0xf0>
    else if (Address < 0x0810C000) return FLASH_SECTOR_14;
 80014f0:	f503 4380 	add.w	r3, r3, #16384	@ 0x4000
 80014f4:	4298      	cmp	r0, r3
 80014f6:	d341      	bcc.n	800157c <GetSector+0xf4>
    else if (Address < 0x08110000) return FLASH_SECTOR_15;
 80014f8:	4b2c      	ldr	r3, [pc, #176]	@ (80015ac <GetSector+0x124>)
 80014fa:	4298      	cmp	r0, r3
 80014fc:	d940      	bls.n	8001580 <GetSector+0xf8>
    else if (Address < 0x08120000) return FLASH_SECTOR_16;
 80014fe:	f503 3380 	add.w	r3, r3, #65536	@ 0x10000
 8001502:	4298      	cmp	r0, r3
 8001504:	d93e      	bls.n	8001584 <GetSector+0xfc>
    else if (Address < 0x08140000) return FLASH_SECTOR_17;
 8001506:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 800150a:	4298      	cmp	r0, r3
 800150c:	d93c      	bls.n	8001588 <GetSector+0x100>
    else if (Address < 0x08160000) return FLASH_SECTOR_18;
 800150e:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 8001512:	4298      	cmp	r0, r3
 8001514:	d93a      	bls.n	800158c <GetSector+0x104>
    else if (Address < 0x08180000) return FLASH_SECTOR_19;
 8001516:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 800151a:	4298      	cmp	r0, r3
 800151c:	d938      	bls.n	8001590 <GetSector+0x108>
    else if (Address < 0x081A0000) return FLASH_SECTOR_20;
 800151e:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 8001522:	4298      	cmp	r0, r3
 8001524:	d936      	bls.n	8001594 <GetSector+0x10c>
    else if (Address < 0x081C0000) return FLASH_SECTOR_21;
 8001526:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 800152a:	4298      	cmp	r0, r3
 800152c:	d934      	bls.n	8001598 <GetSector+0x110>
    else if (Address < 0x081E0000) return FLASH_SECTOR_22;
 800152e:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 8001532:	4298      	cmp	r0, r3
 8001534:	d932      	bls.n	800159c <GetSector+0x114>
    else if (Address < 0x08200000) return FLASH_SECTOR_23;
 8001536:	f1b0 6f02 	cmp.w	r0, #136314880	@ 0x8200000
 800153a:	bf2c      	ite	cs
 800153c:	f04f 30ff 	movcs.w	r0, #4294967295
 8001540:	2017      	movcc	r0, #23
 8001542:	4770      	bx	lr
    if (Address < 0x08004000) return FLASH_SECTOR_0;
 8001544:	2000      	movs	r0, #0
 8001546:	4770      	bx	lr
    else if (Address < 0x08008000) return FLASH_SECTOR_1;
 8001548:	2001      	movs	r0, #1
 800154a:	4770      	bx	lr
    else if (Address < 0x0800C000) return FLASH_SECTOR_2;
 800154c:	2002      	movs	r0, #2
 800154e:	4770      	bx	lr
    else if (Address < 0x08010000) return FLASH_SECTOR_3;
 8001550:	2003      	movs	r0, #3
 8001552:	4770      	bx	lr
    else if (Address < 0x08020000) return FLASH_SECTOR_4;
 8001554:	2004      	movs	r0, #4
 8001556:	4770      	bx	lr
    else if (Address < 0x08040000) return FLASH_SECTOR_5;
 8001558:	2005      	movs	r0, #5
 800155a:	4770      	bx	lr
    else if (Address < 0x08060000) return FLASH_SECTOR_6;
 800155c:	2006      	movs	r0, #6
 800155e:	4770      	bx	lr
    else if (Address < 0x08080000) return FLASH_SECTOR_7;
 8001560:	2007      	movs	r0, #7
 8001562:	4770      	bx	lr
    else if (Address < 0x080A0000) return FLASH_SECTOR_8;
 8001564:	2008      	movs	r0, #8
 8001566:	4770      	bx	lr
    else if (Address < 0x080C0000) return FLASH_SECTOR_9;
 8001568:	2009      	movs	r0, #9
 800156a:	4770      	bx	lr
    else if (Address < 0x080E0000) return FLASH_SECTOR_10;
 800156c:	200a      	movs	r0, #10
 800156e:	4770      	bx	lr
    else if (Address < 0x08100000) return FLASH_SECTOR_11;
 8001570:	200b      	movs	r0, #11
 8001572:	4770      	bx	lr
    else if (Address < 0x08104000) return FLASH_SECTOR_12;
 8001574:	200c      	movs	r0, #12
 8001576:	4770      	bx	lr
    else if (Address < 0x08108000) return FLASH_SECTOR_13;
 8001578:	200d      	movs	r0, #13
 800157a:	4770      	bx	lr
    else if (Address < 0x0810C000) return FLASH_SECTOR_14;
 800157c:	200e      	movs	r0, #14
 800157e:	4770      	bx	lr
    else if (Address < 0x08110000) return FLASH_SECTOR_15;
 8001580:	200f      	movs	r0, #15
 8001582:	4770      	bx	lr
    else if (Address < 0x08120000) return FLASH_SECTOR_16;
 8001584:	2010      	movs	r0, #16
 8001586:	4770      	bx	lr
    else if (Address < 0x08140000) return FLASH_SECTOR_17;
 8001588:	2011      	movs	r0, #17
 800158a:	4770      	bx	lr
    else if (Address < 0x08160000) return FLASH_SECTOR_18;
 800158c:	2012      	movs	r0, #18
 800158e:	4770      	bx	lr
    else if (Address < 0x08180000) return FLASH_SECTOR_19;
 8001590:	2013      	movs	r0, #19
 8001592:	4770      	bx	lr
    else if (Address < 0x081A0000) return FLASH_SECTOR_20;
 8001594:	2014      	movs	r0, #20
 8001596:	4770      	bx	lr
    else if (Address < 0x081C0000) return FLASH_SECTOR_21;
 8001598:	2015      	movs	r0, #21
 800159a:	4770      	bx	lr
    else if (Address < 0x081E0000) return FLASH_SECTOR_22;
 800159c:	2016      	movs	r0, #22
    else return 0xFFFFFFFF; // Địa chỉ không hợp lệ
}
 800159e:	4770      	bx	lr
 80015a0:	08004000 	.word	0x08004000
 80015a4:	0800ffff 	.word	0x0800ffff
 80015a8:	08104000 	.word	0x08104000
 80015ac:	0810ffff 	.word	0x0810ffff

080015b0 <Flash_Write_Data>:

uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 80015b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80015b2:	4605      	mov	r5, r0
 80015b4:	4616      	mov	r6, r2
 80015b6:	460f      	mov	r7, r1
	static FLASH_EraseInitTypeDef EraseInitStruct;
	uint32_t SECTORError;
	int sofar=0;
	/* Unlock the Flash to enable the flash control register access *************/
	HAL_FLASH_Unlock();
 80015b8:	f004 fb50 	bl	8005c5c <HAL_FLASH_Unlock>
	/* Erase the user Flash area */
	/* Get the number of sector to erase from 1st sector */
	uint32_t StartSector = GetSector(StartSectorAddress);
 80015bc:	4628      	mov	r0, r5
 80015be:	f7ff ff63 	bl	8001488 <GetSector>
 80015c2:	4601      	mov	r1, r0
	uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	uint32_t EndSector = GetSector(EndSectorAddress);
 80015c4:	eb05 0086 	add.w	r0, r5, r6, lsl #2
 80015c8:	f7ff ff5e 	bl	8001488 <GetSector>
	/* Fill EraseInit structure*/
	EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 80015cc:	4b22      	ldr	r3, [pc, #136]	@ (8001658 <Flash_Write_Data+0xa8>)
 80015ce:	2200      	movs	r2, #0
 80015d0:	601a      	str	r2, [r3, #0]
	EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 80015d2:	2202      	movs	r2, #2
 80015d4:	611a      	str	r2, [r3, #16]
	EraseInitStruct.Sector        = StartSector;
	EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80015d6:	1c42      	adds	r2, r0, #1
 80015d8:	1a52      	subs	r2, r2, r1
	EraseInitStruct.Sector        = StartSector;
 80015da:	6099      	str	r1, [r3, #8]

	if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 80015dc:	4618      	mov	r0, r3
 80015de:	a901      	add	r1, sp, #4
	EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80015e0:	60da      	str	r2, [r3, #12]
	if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 80015e2:	f004 fc35 	bl	8005e50 <HAL_FLASHEx_Erase>
 80015e6:	4604      	mov	r4, r0
 80015e8:	b118      	cbz	r0, 80015f2 <Flash_Write_Data+0x42>
			sofar++;
		}
		else
		{
			/* Error occurred while writing data in Flash memory*/
			return HAL_FLASH_GetError ();
 80015ea:	f004 fb53 	bl	8005c94 <HAL_FLASH_GetError>
	}
	/* Lock the Flash to disable the flash control register access (recommended
	to protect the FLASH memory against possible unwanted operation) *********/
	HAL_FLASH_Lock();
	return 0;
}
 80015ee:	b003      	add	sp, #12
 80015f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_FLASH_DATA_CACHE_DISABLE();
 80015f2:	4b1a      	ldr	r3, [pc, #104]	@ (800165c <Flash_Write_Data+0xac>)
 80015f4:	681a      	ldr	r2, [r3, #0]
 80015f6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80015fa:	601a      	str	r2, [r3, #0]
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 80015fc:	681a      	ldr	r2, [r3, #0]
 80015fe:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8001602:	601a      	str	r2, [r3, #0]
    __HAL_FLASH_DATA_CACHE_RESET();
 8001604:	681a      	ldr	r2, [r3, #0]
 8001606:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800160a:	601a      	str	r2, [r3, #0]
 800160c:	681a      	ldr	r2, [r3, #0]
 800160e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8001612:	601a      	str	r2, [r3, #0]
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 8001614:	681a      	ldr	r2, [r3, #0]
 8001616:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800161a:	601a      	str	r2, [r3, #0]
 800161c:	681a      	ldr	r2, [r3, #0]
 800161e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001622:	601a      	str	r2, [r3, #0]
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8001624:	681a      	ldr	r2, [r3, #0]
 8001626:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800162a:	601a      	str	r2, [r3, #0]
    __HAL_FLASH_DATA_CACHE_ENABLE();
 800162c:	681a      	ldr	r2, [r3, #0]
 800162e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8001632:	601a      	str	r2, [r3, #0]
	while (sofar < numberofwords)
 8001634:	42a6      	cmp	r6, r4
 8001636:	eb05 0184 	add.w	r1, r5, r4, lsl #2
 800163a:	dc03      	bgt.n	8001644 <Flash_Write_Data+0x94>
	HAL_FLASH_Lock();
 800163c:	f004 fb20 	bl	8005c80 <HAL_FLASH_Lock>
	return 0;
 8001640:	2000      	movs	r0, #0
 8001642:	e7d4      	b.n	80015ee <Flash_Write_Data+0x3e>
		if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8001644:	f857 2024 	ldr.w	r2, [r7, r4, lsl #2]
 8001648:	2300      	movs	r3, #0
 800164a:	2002      	movs	r0, #2
 800164c:	f004 fb50 	bl	8005cf0 <HAL_FLASH_Program>
 8001650:	2800      	cmp	r0, #0
 8001652:	d1ca      	bne.n	80015ea <Flash_Write_Data+0x3a>
			sofar++;
 8001654:	3401      	adds	r4, #1
 8001656:	e7ed      	b.n	8001634 <Flash_Write_Data+0x84>
 8001658:	200003a0 	.word	0x200003a0
 800165c:	40023c00 	.word	0x40023c00

08001660 <Flash_Read_Data>:

void Flash_Read_Data(uint32_t StartAddress, uint32_t *RxBuf, uint16_t NumberOfWords)
{
    for (uint16_t i = 0; i < NumberOfWords; i++)
 8001660:	eb01 0282 	add.w	r2, r1, r2, lsl #2
    {
        RxBuf[i] = *(__IO uint32_t *)StartAddress;
 8001664:	1a40      	subs	r0, r0, r1
    for (uint16_t i = 0; i < NumberOfWords; i++)
 8001666:	4291      	cmp	r1, r2
 8001668:	d100      	bne.n	800166c <Flash_Read_Data+0xc>
        StartAddress += 4;
    }
}
 800166a:	4770      	bx	lr
        RxBuf[i] = *(__IO uint32_t *)StartAddress;
 800166c:	5843      	ldr	r3, [r0, r1]
 800166e:	f841 3b04 	str.w	r3, [r1], #4
    for (uint16_t i = 0; i < NumberOfWords; i++)
 8001672:	e7f8      	b.n	8001666 <Flash_Read_Data+0x6>

08001674 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
	static uint32_t last_time = 0;
	if(GPIO_Pin == GPIO_PIN_0){
 8001674:	2801      	cmp	r0, #1
{
 8001676:	b538      	push	{r3, r4, r5, lr}
 8001678:	4604      	mov	r4, r0
	if(GPIO_Pin == GPIO_PIN_0){
 800167a:	d10b      	bne.n	8001694 <HAL_GPIO_EXTI_Callback+0x20>
		DF_SendCommand(0x19, 0x00, 0x00);
 800167c:	2200      	movs	r2, #0
 800167e:	4611      	mov	r1, r2
 8001680:	2019      	movs	r0, #25
 8001682:	f7ff fc11 	bl	8000ea8 <DF_SendCommand>
	    }
	    last_button = res;
	    //set cờ 0x01 -> thông báo movingTask (trigger)
	    osThreadFlagsSet(movingTaskHandle, 0x01);
	}
}
 8001686:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800168a:	4815      	ldr	r0, [pc, #84]	@ (80016e0 <HAL_GPIO_EXTI_Callback+0x6c>)
 800168c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001690:	f004 bd21 	b.w	80060d6 <HAL_GPIO_TogglePin>
		if(HAL_GetTick() - last_time < 200) return;
 8001694:	4d13      	ldr	r5, [pc, #76]	@ (80016e4 <HAL_GPIO_EXTI_Callback+0x70>)
 8001696:	f004 f8eb 	bl	8005870 <HAL_GetTick>
 800169a:	682b      	ldr	r3, [r5, #0]
 800169c:	1ac0      	subs	r0, r0, r3
 800169e:	28c7      	cmp	r0, #199	@ 0xc7
 80016a0:	d90a      	bls.n	80016b8 <HAL_GPIO_EXTI_Callback+0x44>
		last_time = HAL_GetTick();
 80016a2:	f004 f8e5 	bl	8005870 <HAL_GetTick>
	    switch (GPIO_Pin)
 80016a6:	f5b4 5f80 	cmp.w	r4, #4096	@ 0x1000
		last_time = HAL_GetTick();
 80016aa:	6028      	str	r0, [r5, #0]
	    switch (GPIO_Pin)
 80016ac:	d012      	beq.n	80016d4 <HAL_GPIO_EXTI_Callback+0x60>
 80016ae:	d804      	bhi.n	80016ba <HAL_GPIO_EXTI_Callback+0x46>
 80016b0:	2c04      	cmp	r4, #4
 80016b2:	d011      	beq.n	80016d8 <HAL_GPIO_EXTI_Callback+0x64>
 80016b4:	2c08      	cmp	r4, #8
 80016b6:	d011      	beq.n	80016dc <HAL_GPIO_EXTI_Callback+0x68>
}
 80016b8:	bd38      	pop	{r3, r4, r5, pc}
	    switch (GPIO_Pin)
 80016ba:	f5b4 5f00 	cmp.w	r4, #8192	@ 0x2000
 80016be:	d1fb      	bne.n	80016b8 <HAL_GPIO_EXTI_Callback+0x44>
 80016c0:	2352      	movs	r3, #82	@ 0x52
	    last_button = res;
 80016c2:	4a09      	ldr	r2, [pc, #36]	@ (80016e8 <HAL_GPIO_EXTI_Callback+0x74>)
 80016c4:	7013      	strb	r3, [r2, #0]
	    osThreadFlagsSet(movingTaskHandle, 0x01);
 80016c6:	4b09      	ldr	r3, [pc, #36]	@ (80016ec <HAL_GPIO_EXTI_Callback+0x78>)
 80016c8:	2101      	movs	r1, #1
 80016ca:	6818      	ldr	r0, [r3, #0]
}
 80016cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	    osThreadFlagsSet(movingTaskHandle, 0x01);
 80016d0:	f006 bec6 	b.w	8008460 <osThreadFlagsSet>
	            res = 'L';	//left
 80016d4:	234c      	movs	r3, #76	@ 0x4c
 80016d6:	e7f4      	b.n	80016c2 <HAL_GPIO_EXTI_Callback+0x4e>
	            res = 'T';	//rotate
 80016d8:	2354      	movs	r3, #84	@ 0x54
 80016da:	e7f2      	b.n	80016c2 <HAL_GPIO_EXTI_Callback+0x4e>
	            res = 'D';	//down
 80016dc:	2344      	movs	r3, #68	@ 0x44
 80016de:	e7f0      	b.n	80016c2 <HAL_GPIO_EXTI_Callback+0x4e>
 80016e0:	40021800 	.word	0x40021800
 80016e4:	2000039c 	.word	0x2000039c
 80016e8:	200003cc 	.word	0x200003cc
 80016ec:	200003c8 	.word	0x200003c8

080016f0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 80016f0:	6802      	ldr	r2, [r0, #0]
 80016f2:	4b03      	ldr	r3, [pc, #12]	@ (8001700 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80016f4:	429a      	cmp	r2, r3
 80016f6:	d101      	bne.n	80016fc <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 80016f8:	f004 b8ae 	b.w	8005858 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80016fc:	4770      	bx	lr
 80016fe:	bf00      	nop
 8001700:	40001000 	.word	0x40001000

08001704 <Error_Handler>:
  */
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
	while(1);
 8001704:	e7fe      	b.n	8001704 <Error_Handler>
	...

08001708 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001708:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800170a:	4b0e      	ldr	r3, [pc, #56]	@ (8001744 <HAL_MspInit+0x3c>)
 800170c:	2200      	movs	r2, #0
 800170e:	9200      	str	r2, [sp, #0]
 8001710:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8001712:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8001716:	6459      	str	r1, [r3, #68]	@ 0x44
 8001718:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800171a:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 800171e:	9100      	str	r1, [sp, #0]
 8001720:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001722:	9201      	str	r2, [sp, #4]
 8001724:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8001726:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 800172a:	6419      	str	r1, [r3, #64]	@ 0x40
 800172c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800172e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001732:	9301      	str	r3, [sp, #4]
 8001734:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001736:	210f      	movs	r1, #15
 8001738:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800173c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800173e:	f004 b8c3 	b.w	80058c8 <HAL_NVIC_SetPriority>
 8001742:	bf00      	nop
 8001744:	40023800 	.word	0x40023800

08001748 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001748:	6802      	ldr	r2, [r0, #0]
 800174a:	4b09      	ldr	r3, [pc, #36]	@ (8001770 <HAL_CRC_MspInit+0x28>)
 800174c:	429a      	cmp	r2, r3
{
 800174e:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001750:	d10b      	bne.n	800176a <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001752:	2300      	movs	r3, #0
 8001754:	9301      	str	r3, [sp, #4]
 8001756:	4b07      	ldr	r3, [pc, #28]	@ (8001774 <HAL_CRC_MspInit+0x2c>)
 8001758:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800175a:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800175e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001760:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001762:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001766:	9301      	str	r3, [sp, #4]
 8001768:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 800176a:	b002      	add	sp, #8
 800176c:	4770      	bx	lr
 800176e:	bf00      	nop
 8001770:	40023000 	.word	0x40023000
 8001774:	40023800 	.word	0x40023800

08001778 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001778:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 800177a:	4b0f      	ldr	r3, [pc, #60]	@ (80017b8 <HAL_DMA2D_MspInit+0x40>)
 800177c:	6802      	ldr	r2, [r0, #0]
 800177e:	429a      	cmp	r2, r3
 8001780:	d116      	bne.n	80017b0 <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001782:	2200      	movs	r2, #0
 8001784:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8001788:	9201      	str	r2, [sp, #4]
 800178a:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800178c:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8001790:	6319      	str	r1, [r3, #48]	@ 0x30
 8001792:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001794:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001798:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800179a:	2105      	movs	r1, #5
 800179c:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800179e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80017a0:	f004 f892 	bl	80058c8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80017a4:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 80017a6:	b003      	add	sp, #12
 80017a8:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80017ac:	f004 b8be 	b.w	800592c <HAL_NVIC_EnableIRQ>
}
 80017b0:	b003      	add	sp, #12
 80017b2:	f85d fb04 	ldr.w	pc, [sp], #4
 80017b6:	bf00      	nop
 80017b8:	4002b000 	.word	0x4002b000

080017bc <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80017bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80017c0:	4604      	mov	r4, r0
 80017c2:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017c4:	2214      	movs	r2, #20
 80017c6:	2100      	movs	r1, #0
 80017c8:	a803      	add	r0, sp, #12
 80017ca:	f023 f90a 	bl	80249e2 <memset>
  if(hi2c->Instance==I2C3)
 80017ce:	6822      	ldr	r2, [r4, #0]
 80017d0:	4b24      	ldr	r3, [pc, #144]	@ (8001864 <HAL_I2C_MspInit+0xa8>)
 80017d2:	429a      	cmp	r2, r3
 80017d4:	d143      	bne.n	800185e <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80017d6:	4c24      	ldr	r4, [pc, #144]	@ (8001868 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017d8:	4824      	ldr	r0, [pc, #144]	@ (800186c <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80017da:	2500      	movs	r5, #0
 80017dc:	9500      	str	r5, [sp, #0]
 80017de:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017e0:	f043 0304 	orr.w	r3, r3, #4
 80017e4:	6323      	str	r3, [r4, #48]	@ 0x30
 80017e6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017e8:	f003 0304 	and.w	r3, r3, #4
 80017ec:	9300      	str	r3, [sp, #0]
 80017ee:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80017f0:	9501      	str	r5, [sp, #4]
 80017f2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017f4:	f043 0301 	orr.w	r3, r3, #1
 80017f8:	6323      	str	r3, [r4, #48]	@ 0x30
 80017fa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017fc:	f003 0301 	and.w	r3, r3, #1
 8001800:	9301      	str	r3, [sp, #4]
 8001802:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001804:	f04f 0912 	mov.w	r9, #18
 8001808:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800180c:	f04f 0801 	mov.w	r8, #1
 8001810:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001812:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001814:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001816:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800181a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800181e:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001820:	f004 fb6a 	bl	8005ef8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001824:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001828:	4811      	ldr	r0, [pc, #68]	@ (8001870 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800182a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800182c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800182e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001832:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001836:	f004 fb5f 	bl	8005ef8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 800183a:	9502      	str	r5, [sp, #8]
 800183c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800183e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001842:	6423      	str	r3, [r4, #64]	@ 0x40
 8001844:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001846:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800184a:	9302      	str	r3, [sp, #8]
 800184c:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 800184e:	6a23      	ldr	r3, [r4, #32]
 8001850:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001854:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001856:	6a23      	ldr	r3, [r4, #32]
 8001858:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 800185c:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 800185e:	b009      	add	sp, #36	@ 0x24
 8001860:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001864:	40005c00 	.word	0x40005c00
 8001868:	40023800 	.word	0x40023800
 800186c:	40020800 	.word	0x40020800
 8001870:	40020000 	.word	0x40020000

08001874 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001874:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001876:	b099      	sub	sp, #100	@ 0x64
 8001878:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800187a:	2214      	movs	r2, #20
 800187c:	2100      	movs	r1, #0
 800187e:	a807      	add	r0, sp, #28
 8001880:	f023 f8af 	bl	80249e2 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001884:	2230      	movs	r2, #48	@ 0x30
 8001886:	eb0d 0002 	add.w	r0, sp, r2
 800188a:	2100      	movs	r1, #0
 800188c:	f023 f8a9 	bl	80249e2 <memset>
  if(hltdc->Instance==LTDC)
 8001890:	6822      	ldr	r2, [r4, #0]
 8001892:	4b5e      	ldr	r3, [pc, #376]	@ (8001a0c <HAL_LTDC_MspInit+0x198>)
 8001894:	429a      	cmp	r2, r3
 8001896:	f040 80b7 	bne.w	8001a08 <HAL_LTDC_MspInit+0x194>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800189a:	2308      	movs	r3, #8
 800189c:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800189e:	23c0      	movs	r3, #192	@ 0xc0
 80018a0:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80018a2:	2304      	movs	r3, #4
 80018a4:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80018a6:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80018a8:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80018ac:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80018ae:	f005 fd2d 	bl	800730c <HAL_RCCEx_PeriphCLKConfig>
 80018b2:	b108      	cbz	r0, 80018b8 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 80018b4:	f7ff ff26 	bl	8001704 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80018b8:	4b55      	ldr	r3, [pc, #340]	@ (8001a10 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018ba:	4856      	ldr	r0, [pc, #344]	@ (8001a14 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80018bc:	2400      	movs	r4, #0
 80018be:	9400      	str	r4, [sp, #0]
 80018c0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80018c2:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 80018c6:	645a      	str	r2, [r3, #68]	@ 0x44
 80018c8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80018ca:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 80018ce:	9200      	str	r2, [sp, #0]
 80018d0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018d2:	9401      	str	r4, [sp, #4]
 80018d4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80018d6:	f042 0220 	orr.w	r2, r2, #32
 80018da:	631a      	str	r2, [r3, #48]	@ 0x30
 80018dc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80018de:	f002 0220 	and.w	r2, r2, #32
 80018e2:	9201      	str	r2, [sp, #4]
 80018e4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80018e6:	9402      	str	r4, [sp, #8]
 80018e8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80018ea:	f042 0201 	orr.w	r2, r2, #1
 80018ee:	631a      	str	r2, [r3, #48]	@ 0x30
 80018f0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80018f2:	f002 0201 	and.w	r2, r2, #1
 80018f6:	9202      	str	r2, [sp, #8]
 80018f8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80018fa:	9403      	str	r4, [sp, #12]
 80018fc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80018fe:	f042 0202 	orr.w	r2, r2, #2
 8001902:	631a      	str	r2, [r3, #48]	@ 0x30
 8001904:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001906:	f002 0202 	and.w	r2, r2, #2
 800190a:	9203      	str	r2, [sp, #12]
 800190c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800190e:	9404      	str	r4, [sp, #16]
 8001910:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001912:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001916:	631a      	str	r2, [r3, #48]	@ 0x30
 8001918:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800191a:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 800191e:	9204      	str	r2, [sp, #16]
 8001920:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001922:	9405      	str	r4, [sp, #20]
 8001924:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001926:	f042 0204 	orr.w	r2, r2, #4
 800192a:	631a      	str	r2, [r3, #48]	@ 0x30
 800192c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800192e:	f002 0204 	and.w	r2, r2, #4
 8001932:	9205      	str	r2, [sp, #20]
 8001934:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001936:	9406      	str	r4, [sp, #24]
 8001938:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800193a:	f042 0208 	orr.w	r2, r2, #8
 800193e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001940:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001942:	f003 0308 	and.w	r3, r3, #8
 8001946:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001948:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800194a:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800194c:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800194e:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001950:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001954:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001956:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800195a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800195e:	f004 facb 	bl	8005ef8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001962:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001966:	482c      	ldr	r0, [pc, #176]	@ (8001a18 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001968:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800196a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800196c:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001970:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001972:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001976:	f004 fabf 	bl	8005ef8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800197a:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800197c:	4827      	ldr	r0, [pc, #156]	@ (8001a1c <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800197e:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001980:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001982:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001986:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800198a:	f004 fab5 	bl	8005ef8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800198e:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001992:	4822      	ldr	r0, [pc, #136]	@ (8001a1c <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001994:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001996:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001998:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800199c:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019a0:	f004 faaa 	bl	8005ef8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80019a4:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019a8:	481d      	ldr	r0, [pc, #116]	@ (8001a20 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80019aa:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019ac:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019ae:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80019b2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019b6:	f004 fa9f 	bl	8005ef8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80019ba:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019bc:	4819      	ldr	r0, [pc, #100]	@ (8001a24 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80019be:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019c0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019c2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80019c6:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019ca:	f004 fa95 	bl	8005ef8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80019ce:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019d0:	4815      	ldr	r0, [pc, #84]	@ (8001a28 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80019d2:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019d4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019d6:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80019da:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019de:	f004 fa8b 	bl	8005ef8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80019e2:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019e6:	480e      	ldr	r0, [pc, #56]	@ (8001a20 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80019e8:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019ea:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019ec:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80019f0:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019f4:	f004 fa80 	bl	8005ef8 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80019f8:	2058      	movs	r0, #88	@ 0x58
 80019fa:	4622      	mov	r2, r4
 80019fc:	2105      	movs	r1, #5
 80019fe:	f003 ff63 	bl	80058c8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001a02:	2058      	movs	r0, #88	@ 0x58
 8001a04:	f003 ff92 	bl	800592c <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 8001a08:	b019      	add	sp, #100	@ 0x64
 8001a0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a0c:	40016800 	.word	0x40016800
 8001a10:	40023800 	.word	0x40023800
 8001a14:	40021400 	.word	0x40021400
 8001a18:	40020000 	.word	0x40020000
 8001a1c:	40020400 	.word	0x40020400
 8001a20:	40021800 	.word	0x40021800
 8001a24:	40020800 	.word	0x40020800
 8001a28:	40020c00 	.word	0x40020c00

08001a2c <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001a2c:	b510      	push	{r4, lr}
 8001a2e:	4604      	mov	r4, r0
 8001a30:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a32:	2214      	movs	r2, #20
 8001a34:	2100      	movs	r1, #0
 8001a36:	a803      	add	r0, sp, #12
 8001a38:	f022 ffd3 	bl	80249e2 <memset>
  if(hspi->Instance==SPI5)
 8001a3c:	6822      	ldr	r2, [r4, #0]
 8001a3e:	4b14      	ldr	r3, [pc, #80]	@ (8001a90 <HAL_SPI_MspInit+0x64>)
 8001a40:	429a      	cmp	r2, r3
 8001a42:	d123      	bne.n	8001a8c <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001a44:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8001a48:	2100      	movs	r1, #0
 8001a4a:	9101      	str	r1, [sp, #4]
 8001a4c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a4e:	4811      	ldr	r0, [pc, #68]	@ (8001a94 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001a50:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8001a54:	645a      	str	r2, [r3, #68]	@ 0x44
 8001a56:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001a58:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8001a5c:	9201      	str	r2, [sp, #4]
 8001a5e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001a60:	9102      	str	r1, [sp, #8]
 8001a62:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001a64:	f042 0220 	orr.w	r2, r2, #32
 8001a68:	631a      	str	r2, [r3, #48]	@ 0x30
 8001a6a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a6c:	f003 0320 	and.w	r3, r3, #32
 8001a70:	9302      	str	r3, [sp, #8]
 8001a72:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a74:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8001a78:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001a7a:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a7c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001a80:	2305      	movs	r3, #5
 8001a82:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a86:	a903      	add	r1, sp, #12
 8001a88:	f004 fa36 	bl	8005ef8 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 8001a8c:	b008      	add	sp, #32
 8001a8e:	bd10      	pop	{r4, pc}
 8001a90:	40015000 	.word	0x40015000
 8001a94:	40021400 	.word	0x40021400

08001a98 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001a98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001a9c:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001a9e:	2300      	movs	r3, #0
 8001aa0:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001aa2:	4b2b      	ldr	r3, [pc, #172]	@ (8001b50 <HAL_SDRAM_MspInit+0xb8>)
 8001aa4:	681c      	ldr	r4, [r3, #0]
 8001aa6:	2c00      	cmp	r4, #0
 8001aa8:	d14f      	bne.n	8001b4a <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001aaa:	f04f 0801 	mov.w	r8, #1
 8001aae:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001ab2:	4b28      	ldr	r3, [pc, #160]	@ (8001b54 <HAL_SDRAM_MspInit+0xbc>)
 8001ab4:	9400      	str	r4, [sp, #0]
 8001ab6:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ab8:	4827      	ldr	r0, [pc, #156]	@ (8001b58 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001aba:	ea42 0208 	orr.w	r2, r2, r8
 8001abe:	639a      	str	r2, [r3, #56]	@ 0x38
 8001ac0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001ac2:	ea03 0308 	and.w	r3, r3, r8
 8001ac6:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ac8:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001aca:	2603      	movs	r6, #3
 8001acc:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001ace:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ad0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ad2:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 8001ad6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ada:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ade:	f004 fa0b 	bl	8005ef8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ae2:	481e      	ldr	r0, [pc, #120]	@ (8001b5c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ae4:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ae6:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ae8:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001aec:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001af0:	f004 fa02 	bl	8005ef8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001af4:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001af8:	4819      	ldr	r0, [pc, #100]	@ (8001b60 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001afa:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001afc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001afe:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b02:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b06:	f004 f9f7 	bl	8005ef8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001b0a:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001b0e:	4815      	ldr	r0, [pc, #84]	@ (8001b64 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001b10:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001b12:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b14:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b18:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001b1c:	f004 f9ec 	bl	8005ef8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001b20:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b24:	4810      	ldr	r0, [pc, #64]	@ (8001b68 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001b26:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b28:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b2a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b2e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b32:	f004 f9e1 	bl	8005ef8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001b36:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b38:	480c      	ldr	r0, [pc, #48]	@ (8001b6c <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001b3a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b3c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b3e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b42:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b46:	f004 f9d7 	bl	8005ef8 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001b4a:	b006      	add	sp, #24
 8001b4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001b50:	200005e8 	.word	0x200005e8
 8001b54:	40023800 	.word	0x40023800
 8001b58:	40021400 	.word	0x40021400
 8001b5c:	40020800 	.word	0x40020800
 8001b60:	40021800 	.word	0x40021800
 8001b64:	40021000 	.word	0x40021000
 8001b68:	40020c00 	.word	0x40020c00
 8001b6c:	40020400 	.word	0x40020400

08001b70 <HAL_UART_MspInit>:
  /* USER CODE END SDRAM_MspDeInit 1 */
}

/* USER CODE BEGIN 1 */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001b70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b72:	4604      	mov	r4, r0
 8001b74:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b76:	2214      	movs	r2, #20
 8001b78:	2100      	movs	r1, #0
 8001b7a:	a803      	add	r0, sp, #12
 8001b7c:	f022 ff31 	bl	80249e2 <memset>
  if(huart->Instance==UART4)
 8001b80:	6822      	ldr	r2, [r4, #0]
 8001b82:	4b1e      	ldr	r3, [pc, #120]	@ (8001bfc <HAL_UART_MspInit+0x8c>)
 8001b84:	429a      	cmp	r2, r3
 8001b86:	d136      	bne.n	8001bf6 <HAL_UART_MspInit+0x86>
  {
    /* USER CODE BEGIN UART4_MspInit 0 */

    /* USER CODE END UART4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART4_CLK_ENABLE();
 8001b88:	f503 33f6 	add.w	r3, r3, #125952	@ 0x1ec00
 8001b8c:	2400      	movs	r4, #0
 8001b8e:	9400      	str	r4, [sp, #0]
 8001b90:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
    GPIO_InitStruct.Pin = GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b92:	481b      	ldr	r0, [pc, #108]	@ (8001c00 <HAL_UART_MspInit+0x90>)
    __HAL_RCC_UART4_CLK_ENABLE();
 8001b94:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
 8001b98:	641a      	str	r2, [r3, #64]	@ 0x40
 8001b9a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001b9c:	f402 2200 	and.w	r2, r2, #524288	@ 0x80000
 8001ba0:	9200      	str	r2, [sp, #0]
 8001ba2:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ba4:	9401      	str	r4, [sp, #4]
 8001ba6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001ba8:	f042 0201 	orr.w	r2, r2, #1
 8001bac:	631a      	str	r2, [r3, #48]	@ 0x30
 8001bae:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bb0:	f002 0201 	and.w	r2, r2, #1
 8001bb4:	9201      	str	r2, [sp, #4]
 8001bb6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001bb8:	9402      	str	r4, [sp, #8]
 8001bba:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bbc:	f042 0204 	orr.w	r2, r2, #4
 8001bc0:	631a      	str	r2, [r3, #48]	@ 0x30
 8001bc2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001bc4:	f003 0304 	and.w	r3, r3, #4
 8001bc8:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8001bca:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
 8001bcc:	2703      	movs	r7, #3
 8001bce:	2608      	movs	r6, #8
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bd0:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001bd2:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bd4:	e9cd 5503 	strd	r5, r5, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
 8001bd8:	e9cd 7606 	strd	r7, r6, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bdc:	f004 f98c 	bl	8005ef8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001be0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001be4:	4807      	ldr	r0, [pc, #28]	@ (8001c04 <HAL_UART_MspInit+0x94>)
    GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
 8001be6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001be8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bea:	e9cd 3503 	strd	r3, r5, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bee:	e9cd 4705 	strd	r4, r7, [sp, #20]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bf2:	f004 f981 	bl	8005ef8 <HAL_GPIO_Init>

    /* USER CODE BEGIN UART4_MspInit 1 */

    /* USER CODE END UART4_MspInit 1 */
  }
}
 8001bf6:	b009      	add	sp, #36	@ 0x24
 8001bf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001bfa:	bf00      	nop
 8001bfc:	40004c00 	.word	0x40004c00
 8001c00:	40020000 	.word	0x40020000
 8001c04:	40020800 	.word	0x40020800

08001c08 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001c08:	b570      	push	{r4, r5, r6, lr}
 8001c0a:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001c0c:	2300      	movs	r3, #0
 8001c0e:	9302      	str	r3, [sp, #8]
 8001c10:	4b20      	ldr	r3, [pc, #128]	@ (8001c94 <HAL_InitTick+0x8c>)
 8001c12:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001c14:	f042 0210 	orr.w	r2, r2, #16
 8001c18:	641a      	str	r2, [r3, #64]	@ 0x40
 8001c1a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c1c:	f003 0310 	and.w	r3, r3, #16
 8001c20:	9302      	str	r3, [sp, #8]
{
 8001c22:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001c24:	a901      	add	r1, sp, #4
 8001c26:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001c28:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001c2a:	f005 fb51 	bl	80072d0 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001c2e:	9b06      	ldr	r3, [sp, #24]
 8001c30:	bb4b      	cbnz	r3, 8001c86 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001c32:	f005 fb2d 	bl	8007290 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001c36:	4e18      	ldr	r6, [pc, #96]	@ (8001c98 <HAL_InitTick+0x90>)
 8001c38:	4b18      	ldr	r3, [pc, #96]	@ (8001c9c <HAL_InitTick+0x94>)
 8001c3a:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001c3c:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8001c40:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001c42:	4b17      	ldr	r3, [pc, #92]	@ (8001ca0 <HAL_InitTick+0x98>)
 8001c44:	fbb0 f3f3 	udiv	r3, r0, r3
 8001c48:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001c4a:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001c4c:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8001c4e:	2300      	movs	r3, #0
 8001c50:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c52:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001c54:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8001c56:	f006 f979 	bl	8007f4c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001c5a:	4604      	mov	r4, r0
 8001c5c:	b980      	cbnz	r0, 8001c80 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001c5e:	4630      	mov	r0, r6
 8001c60:	f006 f84a 	bl	8007cf8 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001c64:	4604      	mov	r4, r0
 8001c66:	b958      	cbnz	r0, 8001c80 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001c68:	2036      	movs	r0, #54	@ 0x36
 8001c6a:	f003 fe5f 	bl	800592c <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001c6e:	2d0f      	cmp	r5, #15
 8001c70:	d80d      	bhi.n	8001c8e <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001c72:	4622      	mov	r2, r4
 8001c74:	4629      	mov	r1, r5
 8001c76:	2036      	movs	r0, #54	@ 0x36
 8001c78:	f003 fe26 	bl	80058c8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001c7c:	4b09      	ldr	r3, [pc, #36]	@ (8001ca4 <HAL_InitTick+0x9c>)
 8001c7e:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8001c80:	4620      	mov	r0, r4
 8001c82:	b008      	add	sp, #32
 8001c84:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001c86:	f005 fb03 	bl	8007290 <HAL_RCC_GetPCLK1Freq>
 8001c8a:	0040      	lsls	r0, r0, #1
 8001c8c:	e7d3      	b.n	8001c36 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8001c8e:	2401      	movs	r4, #1
 8001c90:	e7f6      	b.n	8001c80 <HAL_InitTick+0x78>
 8001c92:	bf00      	nop
 8001c94:	40023800 	.word	0x40023800
 8001c98:	200005ec 	.word	0x200005ec
 8001c9c:	40001000 	.word	0x40001000
 8001ca0:	000f4240 	.word	0x000f4240
 8001ca4:	20000084 	.word	0x20000084

08001ca8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001ca8:	4770      	bx	lr

08001caa <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001caa:	e7fe      	b.n	8001caa <HardFault_Handler>

08001cac <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001cac:	e7fe      	b.n	8001cac <MemManage_Handler>

08001cae <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001cae:	e7fe      	b.n	8001cae <BusFault_Handler>

08001cb0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001cb0:	e7fe      	b.n	8001cb0 <UsageFault_Handler>

08001cb2 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8001cb2:	4770      	bx	lr

08001cb4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001cb4:	4801      	ldr	r0, [pc, #4]	@ (8001cbc <TIM6_DAC_IRQHandler+0x8>)
 8001cb6:	f006 b85d 	b.w	8007d74 <HAL_TIM_IRQHandler>
 8001cba:	bf00      	nop
 8001cbc:	200005ec 	.word	0x200005ec

08001cc0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001cc0:	4801      	ldr	r0, [pc, #4]	@ (8001cc8 <LTDC_IRQHandler+0x8>)
 8001cc2:	f004 bf8d 	b.w	8006be0 <HAL_LTDC_IRQHandler>
 8001cc6:	bf00      	nop
 8001cc8:	200004a4 	.word	0x200004a4

08001ccc <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001ccc:	4801      	ldr	r0, [pc, #4]	@ (8001cd4 <DMA2D_IRQHandler+0x8>)
 8001cce:	f003 be77 	b.w	80059c0 <HAL_DMA2D_IRQHandler>
 8001cd2:	bf00      	nop
 8001cd4:	200005a0 	.word	0x200005a0

08001cd8 <EXTI0_IRQHandler>:
/* USER CODE BEGIN 1 */
void EXTI0_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI0_IRQn 0 */
  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 8001cd8:	2001      	movs	r0, #1
 8001cda:	f004 ba05 	b.w	80060e8 <HAL_GPIO_EXTI_IRQHandler>

08001cde <EXTI15_10_IRQHandler>:
  /* USER CODE BEGIN EXTI0_IRQn 1 */

  /* USER CODE END EXTI0_IRQn 1 */
}

void EXTI15_10_IRQHandler(void){
 8001cde:	b508      	push	{r3, lr}
    HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_12);
 8001ce0:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 8001ce4:	f004 fa00 	bl	80060e8 <HAL_GPIO_EXTI_IRQHandler>
    HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
}
 8001ce8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 8001cec:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 8001cf0:	f004 b9fa 	b.w	80060e8 <HAL_GPIO_EXTI_IRQHandler>

08001cf4 <EXTI2_IRQHandler>:

void EXTI2_IRQHandler(void){
	HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
 8001cf4:	2004      	movs	r0, #4
 8001cf6:	f004 b9f7 	b.w	80060e8 <HAL_GPIO_EXTI_IRQHandler>

08001cfa <EXTI3_IRQHandler>:
}

void EXTI3_IRQHandler(void){
	HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 8001cfa:	2008      	movs	r0, #8
 8001cfc:	f004 b9f4 	b.w	80060e8 <HAL_GPIO_EXTI_IRQHandler>

08001d00 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001d00:	2001      	movs	r0, #1
 8001d02:	4770      	bx	lr

08001d04 <_kill>:

int _kill(int pid, int sig)
{
 8001d04:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001d06:	f022 ff0f 	bl	8024b28 <__errno>
 8001d0a:	2316      	movs	r3, #22
 8001d0c:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001d0e:	f04f 30ff 	mov.w	r0, #4294967295
 8001d12:	bd08      	pop	{r3, pc}

08001d14 <_exit>:

void _exit (int status)
{
 8001d14:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001d16:	f022 ff07 	bl	8024b28 <__errno>
 8001d1a:	2316      	movs	r3, #22
 8001d1c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001d1e:	e7fe      	b.n	8001d1e <_exit+0xa>

08001d20 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001d20:	b570      	push	{r4, r5, r6, lr}
 8001d22:	460d      	mov	r5, r1
 8001d24:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d26:	460e      	mov	r6, r1
 8001d28:	1b73      	subs	r3, r6, r5
 8001d2a:	429c      	cmp	r4, r3
 8001d2c:	dc01      	bgt.n	8001d32 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001d2e:	4620      	mov	r0, r4
 8001d30:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001d32:	f3af 8000 	nop.w
 8001d36:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d3a:	e7f5      	b.n	8001d28 <_read+0x8>

08001d3c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001d3c:	b570      	push	{r4, r5, r6, lr}
 8001d3e:	460d      	mov	r5, r1
 8001d40:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d42:	460e      	mov	r6, r1
 8001d44:	1b73      	subs	r3, r6, r5
 8001d46:	429c      	cmp	r4, r3
 8001d48:	dc01      	bgt.n	8001d4e <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001d4a:	4620      	mov	r0, r4
 8001d4c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001d4e:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001d52:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d56:	e7f5      	b.n	8001d44 <_write+0x8>

08001d58 <_close>:

int _close(int file)
{
	return -1;
}
 8001d58:	f04f 30ff 	mov.w	r0, #4294967295
 8001d5c:	4770      	bx	lr

08001d5e <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001d5e:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001d62:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001d64:	2000      	movs	r0, #0
 8001d66:	4770      	bx	lr

08001d68 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001d68:	2001      	movs	r0, #1
 8001d6a:	4770      	bx	lr

08001d6c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001d6c:	2000      	movs	r0, #0
 8001d6e:	4770      	bx	lr

08001d70 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001d70:	4a0a      	ldr	r2, [pc, #40]	@ (8001d9c <_sbrk+0x2c>)
 8001d72:	6811      	ldr	r1, [r2, #0]
{
 8001d74:	b508      	push	{r3, lr}
 8001d76:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001d78:	b909      	cbnz	r1, 8001d7e <_sbrk+0xe>
		heap_end = &end;
 8001d7a:	4909      	ldr	r1, [pc, #36]	@ (8001da0 <_sbrk+0x30>)
 8001d7c:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001d7e:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001d80:	4669      	mov	r1, sp
 8001d82:	4403      	add	r3, r0
 8001d84:	428b      	cmp	r3, r1
 8001d86:	d906      	bls.n	8001d96 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001d88:	f022 fece 	bl	8024b28 <__errno>
 8001d8c:	230c      	movs	r3, #12
 8001d8e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001d90:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001d94:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001d96:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001d98:	e7fc      	b.n	8001d94 <_sbrk+0x24>
 8001d9a:	bf00      	nop
 8001d9c:	20000634 	.word	0x20000634
 8001da0:	20016500 	.word	0x20016500

08001da4 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001da4:	4770      	bx	lr

08001da6 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001da6:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8001da8:	f000 fdbe 	bl	8002928 <touchgfx_components_init>
    touchgfx_init();
}
 8001dac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8001db0:	f000 bd40 	b.w	8002834 <touchgfx_init>

08001db4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8001db4:	f000 bdba 	b.w	800292c <touchgfx_taskEntry>

08001db8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001db8:	4770      	bx	lr

08001dba <_ZN20STM32TouchControllerD0Ev>:
 8001dba:	b510      	push	{r4, lr}
 8001dbc:	2104      	movs	r1, #4
 8001dbe:	4604      	mov	r4, r0
 8001dc0:	f021 fccc 	bl	802375c <_ZdlPvj>
 8001dc4:	4620      	mov	r0, r4
 8001dc6:	bd10      	pop	{r4, pc}

08001dc8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001dc8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001dca:	4b0c      	ldr	r3, [pc, #48]	@ (8001dfc <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001dcc:	4c0c      	ldr	r4, [pc, #48]	@ (8001e00 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001dce:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001dd0:	4b0c      	ldr	r3, [pc, #48]	@ (8001e04 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001dd2:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 8001dd4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001dd6:	6863      	ldr	r3, [r4, #4]
 8001dd8:	4798      	blx	r3
 8001dda:	f640 0311 	movw	r3, #2065	@ 0x811
 8001dde:	4298      	cmp	r0, r3
 8001de0:	d10a      	bne.n	8001df8 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001de2:	4d09      	ldr	r5, [pc, #36]	@ (8001e08 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001de4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8001de6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8001de8:	2082      	movs	r0, #130	@ 0x82
 8001dea:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001dec:	682b      	ldr	r3, [r5, #0]
 8001dee:	2082      	movs	r0, #130	@ 0x82
 8001df0:	68db      	ldr	r3, [r3, #12]
 8001df2:	4798      	blx	r3
 8001df4:	2000      	movs	r0, #0
    }

    return ret;
}
 8001df6:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001df8:	2001      	movs	r0, #1
 8001dfa:	e7fc      	b.n	8001df6 <_Z11BSP_TS_Inittt+0x2e>
 8001dfc:	20000642 	.word	0x20000642
 8001e00:	20000054 	.word	0x20000054
 8001e04:	20000640 	.word	0x20000640
 8001e08:	20000644 	.word	0x20000644

08001e0c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001e0c:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8001e10:	20f0      	movs	r0, #240	@ 0xf0
 8001e12:	f7ff bfd9 	b.w	8001dc8 <_Z11BSP_TS_Inittt>
	...

08001e18 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001e18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001e1a:	4d39      	ldr	r5, [pc, #228]	@ (8001f00 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 8001e1c:	682b      	ldr	r3, [r5, #0]
{
 8001e1e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001e20:	691b      	ldr	r3, [r3, #16]
 8001e22:	2082      	movs	r0, #130	@ 0x82
 8001e24:	4798      	blx	r3
 8001e26:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001e28:	2800      	cmp	r0, #0
 8001e2a:	d04e      	beq.n	8001eca <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001e2c:	682b      	ldr	r3, [r5, #0]
 8001e2e:	f10d 0206 	add.w	r2, sp, #6
 8001e32:	695b      	ldr	r3, [r3, #20]
 8001e34:	a901      	add	r1, sp, #4
 8001e36:	2082      	movs	r0, #130	@ 0x82
 8001e38:	4798      	blx	r3

        if (isRevD)
 8001e3a:	4b32      	ldr	r3, [pc, #200]	@ (8001f04 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 8001e3c:	781b      	ldrb	r3, [r3, #0]
 8001e3e:	2b00      	cmp	r3, #0
 8001e40:	d04b      	beq.n	8001eda <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 8001e42:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8001e46:	f640 6374 	movw	r3, #3700	@ 0xe74
 8001e4a:	429a      	cmp	r2, r3
 8001e4c:	d93f      	bls.n	8001ece <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 8001e4e:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 8001e52:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8001e56:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 8001e58:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001e5a:	2b0a      	cmp	r3, #10
 8001e5c:	d942      	bls.n	8001ee4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 8001e5e:	220b      	movs	r2, #11
 8001e60:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001e64:	4a28      	ldr	r2, [pc, #160]	@ (8001f08 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 8001e66:	8812      	ldrh	r2, [r2, #0]
 8001e68:	4293      	cmp	r3, r2
 8001e6a:	d901      	bls.n	8001e70 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8001e6c:	3a01      	subs	r2, #1
 8001e6e:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001e70:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8001e74:	4825      	ldr	r0, [pc, #148]	@ (8001f0c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 8001e76:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8001e7a:	428a      	cmp	r2, r1
 8001e7c:	d834      	bhi.n	8001ee8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 8001e7e:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 8001e82:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001e84:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 8001e86:	b292      	uxth	r2, r2
        xr = x / 15;
 8001e88:	250f      	movs	r5, #15
 8001e8a:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 8001e8e:	4d20      	ldr	r5, [pc, #128]	@ (8001f10 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 8001e90:	882d      	ldrh	r5, [r5, #0]
 8001e92:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 8001e94:	bf84      	itt	hi
 8001e96:	f105 35ff 	addhi.w	r5, r5, #4294967295
 8001e9a:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001e9c:	428a      	cmp	r2, r1
 8001e9e:	4615      	mov	r5, r2
 8001ea0:	b28e      	uxth	r6, r1
 8001ea2:	d92a      	bls.n	8001efa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 8001ea4:	1b92      	subs	r2, r2, r6
 8001ea6:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001ea8:	4e1a      	ldr	r6, [pc, #104]	@ (8001f14 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 8001eaa:	6837      	ldr	r7, [r6, #0]
 8001eac:	42bb      	cmp	r3, r7
 8001eae:	b2ba      	uxth	r2, r7
 8001eb0:	bf8c      	ite	hi
 8001eb2:	1a9a      	subhi	r2, r3, r2
 8001eb4:	1ad2      	subls	r2, r2, r3
 8001eb6:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 8001eb8:	4411      	add	r1, r2
 8001eba:	2905      	cmp	r1, #5
        {
            _x = x;
 8001ebc:	bfc4      	itt	gt
 8001ebe:	6005      	strgt	r5, [r0, #0]
            _y = y;
 8001ec0:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 8001ec2:	6803      	ldr	r3, [r0, #0]
 8001ec4:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001ec6:	6833      	ldr	r3, [r6, #0]
 8001ec8:	80a3      	strh	r3, [r4, #4]
    }
}
 8001eca:	b003      	add	sp, #12
 8001ecc:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 8001ece:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 8001ed0:	bf9c      	itt	ls
 8001ed2:	22b4      	movls	r2, #180	@ 0xb4
 8001ed4:	f8ad 2006 	strhls.w	r2, [sp, #6]
 8001ed8:	e7bb      	b.n	8001e52 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 8001eda:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001ede:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 8001ee2:	e7b9      	b.n	8001e58 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 8001ee4:	2300      	movs	r3, #0
 8001ee6:	e7c3      	b.n	8001e70 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 8001ee8:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 8001eec:	3208      	adds	r2, #8
 8001eee:	b292      	uxth	r2, r2
        if (xr <= 0)
 8001ef0:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001ef2:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 8001ef4:	d8c8      	bhi.n	8001e88 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001ef6:	2500      	movs	r5, #0
            xr = 0;
 8001ef8:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001efa:	1a89      	subs	r1, r1, r2
 8001efc:	b289      	uxth	r1, r1
 8001efe:	e7d3      	b.n	8001ea8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 8001f00:	20000644 	.word	0x20000644
 8001f04:	200003b8 	.word	0x200003b8
 8001f08:	20000640 	.word	0x20000640
 8001f0c:	2000063c 	.word	0x2000063c
 8001f10:	20000642 	.word	0x20000642
 8001f14:	20000638 	.word	0x20000638

08001f18 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001f18:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001f1a:	4668      	mov	r0, sp
{
 8001f1c:	460d      	mov	r5, r1
 8001f1e:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001f20:	f7ff ff7a 	bl	8001e18 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001f24:	f8bd 0000 	ldrh.w	r0, [sp]
 8001f28:	b130      	cbz	r0, 8001f38 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8001f2a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001f2e:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001f30:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001f34:	6023      	str	r3, [r4, #0]
        return true;
 8001f36:	2001      	movs	r0, #1
}
 8001f38:	b003      	add	sp, #12
 8001f3a:	bd30      	pop	{r4, r5, pc}

08001f3c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001f3c:	2803      	cmp	r0, #3
 8001f3e:	d821      	bhi.n	8001f84 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 8001f40:	e8df f000 	tbb	[pc, r0]
 8001f44:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001f48:	4b0f      	ldr	r3, [pc, #60]	@ (8001f88 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8001f4a:	681a      	ldr	r2, [r3, #0]
 8001f4c:	fab2 f282 	clz	r2, r2
 8001f50:	0952      	lsrs	r2, r2, #5
 8001f52:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001f54:	480d      	ldr	r0, [pc, #52]	@ (8001f8c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8001f56:	f004 b8b9 	b.w	80060cc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8001f5a:	4b0b      	ldr	r3, [pc, #44]	@ (8001f88 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8001f5c:	685a      	ldr	r2, [r3, #4]
 8001f5e:	fab2 f282 	clz	r2, r2
 8001f62:	0952      	lsrs	r2, r2, #5
 8001f64:	2108      	movs	r1, #8
 8001f66:	e7f5      	b.n	8001f54 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001f68:	4b07      	ldr	r3, [pc, #28]	@ (8001f88 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8001f6a:	689a      	ldr	r2, [r3, #8]
 8001f6c:	fab2 f282 	clz	r2, r2
 8001f70:	0952      	lsrs	r2, r2, #5
 8001f72:	2110      	movs	r1, #16
 8001f74:	e7ee      	b.n	8001f54 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001f76:	4b04      	ldr	r3, [pc, #16]	@ (8001f88 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8001f78:	68da      	ldr	r2, [r3, #12]
 8001f7a:	fab2 f282 	clz	r2, r2
 8001f7e:	0952      	lsrs	r2, r2, #5
 8001f80:	2120      	movs	r1, #32
 8001f82:	e7e7      	b.n	8001f54 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8001f84:	4770      	bx	lr
 8001f86:	bf00      	nop
 8001f88:	20000648 	.word	0x20000648
 8001f8c:	40021000 	.word	0x40021000

08001f90 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001f90:	2803      	cmp	r0, #3
 8001f92:	d821      	bhi.n	8001fd8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 8001f94:	e8df f000 	tbb	[pc, r0]
 8001f98:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001f9c:	4b0f      	ldr	r3, [pc, #60]	@ (8001fdc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8001f9e:	681a      	ldr	r2, [r3, #0]
 8001fa0:	3a00      	subs	r2, #0
 8001fa2:	bf18      	it	ne
 8001fa4:	2201      	movne	r2, #1
 8001fa6:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001fa8:	480d      	ldr	r0, [pc, #52]	@ (8001fe0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001faa:	f004 b88f 	b.w	80060cc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8001fae:	4b0b      	ldr	r3, [pc, #44]	@ (8001fdc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8001fb0:	685a      	ldr	r2, [r3, #4]
 8001fb2:	3a00      	subs	r2, #0
 8001fb4:	bf18      	it	ne
 8001fb6:	2201      	movne	r2, #1
 8001fb8:	2108      	movs	r1, #8
 8001fba:	e7f5      	b.n	8001fa8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001fbc:	4b07      	ldr	r3, [pc, #28]	@ (8001fdc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8001fbe:	689a      	ldr	r2, [r3, #8]
 8001fc0:	3a00      	subs	r2, #0
 8001fc2:	bf18      	it	ne
 8001fc4:	2201      	movne	r2, #1
 8001fc6:	2110      	movs	r1, #16
 8001fc8:	e7ee      	b.n	8001fa8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001fca:	4b04      	ldr	r3, [pc, #16]	@ (8001fdc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8001fcc:	68da      	ldr	r2, [r3, #12]
 8001fce:	3a00      	subs	r2, #0
 8001fd0:	bf18      	it	ne
 8001fd2:	2201      	movne	r2, #1
 8001fd4:	2120      	movs	r1, #32
 8001fd6:	e7e7      	b.n	8001fa8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8001fd8:	4770      	bx	lr
 8001fda:	bf00      	nop
 8001fdc:	20000648 	.word	0x20000648
 8001fe0:	40021000 	.word	0x40021000

08001fe4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001fe4:	2803      	cmp	r0, #3
 8001fe6:	d80d      	bhi.n	8002004 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8001fe8:	e8df f000 	tbb	[pc, r0]
 8001fec:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001ff0:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001ff2:	4805      	ldr	r0, [pc, #20]	@ (8002008 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8001ff4:	f004 b86f 	b.w	80060d6 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001ff8:	2108      	movs	r1, #8
 8001ffa:	e7fa      	b.n	8001ff2 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001ffc:	2110      	movs	r1, #16
 8001ffe:	e7f8      	b.n	8001ff2 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8002000:	2120      	movs	r1, #32
 8002002:	e7f6      	b.n	8001ff2 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8002004:	4770      	bx	lr
 8002006:	bf00      	nop
 8002008:	40021000 	.word	0x40021000

0800200c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 800200c:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800200e:	2803      	cmp	r0, #3
 8002010:	d811      	bhi.n	8002036 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 8002012:	e8df f000 	tbb	[pc, r0]
 8002016:	0a02      	.short	0x0a02
 8002018:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800201a:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800201c:	4807      	ldr	r0, [pc, #28]	@ (800203c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800201e:	f004 f84f 	bl	80060c0 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8002022:	1e43      	subs	r3, r0, #1
 8002024:	4258      	negs	r0, r3
 8002026:	4158      	adcs	r0, r3
 8002028:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800202a:	2108      	movs	r1, #8
 800202c:	e7f6      	b.n	800201c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800202e:	2110      	movs	r1, #16
 8002030:	e7f4      	b.n	800201c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8002032:	2120      	movs	r1, #32
 8002034:	e7f2      	b.n	800201c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8002036:	2000      	movs	r0, #0
 8002038:	e7f3      	b.n	8002022 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 800203a:	bf00      	nop
 800203c:	40021000 	.word	0x40021000

08002040 <_ZN8touchgfx4GPIO4initEv>:
{
 8002040:	b570      	push	{r4, r5, r6, lr}
 8002042:	4d08      	ldr	r5, [pc, #32]	@ (8002064 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8002044:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8002046:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8002048:	b2e0      	uxtb	r0, r4
 800204a:	f7ff ffdf 	bl	800200c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800204e:	b118      	cbz	r0, 8002058 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8002050:	682b      	ldr	r3, [r5, #0]
 8002052:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8002054:	bf18      	it	ne
 8002056:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8002058:	3401      	adds	r4, #1
 800205a:	2c05      	cmp	r4, #5
 800205c:	f105 0504 	add.w	r5, r5, #4
 8002060:	d1f2      	bne.n	8002048 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8002062:	bd70      	pop	{r4, r5, r6, pc}
 8002064:	20000648 	.word	0x20000648

08002068 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8002068:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800206a:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800206e:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8002072:	4770      	bx	lr

08002074 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8002074:	4770      	bx	lr

08002076 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8002076:	2000      	movs	r0, #0
 8002078:	4770      	bx	lr
	...

0800207c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800207c:	4b03      	ldr	r3, [pc, #12]	@ (800208c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800207e:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002080:	3900      	subs	r1, #0
 8002082:	bf18      	it	ne
 8002084:	2101      	movne	r1, #1
 8002086:	7019      	strb	r1, [r3, #0]
    }
 8002088:	4770      	bx	lr
 800208a:	bf00      	nop
 800208c:	200157bf 	.word	0x200157bf

08002090 <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 8002090:	4770      	bx	lr

08002092 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8002092:	2000      	movs	r0, #0
 8002094:	4770      	bx	lr

08002096 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8002096:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8002098:	b10b      	cbz	r3, 800209e <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800209a:	4608      	mov	r0, r1
 800209c:	4718      	bx	r3
        }
    }
 800209e:	4770      	bx	lr

080020a0 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80020a0:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80020a4:	4770      	bx	lr

080020a6 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80020a6:	6840      	ldr	r0, [r0, #4]
 80020a8:	6803      	ldr	r3, [r0, #0]
 80020aa:	699b      	ldr	r3, [r3, #24]
 80020ac:	4718      	bx	r3

080020ae <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 80020ae:	4770      	bx	lr

080020b0 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80020b0:	4770      	bx	lr

080020b2 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80020b2:	4770      	bx	lr

080020b4 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 80020b4:	4770      	bx	lr

080020b6 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80020b6:	4770      	bx	lr

080020b8 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 80020b8:	b510      	push	{r4, lr}
 80020ba:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80020bc:	f000 fd4c 	bl	8002b58 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 80020c0:	6823      	ldr	r3, [r4, #0]
 80020c2:	4903      	ldr	r1, [pc, #12]	@ (80020d0 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 80020c4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80020c8:	4620      	mov	r0, r4
}
 80020ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 80020ce:	4718      	bx	r3
 80020d0:	d0000000 	.word	0xd0000000

080020d4 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80020d4:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80020d6:	6803      	ldr	r3, [r0, #0]
{
 80020d8:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80020da:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80020de:	4798      	blx	r3
    enableInterrupts();
 80020e0:	6823      	ldr	r3, [r4, #0]
 80020e2:	4620      	mov	r0, r4
 80020e4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80020e6:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80020e8:	f000 f8ec 	bl	80022c4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80020ec:	6823      	ldr	r3, [r4, #0]
 80020ee:	4620      	mov	r0, r4
 80020f0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80020f2:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80020f4:	2029      	movs	r0, #41	@ 0x29
 80020f6:	f7fe fe49 	bl	8000d8c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80020fa:	f000 f8e3 	bl	80022c4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80020fe:	6823      	ldr	r3, [r4, #0]
 8002100:	4620      	mov	r0, r4
 8002102:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002104:	4798      	blx	r3
    for (;;)
 8002106:	e7f8      	b.n	80020fa <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08002108 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8002108:	b510      	push	{r4, lr}
 800210a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800210c:	f009 fce8 	bl	800bae0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002110:	6823      	ldr	r3, [r4, #0]
 8002112:	4620      	mov	r0, r4
 8002114:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 8002118:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800211c:	4718      	bx	r3

0800211e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800211e:	f000 bcff 	b.w	8002b20 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08002122 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8002122:	f000 bd03 	b.w	8002b2c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08002126 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8002126:	f000 bd35 	b.w	8002b94 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800212a <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800212a:	f000 bcd5 	b.w	8002ad8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800212e <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800212e:	f000 bd45 	b.w	8002bbc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08002132 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8002132:	f000 bd4d 	b.w	8002bd0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08002136 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8002136:	f000 bcd9 	b.w	8002aec <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

0800213a <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800213a:	f008 beff 	b.w	800af3c <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800213e <_ZN11TouchGFXHALD0Ev>:
 800213e:	b510      	push	{r4, lr}
 8002140:	2184      	movs	r1, #132	@ 0x84
 8002142:	4604      	mov	r4, r0
 8002144:	f021 fb0a 	bl	802375c <_ZdlPvj>
 8002148:	4620      	mov	r0, r4
 800214a:	bd10      	pop	{r4, pc}

0800214c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800214c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800214e:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8002152:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8002156:	4b0c      	ldr	r3, [pc, #48]	@ (8002188 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8002158:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800215a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800215c:	d009      	beq.n	8002172 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800215e:	b93a      	cbnz	r2, 8002170 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002160:	4a0a      	ldr	r2, [pc, #40]	@ (800218c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002162:	490b      	ldr	r1, [pc, #44]	@ (8002190 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002164:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002166:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8002168:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800216a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800216c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800216e:	701a      	strb	r2, [r3, #0]
    }
 8002170:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8002172:	2a00      	cmp	r2, #0
 8002174:	d0fc      	beq.n	8002170 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002176:	4a05      	ldr	r2, [pc, #20]	@ (800218c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002178:	4905      	ldr	r1, [pc, #20]	@ (8002190 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800217a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800217c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800217e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002180:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8002182:	2200      	movs	r2, #0
 8002184:	e7f3      	b.n	800216e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8002186:	bf00      	nop
 8002188:	200157b8 	.word	0x200157b8
 800218c:	200157b4 	.word	0x200157b4
 8002190:	200157b6 	.word	0x200157b6

08002194 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002194:	b570      	push	{r4, r5, r6, lr}
 8002196:	460d      	mov	r5, r1
 8002198:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800219a:	b935      	cbnz	r5, 80021aa <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800219c:	4b09      	ldr	r3, [pc, #36]	@ (80021c4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800219e:	4a0a      	ldr	r2, [pc, #40]	@ (80021c8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80021a0:	480a      	ldr	r0, [pc, #40]	@ (80021cc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80021a2:	f240 21ff 	movw	r1, #767	@ 0x2ff
 80021a6:	f022 fa15 	bl	80245d4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80021aa:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80021ae:	4b08      	ldr	r3, [pc, #32]	@ (80021d0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80021b0:	3a00      	subs	r2, #0
 80021b2:	bf18      	it	ne
 80021b4:	2201      	movne	r2, #1
 80021b6:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80021b8:	6803      	ldr	r3, [r0, #0]
    }
 80021ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80021be:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80021c2:	4718      	bx	r3
 80021c4:	08025866 	.word	0x08025866
 80021c8:	0802589e 	.word	0x0802589e
 80021cc:	080258ec 	.word	0x080258ec
 80021d0:	200157be 	.word	0x200157be

080021d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80021d4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80021d6:	4b09      	ldr	r3, [pc, #36]	@ (80021fc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80021d8:	881b      	ldrh	r3, [r3, #0]
 80021da:	428b      	cmp	r3, r1
 80021dc:	d803      	bhi.n	80021e6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80021de:	4b08      	ldr	r3, [pc, #32]	@ (8002200 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80021e0:	881b      	ldrh	r3, [r3, #0]
 80021e2:	4293      	cmp	r3, r2
 80021e4:	d905      	bls.n	80021f2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80021e6:	4b07      	ldr	r3, [pc, #28]	@ (8002204 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80021e8:	4a07      	ldr	r2, [pc, #28]	@ (8002208 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80021ea:	4808      	ldr	r0, [pc, #32]	@ (800220c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80021ec:	21a3      	movs	r1, #163	@ 0xa3
 80021ee:	f022 f9f1 	bl	80245d4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80021f2:	4b07      	ldr	r3, [pc, #28]	@ (8002210 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80021f4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80021f6:	4b07      	ldr	r3, [pc, #28]	@ (8002214 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80021f8:	801a      	strh	r2, [r3, #0]
    }
 80021fa:	bd08      	pop	{r3, pc}
 80021fc:	200157b4 	.word	0x200157b4
 8002200:	200157b6 	.word	0x200157b6
 8002204:	08025931 	.word	0x08025931
 8002208:	08025994 	.word	0x08025994
 800220c:	080258ec 	.word	0x080258ec
 8002210:	200157ba 	.word	0x200157ba
 8002214:	200157bc 	.word	0x200157bc

08002218 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8002218:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 800221a:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 800221e:	b118      	cbz	r0, 8002228 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8002220:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8002222:	6803      	ldr	r3, [r0, #0]
 8002224:	681b      	ldr	r3, [r3, #0]
 8002226:	4718      	bx	r3
    }
 8002228:	4770      	bx	lr
	...

0800222c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800222c:	2101      	movs	r1, #1
{
 800222e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002230:	2200      	movs	r2, #0
 8002232:	4608      	mov	r0, r1
 8002234:	f006 f9a8 	bl	8008588 <osSemaphoreNew>
 8002238:	4b0a      	ldr	r3, [pc, #40]	@ (8002264 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800223a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 800223c:	b928      	cbnz	r0, 800224a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800223e:	4b0a      	ldr	r3, [pc, #40]	@ (8002268 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8002240:	4a0a      	ldr	r2, [pc, #40]	@ (800226c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002242:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002244:	480a      	ldr	r0, [pc, #40]	@ (8002270 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8002246:	f022 f9c5 	bl	80245d4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800224a:	2200      	movs	r2, #0
 800224c:	2104      	movs	r1, #4
 800224e:	2001      	movs	r0, #1
 8002250:	f006 fa42 	bl	80086d8 <osMessageQueueNew>
 8002254:	4b07      	ldr	r3, [pc, #28]	@ (8002274 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8002256:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002258:	b918      	cbnz	r0, 8002262 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 800225a:	4b07      	ldr	r3, [pc, #28]	@ (8002278 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 800225c:	4a03      	ldr	r2, [pc, #12]	@ (800226c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800225e:	212c      	movs	r1, #44	@ 0x2c
 8002260:	e7f0      	b.n	8002244 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8002262:	bd08      	pop	{r3, pc}
 8002264:	2000065c 	.word	0x2000065c
 8002268:	080259d7 	.word	0x080259d7
 800226c:	08025a20 	.word	0x08025a20
 8002270:	08025a4f 	.word	0x08025a4f
 8002274:	20000658 	.word	0x20000658
 8002278:	08025ab9 	.word	0x08025ab9

0800227c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 800227c:	4b02      	ldr	r3, [pc, #8]	@ (8002288 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800227e:	f04f 31ff 	mov.w	r1, #4294967295
 8002282:	6818      	ldr	r0, [r3, #0]
 8002284:	f006 b9ca 	b.w	800861c <osSemaphoreAcquire>
 8002288:	2000065c 	.word	0x2000065c

0800228c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 800228c:	4b01      	ldr	r3, [pc, #4]	@ (8002294 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800228e:	6818      	ldr	r0, [r3, #0]
 8002290:	f006 b9f0 	b.w	8008674 <osSemaphoreRelease>
 8002294:	2000065c 	.word	0x2000065c

08002298 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002298:	4b02      	ldr	r3, [pc, #8]	@ (80022a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800229a:	2100      	movs	r1, #0
 800229c:	6818      	ldr	r0, [r3, #0]
 800229e:	f006 b9bd 	b.w	800861c <osSemaphoreAcquire>
 80022a2:	bf00      	nop
 80022a4:	2000065c 	.word	0x2000065c

080022a8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 80022a8:	f7ff bff0 	b.w	800228c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080022ac <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80022ac:	4803      	ldr	r0, [pc, #12]	@ (80022bc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80022ae:	4904      	ldr	r1, [pc, #16]	@ (80022c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80022b0:	6800      	ldr	r0, [r0, #0]
 80022b2:	2300      	movs	r3, #0
 80022b4:	461a      	mov	r2, r3
 80022b6:	f006 ba4a 	b.w	800874e <osMessageQueuePut>
 80022ba:	bf00      	nop
 80022bc:	20000658 	.word	0x20000658
 80022c0:	20000014 	.word	0x20000014

080022c4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80022c4:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80022c6:	4c08      	ldr	r4, [pc, #32]	@ (80022e8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80022c8:	2300      	movs	r3, #0
 80022ca:	461a      	mov	r2, r3
 80022cc:	a901      	add	r1, sp, #4
 80022ce:	6820      	ldr	r0, [r4, #0]
 80022d0:	f006 fa6e 	bl	80087b0 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80022d4:	6820      	ldr	r0, [r4, #0]
 80022d6:	f04f 33ff 	mov.w	r3, #4294967295
 80022da:	2200      	movs	r2, #0
 80022dc:	a901      	add	r1, sp, #4
 80022de:	f006 fa67 	bl	80087b0 <osMessageQueueGet>
}
 80022e2:	b002      	add	sp, #8
 80022e4:	bd10      	pop	{r4, pc}
 80022e6:	bf00      	nop
 80022e8:	20000658 	.word	0x20000658

080022ec <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80022ec:	6803      	ldr	r3, [r0, #0]
 80022ee:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80022f0:	4718      	bx	r3

080022f2 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80022f2:	2001      	movs	r0, #1
 80022f4:	4770      	bx	lr

080022f6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80022f6:	6803      	ldr	r3, [r0, #0]
 80022f8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80022fa:	4718      	bx	r3

080022fc <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 80022fc:	e7fe      	b.n	80022fc <DMA2D_XferErrorCallback>

080022fe <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 80022fe:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8002302:	4770      	bx	lr

08002304 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8002304:	4b05      	ldr	r3, [pc, #20]	@ (800231c <_ZN8STM32DMAD1Ev+0x18>)
 8002306:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002308:	4b05      	ldr	r3, [pc, #20]	@ (8002320 <_ZN8STM32DMAD1Ev+0x1c>)
 800230a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800230e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8002312:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002316:	f3bf 8f6f 	isb	sy
}
 800231a:	4770      	bx	lr
 800231c:	0802691c 	.word	0x0802691c
 8002320:	e000e100 	.word	0xe000e100

08002324 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8002324:	b510      	push	{r4, lr}
 8002326:	4604      	mov	r4, r0
}
 8002328:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 800232c:	f7ff ffea 	bl	8002304 <_ZN8STM32DMAD1Ev>
 8002330:	4620      	mov	r0, r4
 8002332:	f021 fa13 	bl	802375c <_ZdlPvj>
 8002336:	4620      	mov	r0, r4
 8002338:	bd10      	pop	{r4, pc}
	...

0800233c <_ZN8STM32DMA10initializeEv>:
{
 800233c:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800233e:	2300      	movs	r3, #0
 8002340:	9301      	str	r3, [sp, #4]
 8002342:	4b0e      	ldr	r3, [pc, #56]	@ (800237c <_ZN8STM32DMA10initializeEv+0x40>)
 8002344:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002346:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800234a:	631a      	str	r2, [r3, #48]	@ 0x30
 800234c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800234e:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8002352:	9201      	str	r2, [sp, #4]
 8002354:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8002356:	691a      	ldr	r2, [r3, #16]
 8002358:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800235c:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800235e:	691a      	ldr	r2, [r3, #16]
 8002360:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8002364:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8002366:	4b06      	ldr	r3, [pc, #24]	@ (8002380 <_ZN8STM32DMA10initializeEv+0x44>)
 8002368:	4a06      	ldr	r2, [pc, #24]	@ (8002384 <_ZN8STM32DMA10initializeEv+0x48>)
 800236a:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 800236c:	4a06      	ldr	r2, [pc, #24]	@ (8002388 <_ZN8STM32DMA10initializeEv+0x4c>)
 800236e:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002370:	4b06      	ldr	r3, [pc, #24]	@ (800238c <_ZN8STM32DMA10initializeEv+0x50>)
 8002372:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8002376:	609a      	str	r2, [r3, #8]
}
 8002378:	b002      	add	sp, #8
 800237a:	4770      	bx	lr
 800237c:	40023800 	.word	0x40023800
 8002380:	200005a0 	.word	0x200005a0
 8002384:	080025dd 	.word	0x080025dd
 8002388:	080022fd 	.word	0x080022fd
 800238c:	e000e100 	.word	0xe000e100

08002390 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8002390:	b508      	push	{r3, lr}
    switch (format)
 8002392:	280a      	cmp	r0, #10
 8002394:	d809      	bhi.n	80023aa <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8002396:	e8df f000 	tbb	[pc, r0]
 800239a:	1006      	.short	0x1006
 800239c:	0808080e 	.word	0x0808080e
 80023a0:	10101008 	.word	0x10101008
 80023a4:	10          	.byte	0x10
 80023a5:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80023a6:	2002      	movs	r0, #2
}
 80023a8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80023aa:	4b05      	ldr	r3, [pc, #20]	@ (80023c0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 80023ac:	4a05      	ldr	r2, [pc, #20]	@ (80023c4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 80023ae:	4806      	ldr	r0, [pc, #24]	@ (80023c8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 80023b0:	2190      	movs	r1, #144	@ 0x90
 80023b2:	f022 f90f 	bl	80245d4 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 80023b6:	2000      	movs	r0, #0
 80023b8:	e7f6      	b.n	80023a8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 80023ba:	2001      	movs	r0, #1
    return dma2dColorMode;
 80023bc:	e7f4      	b.n	80023a8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80023be:	bf00      	nop
 80023c0:	08025afb 	.word	0x08025afb
 80023c4:	08025b16 	.word	0x08025b16
 80023c8:	08025b61 	.word	0x08025b61

080023cc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80023cc:	b538      	push	{r3, r4, r5, lr}
 80023ce:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80023d0:	7f88      	ldrb	r0, [r1, #30]
 80023d2:	f7ff ffdd 	bl	8002390 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80023d6:	8aa5      	ldrh	r5, [r4, #20]
 80023d8:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80023da:	4b16      	ldr	r3, [pc, #88]	@ (8002434 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80023dc:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80023de:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80023e0:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 80023e4:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80023e6:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80023e8:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80023ea:	1b52      	subs	r2, r2, r5
 80023ec:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 80023ee:	6825      	ldr	r5, [r4, #0]
 80023f0:	2d08      	cmp	r5, #8
 80023f2:	d10e      	bne.n	8002412 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80023f4:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80023f6:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80023f8:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 80023fa:	7f20      	ldrb	r0, [r4, #28]
 80023fc:	4a0e      	ldr	r2, [pc, #56]	@ (8002438 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 80023fe:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8002402:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8002404:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8002406:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8002408:	4a0c      	ldr	r2, [pc, #48]	@ (800243c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800240a:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800240c:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 800240e:	601a      	str	r2, [r3, #0]
    }
}
 8002410:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8002412:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8002414:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8002416:	611a      	str	r2, [r3, #16]
 8002418:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 800241a:	0a0a      	lsrs	r2, r1, #8
 800241c:	0948      	lsrs	r0, r1, #5
 800241e:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8002422:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8002426:	4302      	orrs	r2, r0
 8002428:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800242c:	430a      	orrs	r2, r1
 800242e:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8002430:	4a03      	ldr	r2, [pc, #12]	@ (8002440 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8002432:	e7ec      	b.n	800240e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8002434:	4002b000 	.word	0x4002b000
 8002438:	00010009 	.word	0x00010009
 800243c:	00022301 	.word	0x00022301
 8002440:	00032301 	.word	0x00032301

08002444 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8002444:	b508      	push	{r3, lr}
    switch (format)
 8002446:	280b      	cmp	r0, #11
 8002448:	d80b      	bhi.n	8002462 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 800244a:	e8df f000 	tbb	[pc, r0]
 800244e:	1206      	.short	0x1206
 8002450:	0a0a0a10 	.word	0x0a0a0a10
 8002454:	0808080a 	.word	0x0808080a
 8002458:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 800245a:	2002      	movs	r0, #2
}
 800245c:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 800245e:	2005      	movs	r0, #5
        break;
 8002460:	e7fc      	b.n	800245c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8002462:	4b05      	ldr	r3, [pc, #20]	@ (8002478 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8002464:	4a05      	ldr	r2, [pc, #20]	@ (800247c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8002466:	4806      	ldr	r0, [pc, #24]	@ (8002480 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8002468:	216f      	movs	r1, #111	@ 0x6f
 800246a:	f022 f8b3 	bl	80245d4 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800246e:	2000      	movs	r0, #0
 8002470:	e7f4      	b.n	800245c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8002472:	2001      	movs	r0, #1
    return dma2dColorMode;
 8002474:	e7f2      	b.n	800245c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8002476:	bf00      	nop
 8002478:	08025afb 	.word	0x08025afb
 800247c:	08025bc9 	.word	0x08025bc9
 8002480:	08025b61 	.word	0x08025b61

08002484 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8002484:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8002488:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 800248c:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800248e:	4640      	mov	r0, r8
 8002490:	f7ff ffd8 	bl	8002444 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002494:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8002496:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002498:	4638      	mov	r0, r7
 800249a:	f7ff ffd3 	bl	8002444 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 800249e:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80024a0:	4638      	mov	r0, r7
 80024a2:	f7ff ff75 	bl	8002390 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80024a6:	8aa1      	ldrh	r1, [r4, #20]
 80024a8:	8b62      	ldrh	r2, [r4, #26]
 80024aa:	4b44      	ldr	r3, [pc, #272]	@ (80025bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80024ac:	1a52      	subs	r2, r2, r1
 80024ae:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80024b0:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 80024b2:	8b22      	ldrh	r2, [r4, #24]
 80024b4:	1a52      	subs	r2, r2, r1
 80024b6:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80024b8:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80024ba:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80024bc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80024c0:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80024c2:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80024c4:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80024c6:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80024c8:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 80024ca:	6820      	ldr	r0, [r4, #0]
 80024cc:	2880      	cmp	r0, #128	@ 0x80
 80024ce:	d028      	beq.n	8002522 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 80024d0:	7f22      	ldrb	r2, [r4, #28]
 80024d2:	d80f      	bhi.n	80024f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 80024d4:	2820      	cmp	r0, #32
 80024d6:	d067      	beq.n	80025a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 80024d8:	2840      	cmp	r0, #64	@ 0x40
 80024da:	d065      	beq.n	80025a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 80024dc:	2804      	cmp	r0, #4
 80024de:	d01a      	beq.n	8002516 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80024e0:	4b36      	ldr	r3, [pc, #216]	@ (80025bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80024e2:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 80024e6:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 80024ea:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80024ec:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 80024ee:	d061      	beq.n	80025b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80024f0:	4a33      	ldr	r2, [pc, #204]	@ (80025c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 80024f2:	e044      	b.n	800257e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 80024f4:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 80024f8:	d004      	beq.n	8002504 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 80024fa:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 80024fe:	d1ef      	bne.n	80024e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002500:	4830      	ldr	r0, [pc, #192]	@ (80025c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8002502:	e000      	b.n	8002506 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002504:	4830      	ldr	r0, [pc, #192]	@ (80025c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002506:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 800250a:	61da      	str	r2, [r3, #28]
 800250c:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800250e:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002510:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002512:	6159      	str	r1, [r3, #20]
 8002514:	e032      	b.n	800257c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002516:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 800251a:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800251e:	61da      	str	r2, [r3, #28]
 8002520:	e7f6      	b.n	8002510 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8002522:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8002524:	1d02      	adds	r2, r0, #4
 8002526:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002528:	7f22      	ldrb	r2, [r4, #28]
 800252a:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800252e:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8002532:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002534:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002536:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8002538:	7801      	ldrb	r1, [r0, #0]
 800253a:	b141      	cbz	r1, 800254e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 800253c:	2901      	cmp	r1, #1
 800253e:	d021      	beq.n	8002584 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8002540:	4b22      	ldr	r3, [pc, #136]	@ (80025cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8002542:	4a23      	ldr	r2, [pc, #140]	@ (80025d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8002544:	4823      	ldr	r0, [pc, #140]	@ (80025d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8002546:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 800254a:	f022 f843 	bl	80245d4 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 800254e:	69da      	ldr	r2, [r3, #28]
 8002550:	8841      	ldrh	r1, [r0, #2]
 8002552:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8002556:	3901      	subs	r1, #1
 8002558:	f022 0210 	bic.w	r2, r2, #16
 800255c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8002560:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8002562:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8002564:	4b15      	ldr	r3, [pc, #84]	@ (80025bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002566:	69da      	ldr	r2, [r3, #28]
 8002568:	f042 0220 	orr.w	r2, r2, #32
 800256c:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 800256e:	69da      	ldr	r2, [r3, #28]
 8002570:	0692      	lsls	r2, r2, #26
 8002572:	d4fc      	bmi.n	800256e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8002574:	2210      	movs	r2, #16
 8002576:	609a      	str	r2, [r3, #8]
            if (blend)
 8002578:	2900      	cmp	r1, #0
 800257a:	d0b9      	beq.n	80024f0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800257c:	4a16      	ldr	r2, [pc, #88]	@ (80025d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800257e:	601a      	str	r2, [r3, #0]
}
 8002580:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8002584:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8002588:	69da      	ldr	r2, [r3, #28]
 800258a:	8840      	ldrh	r0, [r0, #2]
 800258c:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8002590:	f100 30ff 	add.w	r0, r0, #4294967295
 8002594:	f022 0210 	bic.w	r2, r2, #16
 8002598:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800259c:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 80025a0:	bf18      	it	ne
 80025a2:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80025a4:	61da      	str	r2, [r3, #28]
                break;
 80025a6:	e7dd      	b.n	8002564 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80025a8:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 80025ac:	4b03      	ldr	r3, [pc, #12]	@ (80025bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80025ae:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 80025b2:	e7b4      	b.n	800251e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80025b4:	f242 3201 	movw	r2, #8961	@ 0x2301
 80025b8:	e7e1      	b.n	800257e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 80025ba:	bf00      	nop
 80025bc:	4002b000 	.word	0x4002b000
 80025c0:	00012301 	.word	0x00012301
 80025c4:	00020009 	.word	0x00020009
 80025c8:	0002000a 	.word	0x0002000a
 80025cc:	08025c13 	.word	0x08025c13
 80025d0:	08025c2d 	.word	0x08025c2d
 80025d4:	08025b61 	.word	0x08025b61
 80025d8:	00022301 	.word	0x00022301

080025dc <DMA2D_XferCpltCallback>:
        return instance;
 80025dc:	4b02      	ldr	r3, [pc, #8]	@ (80025e8 <DMA2D_XferCpltCallback+0xc>)
 80025de:	681b      	ldr	r3, [r3, #0]
 80025e0:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 80025e2:	6803      	ldr	r3, [r0, #0]
 80025e4:	695b      	ldr	r3, [r3, #20]
 80025e6:	4718      	bx	r3
 80025e8:	200157c0 	.word	0x200157c0

080025ec <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80025ec:	b570      	push	{r4, r5, r6, lr}
 80025ee:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 80025f0:	4625      	mov	r5, r4
 80025f2:	4b0a      	ldr	r3, [pc, #40]	@ (800261c <_ZN8STM32DMAC1Ev+0x30>)
 80025f4:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80025f6:	2600      	movs	r6, #0
 80025f8:	6060      	str	r0, [r4, #4]
 80025fa:	7226      	strb	r6, [r4, #8]
 80025fc:	7266      	strb	r6, [r4, #9]
 80025fe:	f845 3b20 	str.w	r3, [r5], #32
 8002602:	2260      	movs	r2, #96	@ 0x60
 8002604:	4629      	mov	r1, r5
 8002606:	f009 fbc1 	bl	800bd8c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800260a:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 800260e:	60ee      	str	r6, [r5, #12]
 8002610:	3524      	adds	r5, #36	@ 0x24
 8002612:	429d      	cmp	r5, r3
 8002614:	d1fb      	bne.n	800260e <_ZN8STM32DMAC1Ev+0x22>
}
 8002616:	4620      	mov	r0, r4
 8002618:	bd70      	pop	{r4, r5, r6, pc}
 800261a:	bf00      	nop
 800261c:	0802691c 	.word	0x0802691c

08002620 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8002620:	4b03      	ldr	r3, [pc, #12]	@ (8002630 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8002622:	681a      	ldr	r2, [r3, #0]
 8002624:	07d2      	lsls	r2, r2, #31
 8002626:	d4fc      	bmi.n	8002622 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8002628:	2223      	movs	r2, #35	@ 0x23
 800262a:	609a      	str	r2, [r3, #8]
}
 800262c:	4770      	bx	lr
 800262e:	bf00      	nop
 8002630:	4002b000 	.word	0x4002b000

08002634 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8002634:	4770      	bx	lr
	...

08002638 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8002638:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800263a:	4c0f      	ldr	r4, [pc, #60]	@ (8002678 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 800263c:	6825      	ldr	r5, [r4, #0]
 800263e:	07ed      	lsls	r5, r5, #31
 8002640:	d4fc      	bmi.n	800263c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8002642:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002644:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8002646:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002648:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800264c:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 800264e:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8002650:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002652:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8002654:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8002656:	d00a      	beq.n	800266e <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8002658:	4908      	ldr	r1, [pc, #32]	@ (800267c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800265a:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800265c:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8002660:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8002662:	4b07      	ldr	r3, [pc, #28]	@ (8002680 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8002664:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8002666:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8002668:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 800266a:	6023      	str	r3, [r4, #0]
    }
}
 800266c:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 800266e:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8002670:	9b03      	ldr	r3, [sp, #12]
 8002672:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8002674:	4b03      	ldr	r3, [pc, #12]	@ (8002684 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8002676:	e7f8      	b.n	800266a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8002678:	4002b000 	.word	0x4002b000
 800267c:	00010009 	.word	0x00010009
 8002680:	00020001 	.word	0x00020001
 8002684:	00030001 	.word	0x00030001

08002688 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 8002688:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800268a:	4c0e      	ldr	r4, [pc, #56]	@ (80026c4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 800268c:	6825      	ldr	r5, [r4, #0]
 800268e:	07ed      	lsls	r5, r5, #31
 8002690:	d4fc      	bmi.n	800268c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8002692:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002694:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8002696:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002698:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800269c:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 800269e:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80026a0:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80026a2:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80026a4:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 80026a6:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 80026a8:	d008      	beq.n	80026bc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80026aa:	061b      	lsls	r3, r3, #24
 80026ac:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 80026b0:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80026b2:	4b05      	ldr	r3, [pc, #20]	@ (80026c8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80026b4:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 80026b6:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 80026b8:	6023      	str	r3, [r4, #0]
    }
}
 80026ba:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80026bc:	4b03      	ldr	r3, [pc, #12]	@ (80026cc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 80026be:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 80026c0:	2301      	movs	r3, #1
 80026c2:	e7f9      	b.n	80026b8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 80026c4:	4002b000 	.word	0x4002b000
 80026c8:	00020001 	.word	0x00020001
 80026cc:	ff020002 	.word	0xff020002

080026d0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 80026d0:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80026d2:	4c0b      	ldr	r4, [pc, #44]	@ (8002700 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 80026d4:	6825      	ldr	r5, [r4, #0]
 80026d6:	07ed      	lsls	r5, r5, #31
 80026d8:	d4fc      	bmi.n	80026d4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80026da:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80026dc:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80026de:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80026e0:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80026e2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80026e6:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80026e8:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80026ec:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80026ee:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80026f0:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 80026f2:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80026f4:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80026f6:	4b03      	ldr	r3, [pc, #12]	@ (8002704 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80026f8:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 80026fa:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80026fc:	6023      	str	r3, [r4, #0]
}
 80026fe:	bd30      	pop	{r4, r5, pc}
 8002700:	4002b000 	.word	0x4002b000
 8002704:	00020001 	.word	0x00020001

08002708 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002708:	2001      	movs	r0, #1
 800270a:	4770      	bx	lr

0800270c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 800270c:	2014      	movs	r0, #20
 800270e:	4770      	bx	lr

08002710 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002710:	2314      	movs	r3, #20
 8002712:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002716:	3008      	adds	r0, #8
 8002718:	4770      	bx	lr

0800271a <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 800271a:	2314      	movs	r3, #20
 800271c:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002720:	3008      	adds	r0, #8
 8002722:	4770      	bx	lr

08002724 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002724:	2001      	movs	r0, #1
 8002726:	4770      	bx	lr

08002728 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002728:	f243 10d8 	movw	r0, #12760	@ 0x31d8
 800272c:	4770      	bx	lr

0800272e <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800272e:	f243 13d8 	movw	r3, #12760	@ 0x31d8
 8002732:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002736:	3008      	adds	r0, #8
 8002738:	4770      	bx	lr

0800273a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800273a:	f243 13d8 	movw	r3, #12760	@ 0x31d8
 800273e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002742:	3008      	adds	r0, #8
 8002744:	4770      	bx	lr

08002746 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002746:	2001      	movs	r0, #1
 8002748:	4770      	bx	lr

0800274a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800274a:	2010      	movs	r0, #16
 800274c:	4770      	bx	lr

0800274e <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800274e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002752:	3008      	adds	r0, #8
 8002754:	4770      	bx	lr

08002756 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002756:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800275a:	3008      	adds	r0, #8
 800275c:	4770      	bx	lr

0800275e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 800275e:	4608      	mov	r0, r1
 8002760:	f000 bcea 	b.w	8003138 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08002764 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002764:	b510      	push	{r4, lr}
 8002766:	4b03      	ldr	r3, [pc, #12]	@ (8002774 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002768:	6003      	str	r3, [r0, #0]
 800276a:	4604      	mov	r4, r0
 800276c:	f008 f93d 	bl	800a9ea <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002770:	4620      	mov	r0, r4
 8002772:	bd10      	pop	{r4, pc}
 8002774:	080269d4 	.word	0x080269d4

08002778 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002778:	b510      	push	{r4, lr}
 800277a:	4604      	mov	r4, r0
 800277c:	f7ff fff2 	bl	8002764 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002780:	4620      	mov	r0, r4
 8002782:	211c      	movs	r1, #28
 8002784:	f020 ffea 	bl	802375c <_ZdlPvj>
 8002788:	4620      	mov	r0, r4
 800278a:	bd10      	pop	{r4, pc}

0800278c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800278c:	b510      	push	{r4, lr}
 800278e:	4b03      	ldr	r3, [pc, #12]	@ (800279c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002790:	6003      	str	r3, [r0, #0]
 8002792:	4604      	mov	r4, r0
 8002794:	f008 f929 	bl	800a9ea <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002798:	4620      	mov	r0, r4
 800279a:	bd10      	pop	{r4, pc}
 800279c:	080269a0 	.word	0x080269a0

080027a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80027a0:	b510      	push	{r4, lr}
 80027a2:	4604      	mov	r4, r0
 80027a4:	f7ff fff2 	bl	800278c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80027a8:	4620      	mov	r0, r4
 80027aa:	f243 11e0 	movw	r1, #12768	@ 0x31e0
 80027ae:	f020 ffd5 	bl	802375c <_ZdlPvj>
 80027b2:	4620      	mov	r0, r4
 80027b4:	bd10      	pop	{r4, pc}
	...

080027b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80027b8:	b510      	push	{r4, lr}
 80027ba:	4b03      	ldr	r3, [pc, #12]	@ (80027c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80027bc:	6003      	str	r3, [r0, #0]
 80027be:	4604      	mov	r4, r0
 80027c0:	f008 f913 	bl	800a9ea <_ZN8touchgfx17AbstractPartitionD1Ev>
 80027c4:	4620      	mov	r0, r4
 80027c6:	bd10      	pop	{r4, pc}
 80027c8:	0802696c 	.word	0x0802696c

080027cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80027cc:	b510      	push	{r4, lr}
 80027ce:	4604      	mov	r4, r0
 80027d0:	f7ff fff2 	bl	80027b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80027d4:	4620      	mov	r0, r4
 80027d6:	2118      	movs	r1, #24
 80027d8:	f020 ffc0 	bl	802375c <_ZdlPvj>
 80027dc:	4620      	mov	r0, r4
 80027de:	bd10      	pop	{r4, pc}

080027e0 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80027e0:	b510      	push	{r4, lr}
 80027e2:	4b09      	ldr	r3, [pc, #36]	@ (8002808 <_ZN12FrontendHeapD1Ev+0x28>)
 80027e4:	6003      	str	r3, [r0, #0]
 80027e6:	4604      	mov	r4, r0
 80027e8:	f500 5048 	add.w	r0, r0, #12800	@ 0x3200
 80027ec:	300c      	adds	r0, #12
 80027ee:	f7ff ffb9 	bl	8002764 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80027f2:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 80027f6:	f7ff ffc9 	bl	800278c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80027fa:	f104 0014 	add.w	r0, r4, #20
 80027fe:	f7ff ffdb 	bl	80027b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002802:	4620      	mov	r0, r4
 8002804:	bd10      	pop	{r4, pc}
 8002806:	bf00      	nop
 8002808:	08026a08 	.word	0x08026a08

0800280c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800280c:	b508      	push	{r3, lr}
 800280e:	4802      	ldr	r0, [pc, #8]	@ (8002818 <__tcf_0+0xc>)
 8002810:	f7ff ffe6 	bl	80027e0 <_ZN12FrontendHeapD1Ev>
 8002814:	bd08      	pop	{r3, pc}
 8002816:	bf00      	nop
 8002818:	20001538 	.word	0x20001538

0800281c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 800281c:	b510      	push	{r4, lr}
 800281e:	4604      	mov	r4, r0
 8002820:	f7ff ffde 	bl	80027e0 <_ZN12FrontendHeapD1Ev>
 8002824:	4620      	mov	r0, r4
 8002826:	f243 3190 	movw	r1, #13200	@ 0x3390
 800282a:	f020 ff97 	bl	802375c <_ZdlPvj>
 800282e:	4620      	mov	r0, r4
 8002830:	bd10      	pop	{r4, pc}
	...

08002834 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002834:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002838:	f000 fac2 	bl	8002dc0 <_ZN14BitmapDatabase11getInstanceEv>
 800283c:	4605      	mov	r5, r0
 800283e:	f000 fac3 	bl	8002dc8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002842:	2400      	movs	r4, #0
 8002844:	4601      	mov	r1, r0
 8002846:	4623      	mov	r3, r4
 8002848:	4628      	mov	r0, r5
 800284a:	4622      	mov	r2, r4
 800284c:	9400      	str	r4, [sp, #0]
 800284e:	f011 fed3 	bl	80145f8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002852:	4b27      	ldr	r3, [pc, #156]	@ (80028f0 <touchgfx_init+0xbc>)
 8002854:	4a27      	ldr	r2, [pc, #156]	@ (80028f4 <touchgfx_init+0xc0>)
 8002856:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002858:	4620      	mov	r0, r4
 800285a:	f002 f839 	bl	80048d0 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 800285e:	4d26      	ldr	r5, [pc, #152]	@ (80028f8 <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8002860:	4b26      	ldr	r3, [pc, #152]	@ (80028fc <touchgfx_init+0xc8>)
 8002862:	4a27      	ldr	r2, [pc, #156]	@ (8002900 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 8002864:	4827      	ldr	r0, [pc, #156]	@ (8002904 <touchgfx_init+0xd0>)
 8002866:	609a      	str	r2, [r3, #8]
 8002868:	f011 fe2e 	bl	80144c8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800286c:	682b      	ldr	r3, [r5, #0]
 800286e:	f3bf 8f5b 	dmb	ish
 8002872:	07db      	lsls	r3, r3, #31
 8002874:	d436      	bmi.n	80028e4 <touchgfx_init+0xb0>
 8002876:	4628      	mov	r0, r5
 8002878:	f020 ff72 	bl	8023760 <__cxa_guard_acquire>
 800287c:	b390      	cbz	r0, 80028e4 <touchgfx_init+0xb0>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 800287e:	4c22      	ldr	r4, [pc, #136]	@ (8002908 <touchgfx_init+0xd4>)
          screenStorage(scr),
          transitionStorage(tra),
 8002880:	4f22      	ldr	r7, [pc, #136]	@ (800290c <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002882:	4b23      	ldr	r3, [pc, #140]	@ (8002910 <touchgfx_init+0xdc>)
 8002884:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8002886:	f107 0628 	add.w	r6, r7, #40	@ 0x28
        : presenterStorage(pres),
 800288a:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 800288e:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
        : presenterStorage(pres),
 8002892:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8002894:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002898:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 800289a:	6126      	str	r6, [r4, #16]
 800289c:	f008 f8a6 	bl	800a9ec <_ZN8touchgfx17AbstractPartitionC1Ev>
 80028a0:	4b1c      	ldr	r3, [pc, #112]	@ (8002914 <touchgfx_init+0xe0>)
 80028a2:	6163      	str	r3, [r4, #20]
 80028a4:	4640      	mov	r0, r8
 80028a6:	f008 f8a1 	bl	800a9ec <_ZN8touchgfx17AbstractPartitionC1Ev>
 80028aa:	4b1b      	ldr	r3, [pc, #108]	@ (8002918 <touchgfx_init+0xe4>)
 80028ac:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80028ae:	4638      	mov	r0, r7
 80028b0:	f008 f89c 	bl	800a9ec <_ZN8touchgfx17AbstractPartitionC1Ev>
 80028b4:	f504 5340 	add.w	r3, r4, #12288	@ 0x3000
 80028b8:	f503 700a 	add.w	r0, r3, #552	@ 0x228
 80028bc:	4a17      	ldr	r2, [pc, #92]	@ (800291c <touchgfx_init+0xe8>)
 80028be:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 80028c2:	f002 f889 	bl	80049d8 <_ZN5ModelC1Ev>
 80028c6:	4622      	mov	r2, r4
 80028c8:	f107 011c 	add.w	r1, r7, #28
 80028cc:	4630      	mov	r0, r6
 80028ce:	f002 f879 	bl	80049c4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80028d2:	4630      	mov	r0, r6
 80028d4:	f000 fc30 	bl	8003138 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 80028d8:	4811      	ldr	r0, [pc, #68]	@ (8002920 <touchgfx_init+0xec>)
 80028da:	f021 fe99 	bl	8024610 <atexit>
 80028de:	4628      	mov	r0, r5
 80028e0:	f020 ff4a 	bl	8023778 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80028e4:	480f      	ldr	r0, [pc, #60]	@ (8002924 <touchgfx_init+0xf0>)
}
 80028e6:	b002      	add	sp, #8
 80028e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80028ec:	f7ff bbe4 	b.w	80020b8 <_ZN11TouchGFXHAL10initializeEv>
 80028f0:	20015824 	.word	0x20015824
 80028f4:	200006e4 	.word	0x200006e4
 80028f8:	20001534 	.word	0x20001534
 80028fc:	20000704 	.word	0x20000704
 8002900:	200006e8 	.word	0x200006e8
 8002904:	20000018 	.word	0x20000018
 8002908:	20001538 	.word	0x20001538
 800290c:	20004744 	.word	0x20004744
 8002910:	08026a08 	.word	0x08026a08
 8002914:	0802696c 	.word	0x0802696c
 8002918:	080269a0 	.word	0x080269a0
 800291c:	080269d4 	.word	0x080269d4
 8002920:	0800280d 	.word	0x0800280d
 8002924:	20000660 	.word	0x20000660

08002928 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002928:	4770      	bx	lr
	...

0800292c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 800292c:	4801      	ldr	r0, [pc, #4]	@ (8002934 <touchgfx_taskEntry+0x8>)
 800292e:	f7ff bbd1 	b.w	80020d4 <_ZN11TouchGFXHAL9taskEntryEv>
 8002932:	bf00      	nop
 8002934:	20000660 	.word	0x20000660

08002938 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002938:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800293a:	4e26      	ldr	r6, [pc, #152]	@ (80029d4 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 800293c:	4c26      	ldr	r4, [pc, #152]	@ (80029d8 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 800293e:	4d27      	ldr	r5, [pc, #156]	@ (80029dc <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8002940:	4b27      	ldr	r3, [pc, #156]	@ (80029e0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8002942:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002944:	4630      	mov	r0, r6
 8002946:	f7ff fe51 	bl	80025ec <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800294a:	4628      	mov	r0, r5
 800294c:	f016 ff5a 	bl	8019804 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 8002950:	4824      	ldr	r0, [pc, #144]	@ (80029e4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8002952:	f00f fb2f 	bl	8011fb4 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 8002956:	4b24      	ldr	r3, [pc, #144]	@ (80029e8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 8002958:	4824      	ldr	r0, [pc, #144]	@ (80029ec <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 800295a:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 800295c:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800295e:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 8002962:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8002966:	4922      	ldr	r1, [pc, #136]	@ (80029f0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002968:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 800296a:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 800296e:	4921      	ldr	r1, [pc, #132]	@ (80029f4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 8002970:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 8002974:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 8002978:	491f      	ldr	r1, [pc, #124]	@ (80029f8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 800297a:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 800297e:	491f      	ldr	r1, [pc, #124]	@ (80029fc <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002980:	481f      	ldr	r0, [pc, #124]	@ (8002a00 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 8002982:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002984:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 8002986:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800298a:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800298e:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8002992:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8002996:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 800299a:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 800299e:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 80029a2:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 80029a6:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 80029a8:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 80029ac:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 80029ae:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80029b2:	8001      	strh	r1, [r0, #0]
 80029b4:	4813      	ldr	r0, [pc, #76]	@ (8002a04 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 80029b6:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80029b8:	4813      	ldr	r0, [pc, #76]	@ (8002a08 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 80029ba:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80029be:	8001      	strh	r1, [r0, #0]
 80029c0:	4812      	ldr	r0, [pc, #72]	@ (8002a0c <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 80029c2:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80029c4:	4912      	ldr	r1, [pc, #72]	@ (8002a10 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 80029c6:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80029c8:	2201      	movs	r2, #1
 80029ca:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80029ce:	4a11      	ldr	r2, [pc, #68]	@ (8002a14 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 80029d0:	601a      	str	r2, [r3, #0]
}
 80029d2:	bd70      	pop	{r4, r5, r6, pc}
 80029d4:	20000790 	.word	0x20000790
 80029d8:	20001530 	.word	0x20001530
 80029dc:	20000704 	.word	0x20000704
 80029e0:	08026818 	.word	0x08026818
 80029e4:	200006e8 	.word	0x200006e8
 80029e8:	20000660 	.word	0x20000660
 80029ec:	01010000 	.word	0x01010000
 80029f0:	01000001 	.word	0x01000001
 80029f4:	00500400 	.word	0x00500400
 80029f8:	0014001a 	.word	0x0014001a
 80029fc:	200157c0 	.word	0x200157c0
 8002a00:	200157b4 	.word	0x200157b4
 8002a04:	200157ba 	.word	0x200157ba
 8002a08:	200157b6 	.word	0x200157b6
 8002a0c:	200157bc 	.word	0x200157bc
 8002a10:	200157b8 	.word	0x200157b8
 8002a14:	08026830 	.word	0x08026830

08002a18 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8002a18:	4801      	ldr	r0, [pc, #4]	@ (8002a20 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8002a1a:	f7ff bc73 	b.w	8002304 <_ZN8STM32DMAD1Ev>
 8002a1e:	bf00      	nop
 8002a20:	20000790 	.word	0x20000790

08002a24 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002a24:	2000      	movs	r0, #0
 8002a26:	4770      	bx	lr

08002a28 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002a28:	8081      	strh	r1, [r0, #4]
    }
 8002a2a:	4770      	bx	lr

08002a2c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002a2c:	80c1      	strh	r1, [r0, #6]
    }
 8002a2e:	4770      	bx	lr

08002a30 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002a30:	8101      	strh	r1, [r0, #8]
    }
 8002a32:	4770      	bx	lr

08002a34 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002a34:	8141      	strh	r1, [r0, #10]
    }
 8002a36:	4770      	bx	lr

08002a38 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002a38:	4770      	bx	lr

08002a3a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002a3a:	4770      	bx	lr

08002a3c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002a3c:	4770      	bx	lr

08002a3e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002a3e:	4770      	bx	lr

08002a40 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002a40:	4770      	bx	lr

08002a42 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002a42:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002a44:	88c4      	ldrh	r4, [r0, #6]
 8002a46:	6803      	ldr	r3, [r0, #0]
 8002a48:	1b12      	subs	r2, r2, r4
 8002a4a:	8884      	ldrh	r4, [r0, #4]
 8002a4c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002a4e:	1b09      	subs	r1, r1, r4
 8002a50:	b212      	sxth	r2, r2
    }
 8002a52:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002a56:	b209      	sxth	r1, r1
 8002a58:	4718      	bx	r3

08002a5a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002a5a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002a5e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002a60:	f04f 33ff 	mov.w	r3, #4294967295
 8002a64:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002a66:	6813      	ldr	r3, [r2, #0]
 8002a68:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002a6a:	6010      	str	r0, [r2, #0]
    }
 8002a6c:	4770      	bx	lr

08002a6e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002a6e:	2000      	movs	r0, #0
 8002a70:	4770      	bx	lr

08002a72 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8002a72:	888b      	ldrh	r3, [r1, #4]
 8002a74:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8002a76:	2001      	movs	r0, #1
 8002a78:	4770      	bx	lr

08002a7a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002a7a:	4770      	bx	lr

08002a7c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a7c:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 8002a80:	4770      	bx	lr

08002a82 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8002a82:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8002a86:	4770      	bx	lr

08002a88 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002a88:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002a8a:	2200      	movs	r2, #0
        return rect.width;
 8002a8c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002a90:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002a94:	8002      	strh	r2, [r0, #0]
 8002a96:	8042      	strh	r2, [r0, #2]
 8002a98:	8084      	strh	r4, [r0, #4]
 8002a9a:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8002a9c:	bd10      	pop	{r4, pc}

08002a9e <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002a9e:	2200      	movs	r2, #0
 8002aa0:	8002      	strh	r2, [r0, #0]
 8002aa2:	8042      	strh	r2, [r0, #2]
 8002aa4:	8082      	strh	r2, [r0, #4]
 8002aa6:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002aa8:	4770      	bx	lr

08002aaa <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 8002aaa:	7701      	strb	r1, [r0, #28]
    }
 8002aac:	4770      	bx	lr

08002aae <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 8002aae:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 8002ab2:	4770      	bx	lr

08002ab4 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 8002ab4:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 8002ab8:	4770      	bx	lr

08002aba <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 8002aba:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 8002abe:	4770      	bx	lr

08002ac0 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 8002ac0:	2001      	movs	r0, #1
 8002ac2:	4770      	bx	lr

08002ac4 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 8002ac4:	3098      	adds	r0, #152	@ 0x98
 8002ac6:	4770      	bx	lr

08002ac8 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 8002ac8:	308c      	adds	r0, #140	@ 0x8c
 8002aca:	4770      	bx	lr

08002acc <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 8002acc:	3084      	adds	r0, #132	@ 0x84
 8002ace:	4770      	bx	lr

08002ad0 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8002ad0:	4770      	bx	lr

08002ad2 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8002ad2:	4770      	bx	lr

08002ad4 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 8002ad4:	4770      	bx	lr
	...

08002ad8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002ad8:	4b03      	ldr	r3, [pc, #12]	@ (8002ae8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8002ada:	2290      	movs	r2, #144	@ 0x90
 8002adc:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8002ae0:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8002ae4:	4770      	bx	lr
 8002ae6:	bf00      	nop
 8002ae8:	e000e100 	.word	0xe000e100

08002aec <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8002aec:	4a09      	ldr	r2, [pc, #36]	@ (8002b14 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8002aee:	490a      	ldr	r1, [pc, #40]	@ (8002b18 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8002af0:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8002af2:	480a      	ldr	r0, [pc, #40]	@ (8002b1c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8002af4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002af8:	3b01      	subs	r3, #1
 8002afa:	b29b      	uxth	r3, r3
 8002afc:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8002afe:	6911      	ldr	r1, [r2, #16]
 8002b00:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002b04:	3901      	subs	r1, #1
 8002b06:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002b08:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002b0a:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8002b0c:	f043 0301 	orr.w	r3, r3, #1
 8002b10:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8002b12:	4770      	bx	lr
 8002b14:	40016800 	.word	0x40016800
 8002b18:	200048ca 	.word	0x200048ca
 8002b1c:	200048c8 	.word	0x200048c8

08002b20 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002b20:	4b01      	ldr	r3, [pc, #4]	@ (8002b28 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8002b22:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8002b26:	4770      	bx	lr
 8002b28:	40016800 	.word	0x40016800

08002b2c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002b2c:	4b02      	ldr	r3, [pc, #8]	@ (8002b38 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002b2e:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002b30:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002b34:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8002b36:	4770      	bx	lr
 8002b38:	40016800 	.word	0x40016800

08002b3c <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8002b3c:	b510      	push	{r4, lr}
 8002b3e:	212c      	movs	r1, #44	@ 0x2c
 8002b40:	4604      	mov	r4, r0
 8002b42:	f020 fe0b 	bl	802375c <_ZdlPvj>
 8002b46:	4620      	mov	r0, r4
 8002b48:	bd10      	pop	{r4, pc}

08002b4a <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8002b4a:	b510      	push	{r4, lr}
 8002b4c:	21bc      	movs	r1, #188	@ 0xbc
 8002b4e:	4604      	mov	r4, r0
 8002b50:	f020 fe04 	bl	802375c <_ZdlPvj>
 8002b54:	4620      	mov	r0, r4
 8002b56:	bd10      	pop	{r4, pc}

08002b58 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002b58:	b570      	push	{r4, r5, r6, lr}
 8002b5a:	4604      	mov	r4, r0
    HAL::initialize();
 8002b5c:	f008 fa43 	bl	800afe6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002b60:	6823      	ldr	r3, [r4, #0]
 8002b62:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 8002b64:	f00d ff96 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 8002b68:	4601      	mov	r1, r0
 8002b6a:	4620      	mov	r0, r4
 8002b6c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002b6e:	6823      	ldr	r3, [r4, #0]
 8002b70:	4a05      	ldr	r2, [pc, #20]	@ (8002b88 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8002b72:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 8002b76:	4620      	mov	r0, r4
 8002b78:	46ac      	mov	ip, r5
 8002b7a:	2300      	movs	r3, #0
}
 8002b7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002b80:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8002b84:	4760      	bx	ip
 8002b86:	bf00      	nop
 8002b88:	d004b000 	.word	0xd004b000

08002b8c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002b8c:	f008 ba12 	b.w	800afb4 <_ZN8touchgfx3HAL10beginFrameEv>

08002b90 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002b90:	f008 ba1c 	b.w	800afcc <_ZN8touchgfx3HAL8endFrameEv>

08002b94 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002b94:	f008 b9d8 	b.w	800af48 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002b98 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002b98:	f008 bb47 	b.w	800b22a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002b9c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002b9c:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002ba0:	b112      	cbz	r2, 8002ba8 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002ba2:	6803      	ldr	r3, [r0, #0]
 8002ba4:	695b      	ldr	r3, [r3, #20]
 8002ba6:	4718      	bx	r3
    }
 8002ba8:	4770      	bx	lr

08002baa <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002baa:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002bae:	b11a      	cbz	r2, 8002bb8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002bb0:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8002bb4:	b102      	cbz	r2, 8002bb8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002bb6:	6018      	str	r0, [r3, #0]
        }
    }
 8002bb8:	4770      	bx	lr
	...

08002bbc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002bbc:	4b03      	ldr	r3, [pc, #12]	@ (8002bcc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8002bbe:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8002bc2:	609a      	str	r2, [r3, #8]
 8002bc4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002bc8:	609a      	str	r2, [r3, #8]
}
 8002bca:	4770      	bx	lr
 8002bcc:	e000e100 	.word	0xe000e100

08002bd0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002bd0:	4b08      	ldr	r3, [pc, #32]	@ (8002bf4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8002bd2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8002bd6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002bda:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002bde:	f3bf 8f6f 	isb	sy
 8002be2:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002be6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002bea:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002bee:	f3bf 8f6f 	isb	sy
}
 8002bf2:	4770      	bx	lr
 8002bf4:	e000e100 	.word	0xe000e100

08002bf8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002bf8:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8002bfa:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002bfc:	4e12      	ldr	r6, [pc, #72]	@ (8002c48 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8002bfe:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8002c00:	4b12      	ldr	r3, [pc, #72]	@ (8002c4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8002c02:	6003      	str	r3, [r0, #0]
 8002c04:	6833      	ldr	r3, [r6, #0]
 8002c06:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 8002c0a:	4605      	mov	r5, r0
 8002c0c:	b10a      	cbz	r2, 8002c12 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8002c0e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8002c10:	b900      	cbnz	r0, 8002c14 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8002c12:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8002c14:	6803      	ldr	r3, [r0, #0]
 8002c16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002c18:	4798      	blx	r3
        return auxiliaryLCD;
 8002c1a:	6833      	ldr	r3, [r6, #0]
 8002c1c:	fab0 f480 	clz	r4, r0
 8002c20:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8002c22:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8002c24:	b130      	cbz	r0, 8002c34 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8002c26:	6803      	ldr	r3, [r0, #0]
 8002c28:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002c2a:	4798      	blx	r3
 8002c2c:	2800      	cmp	r0, #0
 8002c2e:	bf08      	it	eq
 8002c30:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8002c34:	b92c      	cbnz	r4, 8002c42 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8002c36:	4b06      	ldr	r3, [pc, #24]	@ (8002c50 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8002c38:	4a06      	ldr	r2, [pc, #24]	@ (8002c54 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8002c3a:	4807      	ldr	r0, [pc, #28]	@ (8002c58 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8002c3c:	212c      	movs	r1, #44	@ 0x2c
 8002c3e:	f021 fcc9 	bl	80245d4 <__assert_func>
    }
 8002c42:	4628      	mov	r0, r5
 8002c44:	bd70      	pop	{r4, r5, r6, pc}
 8002c46:	bf00      	nop
 8002c48:	200157c0 	.word	0x200157c0
 8002c4c:	08026a1c 	.word	0x08026a1c
 8002c50:	08025c6b 	.word	0x08025c6b
 8002c54:	08025cc9 	.word	0x08025cc9
 8002c58:	08025d02 	.word	0x08025d02

08002c5c <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8002c5c:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 8002c5e:	4e25      	ldr	r6, [pc, #148]	@ (8002cf4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8002c60:	6835      	ldr	r5, [r6, #0]
 8002c62:	f3bf 8f5b 	dmb	ish
 8002c66:	f015 0501 	ands.w	r5, r5, #1
 8002c6a:	d140      	bne.n	8002cee <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8002c6c:	4630      	mov	r0, r6
 8002c6e:	f020 fd77 	bl	8023760 <__cxa_guard_acquire>
 8002c72:	2800      	cmp	r0, #0
 8002c74:	d03b      	beq.n	8002cee <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 8002c76:	4c20      	ldr	r4, [pc, #128]	@ (8002cf8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8002c78:	4b20      	ldr	r3, [pc, #128]	@ (8002cfc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8002c7a:	6125      	str	r5, [r4, #16]
 8002c7c:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8002c80:	e9c4 3500 	strd	r3, r5, [r4]
 8002c84:	e9c4 5502 	strd	r5, r5, [r4, #8]
 8002c88:	84e5      	strh	r5, [r4, #38]	@ 0x26
 8002c8a:	62a5      	str	r5, [r4, #40]	@ 0x28
 8002c8c:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 8002c8e:	f00f fc76 	bl	801257e <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 8002c92:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002c96:	f00a fd2f 	bl	800d6f8 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8002c9a:	4b19      	ldr	r3, [pc, #100]	@ (8002d00 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 8002c9c:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8002c9e:	4620      	mov	r0, r4
 8002ca0:	4b18      	ldr	r3, [pc, #96]	@ (8002d04 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 8002ca2:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002ca6:	f7ff ffa7 	bl	8002bf8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002caa:	4b17      	ldr	r3, [pc, #92]	@ (8002d08 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 8002cac:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 8002cb0:	3324      	adds	r3, #36	@ 0x24
 8002cb2:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 8002cb6:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 8002cba:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 8002cbe:	2300      	movs	r3, #0
 8002cc0:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 8002cc4:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 8002cc8:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 8002ccc:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 8002cd0:	480e      	ldr	r0, [pc, #56]	@ (8002d0c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 8002cd2:	4b0f      	ldr	r3, [pc, #60]	@ (8002d10 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002cd4:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 8002cd8:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 8002cdc:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 8002ce0:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 8002ce4:	f021 fc94 	bl	8024610 <atexit>
 8002ce8:	4630      	mov	r0, r6
 8002cea:	f020 fd45 	bl	8023778 <__cxa_guard_release>
}
 8002cee:	4802      	ldr	r0, [pc, #8]	@ (8002cf8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8002cf0:	bd70      	pop	{r4, r5, r6, pc}
 8002cf2:	bf00      	nop
 8002cf4:	200048cc 	.word	0x200048cc
 8002cf8:	200048d0 	.word	0x200048d0
 8002cfc:	080276dc 	.word	0x080276dc
 8002d00:	08026a3c 	.word	0x08026a3c
 8002d04:	08026ab4 	.word	0x08026ab4
 8002d08:	08027690 	.word	0x08027690
 8002d0c:	08002ad5 	.word	0x08002ad5
 8002d10:	08027670 	.word	0x08027670

08002d14 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002d14:	b538      	push	{r3, r4, r5, lr}
        return instance;
 8002d16:	4c18      	ldr	r4, [pc, #96]	@ (8002d78 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 8002d18:	6823      	ldr	r3, [r4, #0]
 8002d1a:	b35b      	cbz	r3, 8002d74 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002d1c:	4b17      	ldr	r3, [pc, #92]	@ (8002d7c <HAL_LTDC_LineEventCallback+0x68>)
 8002d1e:	4a18      	ldr	r2, [pc, #96]	@ (8002d80 <HAL_LTDC_LineEventCallback+0x6c>)
 8002d20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d22:	8811      	ldrh	r1, [r2, #0]
 8002d24:	428b      	cmp	r3, r1
 8002d26:	d116      	bne.n	8002d56 <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002d28:	4b16      	ldr	r3, [pc, #88]	@ (8002d84 <HAL_LTDC_LineEventCallback+0x70>)
 8002d2a:	8819      	ldrh	r1, [r3, #0]
 8002d2c:	f003 ffe2 	bl	8006cf4 <HAL_LTDC_ProgramLineEvent>
 8002d30:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 8002d32:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8002d36:	2500      	movs	r5, #0
        vSyncCnt++;
 8002d38:	3201      	adds	r2, #1
 8002d3a:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8002d3e:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002d42:	f7ff fab3 	bl	80022ac <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002d46:	6820      	ldr	r0, [r4, #0]
 8002d48:	f008 feca 	bl	800bae0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8002d4c:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8002d4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002d52:	f7ff b8f3 	b.w	8001f3c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002d56:	f003 ffcd 	bl	8006cf4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002d5a:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8002d5c:	6823      	ldr	r3, [r4, #0]
 8002d5e:	4620      	mov	r0, r4
 8002d60:	6a1b      	ldr	r3, [r3, #32]
 8002d62:	4798      	blx	r3
        isFrontPorchEntered = true;
 8002d64:	2301      	movs	r3, #1
 8002d66:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002d6a:	2000      	movs	r0, #0
    }
 8002d6c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002d70:	f7ff b90e 	b.w	8001f90 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8002d74:	bd38      	pop	{r3, r4, r5, pc}
 8002d76:	bf00      	nop
 8002d78:	200157c0 	.word	0x200157c0
 8002d7c:	40016800 	.word	0x40016800
 8002d80:	200048ca 	.word	0x200048ca
 8002d84:	200048c8 	.word	0x200048c8

08002d88 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // arialbd_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // arialbd_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002d88:	4770      	bx	lr

08002d8a <_ZN23ApplicationFontProviderD0Ev>:
 8002d8a:	b510      	push	{r4, lr}
 8002d8c:	2104      	movs	r1, #4
 8002d8e:	4604      	mov	r4, r0
 8002d90:	f020 fce4 	bl	802375c <_ZdlPvj>
 8002d94:	4620      	mov	r0, r4
 8002d96:	bd10      	pop	{r4, pc}

08002d98 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002d98:	2901      	cmp	r1, #1
{
 8002d9a:	b508      	push	{r3, lr}
    switch (typography)
 8002d9c:	d006      	beq.n	8002dac <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002d9e:	2902      	cmp	r1, #2
 8002da0:	d008      	beq.n	8002db4 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002da2:	b959      	cbnz	r1, 8002dbc <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // arialbd_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002da4:	f001 fde0 	bl	8004968 <_ZN17TypedTextDatabase8getFontsEv>
 8002da8:	6800      	ldr	r0, [r0, #0]
        // arialbd_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002daa:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002dac:	f001 fddc 	bl	8004968 <_ZN17TypedTextDatabase8getFontsEv>
 8002db0:	6840      	ldr	r0, [r0, #4]
 8002db2:	e7fa      	b.n	8002daa <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002db4:	f001 fdd8 	bl	8004968 <_ZN17TypedTextDatabase8getFontsEv>
 8002db8:	6880      	ldr	r0, [r0, #8]
 8002dba:	e7f6      	b.n	8002daa <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002dbc:	2000      	movs	r0, #0
 8002dbe:	e7f4      	b.n	8002daa <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002dc0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002dc0:	4800      	ldr	r0, [pc, #0]	@ (8002dc4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002dc2:	4770      	bx	lr
 8002dc4:	08026b0c 	.word	0x08026b0c

08002dc8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002dc8:	2007      	movs	r0, #7
 8002dca:	4770      	bx	lr

08002dcc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002dcc:	b513      	push	{r0, r1, r4, lr}
 8002dce:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002dd0:	b151      	cbz	r1, 8002de8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002dd2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002dd4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002dd6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002dda:	aa01      	add	r2, sp, #4
 8002ddc:	689c      	ldr	r4, [r3, #8]
 8002dde:	f10d 0303 	add.w	r3, sp, #3
 8002de2:	47a0      	blx	r4
        return glyph;
    }
 8002de4:	b002      	add	sp, #8
 8002de6:	bd10      	pop	{r4, pc}
            return 0;
 8002de8:	4608      	mov	r0, r1
 8002dea:	e7fb      	b.n	8002de4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002dec <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002dec:	89c0      	ldrh	r0, [r0, #14]
 8002dee:	4770      	bx	lr

08002df0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002df0:	8a00      	ldrh	r0, [r0, #16]
 8002df2:	4770      	bx	lr

08002df4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002df4:	88c0      	ldrh	r0, [r0, #6]
 8002df6:	4770      	bx	lr

08002df8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002df8:	8880      	ldrh	r0, [r0, #4]
 8002dfa:	4770      	bx	lr

08002dfc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002dfc:	7a80      	ldrb	r0, [r0, #10]
    }
 8002dfe:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002e02:	4770      	bx	lr

08002e04 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002e04:	7a80      	ldrb	r0, [r0, #10]
    }
 8002e06:	09c0      	lsrs	r0, r0, #7
 8002e08:	4770      	bx	lr

08002e0a <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002e0a:	2000      	movs	r0, #0
 8002e0c:	4770      	bx	lr
	...

08002e10 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002e10:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002e18 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002e14:	4770      	bx	lr
 8002e16:	bf00      	nop
 8002e18:	00000000 	.word	0x00000000

08002e1c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002e1c:	4770      	bx	lr

08002e1e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002e1e:	b510      	push	{r4, lr}
    }
 8002e20:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002e22:	4604      	mov	r4, r0
    }
 8002e24:	f020 fc9a 	bl	802375c <_ZdlPvj>
 8002e28:	4620      	mov	r0, r4
 8002e2a:	bd10      	pop	{r4, pc}

08002e2c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002e2c:	4770      	bx	lr

08002e2e <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002e2e:	4770      	bx	lr

08002e30 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002e30:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8002e34:	6808      	ldr	r0, [r1, #0]
 8002e36:	6849      	ldr	r1, [r1, #4]
 8002e38:	c303      	stmia	r3!, {r0, r1}
    }
 8002e3a:	4770      	bx	lr

08002e3c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002e3c:	4770      	bx	lr

08002e3e <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002e3e:	4770      	bx	lr

08002e40 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002e40:	6041      	str	r1, [r0, #4]
    }
 8002e42:	4770      	bx	lr

08002e44 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002e44:	4770      	bx	lr

08002e46 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002e46:	4770      	bx	lr

08002e48 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8002e48:	4b06      	ldr	r3, [pc, #24]	@ (8002e64 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002e4a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002e4e:	2300      	movs	r3, #0
 8002e50:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002e54:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002e58:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002e5c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002e60:	4770      	bx	lr
 8002e62:	bf00      	nop
 8002e64:	08003345 	.word	0x08003345

08002e68 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002e68:	2301      	movs	r3, #1
 8002e6a:	7203      	strb	r3, [r0, #8]
    }
 8002e6c:	4770      	bx	lr

08002e6e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8002e6e:	4770      	bx	lr

08002e70 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EED1Ev>:
{
/**
 * A Transition that slides the new screen over the previous \e from the given direction.
 */
template <Direction templateDirection>
class CoverTransition : public Transition
 8002e70:	4770      	bx	lr

08002e72 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002e72:	4770      	bx	lr

08002e74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
    {
        Transition::init();
    }
 8002e74:	4770      	bx	lr

08002e76 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv>:

            d = d->getNextSibling();
        }
    }

    virtual void init()
 8002e76:	b538      	push	{r3, r4, r5, lr}
 8002e78:	4605      	mov	r5, r0
    {
        Transition::init();

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 8002e7a:	6840      	ldr	r0, [r0, #4]
 8002e7c:	6803      	ldr	r3, [r0, #0]
 8002e7e:	69db      	ldr	r3, [r3, #28]
 8002e80:	4798      	blx	r3
 8002e82:	4604      	mov	r4, r0
        while (d)
 8002e84:	b904      	cbnz	r4, 8002e88 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0x12>
                break;
            }

            d = d->getNextSibling();
        }
    }
 8002e86:	bd38      	pop	{r3, r4, r5, pc}
                d->setX(d->getX() - targetValue);
 8002e88:	88a1      	ldrh	r1, [r4, #4]
 8002e8a:	89ab      	ldrh	r3, [r5, #12]
 8002e8c:	1ac9      	subs	r1, r1, r3
 8002e8e:	6823      	ldr	r3, [r4, #0]
 8002e90:	4620      	mov	r0, r4
 8002e92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002e94:	b209      	sxth	r1, r1
 8002e96:	4798      	blx	r3
        return nextSibling;
 8002e98:	69a4      	ldr	r4, [r4, #24]
 8002e9a:	e7f3      	b.n	8002e84 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0xe>

08002e9c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002e9c:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002e9e:	68c2      	ldr	r2, [r0, #12]
 8002ea0:	6841      	ldr	r1, [r0, #4]
 8002ea2:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002ea4:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002ea6:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002eaa:	07d2      	lsls	r2, r2, #31
 8002eac:	bf48      	it	mi
 8002eae:	590a      	ldrmi	r2, [r1, r4]
 8002eb0:	689b      	ldr	r3, [r3, #8]
    }
 8002eb2:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002eb6:	bf48      	it	mi
 8002eb8:	58d3      	ldrmi	r3, [r2, r3]
 8002eba:	4718      	bx	r3

08002ebc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002ebc:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002ebe:	6840      	ldr	r0, [r0, #4]
 8002ec0:	b130      	cbz	r0, 8002ed0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002ec2:	689a      	ldr	r2, [r3, #8]
 8002ec4:	b91a      	cbnz	r2, 8002ece <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002ec6:	68d8      	ldr	r0, [r3, #12]
 8002ec8:	f000 0001 	and.w	r0, r0, #1
 8002ecc:	4770      	bx	lr
 8002ece:	2001      	movs	r0, #1
    }
 8002ed0:	4770      	bx	lr

08002ed2 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002ed2:	b510      	push	{r4, lr}
 8002ed4:	210c      	movs	r1, #12
 8002ed6:	4604      	mov	r4, r0
 8002ed8:	f020 fc40 	bl	802375c <_ZdlPvj>
 8002edc:	4620      	mov	r0, r4
 8002ede:	bd10      	pop	{r4, pc}

08002ee0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8002ee0:	b510      	push	{r4, lr}
 8002ee2:	2114      	movs	r1, #20
 8002ee4:	4604      	mov	r4, r0
 8002ee6:	f020 fc39 	bl	802375c <_ZdlPvj>
 8002eea:	4620      	mov	r0, r4
 8002eec:	bd10      	pop	{r4, pc}

08002eee <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EED0Ev>:
class CoverTransition : public Transition
 8002eee:	b510      	push	{r4, lr}
 8002ef0:	2110      	movs	r1, #16
 8002ef2:	4604      	mov	r4, r0
 8002ef4:	f020 fc32 	bl	802375c <_ZdlPvj>
 8002ef8:	4620      	mov	r0, r4
 8002efa:	bd10      	pop	{r4, pc}

08002efc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002efc:	b510      	push	{r4, lr}
 8002efe:	2110      	movs	r1, #16
 8002f00:	4604      	mov	r4, r0
 8002f02:	f020 fc2b 	bl	802375c <_ZdlPvj>
 8002f06:	4620      	mov	r0, r4
 8002f08:	bd10      	pop	{r4, pc}

08002f0a <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002f0a:	b510      	push	{r4, lr}
 8002f0c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002f10:	4604      	mov	r4, r0
 8002f12:	f020 fc23 	bl	802375c <_ZdlPvj>
 8002f16:	4620      	mov	r0, r4
 8002f18:	bd10      	pop	{r4, pc}

08002f1a <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002f1a:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002f1c:	f00d fdba 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 8002f20:	6803      	ldr	r3, [r0, #0]
    }
 8002f22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002f26:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002f28:	4718      	bx	r3

08002f2a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:

    virtual void invalidate()
 8002f2a:	b510      	push	{r4, lr}
    {
        // The last step when finalizing a transition (see MVPApplication::finalizeTransition)
        // is to call invalidate on the transition. For the WipeTransition we want to erase any
        // invalidated areas that might have been added when setting up the new screen, which
        // is the first step of finalizing a transition (see MVPApplication::finalizeTransition).
        Application::getInstance()->clearCachedAreas();
 8002f2c:	f00d fdb2 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 8002f30:	6803      	ldr	r3, [r0, #0]
    }
 8002f32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->clearCachedAreas();
 8002f36:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002f38:	4718      	bx	r3

08002f3a <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE10invalidateEv>:

    virtual void invalidate()
 8002f3a:	b510      	push	{r4, lr}
    {
        // The last step when finalizing a transition (see MVPApplication::finalizeTransition)
        // is to call invalidate on the transition. For the CoverTransition we want to erase any
        // invalidated areas that might have been added when setting up the new screen, which
        // is the first step of finalizing a transition (see MVPApplication::finalizeTransition).
        Application::getInstance()->clearCachedAreas();
 8002f3c:	f00d fdaa 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 8002f40:	6803      	ldr	r3, [r0, #0]
    }
 8002f42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->clearCachedAreas();
 8002f46:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002f48:	4718      	bx	r3
	...

08002f4c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002f4c:	b513      	push	{r0, r1, r4, lr}
 8002f4e:	4604      	mov	r4, r0
        animationCounter++;
 8002f50:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8002f52:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002f54:	3001      	adds	r0, #1
 8002f56:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002f58:	4298      	cmp	r0, r3
        animationCounter++;
 8002f5a:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8002f5c:	d905      	bls.n	8002f6a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8002f5e:	2301      	movs	r3, #1
 8002f60:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002f62:	2300      	movs	r3, #0
 8002f64:	72a3      	strb	r3, [r4, #10]
    }
 8002f66:	b002      	add	sp, #8
 8002f68:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002f6a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002f6e:	2100      	movs	r1, #0
 8002f70:	f00f ff6e 	bl	8012e50 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002f74:	07c3      	lsls	r3, r0, #31
 8002f76:	d507      	bpl.n	8002f88 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x3c>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002f78:	2800      	cmp	r0, #0
 8002f7a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002f7e:	bfc8      	it	gt
 8002f80:	2301      	movgt	r3, #1
 8002f82:	fa13 f080 	uxtah	r0, r3, r0
 8002f86:	b200      	sxth	r0, r0
 8002f88:	2300      	movs	r3, #0
 8002f8a:	f8ad 3002 	strh.w	r3, [sp, #2]
                rect.x = prevCalculatedValue;
 8002f8e:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8002f92:	f8ad 3000 	strh.w	r3, [sp]
                rect.width = calculatedValue - prevCalculatedValue;
 8002f96:	1ac3      	subs	r3, r0, r3
 8002f98:	f8ad 3004 	strh.w	r3, [sp, #4]
                rect.height = HAL::DISPLAY_HEIGHT;
 8002f9c:	4b0d      	ldr	r3, [pc, #52]	@ (8002fd4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x88>)
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002f9e:	81e0      	strh	r0, [r4, #14]
                rect.height = HAL::DISPLAY_HEIGHT;
 8002fa0:	881b      	ldrh	r3, [r3, #0]
        prevCalculatedValue = calculatedValue;
 8002fa2:	8220      	strh	r0, [r4, #16]
                rect.height = HAL::DISPLAY_HEIGHT;
 8002fa4:	f8ad 3006 	strh.w	r3, [sp, #6]
        Application::getInstance()->invalidateArea(rect);
 8002fa8:	f00d fd74 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 8002fac:	6803      	ldr	r3, [r0, #0]
 8002fae:	aa02      	add	r2, sp, #8
 8002fb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fb2:	e912 0006 	ldmdb	r2, {r1, r2}
 8002fb6:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002fb8:	7aa3      	ldrb	r3, [r4, #10]
 8002fba:	2b01      	cmp	r3, #1
 8002fbc:	d1d3      	bne.n	8002f66 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8002fbe:	4b06      	ldr	r3, [pc, #24]	@ (8002fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x8c>)
 8002fc0:	781b      	ldrb	r3, [r3, #0]
 8002fc2:	2b00      	cmp	r3, #0
 8002fc4:	d0cf      	beq.n	8002f66 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002fc6:	f00d fd65 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002fca:	b002      	add	sp, #8
 8002fcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002fd0:	f00d bd66 	b.w	8010aa0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
 8002fd4:	200157b6 	.word	0x200157b6
 8002fd8:	200157be 	.word	0x200157be

08002fdc <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002fdc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002fde:	4605      	mov	r5, r0
        animationCounter++;
 8002fe0:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8002fe2:	7a6b      	ldrb	r3, [r5, #9]
        animationCounter++;
 8002fe4:	3001      	adds	r0, #1
 8002fe6:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002fe8:	4298      	cmp	r0, r3
        animationCounter++;
 8002fea:	72a8      	strb	r0, [r5, #10]
        if (animationCounter > animationSteps)
 8002fec:	d905      	bls.n	8002ffa <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8002fee:	2301      	movs	r3, #1
 8002ff0:	722b      	strb	r3, [r5, #8]
            animationCounter = 0;
 8002ff2:	2300      	movs	r3, #0
 8002ff4:	72ab      	strb	r3, [r5, #10]
    }
 8002ff6:	b003      	add	sp, #12
 8002ff8:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002ffa:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
        const int16_t oldValue = calculatedValue;
 8002ffe:	f9b5 400e 	ldrsh.w	r4, [r5, #14]
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003002:	2100      	movs	r1, #0
 8003004:	f00f ff24 	bl	8012e50 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003008:	07c3      	lsls	r3, r0, #31
 800300a:	d507      	bpl.n	800301c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x40>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800300c:	2800      	cmp	r0, #0
 800300e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003012:	bfc8      	it	gt
 8003014:	2301      	movgt	r3, #1
 8003016:	fa13 f080 	uxtah	r0, r3, r0
 800301a:	b200      	sxth	r0, r0
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800301c:	7aab      	ldrb	r3, [r5, #10]
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800301e:	81e8      	strh	r0, [r5, #14]
        const int16_t relativeValue = calculatedValue - oldValue;
 8003020:	1b04      	subs	r4, r0, r4
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003022:	2b01      	cmp	r3, #1
        const int16_t relativeValue = calculatedValue - oldValue;
 8003024:	b2a4      	uxth	r4, r4
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003026:	d106      	bne.n	8003036 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5a>
 8003028:	4b17      	ldr	r3, [pc, #92]	@ (8003088 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xac>)
 800302a:	781b      	ldrb	r3, [r3, #0]
 800302c:	b11b      	cbz	r3, 8003036 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800302e:	f00d fd31 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 8003032:	f00d fd35 	bl	8010aa0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            rect.x = HAL::DISPLAY_WIDTH + calculatedValue;
 8003036:	4a15      	ldr	r2, [pc, #84]	@ (800308c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb0>)
 8003038:	2300      	movs	r3, #0
 800303a:	8812      	ldrh	r2, [r2, #0]
 800303c:	f8ad 3002 	strh.w	r3, [sp, #2]
 8003040:	89eb      	ldrh	r3, [r5, #14]
 8003042:	441a      	add	r2, r3
            rect.width = -calculatedValue;
 8003044:	425b      	negs	r3, r3
 8003046:	f8ad 3004 	strh.w	r3, [sp, #4]
            rect.height = HAL::DISPLAY_HEIGHT;
 800304a:	4b11      	ldr	r3, [pc, #68]	@ (8003090 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb4>)
            rect.x = HAL::DISPLAY_WIDTH + calculatedValue;
 800304c:	f8ad 2000 	strh.w	r2, [sp]
            rect.height = HAL::DISPLAY_HEIGHT;
 8003050:	881b      	ldrh	r3, [r3, #0]
 8003052:	f8ad 3006 	strh.w	r3, [sp, #6]
        Application::getInstance()->invalidateArea(rect);
 8003056:	f00d fd1d 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 800305a:	6803      	ldr	r3, [r0, #0]
 800305c:	aa02      	add	r2, sp, #8
 800305e:	e912 0006 	ldmdb	r2, {r1, r2}
 8003062:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003064:	4798      	blx	r3
        Drawable* d = screenContainer->getFirstChild();
 8003066:	6868      	ldr	r0, [r5, #4]
 8003068:	6803      	ldr	r3, [r0, #0]
 800306a:	69db      	ldr	r3, [r3, #28]
 800306c:	4798      	blx	r3
 800306e:	4605      	mov	r5, r0
        while (d)
 8003070:	2d00      	cmp	r5, #0
 8003072:	d0c0      	beq.n	8002ff6 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
                d->setX(d->getX() + relativeValue);
 8003074:	88a9      	ldrh	r1, [r5, #4]
 8003076:	682b      	ldr	r3, [r5, #0]
 8003078:	4421      	add	r1, r4
 800307a:	4628      	mov	r0, r5
 800307c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800307e:	b209      	sxth	r1, r1
 8003080:	4798      	blx	r3
 8003082:	69ad      	ldr	r5, [r5, #24]
 8003084:	e7f4      	b.n	8003070 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>
 8003086:	bf00      	nop
 8003088:	200157be 	.word	0x200157be
 800308c:	200157b4 	.word	0x200157b4
 8003090:	200157b6 	.word	0x200157b6

08003094 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003094:	b510      	push	{r4, lr}
 8003096:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003098:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 800309c:	b158      	cbz	r0, 80030b6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800309e:	6803      	ldr	r3, [r0, #0]
 80030a0:	68db      	ldr	r3, [r3, #12]
 80030a2:	4798      	blx	r3
 80030a4:	b138      	cbz	r0, 80030b6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80030a6:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 80030aa:	6803      	ldr	r3, [r0, #0]
 80030ac:	689b      	ldr	r3, [r3, #8]
 80030ae:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80030b0:	2300      	movs	r3, #0
 80030b2:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 80030b6:	bd10      	pop	{r4, pc}

080030b8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80030b8:	4b04      	ldr	r3, [pc, #16]	@ (80030cc <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80030c0:	b10a      	cbz	r2, 80030c6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80030c2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80030c4:	b900      	cbnz	r0, 80030c8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80030c6:	6898      	ldr	r0, [r3, #8]
    }
 80030c8:	4770      	bx	lr
 80030ca:	bf00      	nop
 80030cc:	200157c0 	.word	0x200157c0

080030d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80030d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80030d2:	4617      	mov	r7, r2
 80030d4:	4604      	mov	r4, r0
 80030d6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80030d8:	f00d fdc6 	bl	8010c68 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80030dc:	4b12      	ldr	r3, [pc, #72]	@ (8003128 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80030de:	601c      	str	r4, [r3, #0]
      model(m)
 80030e0:	4b12      	ldr	r3, [pc, #72]	@ (800312c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80030e2:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80030e4:	4b12      	ldr	r3, [pc, #72]	@ (8003130 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
        : currentPresenter(0),
 80030e6:	2500      	movs	r5, #0
 80030e8:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 80030ec:	4b11      	ldr	r3, [pc, #68]	@ (8003134 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 80030ee:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
 80030f2:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80030f4:	6803      	ldr	r3, [r0, #0]
 80030f6:	2101      	movs	r1, #1
 80030f8:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80030fa:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
      model(m)
 80030fe:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003102:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003104:	4628      	mov	r0, r5
 8003106:	f001 fbe3 	bl	80048d0 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800310a:	f7ff ffd5 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 800310e:	f018 fa22 	bl	801b556 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8003112:	f7ff ffd1 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 8003116:	f018 fa99 	bl	801b64c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 800311a:	f7ff ffcd 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 800311e:	f018 faa1 	bl	801b664 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8003122:	4620      	mov	r0, r4
 8003124:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003126:	bf00      	nop
 8003128:	20015814 	.word	0x20015814
 800312c:	08026bc8 	.word	0x08026bc8
 8003130:	08026bb0 	.word	0x08026bb0
 8003134:	200157c0 	.word	0x200157c0

08003138 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003138:	4b06      	ldr	r3, [pc, #24]	@ (8003154 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800313a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800313e:	2300      	movs	r3, #0
 8003140:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003144:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003148:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800314c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003150:	4770      	bx	lr
 8003152:	bf00      	nop
 8003154:	08003345 	.word	0x08003345

08003158 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionWestEv>:
 8003158:	4b06      	ldr	r3, [pc, #24]	@ (8003174 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionWestEv+0x1c>)
 800315a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800315e:	2300      	movs	r3, #0
 8003160:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
}

void FrontendApplicationBase::gotoScreen1ScreenWipeTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenWipeTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003164:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003168:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800316c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003170:	4770      	bx	lr
 8003172:	bf00      	nop
 8003174:	080031e5 	.word	0x080031e5

08003178 <_ZN23FrontendApplicationBase36gotoScreen1ScreenCoverTransitionEastEv>:
 8003178:	4b06      	ldr	r3, [pc, #24]	@ (8003194 <_ZN23FrontendApplicationBase36gotoScreen1ScreenCoverTransitionEastEv+0x1c>)
 800317a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800317e:	2300      	movs	r3, #0
 8003180:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
}

void FrontendApplicationBase::gotoScreen1ScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003184:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003188:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800318c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003190:	4770      	bx	lr
 8003192:	bf00      	nop
 8003194:	08003755 	.word	0x08003755

08003198 <_ZN23FrontendApplicationBase36gotoScreen2ScreenCoverTransitionEastEv>:
 8003198:	4b06      	ldr	r3, [pc, #24]	@ (80031b4 <_ZN23FrontendApplicationBase36gotoScreen2ScreenCoverTransitionEastEv+0x1c>)
 800319a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800319e:	2300      	movs	r3, #0
 80031a0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen2

void FrontendApplicationBase::gotoScreen2ScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen2ScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80031a4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80031a8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80031ac:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80031b0:	4770      	bx	lr
 80031b2:	bf00      	nop
 80031b4:	080035f5 	.word	0x080035f5

080031b8 <_ZN23FrontendApplicationBase36gotoScreen3ScreenCoverTransitionEastEv>:
 80031b8:	4b06      	ldr	r3, [pc, #24]	@ (80031d4 <_ZN23FrontendApplicationBase36gotoScreen3ScreenCoverTransitionEastEv+0x1c>)
 80031ba:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80031be:	2300      	movs	r3, #0
 80031c0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen3

void FrontendApplicationBase::gotoScreen3ScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen3ScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80031c4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80031c8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80031cc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80031d0:	4770      	bx	lr
 80031d2:	bf00      	nop
 80031d4:	08003495 	.word	0x08003495

080031d8 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80031d8:	6803      	ldr	r3, [r0, #0]
 80031da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80031dc:	4718      	bx	r3

080031de <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
 80031de:	6803      	ldr	r3, [r0, #0]
 80031e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80031e2:	4718      	bx	r3

080031e4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv>:
{
 80031e4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80031e8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80031ec:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80031ee:	68b0      	ldr	r0, [r6, #8]
 80031f0:	6803      	ldr	r3, [r0, #0]
 80031f2:	6a1b      	ldr	r3, [r3, #32]
 80031f4:	4798      	blx	r3
 80031f6:	f5b0 7fd2 	cmp.w	r0, #420	@ 0x1a4
 80031fa:	d205      	bcs.n	8003208 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x24>
 80031fc:	4b48      	ldr	r3, [pc, #288]	@ (8003320 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x13c>)
 80031fe:	4a49      	ldr	r2, [pc, #292]	@ (8003324 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x140>)
 8003200:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003202:	4849      	ldr	r0, [pc, #292]	@ (8003328 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x144>)
 8003204:	f021 f9e6 	bl	80245d4 <__assert_func>
 8003208:	6870      	ldr	r0, [r6, #4]
 800320a:	6803      	ldr	r3, [r0, #0]
 800320c:	6a1b      	ldr	r3, [r3, #32]
 800320e:	4798      	blx	r3
 8003210:	280f      	cmp	r0, #15
 8003212:	d803      	bhi.n	800321c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x38>
 8003214:	4b45      	ldr	r3, [pc, #276]	@ (800332c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x148>)
 8003216:	4a43      	ldr	r2, [pc, #268]	@ (8003324 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x140>)
 8003218:	21a4      	movs	r1, #164	@ 0xa4
 800321a:	e7f2      	b.n	8003202 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800321c:	68f0      	ldr	r0, [r6, #12]
 800321e:	6803      	ldr	r3, [r0, #0]
 8003220:	6a1b      	ldr	r3, [r3, #32]
 8003222:	4798      	blx	r3
 8003224:	2813      	cmp	r0, #19
 8003226:	d803      	bhi.n	8003230 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x4c>
 8003228:	4b41      	ldr	r3, [pc, #260]	@ (8003330 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x14c>)
 800322a:	4a3e      	ldr	r2, [pc, #248]	@ (8003324 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x140>)
 800322c:	21a5      	movs	r1, #165	@ 0xa5
 800322e:	e7e8      	b.n	8003202 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003230:	f00d fc30 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003234:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 800333c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x158>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8003238:	3004      	adds	r0, #4
 800323a:	f00d fc78 	bl	8010b2e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800323e:	f8d9 0000 	ldr.w	r0, [r9]
 8003242:	b110      	cbz	r0, 800324a <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003244:	6803      	ldr	r3, [r0, #0]
 8003246:	68db      	ldr	r3, [r3, #12]
 8003248:	4798      	blx	r3
    if (*currentTrans)
 800324a:	f8d9 0000 	ldr.w	r0, [r9]
 800324e:	b110      	cbz	r0, 8003256 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003250:	6803      	ldr	r3, [r0, #0]
 8003252:	681b      	ldr	r3, [r3, #0]
 8003254:	4798      	blx	r3
    if (*currentScreen)
 8003256:	f8df 80e8 	ldr.w	r8, [pc, #232]	@ 8003340 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x15c>
 800325a:	f8d8 0000 	ldr.w	r0, [r8]
 800325e:	b110      	cbz	r0, 8003266 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003260:	6803      	ldr	r3, [r0, #0]
 8003262:	695b      	ldr	r3, [r3, #20]
 8003264:	4798      	blx	r3
    if (*currentPresenter)
 8003266:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800326a:	b110      	cbz	r0, 8003272 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800326c:	6803      	ldr	r3, [r0, #0]
 800326e:	685b      	ldr	r3, [r3, #4]
 8003270:	4798      	blx	r3
    if (*currentScreen)
 8003272:	f8d8 0000 	ldr.w	r0, [r8]
 8003276:	b110      	cbz	r0, 800327e <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003278:	6803      	ldr	r3, [r0, #0]
 800327a:	681b      	ldr	r3, [r3, #0]
 800327c:	4798      	blx	r3
    if (*currentPresenter)
 800327e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003282:	b110      	cbz	r0, 800328a <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003284:	6803      	ldr	r3, [r0, #0]
 8003286:	689b      	ldr	r3, [r3, #8]
 8003288:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800328a:	68f0      	ldr	r0, [r6, #12]
 800328c:	6803      	ldr	r3, [r0, #0]
 800328e:	2100      	movs	r1, #0
 8003290:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003292:	4798      	blx	r3
          prevCalculatedValue(0)
 8003294:	4b27      	ldr	r3, [pc, #156]	@ (8003334 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x150>)
 8003296:	6003      	str	r3, [r0, #0]
        : screenContainer(0), done(false)
 8003298:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 800329c:	8103      	strh	r3, [r0, #8]
            targetValue = HAL::DISPLAY_WIDTH;
 800329e:	4b26      	ldr	r3, [pc, #152]	@ (8003338 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionWestImplEv+0x154>)
 80032a0:	f04f 0b00 	mov.w	fp, #0
 80032a4:	881b      	ldrh	r3, [r3, #0]
          animationCounter(0),
 80032a6:	f880 b00a 	strb.w	fp, [r0, #10]
 80032aa:	4604      	mov	r4, r0
            targetValue = HAL::DISPLAY_WIDTH;
 80032ac:	8183      	strh	r3, [r0, #12]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80032ae:	4659      	mov	r1, fp
 80032b0:	f8c0 b004 	str.w	fp, [r0, #4]
          calculatedValue(0),
 80032b4:	f8a0 b00e 	strh.w	fp, [r0, #14]
          prevCalculatedValue(0)
 80032b8:	f8a0 b010 	strh.w	fp, [r0, #16]
 80032bc:	68b0      	ldr	r0, [r6, #8]
 80032be:	f7ff ff8b 	bl	80031d8 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 80032c2:	4605      	mov	r5, r0
 80032c4:	f001 fbda 	bl	8004a7c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80032c8:	4659      	mov	r1, fp
 80032ca:	6870      	ldr	r0, [r6, #4]
 80032cc:	f7ff ff87 	bl	80031de <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 80032d0:	4629      	mov	r1, r5
 80032d2:	4606      	mov	r6, r0
 80032d4:	f001 fbae 	bl	8004a34 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 80032d8:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80032da:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    Model();
    long modelTickCount = 0;

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80032de:	f8ca 3004 	str.w	r3, [sl, #4]
    newScreen->setupScreen();
 80032e2:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80032e4:	f8c6 a008 	str.w	sl, [r6, #8]
 80032e8:	4628      	mov	r0, r5
 80032ea:	68db      	ldr	r3, [r3, #12]
    *currentTrans = newTransition;
 80032ec:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80032f0:	f8c8 5000 	str.w	r5, [r8]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80032f4:	63ee      	str	r6, [r5, #60]	@ 0x3c
    newScreen->setupScreen();
 80032f6:	4798      	blx	r3
    newPresenter->activate();
 80032f8:	6833      	ldr	r3, [r6, #0]
 80032fa:	4630      	mov	r0, r6
 80032fc:	681b      	ldr	r3, [r3, #0]
 80032fe:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003300:	4621      	mov	r1, r4
 8003302:	4628      	mov	r0, r5
 8003304:	f00f fd9e 	bl	8012e44 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003308:	6823      	ldr	r3, [r4, #0]
 800330a:	4620      	mov	r0, r4
 800330c:	691b      	ldr	r3, [r3, #16]
 800330e:	4798      	blx	r3
    newTransition->invalidate();
 8003310:	6823      	ldr	r3, [r4, #0]
 8003312:	695b      	ldr	r3, [r3, #20]
 8003314:	4620      	mov	r0, r4
}
 8003316:	b001      	add	sp, #4
 8003318:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800331c:	4718      	bx	r3
 800331e:	bf00      	nop
 8003320:	08025d64 	.word	0x08025d64
 8003324:	08025df2 	.word	0x08025df2
 8003328:	08025ed6 	.word	0x08025ed6
 800332c:	08025f1d 	.word	0x08025f1d
 8003330:	08025fc0 	.word	0x08025fc0
 8003334:	08026c64 	.word	0x08026c64
 8003338:	200157b4 	.word	0x200157b4
 800333c:	20015808 	.word	0x20015808
 8003340:	20015804 	.word	0x20015804

08003344 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 8003344:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003348:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800334c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800334e:	68b0      	ldr	r0, [r6, #8]
 8003350:	6803      	ldr	r3, [r0, #0]
 8003352:	6a1b      	ldr	r3, [r3, #32]
 8003354:	4798      	blx	r3
 8003356:	f5b0 7fd2 	cmp.w	r0, #420	@ 0x1a4
 800335a:	d205      	bcs.n	8003368 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 800335c:	4b43      	ldr	r3, [pc, #268]	@ (800346c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x128>)
 800335e:	4a44      	ldr	r2, [pc, #272]	@ (8003470 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 8003360:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003362:	4844      	ldr	r0, [pc, #272]	@ (8003474 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8003364:	f021 f936 	bl	80245d4 <__assert_func>
 8003368:	6870      	ldr	r0, [r6, #4]
 800336a:	6803      	ldr	r3, [r0, #0]
 800336c:	6a1b      	ldr	r3, [r3, #32]
 800336e:	4798      	blx	r3
 8003370:	280f      	cmp	r0, #15
 8003372:	d803      	bhi.n	800337c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8003374:	4b40      	ldr	r3, [pc, #256]	@ (8003478 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8003376:	4a3e      	ldr	r2, [pc, #248]	@ (8003470 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 8003378:	21a4      	movs	r1, #164	@ 0xa4
 800337a:	e7f2      	b.n	8003362 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800337c:	68f0      	ldr	r0, [r6, #12]
 800337e:	6803      	ldr	r3, [r0, #0]
 8003380:	6a1b      	ldr	r3, [r3, #32]
 8003382:	4798      	blx	r3
 8003384:	280b      	cmp	r0, #11
 8003386:	d803      	bhi.n	8003390 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8003388:	4b3c      	ldr	r3, [pc, #240]	@ (800347c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 800338a:	4a39      	ldr	r2, [pc, #228]	@ (8003470 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 800338c:	21a5      	movs	r1, #165	@ 0xa5
 800338e:	e7e8      	b.n	8003362 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003390:	f00d fb80 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003394:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8003484 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>
 8003398:	3004      	adds	r0, #4
 800339a:	f00d fbc8 	bl	8010b2e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800339e:	f8d9 0000 	ldr.w	r0, [r9]
 80033a2:	b110      	cbz	r0, 80033aa <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80033a4:	6803      	ldr	r3, [r0, #0]
 80033a6:	68db      	ldr	r3, [r3, #12]
 80033a8:	4798      	blx	r3
    if (*currentTrans)
 80033aa:	f8d9 0000 	ldr.w	r0, [r9]
 80033ae:	b110      	cbz	r0, 80033b6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80033b0:	6803      	ldr	r3, [r0, #0]
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	4798      	blx	r3
    if (*currentScreen)
 80033b6:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003488 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>
 80033ba:	f8d8 0000 	ldr.w	r0, [r8]
 80033be:	b110      	cbz	r0, 80033c6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80033c0:	6803      	ldr	r3, [r0, #0]
 80033c2:	695b      	ldr	r3, [r3, #20]
 80033c4:	4798      	blx	r3
    if (*currentPresenter)
 80033c6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80033ca:	b110      	cbz	r0, 80033d2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80033cc:	6803      	ldr	r3, [r0, #0]
 80033ce:	685b      	ldr	r3, [r3, #4]
 80033d0:	4798      	blx	r3
    if (*currentScreen)
 80033d2:	f8d8 0000 	ldr.w	r0, [r8]
 80033d6:	b110      	cbz	r0, 80033de <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80033d8:	6803      	ldr	r3, [r0, #0]
 80033da:	681b      	ldr	r3, [r3, #0]
 80033dc:	4798      	blx	r3
    if (*currentPresenter)
 80033de:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80033e2:	b110      	cbz	r0, 80033ea <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80033e4:	6803      	ldr	r3, [r0, #0]
 80033e6:	689b      	ldr	r3, [r3, #8]
 80033e8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80033ea:	68f0      	ldr	r0, [r6, #12]
 80033ec:	6803      	ldr	r3, [r0, #0]
 80033ee:	2100      	movs	r1, #0
 80033f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80033f2:	4798      	blx	r3
 80033f4:	f04f 0b00 	mov.w	fp, #0
 80033f8:	4b21      	ldr	r3, [pc, #132]	@ (8003480 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80033fa:	6003      	str	r3, [r0, #0]
 80033fc:	4604      	mov	r4, r0
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80033fe:	4659      	mov	r1, fp
 8003400:	f8c0 b004 	str.w	fp, [r0, #4]
 8003404:	f880 b008 	strb.w	fp, [r0, #8]
 8003408:	68b0      	ldr	r0, [r6, #8]
 800340a:	f7ff fee5 	bl	80031d8 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 800340e:	4605      	mov	r5, r0
 8003410:	f001 fb34 	bl	8004a7c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003414:	4659      	mov	r1, fp
 8003416:	6870      	ldr	r0, [r6, #4]
 8003418:	f7ff fee1 	bl	80031de <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 800341c:	4629      	mov	r1, r5
 800341e:	4606      	mov	r6, r0
 8003420:	f001 fb08 	bl	8004a34 <_ZN16Screen1PresenterC1ER11Screen1View>
    model->bind(newPresenter);
 8003424:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003426:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
 800342a:	f8ca 3004 	str.w	r3, [sl, #4]
    newScreen->setupScreen();
 800342e:	682b      	ldr	r3, [r5, #0]
 8003430:	f8c6 a008 	str.w	sl, [r6, #8]
 8003434:	4628      	mov	r0, r5
 8003436:	68db      	ldr	r3, [r3, #12]
    *currentTrans = newTransition;
 8003438:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800343c:	f8c8 5000 	str.w	r5, [r8]
 8003440:	63ee      	str	r6, [r5, #60]	@ 0x3c
    newScreen->setupScreen();
 8003442:	4798      	blx	r3
    newPresenter->activate();
 8003444:	6833      	ldr	r3, [r6, #0]
 8003446:	4630      	mov	r0, r6
 8003448:	681b      	ldr	r3, [r3, #0]
 800344a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800344c:	4621      	mov	r1, r4
 800344e:	4628      	mov	r0, r5
 8003450:	f00f fcf8 	bl	8012e44 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003454:	6823      	ldr	r3, [r4, #0]
 8003456:	4620      	mov	r0, r4
 8003458:	691b      	ldr	r3, [r3, #16]
 800345a:	4798      	blx	r3
    newTransition->invalidate();
 800345c:	6823      	ldr	r3, [r4, #0]
 800345e:	695b      	ldr	r3, [r3, #20]
 8003460:	4620      	mov	r0, r4
}
 8003462:	b001      	add	sp, #4
 8003464:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003468:	4718      	bx	r3
 800346a:	bf00      	nop
 800346c:	08025d64 	.word	0x08025d64
 8003470:	08026063 	.word	0x08026063
 8003474:	08025ed6 	.word	0x08025ed6
 8003478:	08025f1d 	.word	0x08025f1d
 800347c:	08025fc0 	.word	0x08025fc0
 8003480:	08026c1c 	.word	0x08026c1c
 8003484:	20015808 	.word	0x20015808
 8003488:	20015804 	.word	0x20015804

0800348c <_ZN8touchgfx17AbstractPartition2atINS_15CoverTransitionILNS_9DirectionE2EEEEERT_t>:
 800348c:	6803      	ldr	r3, [r0, #0]
 800348e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003490:	4718      	bx	r3
	...

08003494 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv>:

void FrontendApplicationBase::gotoScreen3ScreenCoverTransitionEastImpl()
{
 8003494:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen3View, Screen3Presenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003498:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800349c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800349e:	68b0      	ldr	r0, [r6, #8]
 80034a0:	6803      	ldr	r3, [r0, #0]
 80034a2:	6a1b      	ldr	r3, [r3, #32]
 80034a4:	4798      	blx	r3
 80034a6:	f243 13d7 	movw	r3, #12759	@ 0x31d7
 80034aa:	4298      	cmp	r0, r3
 80034ac:	d805      	bhi.n	80034ba <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x26>
 80034ae:	4b48      	ldr	r3, [pc, #288]	@ (80035d0 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x13c>)
 80034b0:	4a48      	ldr	r2, [pc, #288]	@ (80035d4 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x140>)
 80034b2:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80034b4:	4848      	ldr	r0, [pc, #288]	@ (80035d8 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x144>)
 80034b6:	f021 f88d 	bl	80245d4 <__assert_func>
 80034ba:	6870      	ldr	r0, [r6, #4]
 80034bc:	6803      	ldr	r3, [r0, #0]
 80034be:	6a1b      	ldr	r3, [r3, #32]
 80034c0:	4798      	blx	r3
 80034c2:	280f      	cmp	r0, #15
 80034c4:	d803      	bhi.n	80034ce <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x3a>
 80034c6:	4b45      	ldr	r3, [pc, #276]	@ (80035dc <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x148>)
 80034c8:	4a42      	ldr	r2, [pc, #264]	@ (80035d4 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x140>)
 80034ca:	21a4      	movs	r1, #164	@ 0xa4
 80034cc:	e7f2      	b.n	80034b4 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80034ce:	68f0      	ldr	r0, [r6, #12]
 80034d0:	6803      	ldr	r3, [r0, #0]
 80034d2:	6a1b      	ldr	r3, [r3, #32]
 80034d4:	4798      	blx	r3
 80034d6:	280f      	cmp	r0, #15
 80034d8:	d803      	bhi.n	80034e2 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x4e>
 80034da:	4b41      	ldr	r3, [pc, #260]	@ (80035e0 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x14c>)
 80034dc:	4a3d      	ldr	r2, [pc, #244]	@ (80035d4 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x140>)
 80034de:	21a5      	movs	r1, #165	@ 0xa5
 80034e0:	e7e8      	b.n	80034b4 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80034e2:	f00d fad7 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80034e6:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 80035ec <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x158>
 80034ea:	3004      	adds	r0, #4
 80034ec:	f00d fb1f 	bl	8010b2e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80034f0:	f8d9 0000 	ldr.w	r0, [r9]
 80034f4:	b110      	cbz	r0, 80034fc <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80034f6:	6803      	ldr	r3, [r0, #0]
 80034f8:	68db      	ldr	r3, [r3, #12]
 80034fa:	4798      	blx	r3
    if (*currentTrans)
 80034fc:	f8d9 0000 	ldr.w	r0, [r9]
 8003500:	b110      	cbz	r0, 8003508 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003502:	6803      	ldr	r3, [r0, #0]
 8003504:	681b      	ldr	r3, [r3, #0]
 8003506:	4798      	blx	r3
    if (*currentScreen)
 8003508:	f8df 80e4 	ldr.w	r8, [pc, #228]	@ 80035f0 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x15c>
 800350c:	f8d8 0000 	ldr.w	r0, [r8]
 8003510:	b110      	cbz	r0, 8003518 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003512:	6803      	ldr	r3, [r0, #0]
 8003514:	695b      	ldr	r3, [r3, #20]
 8003516:	4798      	blx	r3
    if (*currentPresenter)
 8003518:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800351c:	b110      	cbz	r0, 8003524 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800351e:	6803      	ldr	r3, [r0, #0]
 8003520:	685b      	ldr	r3, [r3, #4]
 8003522:	4798      	blx	r3
    if (*currentScreen)
 8003524:	f8d8 0000 	ldr.w	r0, [r8]
 8003528:	b110      	cbz	r0, 8003530 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800352a:	6803      	ldr	r3, [r0, #0]
 800352c:	681b      	ldr	r3, [r3, #0]
 800352e:	4798      	blx	r3
    if (*currentPresenter)
 8003530:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003534:	b110      	cbz	r0, 800353c <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003536:	6803      	ldr	r3, [r0, #0]
 8003538:	689b      	ldr	r3, [r3, #8]
 800353a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800353c:	68f0      	ldr	r0, [r6, #12]
 800353e:	2100      	movs	r1, #0
 8003540:	f7ff ffa4 	bl	800348c <_ZN8touchgfx17AbstractPartition2atINS_15CoverTransitionILNS_9DirectionE2EEEEERT_t>
          calculatedValue(0)
 8003544:	4b27      	ldr	r3, [pc, #156]	@ (80035e4 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x150>)
 8003546:	6003      	str	r3, [r0, #0]
 8003548:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 800354c:	8103      	strh	r3, [r0, #8]
            targetValue = -HAL::DISPLAY_WIDTH;
 800354e:	4b26      	ldr	r3, [pc, #152]	@ (80035e8 <_ZN23FrontendApplicationBase40gotoScreen3ScreenCoverTransitionEastImplEv+0x154>)
 8003550:	881b      	ldrh	r3, [r3, #0]
 8003552:	f04f 0b00 	mov.w	fp, #0
          animationCounter(0),
 8003556:	f880 b00a 	strb.w	fp, [r0, #10]
            targetValue = -HAL::DISPLAY_WIDTH;
 800355a:	425b      	negs	r3, r3
 800355c:	4604      	mov	r4, r0
 800355e:	f8c0 b004 	str.w	fp, [r0, #4]
          calculatedValue(0)
 8003562:	f8a0 b00e 	strh.w	fp, [r0, #14]
            targetValue = -HAL::DISPLAY_WIDTH;
 8003566:	8183      	strh	r3, [r0, #12]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003568:	68b0      	ldr	r0, [r6, #8]
 800356a:	6803      	ldr	r3, [r0, #0]
 800356c:	4659      	mov	r1, fp
 800356e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003570:	4798      	blx	r3
 8003572:	4605      	mov	r5, r0
 8003574:	f001 fdaa 	bl	80050cc <_ZN11Screen3ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003578:	6870      	ldr	r0, [r6, #4]
 800357a:	6803      	ldr	r3, [r0, #0]
 800357c:	4659      	mov	r1, fp
 800357e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003580:	4798      	blx	r3
 8003582:	4629      	mov	r1, r5
 8003584:	4606      	mov	r6, r0
 8003586:	f001 fb57 	bl	8004c38 <_ZN16Screen3PresenterC1ER11Screen3View>
    model->bind(newPresenter);
 800358a:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800358c:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
 8003590:	f8ca 3004 	str.w	r3, [sl, #4]
    newScreen->setupScreen();
 8003594:	682b      	ldr	r3, [r5, #0]
 8003596:	f8c6 a008 	str.w	sl, [r6, #8]
 800359a:	4628      	mov	r0, r5
 800359c:	68db      	ldr	r3, [r3, #12]
    *currentTrans = newTransition;
 800359e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80035a2:	f8c8 5000 	str.w	r5, [r8]
 80035a6:	63ee      	str	r6, [r5, #60]	@ 0x3c
    newScreen->setupScreen();
 80035a8:	4798      	blx	r3
    newPresenter->activate();
 80035aa:	6833      	ldr	r3, [r6, #0]
 80035ac:	4630      	mov	r0, r6
 80035ae:	681b      	ldr	r3, [r3, #0]
 80035b0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80035b2:	4621      	mov	r1, r4
 80035b4:	4628      	mov	r0, r5
 80035b6:	f00f fc45 	bl	8012e44 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80035ba:	6823      	ldr	r3, [r4, #0]
 80035bc:	4620      	mov	r0, r4
 80035be:	691b      	ldr	r3, [r3, #16]
 80035c0:	4798      	blx	r3
    newTransition->invalidate();
 80035c2:	6823      	ldr	r3, [r4, #0]
 80035c4:	695b      	ldr	r3, [r3, #20]
 80035c6:	4620      	mov	r0, r4
}
 80035c8:	b001      	add	sp, #4
 80035ca:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035ce:	4718      	bx	r3
 80035d0:	08025d64 	.word	0x08025d64
 80035d4:	08026135 	.word	0x08026135
 80035d8:	08025ed6 	.word	0x08025ed6
 80035dc:	08025f1d 	.word	0x08025f1d
 80035e0:	08025fc0 	.word	0x08025fc0
 80035e4:	08026c40 	.word	0x08026c40
 80035e8:	200157b4 	.word	0x200157b4
 80035ec:	20015808 	.word	0x20015808
 80035f0:	20015804 	.word	0x20015804

080035f4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv>:
{
 80035f4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80035f8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80035fc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80035fe:	68b0      	ldr	r0, [r6, #8]
 8003600:	6803      	ldr	r3, [r0, #0]
 8003602:	6a1b      	ldr	r3, [r3, #32]
 8003604:	4798      	blx	r3
 8003606:	f5b0 7fea 	cmp.w	r0, #468	@ 0x1d4
 800360a:	d205      	bcs.n	8003618 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x24>
 800360c:	4b48      	ldr	r3, [pc, #288]	@ (8003730 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x13c>)
 800360e:	4a49      	ldr	r2, [pc, #292]	@ (8003734 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x140>)
 8003610:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003612:	4849      	ldr	r0, [pc, #292]	@ (8003738 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x144>)
 8003614:	f020 ffde 	bl	80245d4 <__assert_func>
 8003618:	6870      	ldr	r0, [r6, #4]
 800361a:	6803      	ldr	r3, [r0, #0]
 800361c:	6a1b      	ldr	r3, [r3, #32]
 800361e:	4798      	blx	r3
 8003620:	280f      	cmp	r0, #15
 8003622:	d803      	bhi.n	800362c <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x38>
 8003624:	4b45      	ldr	r3, [pc, #276]	@ (800373c <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x148>)
 8003626:	4a43      	ldr	r2, [pc, #268]	@ (8003734 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x140>)
 8003628:	21a4      	movs	r1, #164	@ 0xa4
 800362a:	e7f2      	b.n	8003612 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800362c:	68f0      	ldr	r0, [r6, #12]
 800362e:	6803      	ldr	r3, [r0, #0]
 8003630:	6a1b      	ldr	r3, [r3, #32]
 8003632:	4798      	blx	r3
 8003634:	280f      	cmp	r0, #15
 8003636:	d803      	bhi.n	8003640 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x4c>
 8003638:	4b41      	ldr	r3, [pc, #260]	@ (8003740 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x14c>)
 800363a:	4a3e      	ldr	r2, [pc, #248]	@ (8003734 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x140>)
 800363c:	21a5      	movs	r1, #165	@ 0xa5
 800363e:	e7e8      	b.n	8003612 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003640:	f00d fa28 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003644:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 800374c <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x158>
 8003648:	3004      	adds	r0, #4
 800364a:	f00d fa70 	bl	8010b2e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800364e:	f8d9 0000 	ldr.w	r0, [r9]
 8003652:	b110      	cbz	r0, 800365a <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003654:	6803      	ldr	r3, [r0, #0]
 8003656:	68db      	ldr	r3, [r3, #12]
 8003658:	4798      	blx	r3
    if (*currentTrans)
 800365a:	f8d9 0000 	ldr.w	r0, [r9]
 800365e:	b110      	cbz	r0, 8003666 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8003660:	6803      	ldr	r3, [r0, #0]
 8003662:	681b      	ldr	r3, [r3, #0]
 8003664:	4798      	blx	r3
    if (*currentScreen)
 8003666:	f8df 80e8 	ldr.w	r8, [pc, #232]	@ 8003750 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x15c>
 800366a:	f8d8 0000 	ldr.w	r0, [r8]
 800366e:	b110      	cbz	r0, 8003676 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003670:	6803      	ldr	r3, [r0, #0]
 8003672:	695b      	ldr	r3, [r3, #20]
 8003674:	4798      	blx	r3
    if (*currentPresenter)
 8003676:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800367a:	b110      	cbz	r0, 8003682 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800367c:	6803      	ldr	r3, [r0, #0]
 800367e:	685b      	ldr	r3, [r3, #4]
 8003680:	4798      	blx	r3
    if (*currentScreen)
 8003682:	f8d8 0000 	ldr.w	r0, [r8]
 8003686:	b110      	cbz	r0, 800368e <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003688:	6803      	ldr	r3, [r0, #0]
 800368a:	681b      	ldr	r3, [r3, #0]
 800368c:	4798      	blx	r3
    if (*currentPresenter)
 800368e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003692:	b110      	cbz	r0, 800369a <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003694:	6803      	ldr	r3, [r0, #0]
 8003696:	689b      	ldr	r3, [r3, #8]
 8003698:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800369a:	68f0      	ldr	r0, [r6, #12]
 800369c:	2100      	movs	r1, #0
 800369e:	f7ff fef5 	bl	800348c <_ZN8touchgfx17AbstractPartition2atINS_15CoverTransitionILNS_9DirectionE2EEEEERT_t>
          calculatedValue(0)
 80036a2:	4b28      	ldr	r3, [pc, #160]	@ (8003744 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x150>)
 80036a4:	6003      	str	r3, [r0, #0]
 80036a6:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80036aa:	8103      	strh	r3, [r0, #8]
            targetValue = -HAL::DISPLAY_WIDTH;
 80036ac:	4b26      	ldr	r3, [pc, #152]	@ (8003748 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x154>)
 80036ae:	881b      	ldrh	r3, [r3, #0]
 80036b0:	f04f 0b00 	mov.w	fp, #0
          animationCounter(0),
 80036b4:	f880 b00a 	strb.w	fp, [r0, #10]
            targetValue = -HAL::DISPLAY_WIDTH;
 80036b8:	425b      	negs	r3, r3
 80036ba:	4604      	mov	r4, r0
 80036bc:	f8c0 b004 	str.w	fp, [r0, #4]
          calculatedValue(0)
 80036c0:	f8a0 b00e 	strh.w	fp, [r0, #14]
            targetValue = -HAL::DISPLAY_WIDTH;
 80036c4:	8183      	strh	r3, [r0, #12]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80036c6:	68b0      	ldr	r0, [r6, #8]
 80036c8:	6803      	ldr	r3, [r0, #0]
 80036ca:	4659      	mov	r1, fp
 80036cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036ce:	4798      	blx	r3
 80036d0:	4605      	mov	r5, r0
 80036d2:	f001 fa97 	bl	8004c04 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80036d6:	6870      	ldr	r0, [r6, #4]
 80036d8:	6803      	ldr	r3, [r0, #0]
 80036da:	4659      	mov	r1, fp
 80036dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036de:	4798      	blx	r3
 80036e0:	4629      	mov	r1, r5
 80036e2:	4606      	mov	r6, r0
 80036e4:	f001 fa0c 	bl	8004b00 <_ZN16Screen2PresenterC1ER11Screen2View>
    model->bind(newPresenter);
 80036e8:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80036ea:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
 80036ee:	f8ca 3004 	str.w	r3, [sl, #4]
    newScreen->setupScreen();
 80036f2:	682b      	ldr	r3, [r5, #0]
 80036f4:	f8c6 a008 	str.w	sl, [r6, #8]
 80036f8:	4628      	mov	r0, r5
 80036fa:	68db      	ldr	r3, [r3, #12]
    *currentTrans = newTransition;
 80036fc:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003700:	f8c8 5000 	str.w	r5, [r8]
 8003704:	63ee      	str	r6, [r5, #60]	@ 0x3c
    newScreen->setupScreen();
 8003706:	4798      	blx	r3
    newPresenter->activate();
 8003708:	6833      	ldr	r3, [r6, #0]
 800370a:	4630      	mov	r0, r6
 800370c:	681b      	ldr	r3, [r3, #0]
 800370e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003710:	4621      	mov	r1, r4
 8003712:	4628      	mov	r0, r5
 8003714:	f00f fb96 	bl	8012e44 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003718:	6823      	ldr	r3, [r4, #0]
 800371a:	4620      	mov	r0, r4
 800371c:	691b      	ldr	r3, [r3, #16]
 800371e:	4798      	blx	r3
    newTransition->invalidate();
 8003720:	6823      	ldr	r3, [r4, #0]
 8003722:	695b      	ldr	r3, [r3, #20]
 8003724:	4620      	mov	r0, r4
}
 8003726:	b001      	add	sp, #4
 8003728:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800372c:	4718      	bx	r3
 800372e:	bf00      	nop
 8003730:	08025d64 	.word	0x08025d64
 8003734:	0802621a 	.word	0x0802621a
 8003738:	08025ed6 	.word	0x08025ed6
 800373c:	08025f1d 	.word	0x08025f1d
 8003740:	08025fc0 	.word	0x08025fc0
 8003744:	08026c40 	.word	0x08026c40
 8003748:	200157b4 	.word	0x200157b4
 800374c:	20015808 	.word	0x20015808
 8003750:	20015804 	.word	0x20015804

08003754 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv>:
{
 8003754:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003758:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800375c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800375e:	68b0      	ldr	r0, [r6, #8]
 8003760:	6803      	ldr	r3, [r0, #0]
 8003762:	6a1b      	ldr	r3, [r3, #32]
 8003764:	4798      	blx	r3
 8003766:	f5b0 7fd2 	cmp.w	r0, #420	@ 0x1a4
 800376a:	d205      	bcs.n	8003778 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x24>
 800376c:	4b47      	ldr	r3, [pc, #284]	@ (800388c <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x138>)
 800376e:	4a48      	ldr	r2, [pc, #288]	@ (8003890 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x13c>)
 8003770:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003772:	4848      	ldr	r0, [pc, #288]	@ (8003894 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x140>)
 8003774:	f020 ff2e 	bl	80245d4 <__assert_func>
 8003778:	6870      	ldr	r0, [r6, #4]
 800377a:	6803      	ldr	r3, [r0, #0]
 800377c:	6a1b      	ldr	r3, [r3, #32]
 800377e:	4798      	blx	r3
 8003780:	280f      	cmp	r0, #15
 8003782:	d803      	bhi.n	800378c <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x38>
 8003784:	4b44      	ldr	r3, [pc, #272]	@ (8003898 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x144>)
 8003786:	4a42      	ldr	r2, [pc, #264]	@ (8003890 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x13c>)
 8003788:	21a4      	movs	r1, #164	@ 0xa4
 800378a:	e7f2      	b.n	8003772 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800378c:	68f0      	ldr	r0, [r6, #12]
 800378e:	6803      	ldr	r3, [r0, #0]
 8003790:	6a1b      	ldr	r3, [r3, #32]
 8003792:	4798      	blx	r3
 8003794:	280f      	cmp	r0, #15
 8003796:	d803      	bhi.n	80037a0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x4c>
 8003798:	4b40      	ldr	r3, [pc, #256]	@ (800389c <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x148>)
 800379a:	4a3d      	ldr	r2, [pc, #244]	@ (8003890 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x13c>)
 800379c:	21a5      	movs	r1, #165	@ 0xa5
 800379e:	e7e8      	b.n	8003772 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80037a0:	f00d f978 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80037a4:	f8df 9100 	ldr.w	r9, [pc, #256]	@ 80038a8 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x154>
 80037a8:	3004      	adds	r0, #4
 80037aa:	f00d f9c0 	bl	8010b2e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80037ae:	f8d9 0000 	ldr.w	r0, [r9]
 80037b2:	b110      	cbz	r0, 80037ba <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80037b4:	6803      	ldr	r3, [r0, #0]
 80037b6:	68db      	ldr	r3, [r3, #12]
 80037b8:	4798      	blx	r3
    if (*currentTrans)
 80037ba:	f8d9 0000 	ldr.w	r0, [r9]
 80037be:	b110      	cbz	r0, 80037c6 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80037c0:	6803      	ldr	r3, [r0, #0]
 80037c2:	681b      	ldr	r3, [r3, #0]
 80037c4:	4798      	blx	r3
    if (*currentScreen)
 80037c6:	f8df 80e4 	ldr.w	r8, [pc, #228]	@ 80038ac <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x158>
 80037ca:	f8d8 0000 	ldr.w	r0, [r8]
 80037ce:	b110      	cbz	r0, 80037d6 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80037d0:	6803      	ldr	r3, [r0, #0]
 80037d2:	695b      	ldr	r3, [r3, #20]
 80037d4:	4798      	blx	r3
    if (*currentPresenter)
 80037d6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80037da:	b110      	cbz	r0, 80037e2 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80037dc:	6803      	ldr	r3, [r0, #0]
 80037de:	685b      	ldr	r3, [r3, #4]
 80037e0:	4798      	blx	r3
    if (*currentScreen)
 80037e2:	f8d8 0000 	ldr.w	r0, [r8]
 80037e6:	b110      	cbz	r0, 80037ee <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80037e8:	6803      	ldr	r3, [r0, #0]
 80037ea:	681b      	ldr	r3, [r3, #0]
 80037ec:	4798      	blx	r3
    if (*currentPresenter)
 80037ee:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80037f2:	b110      	cbz	r0, 80037fa <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80037f4:	6803      	ldr	r3, [r0, #0]
 80037f6:	689b      	ldr	r3, [r3, #8]
 80037f8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80037fa:	68f0      	ldr	r0, [r6, #12]
 80037fc:	2100      	movs	r1, #0
 80037fe:	f7ff fe45 	bl	800348c <_ZN8touchgfx17AbstractPartition2atINS_15CoverTransitionILNS_9DirectionE2EEEEERT_t>
          calculatedValue(0)
 8003802:	4b27      	ldr	r3, [pc, #156]	@ (80038a0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x14c>)
 8003804:	6003      	str	r3, [r0, #0]
 8003806:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 800380a:	8103      	strh	r3, [r0, #8]
            targetValue = -HAL::DISPLAY_WIDTH;
 800380c:	4b25      	ldr	r3, [pc, #148]	@ (80038a4 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x150>)
 800380e:	881b      	ldrh	r3, [r3, #0]
 8003810:	f04f 0b00 	mov.w	fp, #0
 8003814:	425b      	negs	r3, r3
          animationCounter(0),
 8003816:	f880 b00a 	strb.w	fp, [r0, #10]
 800381a:	4604      	mov	r4, r0
            targetValue = -HAL::DISPLAY_WIDTH;
 800381c:	8183      	strh	r3, [r0, #12]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800381e:	4659      	mov	r1, fp
 8003820:	f8c0 b004 	str.w	fp, [r0, #4]
          calculatedValue(0)
 8003824:	f8a0 b00e 	strh.w	fp, [r0, #14]
 8003828:	68b0      	ldr	r0, [r6, #8]
 800382a:	f7ff fcd5 	bl	80031d8 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 800382e:	4605      	mov	r5, r0
 8003830:	f001 f924 	bl	8004a7c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003834:	4659      	mov	r1, fp
 8003836:	6870      	ldr	r0, [r6, #4]
 8003838:	f7ff fcd1 	bl	80031de <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 800383c:	4629      	mov	r1, r5
 800383e:	4606      	mov	r6, r0
 8003840:	f001 f8f8 	bl	8004a34 <_ZN16Screen1PresenterC1ER11Screen1View>
    model->bind(newPresenter);
 8003844:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003846:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
 800384a:	f8ca 3004 	str.w	r3, [sl, #4]
    newScreen->setupScreen();
 800384e:	682b      	ldr	r3, [r5, #0]
 8003850:	f8c6 a008 	str.w	sl, [r6, #8]
 8003854:	4628      	mov	r0, r5
 8003856:	68db      	ldr	r3, [r3, #12]
    *currentTrans = newTransition;
 8003858:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800385c:	f8c8 5000 	str.w	r5, [r8]
 8003860:	63ee      	str	r6, [r5, #60]	@ 0x3c
    newScreen->setupScreen();
 8003862:	4798      	blx	r3
    newPresenter->activate();
 8003864:	6833      	ldr	r3, [r6, #0]
 8003866:	4630      	mov	r0, r6
 8003868:	681b      	ldr	r3, [r3, #0]
 800386a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800386c:	4621      	mov	r1, r4
 800386e:	4628      	mov	r0, r5
 8003870:	f00f fae8 	bl	8012e44 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003874:	6823      	ldr	r3, [r4, #0]
 8003876:	4620      	mov	r0, r4
 8003878:	691b      	ldr	r3, [r3, #16]
 800387a:	4798      	blx	r3
    newTransition->invalidate();
 800387c:	6823      	ldr	r3, [r4, #0]
 800387e:	695b      	ldr	r3, [r3, #20]
 8003880:	4620      	mov	r0, r4
}
 8003882:	b001      	add	sp, #4
 8003884:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003888:	4718      	bx	r3
 800388a:	bf00      	nop
 800388c:	08025d64 	.word	0x08025d64
 8003890:	080262ff 	.word	0x080262ff
 8003894:	08025ed6 	.word	0x08025ed6
 8003898:	08025f1d 	.word	0x08025f1d
 800389c:	08025fc0 	.word	0x08025fc0
 80038a0:	08026c40 	.word	0x08026c40
 80038a4:	200157b4 	.word	0x200157b4
 80038a8:	20015808 	.word	0x20015808
 80038ac:	20015804 	.word	0x20015804

080038b0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80038b0:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 80038b2:	4770      	bx	lr

080038b4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80038b4:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80038b6:	4770      	bx	lr

080038b8 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80038b8:	4770      	bx	lr

080038ba <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 80038ba:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 80038bc:	880b      	ldrh	r3, [r1, #0]
{
 80038be:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 80038c0:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 80038c2:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 80038c4:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 80038c6:	b29b      	uxth	r3, r3
    return pixels + offset;
 80038c8:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 80038cc:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 80038d0:	4418      	add	r0, r3
 80038d2:	bd10      	pop	{r4, pc}

080038d4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80038d4:	b510      	push	{r4, lr}
 80038d6:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 80038d8:	b1ba      	cbz	r2, 800390a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80038da:	7b10      	ldrb	r0, [r2, #12]
 80038dc:	b168      	cbz	r0, 80038fa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80038de:	7b53      	ldrb	r3, [r2, #13]
 80038e0:	7ad2      	ldrb	r2, [r2, #11]
 80038e2:	021b      	lsls	r3, r3, #8
 80038e4:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80038e8:	431a      	orrs	r2, r3
 80038ea:	6a23      	ldr	r3, [r4, #32]
 80038ec:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 80038f0:	881a      	ldrh	r2, [r3, #0]
 80038f2:	428a      	cmp	r2, r1
 80038f4:	d102      	bne.n	80038fc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80038f6:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 80038fa:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80038fc:	d805      	bhi.n	800390a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80038fe:	3801      	subs	r0, #1
 8003900:	b280      	uxth	r0, r0
 8003902:	3304      	adds	r3, #4
 8003904:	2800      	cmp	r0, #0
 8003906:	d1f3      	bne.n	80038f0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8003908:	e7f7      	b.n	80038fa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800390a:	2000      	movs	r0, #0
 800390c:	e7f5      	b.n	80038fa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800390e <_ZN8touchgfx13GeneratedFontD0Ev>:
 800390e:	b510      	push	{r4, lr}
 8003910:	212c      	movs	r1, #44	@ 0x2c
 8003912:	4604      	mov	r4, r0
 8003914:	f01f ff22 	bl	802375c <_ZdlPvj>
 8003918:	4620      	mov	r0, r4
 800391a:	bd10      	pop	{r4, pc}

0800391c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800391c:	b530      	push	{r4, r5, lr}
 800391e:	b08b      	sub	sp, #44	@ 0x2c
 8003920:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8003922:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8003926:	9508      	str	r5, [sp, #32]
 8003928:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 800392c:	9507      	str	r5, [sp, #28]
 800392e:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8003932:	9506      	str	r5, [sp, #24]
 8003934:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8003938:	9505      	str	r5, [sp, #20]
 800393a:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800393e:	9504      	str	r5, [sp, #16]
 8003940:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8003944:	9503      	str	r5, [sp, #12]
 8003946:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 800394a:	9502      	str	r5, [sp, #8]
 800394c:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8003950:	9501      	str	r5, [sp, #4]
 8003952:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8003956:	9500      	str	r5, [sp, #0]
 8003958:	f00e fece 	bl	80126f8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800395c:	4b06      	ldr	r3, [pc, #24]	@ (8003978 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800395e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8003960:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8003962:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8003964:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8003966:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8003968:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800396a:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 800396c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 800396e:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8003970:	4620      	mov	r0, r4
 8003972:	b00b      	add	sp, #44	@ 0x2c
 8003974:	bd30      	pop	{r4, r5, pc}
 8003976:	bf00      	nop
 8003978:	08026c88 	.word	0x08026c88

0800397c <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800397c:	4770      	bx	lr

0800397e <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800397e:	4770      	bx	lr

08003980 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003980:	4770      	bx	lr

08003982 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003982:	4770      	bx	lr

08003984 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8003984:	4770      	bx	lr

08003986 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8003986:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8003988:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 800398a:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800398c:	466d      	mov	r5, sp
        rect.width = width;
 800398e:	8101      	strh	r1, [r0, #8]
 8003990:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003994:	4601      	mov	r1, r0
    virtual void setWidth(int16_t width)
 8003996:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003998:	4628      	mov	r0, r5
 800399a:	4798      	blx	r3
 800399c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80039a0:	343c      	adds	r4, #60	@ 0x3c
 80039a2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80039a6:	b005      	add	sp, #20
 80039a8:	bd30      	pop	{r4, r5, pc}

080039aa <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80039aa:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80039ac:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 80039ae:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80039b0:	466d      	mov	r5, sp
        rect.height = height;
 80039b2:	8141      	strh	r1, [r0, #10]
 80039b4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80039b8:	4601      	mov	r1, r0
    virtual void setHeight(int16_t height)
 80039ba:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80039bc:	4628      	mov	r0, r5
 80039be:	4798      	blx	r3
 80039c0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80039c4:	343c      	adds	r4, #60	@ 0x3c
 80039c6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80039ca:	b005      	add	sp, #20
 80039cc:	bd30      	pop	{r4, r5, pc}

080039ce <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80039ce:	2200      	movs	r2, #0
 80039d0:	8002      	strh	r2, [r0, #0]
 80039d2:	8042      	strh	r2, [r0, #2]
 80039d4:	8082      	strh	r2, [r0, #4]
 80039d6:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80039d8:	4770      	bx	lr

080039da <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80039da:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 80039de:	4770      	bx	lr

080039e0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80039e0:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80039e2:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80039e4:	4604      	mov	r4, r0
        setX(x);
 80039e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80039e8:	4615      	mov	r5, r2
        setX(x);
 80039ea:	4798      	blx	r3
        setBaselineY(baselineY);
 80039ec:	6823      	ldr	r3, [r4, #0]
 80039ee:	4629      	mov	r1, r5
 80039f0:	4620      	mov	r0, r4
 80039f2:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 80039f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80039f8:	4718      	bx	r3

080039fa <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80039fa:	2000      	movs	r0, #0
 80039fc:	4770      	bx	lr

080039fe <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80039fe:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8003a00:	4770      	bx	lr

08003a02 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8003a02:	4770      	bx	lr

08003a04 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003a04:	4770      	bx	lr

08003a06 <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 8003a06:	4770      	bx	lr

08003a08 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 8003a08:	4770      	bx	lr

08003a0a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003a0a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003a0c:	68c2      	ldr	r2, [r0, #12]
 8003a0e:	6844      	ldr	r4, [r0, #4]
 8003a10:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003a12:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003a14:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003a18:	07d2      	lsls	r2, r2, #31
 8003a1a:	bf48      	it	mi
 8003a1c:	5962      	ldrmi	r2, [r4, r5]
 8003a1e:	689b      	ldr	r3, [r3, #8]
    }
 8003a20:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003a22:	bf48      	it	mi
 8003a24:	58d3      	ldrmi	r3, [r2, r3]
 8003a26:	4718      	bx	r3

08003a28 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8003a28:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003a2a:	6840      	ldr	r0, [r0, #4]
 8003a2c:	b130      	cbz	r0, 8003a3c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003a2e:	689a      	ldr	r2, [r3, #8]
 8003a30:	b91a      	cbnz	r2, 8003a3a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8003a32:	68d8      	ldr	r0, [r3, #12]
 8003a34:	f000 0001 	and.w	r0, r0, #1
 8003a38:	4770      	bx	lr
 8003a3a:	2001      	movs	r0, #1
    }
 8003a3c:	4770      	bx	lr

08003a3e <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8003a3e:	b510      	push	{r4, lr}
 8003a40:	214c      	movs	r1, #76	@ 0x4c
 8003a42:	4604      	mov	r4, r0
 8003a44:	f01f fe8a 	bl	802375c <_ZdlPvj>
 8003a48:	4620      	mov	r0, r4
 8003a4a:	bd10      	pop	{r4, pc}

08003a4c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003a4c:	b510      	push	{r4, lr}
 8003a4e:	2110      	movs	r1, #16
 8003a50:	4604      	mov	r4, r0
 8003a52:	f01f fe83 	bl	802375c <_ZdlPvj>
 8003a56:	4620      	mov	r0, r4
 8003a58:	bd10      	pop	{r4, pc}

08003a5a <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8003a5a:	b510      	push	{r4, lr}
}
 8003a5c:	f44f 71d0 	mov.w	r1, #416	@ 0x1a0
Screen1ViewBase::~Screen1ViewBase()
 8003a60:	4604      	mov	r4, r0
}
 8003a62:	f01f fe7b 	bl	802375c <_ZdlPvj>
 8003a66:	4620      	mov	r0, r4
 8003a68:	bd10      	pop	{r4, pc}

08003a6a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003a6a:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003a6c:	f7ff f896 	bl	8002b9c <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8003a70:	bd08      	pop	{r3, pc}
	...

08003a74 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003a74:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003a76:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003a78:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a7a:	4b12      	ldr	r3, [pc, #72]	@ (8003ac4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003a7c:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003a7e:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003a80:	b28d      	uxth	r5, r1
 8003a82:	b92b      	cbnz	r3, 8003a90 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8003a84:	4b10      	ldr	r3, [pc, #64]	@ (8003ac8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8003a86:	4a11      	ldr	r2, [pc, #68]	@ (8003acc <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003a88:	216c      	movs	r1, #108	@ 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a8a:	4811      	ldr	r0, [pc, #68]	@ (8003ad0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003a8c:	f020 fda2 	bl	80245d4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003a90:	4910      	ldr	r1, [pc, #64]	@ (8003ad4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8003a92:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a94:	8809      	ldrh	r1, [r1, #0]
 8003a96:	4291      	cmp	r1, r2
 8003a98:	d803      	bhi.n	8003aa2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8003a9a:	4b0f      	ldr	r3, [pc, #60]	@ (8003ad8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003a9c:	4a0b      	ldr	r2, [pc, #44]	@ (8003acc <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003a9e:	216d      	movs	r1, #109	@ 0x6d
 8003aa0:	e7f3      	b.n	8003a8a <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003aa2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8003aa6:	4b0d      	ldr	r3, [pc, #52]	@ (8003adc <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8003aa8:	681b      	ldr	r3, [r3, #0]
 8003aaa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8003aae:	6803      	ldr	r3, [r0, #0]
 8003ab0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003ab2:	4798      	blx	r3
 8003ab4:	1a29      	subs	r1, r5, r0
 8003ab6:	4633      	mov	r3, r6
 8003ab8:	4620      	mov	r0, r4
 8003aba:	b209      	sxth	r1, r1
    }
 8003abc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003ac0:	4718      	bx	r3
 8003ac2:	bf00      	nop
 8003ac4:	20015818 	.word	0x20015818
 8003ac8:	080263e4 	.word	0x080263e4
 8003acc:	08026426 	.word	0x08026426
 8003ad0:	08026461 	.word	0x08026461
 8003ad4:	2001581c 	.word	0x2001581c
 8003ad8:	080264a8 	.word	0x080264a8
 8003adc:	20015820 	.word	0x20015820

08003ae0 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 8003ae0:	f500 70a4 	add.w	r0, r0, #328	@ 0x148
 8003ae4:	4288      	cmp	r0, r1
{
 8003ae6:	b508      	push	{r3, lr}
    if (&src == &button1)
 8003ae8:	d105      	bne.n	8003af6 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003aea:	f00c ffd3 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When button1 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenCoverTransitionEast();
    }
}
 8003aee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenCoverTransitionEast();
 8003af2:	f7ff bb51 	b.w	8003198 <_ZN23FrontendApplicationBase36gotoScreen2ScreenCoverTransitionEastEv>
}
 8003af6:	bd08      	pop	{r3, pc}

08003af8 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003af8:	2200      	movs	r2, #0
 8003afa:	f04f 31ff 	mov.w	r1, #4294967295
 8003afe:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8003b02:	6082      	str	r2, [r0, #8]
    }
 8003b04:	4770      	bx	lr

08003b06 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8003b06:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8003b08:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8003b0a:	4604      	mov	r4, r0
        setX(x);
 8003b0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8003b0e:	4615      	mov	r5, r2
        setX(x);
 8003b10:	4798      	blx	r3
        setY(y);
 8003b12:	6823      	ldr	r3, [r4, #0]
 8003b14:	4629      	mov	r1, r5
 8003b16:	4620      	mov	r0, r4
 8003b18:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 8003b1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003b1e:	4718      	bx	r3

08003b20 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003b20:	b570      	push	{r4, r5, r6, lr}
 8003b22:	4604      	mov	r4, r0
 8003b24:	461d      	mov	r5, r3
 8003b26:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003b2a:	f7ff ffec 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003b2e:	6823      	ldr	r3, [r4, #0]
 8003b30:	4629      	mov	r1, r5
 8003b32:	4620      	mov	r0, r4
 8003b34:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003b36:	4798      	blx	r3
        setHeight(height);
 8003b38:	6823      	ldr	r3, [r4, #0]
 8003b3a:	4631      	mov	r1, r6
 8003b3c:	4620      	mov	r0, r4
 8003b3e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8003b40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8003b44:	4718      	bx	r3
	...

08003b48 <_ZN8touchgfx6WidgetC1Ev>:
 8003b48:	2200      	movs	r2, #0
 8003b4a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003b4e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8003b52:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8003b56:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8003b5a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003b5e:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 8003b60:	4a01      	ldr	r2, [pc, #4]	@ (8003b68 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8003b62:	6002      	str	r2, [r0, #0]
 8003b64:	4770      	bx	lr
 8003b66:	bf00      	nop
 8003b68:	08026cf0 	.word	0x08026cf0

08003b6c <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8003b6c:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003b6e:	2226      	movs	r2, #38	@ 0x26
    TextArea()
 8003b70:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003b72:	2100      	movs	r1, #0
 8003b74:	f020 ff35 	bl	80249e2 <memset>
 8003b78:	4620      	mov	r0, r4
 8003b7a:	f7ff ffe5 	bl	8003b48 <_ZN8touchgfx6WidgetC1Ev>
 8003b7e:	4b0a      	ldr	r3, [pc, #40]	@ (8003ba8 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003b80:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8003b82:	4b0a      	ldr	r3, [pc, #40]	@ (8003bac <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8003b84:	62a3      	str	r3, [r4, #40]	@ 0x28
 8003b86:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003b8a:	85a3      	strh	r3, [r4, #44]	@ 0x2c
 8003b8c:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
 8003b90:	2300      	movs	r3, #0
 8003b92:	e9c4 320c 	strd	r3, r2, [r4, #48]	@ 0x30
 8003b96:	8723      	strh	r3, [r4, #56]	@ 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003b98:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8003b9c:	e9c4 2310 	strd	r2, r3, [r4, #64]	@ 0x40
 8003ba0:	63e3      	str	r3, [r4, #60]	@ 0x3c
    }
 8003ba2:	4620      	mov	r0, r4
 8003ba4:	bd10      	pop	{r4, pc}
 8003ba6:	bf00      	nop
 8003ba8:	080277a0 	.word	0x080277a0
 8003bac:	08026ba0 	.word	0x08026ba0

08003bb0 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8003bb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003bb4:	4604      	mov	r4, r0
 8003bb6:	b08b      	sub	sp, #44	@ 0x2c
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8003bb8:	4626      	mov	r6, r4
        : presenter(0)
 8003bba:	2500      	movs	r5, #0
 8003bbc:	f00e ff96 	bl	8012aec <_ZN8touchgfx6ScreenC1Ev>
 8003bc0:	4b7e      	ldr	r3, [pc, #504]	@ (8003dbc <_ZN15Screen1ViewBaseC1Ev+0x20c>)
 8003bc2:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003bc4:	f846 3b40 	str.w	r3, [r6], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003bc8:	4629      	mov	r1, r5
 8003bca:	2226      	movs	r2, #38	@ 0x26
 8003bcc:	4630      	mov	r0, r6
 8003bce:	f020 ff08 	bl	80249e2 <memset>
 8003bd2:	4630      	mov	r0, r6
 8003bd4:	f7ff ffb8 	bl	8003b48 <_ZN8touchgfx6WidgetC1Ev>
 8003bd8:	4b79      	ldr	r3, [pc, #484]	@ (8003dc0 <_ZN15Screen1ViewBaseC1Ev+0x210>)
 8003bda:	6423      	str	r3, [r4, #64]	@ 0x40
 8003bdc:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 8003be0:	23ff      	movs	r3, #255	@ 0xff
 8003be2:	f104 0ab4 	add.w	sl, r4, #180	@ 0xb4
 8003be6:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
        : color(col)
 8003bea:	66a5      	str	r5, [r4, #104]	@ 0x68
 8003bec:	4658      	mov	r0, fp
 8003bee:	f7ff ffbd 	bl	8003b6c <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 8003bf2:	f104 09fc 	add.w	r9, r4, #252	@ 0xfc
 8003bf6:	4650      	mov	r0, sl
 8003bf8:	f7ff ffb8 	bl	8003b6c <_ZN8touchgfx8TextAreaC1Ev>
 8003bfc:	4648      	mov	r0, r9
 8003bfe:	f7ff ffb5 	bl	8003b6c <_ZN8touchgfx8TextAreaC1Ev>
 8003c02:	f504 78a4 	add.w	r8, r4, #328	@ 0x148
        : TextAreaWithWildcardBase(), wc1(0)
 8003c06:	4b6f      	ldr	r3, [pc, #444]	@ (8003dc4 <_ZN15Screen1ViewBaseC1Ev+0x214>)
 8003c08:	f8c4 30fc 	str.w	r3, [r4, #252]	@ 0xfc
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8003c0c:	4629      	mov	r1, r5
 8003c0e:	2226      	movs	r2, #38	@ 0x26
 8003c10:	f8c4 5144 	str.w	r5, [r4, #324]	@ 0x144
 8003c14:	4640      	mov	r0, r8
 8003c16:	f020 fee4 	bl	80249e2 <memset>
 8003c1a:	4640      	mov	r0, r8
 8003c1c:	f7ff ff94 	bl	8003b48 <_ZN8touchgfx6WidgetC1Ev>
        touchable = touch;
 8003c20:	2301      	movs	r3, #1
 8003c22:	f884 316c 	strb.w	r3, [r4, #364]	@ 0x16c
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8003c26:	4b68      	ldr	r3, [pc, #416]	@ (8003dc8 <_ZN15Screen1ViewBaseC1Ev+0x218>)
 8003c28:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003c2c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003c30:	f8a4 3176 	strh.w	r3, [r4, #374]	@ 0x176
 8003c34:	f8a4 3178 	strh.w	r3, [r4, #376]	@ 0x178
 8003c38:	f884 317a 	strb.w	r3, [r4, #378]	@ 0x17a
        : pobject(pObject), pmemfun(pmemfun_1)
 8003c3c:	4b63      	ldr	r3, [pc, #396]	@ (8003dcc <_ZN15Screen1ViewBaseC1Ev+0x21c>)
 8003c3e:	f8c4 5170 	str.w	r5, [r4, #368]	@ 0x170
 8003c42:	e9c4 3464 	strd	r3, r4, [r4, #400]	@ 0x190
 8003c46:	4b62      	ldr	r3, [pc, #392]	@ (8003dd0 <_ZN15Screen1ViewBaseC1Ev+0x220>)
 8003c48:	f884 5174 	strb.w	r5, [r4, #372]	@ 0x174
 8003c4c:	e9c4 3566 	strd	r3, r5, [r4, #408]	@ 0x198
    __background.setPosition(0, 0, 240, 320);
 8003c50:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003c54:	462a      	mov	r2, r5
 8003c56:	4629      	mov	r1, r5
 8003c58:	4630      	mov	r0, r6
 8003c5a:	9300      	str	r3, [sp, #0]
 8003c5c:	23f0      	movs	r3, #240	@ 0xf0
 8003c5e:	f7ff ff5f 	bl	8003b20 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003c62:	1d27      	adds	r7, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8003c64:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003c68:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003c6a:	4631      	mov	r1, r6
 8003c6c:	4638      	mov	r0, r7
 8003c6e:	f006 fecf 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(6, 10);
 8003c72:	220a      	movs	r2, #10
 8003c74:	2106      	movs	r1, #6
 8003c76:	4658      	mov	r0, fp
 8003c78:	f7ff ff45 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003c7c:	ae02      	add	r6, sp, #8
        color = newColor;
 8003c7e:	4b55      	ldr	r3, [pc, #340]	@ (8003dd4 <_ZN15Screen1ViewBaseC1Ev+0x224>)
 8003c80:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
        linespace = space;
 8003c84:	f8a4 50a0 	strh.w	r5, [r4, #160]	@ 0xa0
        boundingArea = calculateBoundingArea();
 8003c88:	4659      	mov	r1, fp
 8003c8a:	4630      	mov	r0, r6
 8003c8c:	f009 fe32 	bl	800d8f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003c90:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003c94:	f104 03a8 	add.w	r3, r4, #168	@ 0xa8
 8003c98:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003c9c:	4b4e      	ldr	r3, [pc, #312]	@ (8003dd8 <_ZN15Screen1ViewBaseC1Ev+0x228>)
 8003c9e:	9308      	str	r3, [sp, #32]
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1CQX));
 8003ca0:	a908      	add	r1, sp, #32
 8003ca2:	2308      	movs	r3, #8
 8003ca4:	4658      	mov	r0, fp
 8003ca6:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003caa:	f00a f8cb 	bl	800de44 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003cae:	4659      	mov	r1, fp
 8003cb0:	4638      	mov	r0, r7
 8003cb2:	f006 fead 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(52, 93);
 8003cb6:	225d      	movs	r2, #93	@ 0x5d
 8003cb8:	2134      	movs	r1, #52	@ 0x34
 8003cba:	4650      	mov	r0, sl
 8003cbc:	f7ff ff23 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003cc0:	4b46      	ldr	r3, [pc, #280]	@ (8003ddc <_ZN15Screen1ViewBaseC1Ev+0x22c>)
 8003cc2:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
        linespace = space;
 8003cc6:	f8a4 50e8 	strh.w	r5, [r4, #232]	@ 0xe8
        boundingArea = calculateBoundingArea();
 8003cca:	4651      	mov	r1, sl
 8003ccc:	4630      	mov	r0, r6
 8003cce:	f009 fe11 	bl	800d8f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003cd2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003cd6:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8003cda:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003cde:	4b3e      	ldr	r3, [pc, #248]	@ (8003dd8 <_ZN15Screen1ViewBaseC1Ev+0x228>)
 8003ce0:	9308      	str	r3, [sp, #32]
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_16LT));
 8003ce2:	a908      	add	r1, sp, #32
 8003ce4:	2307      	movs	r3, #7
 8003ce6:	4650      	mov	r0, sl
 8003ce8:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003cec:	f00a f8aa 	bl	800de44 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003cf0:	4651      	mov	r1, sl
 8003cf2:	4638      	mov	r0, r7
 8003cf4:	f006 fe8c 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    highestScore.setPosition(0, 119, 240, 41);
 8003cf8:	2329      	movs	r3, #41	@ 0x29
 8003cfa:	2277      	movs	r2, #119	@ 0x77
 8003cfc:	4629      	mov	r1, r5
 8003cfe:	9300      	str	r3, [sp, #0]
 8003d00:	4648      	mov	r0, r9
 8003d02:	23f0      	movs	r3, #240	@ 0xf0
 8003d04:	f7ff ff0c 	bl	8003b20 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003d08:	4b35      	ldr	r3, [pc, #212]	@ (8003de0 <_ZN15Screen1ViewBaseC1Ev+0x230>)
 8003d0a:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
        boundingArea = calculateBoundingArea();
 8003d0e:	f8d4 30fc 	ldr.w	r3, [r4, #252]	@ 0xfc
        linespace = space;
 8003d12:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
        boundingArea = calculateBoundingArea();
 8003d16:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003d1a:	4649      	mov	r1, r9
 8003d1c:	4630      	mov	r0, r6
 8003d1e:	4798      	blx	r3
 8003d20:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003d24:	f504 739c 	add.w	r3, r4, #312	@ 0x138
 8003d28:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d2c:	4b2d      	ldr	r3, [pc, #180]	@ (8003de4 <_ZN15Screen1ViewBaseC1Ev+0x234>)
 8003d2e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(highestScoreBuffer, HIGHESTSCORE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_S6TU).getText());
 8003d30:	f504 75be 	add.w	r5, r4, #380	@ 0x17c
 8003d34:	b92b      	cbnz	r3, 8003d42 <_ZN15Screen1ViewBaseC1Ev+0x192>
 8003d36:	4b2c      	ldr	r3, [pc, #176]	@ (8003de8 <_ZN15Screen1ViewBaseC1Ev+0x238>)
 8003d38:	4a2c      	ldr	r2, [pc, #176]	@ (8003dec <_ZN15Screen1ViewBaseC1Ev+0x23c>)
 8003d3a:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d3c:	482c      	ldr	r0, [pc, #176]	@ (8003df0 <_ZN15Screen1ViewBaseC1Ev+0x240>)
 8003d3e:	f020 fc49 	bl	80245d4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003d42:	4b2c      	ldr	r3, [pc, #176]	@ (8003df4 <_ZN15Screen1ViewBaseC1Ev+0x244>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d44:	881b      	ldrh	r3, [r3, #0]
 8003d46:	2b05      	cmp	r3, #5
 8003d48:	d803      	bhi.n	8003d52 <_ZN15Screen1ViewBaseC1Ev+0x1a2>
 8003d4a:	4b2b      	ldr	r3, [pc, #172]	@ (8003df8 <_ZN15Screen1ViewBaseC1Ev+0x248>)
 8003d4c:	4a27      	ldr	r2, [pc, #156]	@ (8003dec <_ZN15Screen1ViewBaseC1Ev+0x23c>)
 8003d4e:	2161      	movs	r1, #97	@ 0x61
 8003d50:	e7f4      	b.n	8003d3c <_ZN15Screen1ViewBaseC1Ev+0x18c>
        return texts->getText(typedTextId);
 8003d52:	4b2a      	ldr	r3, [pc, #168]	@ (8003dfc <_ZN15Screen1ViewBaseC1Ev+0x24c>)
 8003d54:	2105      	movs	r1, #5
 8003d56:	6818      	ldr	r0, [r3, #0]
 8003d58:	f000 fdf6 	bl	8004948 <_ZNK8touchgfx5Texts7getTextEt>
 8003d5c:	4a28      	ldr	r2, [pc, #160]	@ (8003e00 <_ZN15Screen1ViewBaseC1Ev+0x250>)
 8003d5e:	4603      	mov	r3, r0
 8003d60:	210a      	movs	r1, #10
 8003d62:	4628      	mov	r0, r5
 8003d64:	f010 fba2 	bl	80144ac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003d68:	4b1b      	ldr	r3, [pc, #108]	@ (8003dd8 <_ZN15Screen1ViewBaseC1Ev+0x228>)
        wc1 = value;
 8003d6a:	f8c4 5144 	str.w	r5, [r4, #324]	@ 0x144
    highestScore.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MS31));
 8003d6e:	a908      	add	r1, sp, #32
 8003d70:	2506      	movs	r5, #6
 8003d72:	4648      	mov	r0, r9
 8003d74:	9308      	str	r3, [sp, #32]
 8003d76:	f8ad 5024 	strh.w	r5, [sp, #36]	@ 0x24
 8003d7a:	f00a f863 	bl	800de44 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003d7e:	4649      	mov	r1, r9
 8003d80:	4638      	mov	r0, r7
 8003d82:	f006 fe45 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    button1.setXY(20, 208);
 8003d86:	4640      	mov	r0, r8
 8003d88:	22d0      	movs	r2, #208	@ 0xd0
 8003d8a:	2114      	movs	r1, #20
 8003d8c:	f7ff febb 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_START_BUTTON_VECTOR_ID), touchgfx::Bitmap(BITMAP_START_BUTTON_VECTOR_ID));
 8003d90:	aa08      	add	r2, sp, #32
 8003d92:	a907      	add	r1, sp, #28
 8003d94:	4640      	mov	r0, r8
 8003d96:	f8ad 501c 	strh.w	r5, [sp, #28]
 8003d9a:	f8ad 5020 	strh.w	r5, [sp, #32]
 8003d9e:	f00a f8af 	bl	800df00 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 8003da2:	f504 73c8 	add.w	r3, r4, #400	@ 0x190
 8003da6:	4638      	mov	r0, r7
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003da8:	f8c4 3170 	str.w	r3, [r4, #368]	@ 0x170
 8003dac:	4641      	mov	r1, r8
 8003dae:	f006 fe2f 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003db2:	4620      	mov	r0, r4
 8003db4:	b00b      	add	sp, #44	@ 0x2c
 8003db6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003dba:	bf00      	nop
 8003dbc:	08026e00 	.word	0x08026e00
 8003dc0:	08027830 	.word	0x08027830
 8003dc4:	08026d58 	.word	0x08026d58
 8003dc8:	08027898 	.word	0x08027898
 8003dcc:	08026de8 	.word	0x08026de8
 8003dd0:	08003ae1 	.word	0x08003ae1
 8003dd4:	fffcd80a 	.word	0xfffcd80a
 8003dd8:	08026ba0 	.word	0x08026ba0
 8003ddc:	fff50c0c 	.word	0xfff50c0c
 8003de0:	ffff0000 	.word	0xffff0000
 8003de4:	20015818 	.word	0x20015818
 8003de8:	080263e4 	.word	0x080263e4
 8003dec:	080264e6 	.word	0x080264e6
 8003df0:	08026461 	.word	0x08026461
 8003df4:	2001581c 	.word	0x2001581c
 8003df8:	080264a8 	.word	0x080264a8
 8003dfc:	20015824 	.word	0x20015824
 8003e00:	08026531 	.word	0x08026531

08003e04 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8003e04:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8003e06:	4770      	bx	lr

08003e08 <_ZN15Screen2ViewBase7hardBtnEv>:
     * Virtual Action Handlers
     */
    virtual void hardBtn()
    {
        // Override and implement this function in Screen2
    }
 8003e08:	4770      	bx	lr

08003e0a <_ZN15Screen2ViewBase7easyBtnEv>:
    virtual void easyBtn()
    {
        // Override and implement this function in Screen2
    }
 8003e0a:	4770      	bx	lr

08003e0c <_ZN15Screen2ViewBase9mediumBtnEv>:
    virtual void mediumBtn()
    {
        // Override and implement this function in Screen2
    }
 8003e0c:	4770      	bx	lr

08003e0e <_ZN8touchgfx15IconButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8003e0e:	4770      	bx	lr

08003e10 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003e10:	4770      	bx	lr

08003e12 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 8003e12:	4770      	bx	lr

08003e14 <_ZN15Screen2ViewBaseD1Ev>:
}

Screen2ViewBase::~Screen2ViewBase()
{

}
 8003e14:	4770      	bx	lr

08003e16 <_ZN15Screen2ViewBase11setupScreenEv>:

void Screen2ViewBase::setupScreen()
{

}
 8003e16:	4770      	bx	lr

08003e18 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003e18:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003e1a:	68c2      	ldr	r2, [r0, #12]
 8003e1c:	6844      	ldr	r4, [r0, #4]
 8003e1e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003e20:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003e22:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003e26:	07d2      	lsls	r2, r2, #31
 8003e28:	bf48      	it	mi
 8003e2a:	5962      	ldrmi	r2, [r4, r5]
 8003e2c:	689b      	ldr	r3, [r3, #8]
    }
 8003e2e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003e30:	bf48      	it	mi
 8003e32:	58d3      	ldrmi	r3, [r2, r3]
 8003e34:	4718      	bx	r3

08003e36 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8003e36:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003e38:	6840      	ldr	r0, [r0, #4]
 8003e3a:	b130      	cbz	r0, 8003e4a <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8003e3c:	689a      	ldr	r2, [r3, #8]
 8003e3e:	b91a      	cbnz	r2, 8003e48 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8003e40:	68d8      	ldr	r0, [r3, #12]
 8003e42:	f000 0001 	and.w	r0, r0, #1
 8003e46:	4770      	bx	lr
 8003e48:	2001      	movs	r0, #1
    }
 8003e4a:	4770      	bx	lr

08003e4c <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003e4c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003e4e:	68c2      	ldr	r2, [r0, #12]
 8003e50:	6844      	ldr	r4, [r0, #4]
 8003e52:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003e54:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003e56:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003e5a:	07d2      	lsls	r2, r2, #31
 8003e5c:	bf48      	it	mi
 8003e5e:	5962      	ldrmi	r2, [r4, r5]
 8003e60:	689b      	ldr	r3, [r3, #8]
    }
 8003e62:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003e64:	bf48      	it	mi
 8003e66:	58d3      	ldrmi	r3, [r2, r3]
 8003e68:	4718      	bx	r3

08003e6a <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8003e6a:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003e6c:	6840      	ldr	r0, [r0, #4]
 8003e6e:	b130      	cbz	r0, 8003e7e <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003e70:	689a      	ldr	r2, [r3, #8]
 8003e72:	b91a      	cbnz	r2, 8003e7c <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8003e74:	68d8      	ldr	r0, [r3, #12]
 8003e76:	f000 0001 	and.w	r0, r0, #1
 8003e7a:	4770      	bx	lr
 8003e7c:	2001      	movs	r0, #1
    }
 8003e7e:	4770      	bx	lr

08003e80 <_ZN8touchgfx15IconButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003e80:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
 8003e84:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8003e88:	4770      	bx	lr

08003e8a <_ZN8touchgfx15IconButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class IconButtonStyle : public T
 8003e8a:	b510      	push	{r4, lr}
 8003e8c:	2164      	movs	r1, #100	@ 0x64
 8003e8e:	4604      	mov	r4, r0
 8003e90:	f01f fc64 	bl	802375c <_ZdlPvj>
 8003e94:	4620      	mov	r0, r4
 8003e96:	bd10      	pop	{r4, pc}

08003e98 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003e98:	b510      	push	{r4, lr}
 8003e9a:	2110      	movs	r1, #16
 8003e9c:	4604      	mov	r4, r0
 8003e9e:	f01f fc5d 	bl	802375c <_ZdlPvj>
 8003ea2:	4620      	mov	r0, r4
 8003ea4:	bd10      	pop	{r4, pc}

08003ea6 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8003ea6:	b510      	push	{r4, lr}
 8003ea8:	2110      	movs	r1, #16
 8003eaa:	4604      	mov	r4, r0
 8003eac:	f01f fc56 	bl	802375c <_ZdlPvj>
 8003eb0:	4620      	mov	r0, r4
 8003eb2:	bd10      	pop	{r4, pc}

08003eb4 <_ZN15Screen2ViewBaseD0Ev>:
Screen2ViewBase::~Screen2ViewBase()
 8003eb4:	b510      	push	{r4, lr}
}
 8003eb6:	f44f 71ea 	mov.w	r1, #468	@ 0x1d4
Screen2ViewBase::~Screen2ViewBase()
 8003eba:	4604      	mov	r4, r0
}
 8003ebc:	f01f fc4e 	bl	802375c <_ZdlPvj>
 8003ec0:	4620      	mov	r0, r4
 8003ec2:	bd10      	pop	{r4, pc}

08003ec4 <_ZN8touchgfx15IconButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8003ec4:	4601      	mov	r1, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8003ec6:	3038      	adds	r0, #56	@ 0x38
 8003ec8:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 8003ecc:	b113      	cbz	r3, 8003ed4 <_ZN8touchgfx15IconButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x10>
 8003ece:	3136      	adds	r1, #54	@ 0x36
 8003ed0:	f00a b9e4 	b.w	800e29c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003ed4:	3134      	adds	r1, #52	@ 0x34
 8003ed6:	e7fb      	b.n	8003ed0 <_ZN8touchgfx15IconButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xc>

08003ed8 <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &hard)
 8003ed8:	f100 03e8 	add.w	r3, r0, #232	@ 0xe8
 8003edc:	4299      	cmp	r1, r3
{
 8003ede:	b570      	push	{r4, r5, r6, lr}
 8003ee0:	4604      	mov	r4, r0
 8003ee2:	460d      	mov	r5, r1
    if (&src == &hard)
 8003ee4:	d107      	bne.n	8003ef6 <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003ee6:	f00c fdd5 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When hard clicked change screen to Screen3
        //Go to Screen3 with screen transition towards East
        application().gotoScreen3ScreenCoverTransitionEast();
 8003eea:	f7ff f965 	bl	80031b8 <_ZN23FrontendApplicationBase36gotoScreen3ScreenCoverTransitionEastEv>
    
        //handleHard
        //When Interaction1 completed call virtual function
        //Call hardBtn
        hardBtn();
 8003eee:	6823      	ldr	r3, [r4, #0]
 8003ef0:	4620      	mov	r0, r4
 8003ef2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ef4:	4798      	blx	r3
    }
    if (&src == &easy)
 8003ef6:	f104 03b4 	add.w	r3, r4, #180	@ 0xb4
 8003efa:	429d      	cmp	r5, r3
 8003efc:	d107      	bne.n	8003f0e <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8003efe:	f00c fdc9 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When easy clicked change screen to Screen3
        //Go to Screen3 with screen transition towards East
        application().gotoScreen3ScreenCoverTransitionEast();
 8003f02:	f7ff f959 	bl	80031b8 <_ZN23FrontendApplicationBase36gotoScreen3ScreenCoverTransitionEastEv>
    
        //handleEasy
        //When Interaction2 completed call virtual function
        //Call easyBtn
        easyBtn();
 8003f06:	6823      	ldr	r3, [r4, #0]
 8003f08:	4620      	mov	r0, r4
 8003f0a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003f0c:	4798      	blx	r3
    }
    if (&src == &medium)
 8003f0e:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8003f12:	429d      	cmp	r5, r3
 8003f14:	d109      	bne.n	8003f2a <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x52>
 8003f16:	f00c fdbd 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When medium clicked change screen to Screen3
        //Go to Screen3 with screen transition towards East
        application().gotoScreen3ScreenCoverTransitionEast();
 8003f1a:	f7ff f94d 	bl	80031b8 <_ZN23FrontendApplicationBase36gotoScreen3ScreenCoverTransitionEastEv>
    
        //handleMedium
        //When Interaction3 completed call virtual function
        //Call mediumBtn
        mediumBtn();
 8003f1e:	6823      	ldr	r3, [r4, #0]
 8003f20:	4620      	mov	r0, r4
 8003f22:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
}
 8003f24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        mediumBtn();
 8003f28:	4718      	bx	r3
}
 8003f2a:	bd70      	pop	{r4, r5, r6, pc}

08003f2c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8003f2c:	b510      	push	{r4, lr}
 8003f2e:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8003f30:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8003f32:	b150      	cbz	r0, 8003f4a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8003f34:	6803      	ldr	r3, [r0, #0]
 8003f36:	68db      	ldr	r3, [r3, #12]
 8003f38:	4798      	blx	r3
 8003f3a:	b130      	cbz	r0, 8003f4a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8003f3c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8003f3e:	6803      	ldr	r3, [r0, #0]
 8003f40:	4621      	mov	r1, r4
 8003f42:	689b      	ldr	r3, [r3, #8]
        }
    }
 8003f44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8003f48:	4718      	bx	r3
    }
 8003f4a:	bd10      	pop	{r4, pc}

08003f4c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8003f4c:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8003f4e:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8003f50:	f890 602c 	ldrb.w	r6, [r0, #44]	@ 0x2c
 8003f54:	4604      	mov	r4, r0
 8003f56:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8003f58:	b90b      	cbnz	r3, 8003f5e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x12>
 8003f5a:	b116      	cbz	r6, 8003f62 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
        {
            executeAction();
        }
    }
 8003f5c:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8003f5e:	2e00      	cmp	r6, #0
 8003f60:	d0fc      	beq.n	8003f5c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8003f62:	fab3 f383 	clz	r3, r3
 8003f66:	095b      	lsrs	r3, r3, #5
 8003f68:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
        handlePressedUpdated();
 8003f6c:	6823      	ldr	r3, [r4, #0]
 8003f6e:	4620      	mov	r0, r4
 8003f70:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8003f74:	4798      	blx	r3
            invalidate();
 8003f76:	6823      	ldr	r3, [r4, #0]
 8003f78:	4620      	mov	r0, r4
 8003f7a:	695b      	ldr	r3, [r3, #20]
 8003f7c:	4798      	blx	r3
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8003f7e:	2e00      	cmp	r6, #0
 8003f80:	d0ec      	beq.n	8003f5c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
 8003f82:	792b      	ldrb	r3, [r5, #4]
 8003f84:	2b01      	cmp	r3, #1
 8003f86:	d1e9      	bne.n	8003f5c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8003f88:	6823      	ldr	r3, [r4, #0]
 8003f8a:	4620      	mov	r0, r4
 8003f8c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    }
 8003f90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8003f94:	4718      	bx	r3

08003f96 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
 8003f96:	f500 70a8 	add.w	r0, r0, #336	@ 0x150
 8003f9a:	4288      	cmp	r0, r1
{
 8003f9c:	b508      	push	{r3, lr}
    if (&src == &flexButton1)
 8003f9e:	d105      	bne.n	8003fac <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
 8003fa0:	f00c fd78 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction4
        //When flexButton1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards West
        application().gotoScreen1ScreenWipeTransitionWest();
    }
}
 8003fa4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenWipeTransitionWest();
 8003fa8:	f7ff b8d6 	b.w	8003158 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionWestEv>
}
 8003fac:	bd08      	pop	{r3, pc}

08003fae <_ZN8touchgfx15IconButtonStyleINS_18ClickButtonTriggerEE14setIconBitmapsERKNS_6BitmapES5_>:
        iconReleased = newIconReleased;
 8003fae:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8003fb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8003fb4:	8683      	strh	r3, [r0, #52]	@ 0x34
        iconPressed = newIconPressed;
 8003fb6:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8003fb8:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8003fbc:	86c3      	strh	r3, [r0, #54]	@ 0x36
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8003fbe:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8003fc0:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8003fc2:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8003fc4:	f010 fb2c 	bl	8014620 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8003fc8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8003fcc:	4607      	mov	r7, r0
 8003fce:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8003fd2:	4640      	mov	r0, r8
 8003fd4:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8003fd8:	f010 fb56 	bl	8014688 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8003fdc:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003fe0:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8003fe4:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003fe8:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8003fec:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8003ff0:	eba5 0167 	sub.w	r1, r5, r7, asr #1
 8003ff4:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 8003ff8:	b212      	sxth	r2, r2
 8003ffa:	b209      	sxth	r1, r1
 8003ffc:	f7ff fd83 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8004000:	6823      	ldr	r3, [r4, #0]
 8004002:	4620      	mov	r0, r4
 8004004:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
    }
 8004008:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 800400c:	4718      	bx	r3
	...

08004010 <_ZN8touchgfx6ButtonC1Ev>:
    Button()
 8004010:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8004012:	2226      	movs	r2, #38	@ 0x26
 8004014:	4604      	mov	r4, r0
 8004016:	2100      	movs	r1, #0
 8004018:	f020 fce3 	bl	80249e2 <memset>
 800401c:	4620      	mov	r0, r4
 800401e:	f7ff fd93 	bl	8003b48 <_ZN8touchgfx6WidgetC1Ev>
 8004022:	2300      	movs	r3, #0
 8004024:	62a3      	str	r3, [r4, #40]	@ 0x28
 8004026:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
 800402a:	2301      	movs	r3, #1
 800402c:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
        : AbstractButton(), up(), down(), alpha(255)
 8004030:	4b04      	ldr	r3, [pc, #16]	@ (8004044 <_ZN8touchgfx6ButtonC1Ev+0x34>)
 8004032:	6023      	str	r3, [r4, #0]
 8004034:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8004038:	f884 3032 	strb.w	r3, [r4, #50]	@ 0x32
 800403c:	85e3      	strh	r3, [r4, #46]	@ 0x2e
 800403e:	8623      	strh	r3, [r4, #48]	@ 0x30
    {
    }
 8004040:	4620      	mov	r0, r4
 8004042:	bd10      	pop	{r4, pc}
 8004044:	08027898 	.word	0x08027898

08004048 <_ZN8touchgfx15IconButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8004048:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
    IconButtonStyle()
 800404c:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T()
 800404e:	4605      	mov	r5, r0
 8004050:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8004052:	f240 1301 	movw	r3, #257	@ 0x101
          firstChild(0)
 8004056:	2100      	movs	r1, #0
 8004058:	8483      	strh	r3, [r0, #36]	@ 0x24
 800405a:	4b17      	ldr	r3, [pc, #92]	@ (80040b8 <_ZN8touchgfx15IconButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x70>)
 800405c:	6281      	str	r1, [r0, #40]	@ 0x28
        : x(0), y(0), width(0), height(0)
 800405e:	e9c0 1101 	strd	r1, r1, [r0, #4]
 8004062:	e9c0 1103 	strd	r1, r1, [r0, #12]
          nextSibling(0),
 8004066:	e9c0 1105 	strd	r1, r1, [r0, #20]
          cachedAbsX(0),
 800406a:	e9c0 1107 	strd	r1, r1, [r0, #28]
 800406e:	f845 3b38 	str.w	r3, [r5], #56
 8004072:	f04f 33ff 	mov.w	r3, #4294967295
    IconButtonStyle()
 8004076:	4604      	mov	r4, r0
        : Widget(), bitmap(bmp), alpha(255)
 8004078:	2226      	movs	r2, #38	@ 0x26
 800407a:	6301      	str	r1, [r0, #48]	@ 0x30
 800407c:	6343      	str	r3, [r0, #52]	@ 0x34
 800407e:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8004082:	4628      	mov	r0, r5
 8004084:	f8ad 6004 	strh.w	r6, [sp, #4]
 8004088:	f020 fcab 	bl	80249e2 <memset>
 800408c:	4628      	mov	r0, r5
 800408e:	f7ff fd5b 	bl	8003b48 <_ZN8touchgfx6WidgetC1Ev>
 8004092:	4b0a      	ldr	r3, [pc, #40]	@ (80040bc <_ZN8touchgfx15IconButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x74>)
 8004094:	63a3      	str	r3, [r4, #56]	@ 0x38
 8004096:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800409a:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
        Image::setBitmap(bmp);
 800409e:	a901      	add	r1, sp, #4
 80040a0:	4628      	mov	r0, r5
        : Widget(), bitmap(bmp), alpha(255)
 80040a2:	f884 6060 	strb.w	r6, [r4, #96]	@ 0x60
        Image::setBitmap(bmp);
 80040a6:	f00a f8f9 	bl	800e29c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(iconImage);
 80040aa:	4620      	mov	r0, r4
 80040ac:	4629      	mov	r1, r5
 80040ae:	f006 fcaf 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80040b2:	4620      	mov	r0, r4
 80040b4:	b002      	add	sp, #8
 80040b6:	bd70      	pop	{r4, r5, r6, pc}
 80040b8:	08026e34 	.word	0x08026e34
 80040bc:	08027974 	.word	0x08027974

080040c0 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase() :
 80040c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80040c4:	4604      	mov	r4, r0
 80040c6:	b08d      	sub	sp, #52	@ 0x34
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler)
 80040c8:	46a0      	mov	r8, r4
 80040ca:	2500      	movs	r5, #0
 80040cc:	f00e fd0e 	bl	8012aec <_ZN8touchgfx6ScreenC1Ev>
 80040d0:	4b75      	ldr	r3, [pc, #468]	@ (80042a8 <_ZN15Screen2ViewBaseC1Ev+0x1e8>)
 80040d2:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80040d4:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 80040d8:	2626      	movs	r6, #38	@ 0x26
 80040da:	4632      	mov	r2, r6
 80040dc:	4629      	mov	r1, r5
 80040de:	4640      	mov	r0, r8
 80040e0:	f020 fc7f 	bl	80249e2 <memset>
 80040e4:	4640      	mov	r0, r8
 80040e6:	f7ff fd2f 	bl	8003b48 <_ZN8touchgfx6WidgetC1Ev>
 80040ea:	4b70      	ldr	r3, [pc, #448]	@ (80042ac <_ZN15Screen2ViewBaseC1Ev+0x1ec>)
 80040ec:	6423      	str	r3, [r4, #64]	@ 0x40
 80040ee:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
 80040f2:	23ff      	movs	r3, #255	@ 0xff
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80040f4:	4629      	mov	r1, r5
 80040f6:	4632      	mov	r2, r6
 80040f8:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
        : color(col)
 80040fc:	66a5      	str	r5, [r4, #104]	@ 0x68
 80040fe:	4638      	mov	r0, r7
 8004100:	f020 fc6f 	bl	80249e2 <memset>
 8004104:	4638      	mov	r0, r7
 8004106:	f7ff fd1f 	bl	8003b48 <_ZN8touchgfx6WidgetC1Ev>
 800410a:	4b69      	ldr	r3, [pc, #420]	@ (80042b0 <_ZN15Screen2ViewBaseC1Ev+0x1f0>)
 800410c:	66e3      	str	r3, [r4, #108]	@ 0x6c
 800410e:	4b69      	ldr	r3, [pc, #420]	@ (80042b4 <_ZN15Screen2ViewBaseC1Ev+0x1f4>)
 8004110:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8004114:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8004118:	f8a4 3098 	strh.w	r3, [r4, #152]	@ 0x98
 800411c:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
 8004120:	f104 0bb4 	add.w	fp, r4, #180	@ 0xb4
 8004124:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004128:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 800412c:	e9c4 352b 	strd	r3, r5, [r4, #172]	@ 0xac
 8004130:	f104 0ae8 	add.w	sl, r4, #232	@ 0xe8
        : color(col)
 8004134:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8004138:	f8a4 50a4 	strh.w	r5, [r4, #164]	@ 0xa4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800413c:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 8004140:	4658      	mov	r0, fp
 8004142:	f7ff ff65 	bl	8004010 <_ZN8touchgfx6ButtonC1Ev>
 8004146:	f504 798e 	add.w	r9, r4, #284	@ 0x11c
 800414a:	4650      	mov	r0, sl
 800414c:	f7ff ff60 	bl	8004010 <_ZN8touchgfx6ButtonC1Ev>
 8004150:	4648      	mov	r0, r9
 8004152:	f7ff ff5d 	bl	8004010 <_ZN8touchgfx6ButtonC1Ev>
 8004156:	f504 72a8 	add.w	r2, r4, #336	@ 0x150
 800415a:	4610      	mov	r0, r2
 800415c:	9203      	str	r2, [sp, #12]
 800415e:	f7ff ff73 	bl	8004048 <_ZN8touchgfx15IconButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004162:	4b55      	ldr	r3, [pc, #340]	@ (80042b8 <_ZN15Screen2ViewBaseC1Ev+0x1f8>)
 8004164:	e9c4 346d 	strd	r3, r4, [r4, #436]	@ 0x1b4
 8004168:	4b54      	ldr	r3, [pc, #336]	@ (80042bc <_ZN15Screen2ViewBaseC1Ev+0x1fc>)
 800416a:	e9c4 356f 	strd	r3, r5, [r4, #444]	@ 0x1bc
 800416e:	4b54      	ldr	r3, [pc, #336]	@ (80042c0 <_ZN15Screen2ViewBaseC1Ev+0x200>)
 8004170:	e9c4 3471 	strd	r3, r4, [r4, #452]	@ 0x1c4
 8004174:	4b53      	ldr	r3, [pc, #332]	@ (80042c4 <_ZN15Screen2ViewBaseC1Ev+0x204>)
 8004176:	e9c4 3573 	strd	r3, r5, [r4, #460]	@ 0x1cc
    __background.setPosition(0, 0, 240, 320);
 800417a:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800417e:	462a      	mov	r2, r5
 8004180:	9300      	str	r3, [sp, #0]
 8004182:	4629      	mov	r1, r5
 8004184:	4640      	mov	r0, r8
 8004186:	23f0      	movs	r3, #240	@ 0xf0
 8004188:	f7ff fcca 	bl	8003b20 <_ZN8touchgfx8Drawable11setPositionEssss>
 800418c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800418e:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8004192:	66a3      	str	r3, [r4, #104]	@ 0x68
 8004194:	4641      	mov	r1, r8
 8004196:	4630      	mov	r0, r6
 8004198:	f006 fc3a 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(68, 10);
 800419c:	220a      	movs	r2, #10
 800419e:	4638      	mov	r0, r7
 80041a0:	2144      	movs	r1, #68	@ 0x44
 80041a2:	f7ff fcb0 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80041a6:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 80041aa:	4b47      	ldr	r3, [pc, #284]	@ (80042c8 <_ZN15Screen2ViewBaseC1Ev+0x208>)
 80041ac:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
        boundingArea = calculateBoundingArea();
 80041b0:	4639      	mov	r1, r7
 80041b2:	4640      	mov	r0, r8
        linespace = space;
 80041b4:	f8a4 50a0 	strh.w	r5, [r4, #160]	@ 0xa0
        boundingArea = calculateBoundingArea();
 80041b8:	f009 fb9c 	bl	800d8f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80041bc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80041c0:	f104 03a8 	add.w	r3, r4, #168	@ 0xa8
 80041c4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80041c8:	f04f 0804 	mov.w	r8, #4
 80041cc:	4b39      	ldr	r3, [pc, #228]	@ (80042b4 <_ZN15Screen2ViewBaseC1Ev+0x1f4>)
 80041ce:	930a      	str	r3, [sp, #40]	@ 0x28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DG2Y));
 80041d0:	a90a      	add	r1, sp, #40	@ 0x28
 80041d2:	4638      	mov	r0, r7
 80041d4:	f8ad 802c 	strh.w	r8, [sp, #44]	@ 0x2c
 80041d8:	f009 fe34 	bl	800de44 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80041dc:	4639      	mov	r1, r7
 80041de:	4630      	mov	r0, r6
 80041e0:	f006 fc16 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    easy.setXY(20, 75);
 80041e4:	4658      	mov	r0, fp
 80041e6:	224b      	movs	r2, #75	@ 0x4b
 80041e8:	2114      	movs	r1, #20
 80041ea:	f7ff fc8c 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
    easy.setAction(buttonCallback);
 80041ee:	f504 77da 	add.w	r7, r4, #436	@ 0x1b4
 80041f2:	2302      	movs	r3, #2
    easy.setBitmaps(touchgfx::Bitmap(BITMAP_EASY_ID), touchgfx::Bitmap(BITMAP_EASY_ID));
 80041f4:	aa0a      	add	r2, sp, #40	@ 0x28
 80041f6:	a909      	add	r1, sp, #36	@ 0x24
 80041f8:	4658      	mov	r0, fp
 80041fa:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80041fe:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8004202:	f009 fe7d 	bl	800df00 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004206:	4659      	mov	r1, fp
 8004208:	4630      	mov	r0, r6
        action = &callback;
 800420a:	f8c4 70dc 	str.w	r7, [r4, #220]	@ 0xdc
 800420e:	f006 fbff 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    hard.setXY(20, 235);
 8004212:	4650      	mov	r0, sl
 8004214:	22eb      	movs	r2, #235	@ 0xeb
 8004216:	2114      	movs	r1, #20
 8004218:	f7ff fc75 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
    hard.setBitmaps(touchgfx::Bitmap(BITMAP_HARD_ID), touchgfx::Bitmap(BITMAP_HARD_ID));
 800421c:	aa0a      	add	r2, sp, #40	@ 0x28
 800421e:	a909      	add	r1, sp, #36	@ 0x24
 8004220:	4650      	mov	r0, sl
 8004222:	f8ad 8024 	strh.w	r8, [sp, #36]	@ 0x24
 8004226:	f8ad 8028 	strh.w	r8, [sp, #40]	@ 0x28
 800422a:	f009 fe69 	bl	800df00 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800422e:	4651      	mov	r1, sl
 8004230:	4630      	mov	r0, r6
 8004232:	f8c4 7110 	str.w	r7, [r4, #272]	@ 0x110
 8004236:	f006 fbeb 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    medium.setXY(20, 155);
 800423a:	4648      	mov	r0, r9
 800423c:	229b      	movs	r2, #155	@ 0x9b
 800423e:	2114      	movs	r1, #20
 8004240:	f7ff fc61 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
 8004244:	2305      	movs	r3, #5
    medium.setBitmaps(touchgfx::Bitmap(BITMAP_MEDIUM_ID), touchgfx::Bitmap(BITMAP_MEDIUM_ID));
 8004246:	aa0a      	add	r2, sp, #40	@ 0x28
 8004248:	a909      	add	r1, sp, #36	@ 0x24
 800424a:	4648      	mov	r0, r9
 800424c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8004250:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8004254:	f009 fe54 	bl	800df00 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004258:	4649      	mov	r1, r9
 800425a:	4630      	mov	r0, r6
 800425c:	f8c4 7144 	str.w	r7, [r4, #324]	@ 0x144
 8004260:	f006 fbd6 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004264:	2301      	movs	r3, #1
    flexButton1.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID), Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID));
 8004266:	9803      	ldr	r0, [sp, #12]
 8004268:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800426c:	aa0a      	add	r2, sp, #40	@ 0x28
 800426e:	a909      	add	r1, sp, #36	@ 0x24
 8004270:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8004274:	f7ff fe9b 	bl	8003fae <_ZN8touchgfx15IconButtonStyleINS_18ClickButtonTriggerEE14setIconBitmapsERKNS_6BitmapES5_>
    flexButton1.setAction(flexButtonCallback);
 8004278:	f504 73e2 	add.w	r3, r4, #452	@ 0x1c4
        action = &callback;
 800427c:	f8c4 3180 	str.w	r3, [r4, #384]	@ 0x180
    flexButton1.setPosition(207, 286, 33, 34);
 8004280:	2322      	movs	r3, #34	@ 0x22
 8004282:	9803      	ldr	r0, [sp, #12]
        rect.x = x;
 8004284:	f8c4 518c 	str.w	r5, [r4, #396]	@ 0x18c
 8004288:	f44f 728f 	mov.w	r2, #286	@ 0x11e
 800428c:	9300      	str	r3, [sp, #0]
 800428e:	21cf      	movs	r1, #207	@ 0xcf
 8004290:	2321      	movs	r3, #33	@ 0x21
 8004292:	f7ff fc45 	bl	8003b20 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004296:	4630      	mov	r0, r6
 8004298:	9903      	ldr	r1, [sp, #12]
 800429a:	f006 fbb9 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800429e:	4620      	mov	r0, r4
 80042a0:	b00d      	add	sp, #52	@ 0x34
 80042a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042a6:	bf00      	nop
 80042a8:	08026f04 	.word	0x08026f04
 80042ac:	08027830 	.word	0x08027830
 80042b0:	080277a0 	.word	0x080277a0
 80042b4:	08026ba0 	.word	0x08026ba0
 80042b8:	08026ed4 	.word	0x08026ed4
 80042bc:	08003ed9 	.word	0x08003ed9
 80042c0:	08026eec 	.word	0x08026eec
 80042c4:	08003f97 	.word	0x08003f97
 80042c8:	ffc4c3d6 	.word	0xffc4c3d6

080042cc <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80042cc:	4770      	bx	lr

080042ce <_ZN15Screen3ViewBaseD1Ev>:
}

Screen3ViewBase::~Screen3ViewBase()
{

}
 80042ce:	4770      	bx	lr

080042d0 <_ZN15Screen3ViewBase11setupScreenEv>:

void Screen3ViewBase::setupScreen()
{

}
 80042d0:	4770      	bx	lr

080042d2 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80042d2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80042d4:	68c2      	ldr	r2, [r0, #12]
 80042d6:	6844      	ldr	r4, [r0, #4]
 80042d8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80042da:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80042dc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80042e0:	07d2      	lsls	r2, r2, #31
 80042e2:	bf48      	it	mi
 80042e4:	5962      	ldrmi	r2, [r4, r5]
 80042e6:	689b      	ldr	r3, [r3, #8]
    }
 80042e8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80042ea:	bf48      	it	mi
 80042ec:	58d3      	ldrmi	r3, [r2, r3]
 80042ee:	4718      	bx	r3

080042f0 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80042f0:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80042f2:	6840      	ldr	r0, [r0, #4]
 80042f4:	b130      	cbz	r0, 8004304 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80042f6:	689a      	ldr	r2, [r3, #8]
 80042f8:	b91a      	cbnz	r2, 8004302 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80042fa:	68d8      	ldr	r0, [r3, #12]
 80042fc:	f000 0001 	and.w	r0, r0, #1
 8004300:	4770      	bx	lr
 8004302:	2001      	movs	r0, #1
    }
 8004304:	4770      	bx	lr

08004306 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004306:	b510      	push	{r4, lr}
 8004308:	2110      	movs	r1, #16
 800430a:	4604      	mov	r4, r0
 800430c:	f01f fa26 	bl	802375c <_ZdlPvj>
 8004310:	4620      	mov	r0, r4
 8004312:	bd10      	pop	{r4, pc}

08004314 <_ZN15Screen3ViewBaseD0Ev>:
Screen3ViewBase::~Screen3ViewBase()
 8004314:	b510      	push	{r4, lr}
}
 8004316:	f44f 710a 	mov.w	r1, #552	@ 0x228
Screen3ViewBase::~Screen3ViewBase()
 800431a:	4604      	mov	r4, r0
}
 800431c:	f01f fa1e 	bl	802375c <_ZdlPvj>
 8004320:	4620      	mov	r0, r4
 8004322:	bd10      	pop	{r4, pc}

08004324 <_ZN15Screen3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen3ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
 8004324:	3098      	adds	r0, #152	@ 0x98
 8004326:	4288      	cmp	r0, r1
{
 8004328:	b508      	push	{r3, lr}
    if (&src == &flexButton1)
 800432a:	d105      	bne.n	8004338 <_ZN15Screen3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    virtual ~Screen3ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800432c:	f00c fbb2 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When flexButton1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenCoverTransitionEast();
    }
}
 8004330:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenCoverTransitionEast();
 8004334:	f7fe bf20 	b.w	8003178 <_ZN23FrontendApplicationBase36gotoScreen1ScreenCoverTransitionEastEv>
}
 8004338:	bd08      	pop	{r3, pc}
	...

0800433c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 800433c:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 800433e:	2226      	movs	r2, #38	@ 0x26
    Image(const Bitmap& bmp = Bitmap())
 8004340:	4604      	mov	r4, r0
 8004342:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8004344:	2100      	movs	r1, #0
 8004346:	f020 fb4c 	bl	80249e2 <memset>
 800434a:	4620      	mov	r0, r4
 800434c:	f7ff fbfc 	bl	8003b48 <_ZN8touchgfx6WidgetC1Ev>
 8004350:	4b06      	ldr	r3, [pc, #24]	@ (800436c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8004352:	6023      	str	r3, [r4, #0]
 8004354:	882b      	ldrh	r3, [r5, #0]
 8004356:	84e3      	strh	r3, [r4, #38]	@ 0x26
 8004358:	23ff      	movs	r3, #255	@ 0xff
        Image::setBitmap(bmp);
 800435a:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 800435c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
        Image::setBitmap(bmp);
 8004360:	4629      	mov	r1, r5
 8004362:	f009 ff9b 	bl	800e29c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8004366:	4620      	mov	r0, r4
 8004368:	bd38      	pop	{r3, r4, r5, pc}
 800436a:	bf00      	nop
 800436c:	08027974 	.word	0x08027974

08004370 <_ZN15Screen3ViewBaseC1Ev>:
Screen3ViewBase::Screen3ViewBase() :
 8004370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004374:	4604      	mov	r4, r0
 8004376:	b08d      	sub	sp, #52	@ 0x34
    flexButtonCallback(this, &Screen3ViewBase::flexButtonCallbackHandler)
 8004378:	4627      	mov	r7, r4
 800437a:	2500      	movs	r5, #0
 800437c:	f00e fbb6 	bl	8012aec <_ZN8touchgfx6ScreenC1Ev>
 8004380:	4ba3      	ldr	r3, [pc, #652]	@ (8004610 <_ZN15Screen3ViewBaseC1Ev+0x2a0>)
 8004382:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8004384:	f847 3b40 	str.w	r3, [r7], #64
        : Widget(), alpha(255), color(0)
 8004388:	2226      	movs	r2, #38	@ 0x26
 800438a:	4629      	mov	r1, r5
 800438c:	4638      	mov	r0, r7
 800438e:	f020 fb28 	bl	80249e2 <memset>
 8004392:	4638      	mov	r0, r7
 8004394:	f7ff fbd8 	bl	8003b48 <_ZN8touchgfx6WidgetC1Ev>
 8004398:	4b9e      	ldr	r3, [pc, #632]	@ (8004614 <_ZN15Screen3ViewBaseC1Ev+0x2a4>)
 800439a:	6423      	str	r3, [r4, #64]	@ 0x40
 800439c:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 80043a0:	23ff      	movs	r3, #255	@ 0xff
 80043a2:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80043a6:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
 80043aa:	a90a      	add	r1, sp, #40	@ 0x28
 80043ac:	4658      	mov	r0, fp
        : color(col)
 80043ae:	66a5      	str	r5, [r4, #104]	@ 0x68
 80043b0:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 80043b4:	f7ff ffc2 	bl	800433c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
 80043b8:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 80043bc:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
        touchable = touch;
 80043c0:	f240 1301 	movw	r3, #257	@ 0x101
 80043c4:	f8a4 30bc 	strh.w	r3, [r4, #188]	@ 0xbc
        : T()
 80043c8:	4b93      	ldr	r3, [pc, #588]	@ (8004618 <_ZN15Screen3ViewBaseC1Ev+0x2a8>)
 80043ca:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80043ce:	f104 08d0 	add.w	r8, r4, #208	@ 0xd0
 80043d2:	f04f 33ff 	mov.w	r3, #4294967295
 80043d6:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
 80043da:	f8c4 30cc 	str.w	r3, [r4, #204]	@ 0xcc
 80043de:	a90a      	add	r1, sp, #40	@ 0x28
 80043e0:	4640      	mov	r0, r8
        : x(0), y(0), width(0), height(0)
 80043e2:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
 80043e6:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
 80043ea:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          cachedAbsX(0),
 80043ee:	e9c4 552d 	strd	r5, r5, [r4, #180]	@ 0xb4
 80043f2:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
 80043f6:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
 80043fa:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80043fe:	f104 09fc 	add.w	r9, r4, #252	@ 0xfc
 8004402:	f7ff ff9b 	bl	800433c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8004406:	4641      	mov	r1, r8
 8004408:	4650      	mov	r0, sl
 800440a:	f006 fb01 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800440e:	f504 78a2 	add.w	r8, r4, #324	@ 0x144
 8004412:	4648      	mov	r0, r9
 8004414:	f7ff fbaa 	bl	8003b6c <_ZN8touchgfx8TextAreaC1Ev>
 8004418:	4640      	mov	r0, r8
 800441a:	f7ff fba7 	bl	8003b6c <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 800441e:	f504 73c6 	add.w	r3, r4, #396	@ 0x18c
 8004422:	4618      	mov	r0, r3
 8004424:	9302      	str	r3, [sp, #8]
 8004426:	f7ff fba1 	bl	8003b6c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800442a:	4b7c      	ldr	r3, [pc, #496]	@ (800461c <_ZN15Screen3ViewBaseC1Ev+0x2ac>)
 800442c:	f8c4 318c 	str.w	r3, [r4, #396]	@ 0x18c
 8004430:	f504 73ec 	add.w	r3, r4, #472	@ 0x1d8
 8004434:	a90a      	add	r1, sp, #40	@ 0x28
 8004436:	4618      	mov	r0, r3
 8004438:	f8c4 51d4 	str.w	r5, [r4, #468]	@ 0x1d4
 800443c:	9303      	str	r3, [sp, #12]
 800443e:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 8004442:	f7ff ff7b 	bl	800433c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004446:	4b76      	ldr	r3, [pc, #472]	@ (8004620 <_ZN15Screen3ViewBaseC1Ev+0x2b0>)
 8004448:	e9c4 3486 	strd	r3, r4, [r4, #536]	@ 0x218
 800444c:	4b75      	ldr	r3, [pc, #468]	@ (8004624 <_ZN15Screen3ViewBaseC1Ev+0x2b4>)
 800444e:	e9c4 3588 	strd	r3, r5, [r4, #544]	@ 0x220
    __background.setPosition(0, 0, 240, 320);
 8004452:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8004456:	462a      	mov	r2, r5
 8004458:	4638      	mov	r0, r7
 800445a:	9300      	str	r3, [sp, #0]
 800445c:	4629      	mov	r1, r5
 800445e:	23f0      	movs	r3, #240	@ 0xf0
 8004460:	f7ff fb5e 	bl	8003b20 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004464:	1d26      	adds	r6, r4, #4
        color = newColor;
 8004466:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800446a:	66a3      	str	r3, [r4, #104]	@ 0x68
 800446c:	4639      	mov	r1, r7
 800446e:	4630      	mov	r0, r6
 8004470:	f006 face 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8004474:	462a      	mov	r2, r5
 8004476:	4658      	mov	r0, fp
 8004478:	4629      	mov	r1, r5
 800447a:	f7ff fb44 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
 800447e:	4658      	mov	r0, fp
 8004480:	a90a      	add	r1, sp, #40	@ 0x28
 8004482:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 8004486:	f009 ff09 	bl	800e29c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800448a:	4659      	mov	r1, fp
 800448c:	4630      	mov	r0, r6
 800448e:	f006 fabf 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004492:	f04f 0b01 	mov.w	fp, #1
    flexButton1.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID), Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID));
 8004496:	4650      	mov	r0, sl
 8004498:	aa0a      	add	r2, sp, #40	@ 0x28
 800449a:	a909      	add	r1, sp, #36	@ 0x24
 800449c:	f8ad b024 	strh.w	fp, [sp, #36]	@ 0x24
 80044a0:	f8ad b028 	strh.w	fp, [sp, #40]	@ 0x28
 80044a4:	f7ff fd83 	bl	8003fae <_ZN8touchgfx15IconButtonStyleINS_18ClickButtonTriggerEE14setIconBitmapsERKNS_6BitmapES5_>
    flexButton1.setAction(flexButtonCallback);
 80044a8:	f504 7306 	add.w	r3, r4, #536	@ 0x218
        action = &callback;
 80044ac:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
    flexButton1.setPosition(208, 288, 32, 32);
 80044b0:	2320      	movs	r3, #32
 80044b2:	f44f 7290 	mov.w	r2, #288	@ 0x120
 80044b6:	4650      	mov	r0, sl
        rect.x = x;
 80044b8:	f8c4 50d4 	str.w	r5, [r4, #212]	@ 0xd4
 80044bc:	21d0      	movs	r1, #208	@ 0xd0
 80044be:	9300      	str	r3, [sp, #0]
 80044c0:	f7ff fb2e 	bl	8003b20 <_ZN8touchgfx8Drawable11setPositionEssss>
 80044c4:	4651      	mov	r1, sl
 80044c6:	4630      	mov	r0, r6
 80044c8:	f006 faa2 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(191, 54);
 80044cc:	2236      	movs	r2, #54	@ 0x36
 80044ce:	21bf      	movs	r1, #191	@ 0xbf
 80044d0:	4648      	mov	r0, r9
 80044d2:	f7ff fb18 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
 80044d6:	af04      	add	r7, sp, #16
        color = newColor;
 80044d8:	4b53      	ldr	r3, [pc, #332]	@ (8004628 <_ZN15Screen3ViewBaseC1Ev+0x2b8>)
 80044da:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
        boundingArea = calculateBoundingArea();
 80044de:	4638      	mov	r0, r7
 80044e0:	4649      	mov	r1, r9
        linespace = space;
 80044e2:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
        boundingArea = calculateBoundingArea();
 80044e6:	f009 fa05 	bl	800d8f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80044ea:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80044ee:	f504 739c 	add.w	r3, r4, #312	@ 0x138
 80044f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80044f6:	f8df a15c 	ldr.w	sl, [pc, #348]	@ 8004654 <_ZN15Screen3ViewBaseC1Ev+0x2e4>
 80044fa:	f8cd a028 	str.w	sl, [sp, #40]	@ 0x28
 80044fe:	f04f 0303 	mov.w	r3, #3
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ARM));
 8004502:	a90a      	add	r1, sp, #40	@ 0x28
 8004504:	4648      	mov	r0, r9
 8004506:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800450a:	f009 fc9b 	bl	800de44 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800450e:	4649      	mov	r1, r9
 8004510:	4630      	mov	r0, r6
 8004512:	f006 fa7d 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(183, 136);
 8004516:	2288      	movs	r2, #136	@ 0x88
 8004518:	21b7      	movs	r1, #183	@ 0xb7
 800451a:	4640      	mov	r0, r8
 800451c:	f7ff faf3 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004520:	4b42      	ldr	r3, [pc, #264]	@ (800462c <_ZN15Screen3ViewBaseC1Ev+0x2bc>)
 8004522:	f8c4 3174 	str.w	r3, [r4, #372]	@ 0x174
        boundingArea = calculateBoundingArea();
 8004526:	4638      	mov	r0, r7
 8004528:	4641      	mov	r1, r8
        linespace = space;
 800452a:	f8a4 5178 	strh.w	r5, [r4, #376]	@ 0x178
        boundingArea = calculateBoundingArea();
 800452e:	f009 f9e1 	bl	800d8f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004532:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004536:	f504 73c0 	add.w	r3, r4, #384	@ 0x180
 800453a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800453e:	2302      	movs	r3, #2
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YAJW));
 8004540:	a90a      	add	r1, sp, #40	@ 0x28
 8004542:	4640      	mov	r0, r8
 8004544:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8004548:	f8cd a028 	str.w	sl, [sp, #40]	@ 0x28
 800454c:	f009 fc7a 	bl	800de44 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004550:	4641      	mov	r1, r8
 8004552:	4630      	mov	r0, r6
 8004554:	f006 fa5c 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score.setPosition(104, 168, 136, 46);
 8004558:	232e      	movs	r3, #46	@ 0x2e
 800455a:	22a8      	movs	r2, #168	@ 0xa8
 800455c:	9802      	ldr	r0, [sp, #8]
 800455e:	9300      	str	r3, [sp, #0]
 8004560:	2168      	movs	r1, #104	@ 0x68
 8004562:	2388      	movs	r3, #136	@ 0x88
 8004564:	f7ff fadc 	bl	8003b20 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004568:	4b31      	ldr	r3, [pc, #196]	@ (8004630 <_ZN15Screen3ViewBaseC1Ev+0x2c0>)
 800456a:	f8c4 31bc 	str.w	r3, [r4, #444]	@ 0x1bc
        boundingArea = calculateBoundingArea();
 800456e:	f8d4 318c 	ldr.w	r3, [r4, #396]	@ 0x18c
 8004572:	9902      	ldr	r1, [sp, #8]
 8004574:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8004578:	f8a4 51c0 	strh.w	r5, [r4, #448]	@ 0x1c0
        boundingArea = calculateBoundingArea();
 800457c:	4638      	mov	r0, r7
 800457e:	4798      	blx	r3
 8004580:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004584:	f504 73e4 	add.w	r3, r4, #456	@ 0x1c8
 8004588:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800458c:	4b29      	ldr	r3, [pc, #164]	@ (8004634 <_ZN15Screen3ViewBaseC1Ev+0x2c4>)
 800458e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(scoreBuffer, SCORE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4X0T).getText());
 8004590:	f504 7701 	add.w	r7, r4, #516	@ 0x204
 8004594:	b92b      	cbnz	r3, 80045a2 <_ZN15Screen3ViewBaseC1Ev+0x232>
 8004596:	4b28      	ldr	r3, [pc, #160]	@ (8004638 <_ZN15Screen3ViewBaseC1Ev+0x2c8>)
 8004598:	4a28      	ldr	r2, [pc, #160]	@ (800463c <_ZN15Screen3ViewBaseC1Ev+0x2cc>)
 800459a:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800459c:	4828      	ldr	r0, [pc, #160]	@ (8004640 <_ZN15Screen3ViewBaseC1Ev+0x2d0>)
 800459e:	f020 f819 	bl	80245d4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80045a2:	4b28      	ldr	r3, [pc, #160]	@ (8004644 <_ZN15Screen3ViewBaseC1Ev+0x2d4>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80045a4:	881b      	ldrh	r3, [r3, #0]
 80045a6:	b91b      	cbnz	r3, 80045b0 <_ZN15Screen3ViewBaseC1Ev+0x240>
 80045a8:	4b27      	ldr	r3, [pc, #156]	@ (8004648 <_ZN15Screen3ViewBaseC1Ev+0x2d8>)
 80045aa:	4a24      	ldr	r2, [pc, #144]	@ (800463c <_ZN15Screen3ViewBaseC1Ev+0x2cc>)
 80045ac:	2161      	movs	r1, #97	@ 0x61
 80045ae:	e7f5      	b.n	800459c <_ZN15Screen3ViewBaseC1Ev+0x22c>
        return texts->getText(typedTextId);
 80045b0:	4b26      	ldr	r3, [pc, #152]	@ (800464c <_ZN15Screen3ViewBaseC1Ev+0x2dc>)
 80045b2:	4629      	mov	r1, r5
 80045b4:	6818      	ldr	r0, [r3, #0]
 80045b6:	f000 f9c7 	bl	8004948 <_ZNK8touchgfx5Texts7getTextEt>
 80045ba:	4a25      	ldr	r2, [pc, #148]	@ (8004650 <_ZN15Screen3ViewBaseC1Ev+0x2e0>)
 80045bc:	4603      	mov	r3, r0
 80045be:	210a      	movs	r1, #10
 80045c0:	4638      	mov	r0, r7
 80045c2:	f00f ff73 	bl	80144ac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HSY0));
 80045c6:	9802      	ldr	r0, [sp, #8]
        wc1 = value;
 80045c8:	f8c4 71d4 	str.w	r7, [r4, #468]	@ 0x1d4
 80045cc:	a90a      	add	r1, sp, #40	@ 0x28
        : typedTextId(id)
 80045ce:	f8cd a028 	str.w	sl, [sp, #40]	@ 0x28
 80045d2:	f8ad b02c 	strh.w	fp, [sp, #44]	@ 0x2c
 80045d6:	f009 fc35 	bl	800de44 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80045da:	9902      	ldr	r1, [sp, #8]
 80045dc:	4630      	mov	r0, r6
 80045de:	f006 fa17 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(0, 54);
 80045e2:	2236      	movs	r2, #54	@ 0x36
 80045e4:	9803      	ldr	r0, [sp, #12]
 80045e6:	4629      	mov	r1, r5
 80045e8:	f7ff fa8d 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
 80045ec:	f04f 0303 	mov.w	r3, #3
    image2.setBitmap(touchgfx::Bitmap(BITMAP_GAMEOVER_ID));
 80045f0:	9803      	ldr	r0, [sp, #12]
 80045f2:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80045f6:	a90a      	add	r1, sp, #40	@ 0x28
 80045f8:	f009 fe50 	bl	800e29c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80045fc:	4630      	mov	r0, r6
 80045fe:	9903      	ldr	r1, [sp, #12]
        visible = vis;
 8004600:	f884 51fd 	strb.w	r5, [r4, #509]	@ 0x1fd
 8004604:	f006 fa04 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004608:	4620      	mov	r0, r4
 800460a:	b00d      	add	sp, #52	@ 0x34
 800460c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004610:	08026f5c 	.word	0x08026f5c
 8004614:	08027830 	.word	0x08027830
 8004618:	08026e34 	.word	0x08026e34
 800461c:	08026d58 	.word	0x08026d58
 8004620:	08026f44 	.word	0x08026f44
 8004624:	08004325 	.word	0x08004325
 8004628:	ffae0bd6 	.word	0xffae0bd6
 800462c:	ffb00cc9 	.word	0xffb00cc9
 8004630:	ffff0000 	.word	0xffff0000
 8004634:	20015818 	.word	0x20015818
 8004638:	080263e4 	.word	0x080263e4
 800463c:	080264e6 	.word	0x080264e6
 8004640:	08026461 	.word	0x08026461
 8004644:	2001581c 	.word	0x2001581c
 8004648:	080264a8 	.word	0x080264a8
 800464c:	20015824 	.word	0x20015824
 8004650:	08026531 	.word	0x08026531
 8004654:	08026ba0 	.word	0x08026ba0

08004658 <__tcf_0>:

touchgfx::GeneratedFont& getFont_arialbd_10_4bpp();

touchgfx::GeneratedFont& getFont_arialbd_10_4bpp()
{
    static touchgfx::GeneratedFont arialbd_10_4bpp(glyphs_arialbd_10_4bpp, 533, 13, 10, 0, 0, 4, 1, 1, 1, unicodes_arialbd_10_4bpp, kerning_arialbd_10_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 8004658:	4770      	bx	lr
	...

0800465c <_Z23getFont_arialbd_10_4bppv>:
{
 800465c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arialbd_10_4bpp(glyphs_arialbd_10_4bpp, 533, 13, 10, 0, 0, 4, 1, 1, 1, unicodes_arialbd_10_4bpp, kerning_arialbd_10_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800465e:	4d18      	ldr	r5, [pc, #96]	@ (80046c0 <_Z23getFont_arialbd_10_4bppv+0x64>)
 8004660:	682c      	ldr	r4, [r5, #0]
 8004662:	f014 0401 	ands.w	r4, r4, #1
{
 8004666:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont arialbd_10_4bpp(glyphs_arialbd_10_4bpp, 533, 13, 10, 0, 0, 4, 1, 1, 1, unicodes_arialbd_10_4bpp, kerning_arialbd_10_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 8004668:	f3bf 8f5b 	dmb	ish
 800466c:	d124      	bne.n	80046b8 <_Z23getFont_arialbd_10_4bppv+0x5c>
 800466e:	4628      	mov	r0, r5
 8004670:	f01f f876 	bl	8023760 <__cxa_guard_acquire>
 8004674:	b300      	cbz	r0, 80046b8 <_Z23getFont_arialbd_10_4bppv+0x5c>
 8004676:	4b13      	ldr	r3, [pc, #76]	@ (80046c4 <_Z23getFont_arialbd_10_4bppv+0x68>)
 8004678:	4913      	ldr	r1, [pc, #76]	@ (80046c8 <_Z23getFont_arialbd_10_4bppv+0x6c>)
 800467a:	4814      	ldr	r0, [pc, #80]	@ (80046cc <_Z23getFont_arialbd_10_4bppv+0x70>)
 800467c:	940a      	str	r4, [sp, #40]	@ 0x28
 800467e:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
 8004682:	233f      	movs	r3, #63	@ 0x3f
 8004684:	9309      	str	r3, [sp, #36]	@ 0x24
 8004686:	4b12      	ldr	r3, [pc, #72]	@ (80046d0 <_Z23getFont_arialbd_10_4bppv+0x74>)
 8004688:	9308      	str	r3, [sp, #32]
 800468a:	4b12      	ldr	r3, [pc, #72]	@ (80046d4 <_Z23getFont_arialbd_10_4bppv+0x78>)
 800468c:	9307      	str	r3, [sp, #28]
 800468e:	2301      	movs	r3, #1
 8004690:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8004694:	9304      	str	r3, [sp, #16]
 8004696:	2304      	movs	r3, #4
 8004698:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800469c:	230a      	movs	r3, #10
 800469e:	9300      	str	r3, [sp, #0]
 80046a0:	f240 2215 	movw	r2, #533	@ 0x215
 80046a4:	230d      	movs	r3, #13
 80046a6:	9401      	str	r4, [sp, #4]
 80046a8:	f7ff f938 	bl	800391c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80046ac:	480a      	ldr	r0, [pc, #40]	@ (80046d8 <_Z23getFont_arialbd_10_4bppv+0x7c>)
 80046ae:	f01f ffaf 	bl	8024610 <atexit>
 80046b2:	4628      	mov	r0, r5
 80046b4:	f01f f860 	bl	8023778 <__cxa_guard_release>
    return arialbd_10_4bpp;
}
 80046b8:	4804      	ldr	r0, [pc, #16]	@ (80046cc <_Z23getFont_arialbd_10_4bppv+0x70>)
 80046ba:	b00f      	add	sp, #60	@ 0x3c
 80046bc:	bd30      	pop	{r4, r5, pc}
 80046be:	bf00      	nop
 80046c0:	2000498c 	.word	0x2000498c
 80046c4:	08026f88 	.word	0x08026f88
 80046c8:	08065360 	.word	0x08065360
 80046cc:	20004990 	.word	0x20004990
 80046d0:	0806aad8 	.word	0x0806aad8
 80046d4:	0806adb4 	.word	0x0806adb4
 80046d8:	08004659 	.word	0x08004659

080046dc <__tcf_0>:
extern const touchgfx::FontContextualFormsTable arialbd_contextualFormsTable;
touchgfx::GeneratedFont& getFont_arialbd_20_4bpp();

touchgfx::GeneratedFont& getFont_arialbd_20_4bpp()
{
    static touchgfx::GeneratedFont arialbd_20_4bpp(glyphs_arialbd_20_4bpp, 533, 26, 20, 1, 0, 4, 1, 2, 4, unicodes_arialbd_20_4bpp, kerning_arialbd_20_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 80046dc:	4770      	bx	lr
	...

080046e0 <_Z23getFont_arialbd_20_4bppv>:
{
 80046e0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arialbd_20_4bpp(glyphs_arialbd_20_4bpp, 533, 26, 20, 1, 0, 4, 1, 2, 4, unicodes_arialbd_20_4bpp, kerning_arialbd_20_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 80046e2:	4d18      	ldr	r5, [pc, #96]	@ (8004744 <_Z23getFont_arialbd_20_4bppv+0x64>)
 80046e4:	682c      	ldr	r4, [r5, #0]
 80046e6:	f014 0401 	ands.w	r4, r4, #1
{
 80046ea:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont arialbd_20_4bpp(glyphs_arialbd_20_4bpp, 533, 26, 20, 1, 0, 4, 1, 2, 4, unicodes_arialbd_20_4bpp, kerning_arialbd_20_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 80046ec:	f3bf 8f5b 	dmb	ish
 80046f0:	d125      	bne.n	800473e <_Z23getFont_arialbd_20_4bppv+0x5e>
 80046f2:	4628      	mov	r0, r5
 80046f4:	f01f f834 	bl	8023760 <__cxa_guard_acquire>
 80046f8:	b308      	cbz	r0, 800473e <_Z23getFont_arialbd_20_4bppv+0x5e>
 80046fa:	4b13      	ldr	r3, [pc, #76]	@ (8004748 <_Z23getFont_arialbd_20_4bppv+0x68>)
 80046fc:	4913      	ldr	r1, [pc, #76]	@ (800474c <_Z23getFont_arialbd_20_4bppv+0x6c>)
 80046fe:	4814      	ldr	r0, [pc, #80]	@ (8004750 <_Z23getFont_arialbd_20_4bppv+0x70>)
 8004700:	940a      	str	r4, [sp, #40]	@ 0x28
 8004702:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
 8004706:	233f      	movs	r3, #63	@ 0x3f
 8004708:	9309      	str	r3, [sp, #36]	@ 0x24
 800470a:	4b12      	ldr	r3, [pc, #72]	@ (8004754 <_Z23getFont_arialbd_20_4bppv+0x74>)
 800470c:	9308      	str	r3, [sp, #32]
 800470e:	4b12      	ldr	r3, [pc, #72]	@ (8004758 <_Z23getFont_arialbd_20_4bppv+0x78>)
 8004710:	9307      	str	r3, [sp, #28]
 8004712:	2204      	movs	r2, #4
 8004714:	2302      	movs	r3, #2
 8004716:	e9cd 3205 	strd	r3, r2, [sp, #20]
 800471a:	2301      	movs	r3, #1
 800471c:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8004720:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004724:	2314      	movs	r3, #20
 8004726:	9300      	str	r3, [sp, #0]
 8004728:	f240 2215 	movw	r2, #533	@ 0x215
 800472c:	231a      	movs	r3, #26
 800472e:	f7ff f8f5 	bl	800391c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004732:	480a      	ldr	r0, [pc, #40]	@ (800475c <_Z23getFont_arialbd_20_4bppv+0x7c>)
 8004734:	f01f ff6c 	bl	8024610 <atexit>
 8004738:	4628      	mov	r0, r5
 800473a:	f01f f81d 	bl	8023778 <__cxa_guard_release>
    return arialbd_20_4bpp;
}
 800473e:	4804      	ldr	r0, [pc, #16]	@ (8004750 <_Z23getFont_arialbd_20_4bppv+0x70>)
 8004740:	b00f      	add	sp, #60	@ 0x3c
 8004742:	bd30      	pop	{r4, r5, pc}
 8004744:	200049bc 	.word	0x200049bc
 8004748:	08026f88 	.word	0x08026f88
 800474c:	08067088 	.word	0x08067088
 8004750:	200049c0 	.word	0x200049c0
 8004754:	0806aae0 	.word	0x0806aae0
 8004758:	0806adb8 	.word	0x0806adb8
 800475c:	080046dd 	.word	0x080046dd

08004760 <__tcf_0>:
extern const touchgfx::FontContextualFormsTable arialbd_contextualFormsTable;
touchgfx::GeneratedFont& getFont_arialbd_40_4bpp();

touchgfx::GeneratedFont& getFont_arialbd_40_4bpp()
{
    static touchgfx::GeneratedFont arialbd_40_4bpp(glyphs_arialbd_40_4bpp, 533, 51, 40, 0, 0, 4, 1, 4, 7, unicodes_arialbd_40_4bpp, kerning_arialbd_40_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 8004760:	4770      	bx	lr
	...

08004764 <_Z23getFont_arialbd_40_4bppv>:
{
 8004764:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arialbd_40_4bpp(glyphs_arialbd_40_4bpp, 533, 51, 40, 0, 0, 4, 1, 4, 7, unicodes_arialbd_40_4bpp, kerning_arialbd_40_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 8004766:	4d18      	ldr	r5, [pc, #96]	@ (80047c8 <_Z23getFont_arialbd_40_4bppv+0x64>)
 8004768:	682c      	ldr	r4, [r5, #0]
 800476a:	f014 0401 	ands.w	r4, r4, #1
{
 800476e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont arialbd_40_4bpp(glyphs_arialbd_40_4bpp, 533, 51, 40, 0, 0, 4, 1, 4, 7, unicodes_arialbd_40_4bpp, kerning_arialbd_40_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 8004770:	f3bf 8f5b 	dmb	ish
 8004774:	d125      	bne.n	80047c2 <_Z23getFont_arialbd_40_4bppv+0x5e>
 8004776:	4628      	mov	r0, r5
 8004778:	f01e fff2 	bl	8023760 <__cxa_guard_acquire>
 800477c:	b308      	cbz	r0, 80047c2 <_Z23getFont_arialbd_40_4bppv+0x5e>
 800477e:	4b13      	ldr	r3, [pc, #76]	@ (80047cc <_Z23getFont_arialbd_40_4bppv+0x68>)
 8004780:	4913      	ldr	r1, [pc, #76]	@ (80047d0 <_Z23getFont_arialbd_40_4bppv+0x6c>)
 8004782:	4814      	ldr	r0, [pc, #80]	@ (80047d4 <_Z23getFont_arialbd_40_4bppv+0x70>)
 8004784:	940a      	str	r4, [sp, #40]	@ 0x28
 8004786:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
 800478a:	233f      	movs	r3, #63	@ 0x3f
 800478c:	9309      	str	r3, [sp, #36]	@ 0x24
 800478e:	4b12      	ldr	r3, [pc, #72]	@ (80047d8 <_Z23getFont_arialbd_40_4bppv+0x74>)
 8004790:	9308      	str	r3, [sp, #32]
 8004792:	4b12      	ldr	r3, [pc, #72]	@ (80047dc <_Z23getFont_arialbd_40_4bppv+0x78>)
 8004794:	9307      	str	r3, [sp, #28]
 8004796:	2207      	movs	r2, #7
 8004798:	2304      	movs	r3, #4
 800479a:	e9cd 3205 	strd	r3, r2, [sp, #20]
 800479e:	2201      	movs	r2, #1
 80047a0:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80047a4:	2328      	movs	r3, #40	@ 0x28
 80047a6:	9300      	str	r3, [sp, #0]
 80047a8:	f240 2215 	movw	r2, #533	@ 0x215
 80047ac:	2333      	movs	r3, #51	@ 0x33
 80047ae:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80047b2:	f7ff f8b3 	bl	800391c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80047b6:	480a      	ldr	r0, [pc, #40]	@ (80047e0 <_Z23getFont_arialbd_40_4bppv+0x7c>)
 80047b8:	f01f ff2a 	bl	8024610 <atexit>
 80047bc:	4628      	mov	r0, r5
 80047be:	f01e ffdb 	bl	8023778 <__cxa_guard_release>
    return arialbd_40_4bpp;
}
 80047c2:	4804      	ldr	r0, [pc, #16]	@ (80047d4 <_Z23getFont_arialbd_40_4bppv+0x70>)
 80047c4:	b00f      	add	sp, #60	@ 0x3c
 80047c6:	bd30      	pop	{r4, r5, pc}
 80047c8:	200049ec 	.word	0x200049ec
 80047cc:	08026f88 	.word	0x08026f88
 80047d0:	08068db0 	.word	0x08068db0
 80047d4:	200049f0 	.word	0x200049f0
 80047d8:	0806ac1c 	.word	0x0806ac1c
 80047dc:	0806adbc 	.word	0x0806adbc
 80047e0:	08004761 	.word	0x08004761

080047e4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 80047e4:	2000      	movs	r0, #0
 80047e6:	4770      	bx	lr

080047e8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 80047e8:	2000      	movs	r0, #0
 80047ea:	4770      	bx	lr

080047ec <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80047ec:	b40e      	push	{r1, r2, r3}
 80047ee:	b503      	push	{r0, r1, lr}
 80047f0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80047f2:	2100      	movs	r1, #0
{
 80047f4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80047f8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80047fa:	f00d f9fb 	bl	8011bf4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80047fe:	b002      	add	sp, #8
 8004800:	f85d eb04 	ldr.w	lr, [sp], #4
 8004804:	b003      	add	sp, #12
 8004806:	4770      	bx	lr

08004808 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004808:	b40c      	push	{r2, r3}
 800480a:	b507      	push	{r0, r1, r2, lr}
 800480c:	ab04      	add	r3, sp, #16
 800480e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004812:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004814:	f00d f9ee 	bl	8011bf4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004818:	b003      	add	sp, #12
 800481a:	f85d eb04 	ldr.w	lr, [sp], #4
 800481e:	b002      	add	sp, #8
 8004820:	4770      	bx	lr
	...

08004824 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004824:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 8004826:	b510      	push	{r4, lr}
 8004828:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800482a:	b373      	cbz	r3, 800488a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800482c:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 800482e:	b92b      	cbnz	r3, 800483c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004830:	4b18      	ldr	r3, [pc, #96]	@ (8004894 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004832:	4a19      	ldr	r2, [pc, #100]	@ (8004898 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004834:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004836:	4819      	ldr	r0, [pc, #100]	@ (800489c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004838:	f01f fecc 	bl	80245d4 <__assert_func>
            return buffer[pos];
 800483c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800483e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004842:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8004844:	b30b      	cbz	r3, 800488a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004846:	f00f f888 	bl	801395a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800484a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800484c:	2b01      	cmp	r3, #1
 800484e:	d803      	bhi.n	8004858 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004850:	4b13      	ldr	r3, [pc, #76]	@ (80048a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004852:	4a14      	ldr	r2, [pc, #80]	@ (80048a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004854:	21cb      	movs	r1, #203	@ 0xcb
 8004856:	e7ee      	b.n	8004836 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004858:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800485a:	1c53      	adds	r3, r2, #1
 800485c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800485e:	2b09      	cmp	r3, #9
 8004860:	4619      	mov	r1, r3
 8004862:	bf88      	it	hi
 8004864:	f1a3 010a 	subhi.w	r1, r3, #10
 8004868:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800486c:	f640 103f 	movw	r0, #2367	@ 0x93f
 8004870:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8004872:	4281      	cmp	r1, r0
 8004874:	d109      	bne.n	800488a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004876:	2b0a      	cmp	r3, #10
 8004878:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800487c:	bf28      	it	cs
 800487e:	2300      	movcs	r3, #0
 8004880:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004884:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 8004886:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8004888:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800488a:	4620      	mov	r0, r4
}
 800488c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004890:	f00e bf66 	b.w	8013760 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004894:	08026534 	.word	0x08026534
 8004898:	0802653d 	.word	0x0802653d
 800489c:	080265e8 	.word	0x080265e8
 80048a0:	08026632 	.word	0x08026632
 80048a4:	08026640 	.word	0x08026640

080048a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80048a8:	f00e bf21 	b.w	80136ee <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080048ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80048ac:	b510      	push	{r4, lr}
 80048ae:	b086      	sub	sp, #24
 80048b0:	ac02      	add	r4, sp, #8
 80048b2:	e884 0006 	stmia.w	r4, {r1, r2}
 80048b6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80048b8:	ab0a      	add	r3, sp, #40	@ 0x28
 80048ba:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80048bc:	9301      	str	r3, [sp, #4]
 80048be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80048c0:	9300      	str	r3, [sp, #0]
 80048c2:	4621      	mov	r1, r4
 80048c4:	9b08      	ldr	r3, [sp, #32]
 80048c6:	f00b fc83 	bl	80101d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80048ca:	b006      	add	sp, #24
 80048cc:	bd10      	pop	{r4, pc}
	...

080048d0 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80048d0:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80048d2:	bb18      	cbnz	r0, 800491c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80048d4:	4b12      	ldr	r3, [pc, #72]	@ (8004920 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80048d6:	4813      	ldr	r0, [pc, #76]	@ (8004924 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80048d8:	681c      	ldr	r4, [r3, #0]
 80048da:	4913      	ldr	r1, [pc, #76]	@ (8004928 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80048dc:	b1b4      	cbz	r4, 800490c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80048de:	6822      	ldr	r2, [r4, #0]
 80048e0:	4422      	add	r2, r4
 80048e2:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80048e4:	6862      	ldr	r2, [r4, #4]
 80048e6:	4422      	add	r2, r4
 80048e8:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80048ea:	68a2      	ldr	r2, [r4, #8]
 80048ec:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80048ee:	4b0f      	ldr	r3, [pc, #60]	@ (800492c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80048f0:	2200      	movs	r2, #0
 80048f2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80048f4:	f000 f838 	bl	8004968 <_ZN17TypedTextDatabase8getFontsEv>
 80048f8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80048fa:	f000 f833 	bl	8004964 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80048fe:	4b0c      	ldr	r3, [pc, #48]	@ (8004930 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004900:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004902:	4b0c      	ldr	r3, [pc, #48]	@ (8004934 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004904:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004906:	4b0c      	ldr	r3, [pc, #48]	@ (8004938 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004908:	8018      	strh	r0, [r3, #0]
    }
}
 800490a:	e007      	b.n	800491c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800490c:	4b0b      	ldr	r3, [pc, #44]	@ (800493c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800490e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004910:	4b0b      	ldr	r3, [pc, #44]	@ (8004940 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004912:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004914:	4b0b      	ldr	r3, [pc, #44]	@ (8004944 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004916:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004918:	2c00      	cmp	r4, #0
 800491a:	d1e8      	bne.n	80048ee <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800491c:	bd38      	pop	{r3, r4, r5, pc}
 800491e:	bf00      	nop
 8004920:	20004a28 	.word	0x20004a28
 8004924:	20004a20 	.word	0x20004a20
 8004928:	20004a1c 	.word	0x20004a1c
 800492c:	20004a24 	.word	0x20004a24
 8004930:	20015818 	.word	0x20015818
 8004934:	20015820 	.word	0x20015820
 8004938:	2001581c 	.word	0x2001581c
 800493c:	0806ade4 	.word	0x0806ade4
 8004940:	0806adc0 	.word	0x0806adc0
 8004944:	0806ae38 	.word	0x0806ae38

08004948 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004948:	4b04      	ldr	r3, [pc, #16]	@ (800495c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800494a:	681b      	ldr	r3, [r3, #0]
 800494c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004950:	4b03      	ldr	r3, [pc, #12]	@ (8004960 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004952:	681b      	ldr	r3, [r3, #0]
}
 8004954:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004958:	4770      	bx	lr
 800495a:	bf00      	nop
 800495c:	20004a1c 	.word	0x20004a1c
 8004960:	20004a20 	.word	0x20004a20

08004964 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004964:	2009      	movs	r0, #9
 8004966:	4770      	bx	lr

08004968 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004968:	4800      	ldr	r0, [pc, #0]	@ (800496c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800496a:	4770      	bx	lr
 800496c:	20004a2c 	.word	0x20004a2c

08004970 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_arialbd_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004970:	b510      	push	{r4, lr}
    &(getFont_arialbd_20_4bpp()),
 8004972:	f7ff feb5 	bl	80046e0 <_Z23getFont_arialbd_20_4bppv>
};
 8004976:	4c04      	ldr	r4, [pc, #16]	@ (8004988 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004978:	6020      	str	r0, [r4, #0]
    &(getFont_arialbd_40_4bpp()),
 800497a:	f7ff fef3 	bl	8004764 <_Z23getFont_arialbd_40_4bppv>
};
 800497e:	6060      	str	r0, [r4, #4]
    &(getFont_arialbd_10_4bpp())
 8004980:	f7ff fe6c 	bl	800465c <_Z23getFont_arialbd_10_4bppv>
};
 8004984:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8004986:	bd10      	pop	{r4, pc}
 8004988:	20004a2c 	.word	0x20004a2c

0800498c <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 800498c:	b510      	push	{r4, lr}
    pointArray = 0;
 800498e:	2400      	movs	r4, #0
 8004990:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 8004992:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 8004994:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 8004996:	601c      	str	r4, [r3, #0]
}
 8004998:	bd10      	pop	{r4, pc}

0800499a <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800499a:	4770      	bx	lr

0800499c <_ZN19FrontendApplicationD0Ev>:
 800499c:	b510      	push	{r4, lr}
 800499e:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80049a2:	4604      	mov	r4, r0
 80049a4:	f01e feda 	bl	802375c <_ZdlPvj>
 80049a8:	4620      	mov	r0, r4
 80049aa:	bd10      	pop	{r4, pc}

080049ac <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80049ac:	b510      	push	{r4, lr}
 80049ae:	4604      	mov	r4, r0
    {
        model.tick();
 80049b0:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 80049b4:	f000 f824 	bl	8004a00 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80049b8:	4620      	mov	r0, r4
    }
 80049ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80049be:	f00c b913 	b.w	8010be8 <_ZN8touchgfx11Application15handleTickEventEv>
	...

080049c4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80049c4:	b510      	push	{r4, lr}
 80049c6:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80049c8:	f7fe fb82 	bl	80030d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80049cc:	4b01      	ldr	r3, [pc, #4]	@ (80049d4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80049ce:	6023      	str	r3, [r4, #0]
{

}
 80049d0:	4620      	mov	r0, r4
 80049d2:	bd10      	pop	{r4, pc}
 80049d4:	080273e8 	.word	0x080273e8

080049d8 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
#include "main.h"

Model::Model() : modelListener(0)
 80049d8:	b513      	push	{r0, r1, r4, lr}
 80049da:	2300      	movs	r3, #0
 80049dc:	4604      	mov	r4, r0
 80049de:	e9c0 3300 	strd	r3, r3, [r0]
 80049e2:	6083      	str	r3, [r0, #8]
{
	modelTickCount = 0;
//	highestScore = 0;
	uint32_t score = 0;
	Flash_Read_Data(0x081E0000, &score, 1);
 80049e4:	2201      	movs	r2, #1
 80049e6:	4805      	ldr	r0, [pc, #20]	@ (80049fc <_ZN5ModelC1Ev+0x24>)
	uint32_t score = 0;
 80049e8:	9301      	str	r3, [sp, #4]
	Flash_Read_Data(0x081E0000, &score, 1);
 80049ea:	a901      	add	r1, sp, #4
 80049ec:	f7fc fe38 	bl	8001660 <Flash_Read_Data>
	highestScore = score;
 80049f0:	9b01      	ldr	r3, [sp, #4]
 80049f2:	60a3      	str	r3, [r4, #8]
}
 80049f4:	4620      	mov	r0, r4
 80049f6:	b002      	add	sp, #8
 80049f8:	bd10      	pop	{r4, pc}
 80049fa:	bf00      	nop
 80049fc:	081e0000 	.word	0x081e0000

08004a00 <_ZN5Model4tickEv>:

void Model::tick()
{
	modelTickCount++;
 8004a00:	6803      	ldr	r3, [r0, #0]
 8004a02:	3301      	adds	r3, #1
 8004a04:	6003      	str	r3, [r0, #0]
}
 8004a06:	4770      	bx	lr

08004a08 <_ZNK5Model15getHighestScoreEv>:

int Model::getHighestScore() const {
	return this->highestScore;
}
 8004a08:	6880      	ldr	r0, [r0, #8]
 8004a0a:	4770      	bx	lr

08004a0c <_ZN5Model15setHighestScoreEi>:
void Model::setHighestScore(int score){
	if(score > highestScore) highestScore = score;
 8004a0c:	6883      	ldr	r3, [r0, #8]
 8004a0e:	428b      	cmp	r3, r1
 8004a10:	bfb8      	it	lt
 8004a12:	6081      	strlt	r1, [r0, #8]
}
 8004a14:	4770      	bx	lr

08004a16 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 8004a16:	4770      	bx	lr

08004a18 <_ZThn4_N16Screen1PresenterD1Ev>:
 8004a18:	3804      	subs	r0, #4
 8004a1a:	4770      	bx	lr

08004a1c <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004a1c:	4770      	bx	lr

08004a1e <_ZN16Screen1PresenterD0Ev>:
 8004a1e:	b510      	push	{r4, lr}
 8004a20:	2110      	movs	r1, #16
 8004a22:	4604      	mov	r4, r0
 8004a24:	f01e fe9a 	bl	802375c <_ZdlPvj>
 8004a28:	4620      	mov	r0, r4
 8004a2a:	bd10      	pop	{r4, pc}

08004a2c <_ZThn4_N16Screen1PresenterD0Ev>:
 8004a2c:	f1a0 0004 	sub.w	r0, r0, #4
 8004a30:	e7f5      	b.n	8004a1e <_ZN16Screen1PresenterD0Ev>
	...

08004a34 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 8004a34:	2200      	movs	r2, #0
 8004a36:	6082      	str	r2, [r0, #8]
    : view(v)
 8004a38:	4a02      	ldr	r2, [pc, #8]	@ (8004a44 <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 8004a3a:	6002      	str	r2, [r0, #0]
 8004a3c:	3218      	adds	r2, #24
 8004a3e:	6042      	str	r2, [r0, #4]
 8004a40:	60c1      	str	r1, [r0, #12]
}
 8004a42:	4770      	bx	lr
 8004a44:	0802743c 	.word	0x0802743c

08004a48 <_ZNK16Screen1Presenter15getHighestScoreEv>:
{

}

int Screen1Presenter::getHighestScore() const{
	return model->getHighestScore();
 8004a48:	6880      	ldr	r0, [r0, #8]
 8004a4a:	f7ff bfdd 	b.w	8004a08 <_ZNK5Model15getHighestScoreEv>

08004a4e <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8004a4e:	4770      	bx	lr

08004a50 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8004a50:	b510      	push	{r4, lr}
 8004a52:	4b03      	ldr	r3, [pc, #12]	@ (8004a60 <_ZN11Screen1ViewD1Ev+0x10>)
 8004a54:	6003      	str	r3, [r0, #0]
 8004a56:	4604      	mov	r4, r0
 8004a58:	f7fe ffd5 	bl	8003a06 <_ZN15Screen1ViewBaseD1Ev>
 8004a5c:	4620      	mov	r0, r4
 8004a5e:	bd10      	pop	{r4, pc}
 8004a60:	08027464 	.word	0x08027464

08004a64 <_ZN11Screen1ViewD0Ev>:
 8004a64:	b510      	push	{r4, lr}
 8004a66:	4604      	mov	r4, r0
 8004a68:	f7ff fff2 	bl	8004a50 <_ZN11Screen1ViewD1Ev>
 8004a6c:	4620      	mov	r0, r4
 8004a6e:	f44f 71d2 	mov.w	r1, #420	@ 0x1a4
 8004a72:	f01e fe73 	bl	802375c <_ZdlPvj>
 8004a76:	4620      	mov	r0, r4
 8004a78:	bd10      	pop	{r4, pc}
	...

08004a7c <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8004a7c:	b510      	push	{r4, lr}
 8004a7e:	4604      	mov	r4, r0
 8004a80:	f7ff f896 	bl	8003bb0 <_ZN15Screen1ViewBaseC1Ev>
 8004a84:	4b07      	ldr	r3, [pc, #28]	@ (8004aa4 <_ZN11Screen1ViewC1Ev+0x28>)
 8004a86:	6023      	str	r3, [r4, #0]
 8004a88:	2300      	movs	r3, #0
 8004a8a:	f8c4 31a0 	str.w	r3, [r4, #416]	@ 0x1a0
	currScreen = 1;
 8004a8e:	4b06      	ldr	r3, [pc, #24]	@ (8004aa8 <_ZN11Screen1ViewC1Ev+0x2c>)
 8004a90:	2201      	movs	r2, #1
 8004a92:	701a      	strb	r2, [r3, #0]
    DF_SendCommand(0x0F, 0x02, 0x02);
 8004a94:	2202      	movs	r2, #2
 8004a96:	4611      	mov	r1, r2
 8004a98:	200f      	movs	r0, #15
 8004a9a:	f7fc fa05 	bl	8000ea8 <DF_SendCommand>
}
 8004a9e:	4620      	mov	r0, r4
 8004aa0:	bd10      	pop	{r4, pc}
 8004aa2:	bf00      	nop
 8004aa4:	08027464 	.word	0x08027464
 8004aa8:	20000010 	.word	0x20000010

08004aac <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8004aac:	f7fe bfac 	b.w	8003a08 <_ZN15Screen1ViewBase11setupScreenEv>

08004ab0 <_ZN11Screen1View15handleTickEventEv>:

void Screen1View::handleTickEvent()
{
	tickCounter += 1;
 8004ab0:	f8d0 31a0 	ldr.w	r3, [r0, #416]	@ 0x1a0
 8004ab4:	3301      	adds	r3, #1
{
 8004ab6:	b510      	push	{r4, lr}
 8004ab8:	4604      	mov	r4, r0
	tickCounter += 1;
 8004aba:	f8c0 31a0 	str.w	r3, [r0, #416]	@ 0x1a0
	//hiển thị điểm cao nhất đạt được
	Unicode::snprintf(highestScoreBuffer, HIGHESTSCORE_SIZE, "%d", presenter->getHighestScore());
 8004abe:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8004ac0:	f7ff ffc2 	bl	8004a48 <_ZNK16Screen1Presenter15getHighestScoreEv>
 8004ac4:	4a06      	ldr	r2, [pc, #24]	@ (8004ae0 <_ZN11Screen1View15handleTickEventEv+0x30>)
 8004ac6:	4603      	mov	r3, r0
 8004ac8:	210a      	movs	r1, #10
 8004aca:	f504 70be 	add.w	r0, r4, #380	@ 0x17c
 8004ace:	f00f fced 	bl	80144ac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	highestScore.invalidate();
 8004ad2:	f104 00fc 	add.w	r0, r4, #252	@ 0xfc
}
 8004ad6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	highestScore.invalidate();
 8004ada:	f00d b9b5 	b.w	8011e48 <_ZNK8touchgfx8Drawable10invalidateEv>
 8004ade:	bf00      	nop
 8004ae0:	08026712 	.word	0x08026712

08004ae4 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {}
 8004ae4:	4770      	bx	lr

08004ae6 <_ZThn4_N16Screen2PresenterD1Ev>:
 8004ae6:	3804      	subs	r0, #4
 8004ae8:	4770      	bx	lr

08004aea <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 8004aea:	4770      	bx	lr

08004aec <_ZN16Screen2PresenterD0Ev>:
 8004aec:	b510      	push	{r4, lr}
 8004aee:	2110      	movs	r1, #16
 8004af0:	4604      	mov	r4, r0
 8004af2:	f01e fe33 	bl	802375c <_ZdlPvj>
 8004af6:	4620      	mov	r0, r4
 8004af8:	bd10      	pop	{r4, pc}

08004afa <_ZThn4_N16Screen2PresenterD0Ev>:
 8004afa:	f1a0 0004 	sub.w	r0, r0, #4
 8004afe:	e7f5      	b.n	8004aec <_ZN16Screen2PresenterD0Ev>

08004b00 <_ZN16Screen2PresenterC1ER11Screen2View>:
 8004b00:	2200      	movs	r2, #0
 8004b02:	6082      	str	r2, [r0, #8]
    : view(v)
 8004b04:	4a02      	ldr	r2, [pc, #8]	@ (8004b10 <_ZN16Screen2PresenterC1ER11Screen2View+0x10>)
 8004b06:	6002      	str	r2, [r0, #0]
 8004b08:	3218      	adds	r2, #24
 8004b0a:	6042      	str	r2, [r0, #4]
 8004b0c:	60c1      	str	r1, [r0, #12]
}
 8004b0e:	4770      	bx	lr
 8004b10:	08027498 	.word	0x08027498

08004b14 <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 8004b14:	4770      	bx	lr
	...

08004b18 <_ZN11Screen2View7easyBtnEv>:

void Screen2View::easyBtn(){
 8004b18:	b513      	push	{r0, r1, r4, lr}
	char res = 'a';
 8004b1a:	2361      	movs	r3, #97	@ 0x61
	while(osMessageQueueGetCount(levelQueueHandle) > 0){
 8004b1c:	4c0d      	ldr	r4, [pc, #52]	@ (8004b54 <_ZN11Screen2View7easyBtnEv+0x3c>)
	char res = 'a';
 8004b1e:	f88d 3007 	strb.w	r3, [sp, #7]
	while(osMessageQueueGetCount(levelQueueHandle) > 0){
 8004b22:	6820      	ldr	r0, [r4, #0]
 8004b24:	f003 fe74 	bl	8008810 <osMessageQueueGetCount>
 8004b28:	4602      	mov	r2, r0
 8004b2a:	b950      	cbnz	r0, 8004b42 <_ZN11Screen2View7easyBtnEv+0x2a>
		osMessageQueueGet(levelQueueHandle, &res, NULL, 100);
	}

	res = 'e';
 8004b2c:	2365      	movs	r3, #101	@ 0x65
 8004b2e:	f88d 3007 	strb.w	r3, [sp, #7]
	osMessageQueuePut(levelQueueHandle, &res, 0, 10);
 8004b32:	6820      	ldr	r0, [r4, #0]
 8004b34:	230a      	movs	r3, #10
 8004b36:	f10d 0107 	add.w	r1, sp, #7
 8004b3a:	f003 fe08 	bl	800874e <osMessageQueuePut>
}
 8004b3e:	b002      	add	sp, #8
 8004b40:	bd10      	pop	{r4, pc}
		osMessageQueueGet(levelQueueHandle, &res, NULL, 100);
 8004b42:	6820      	ldr	r0, [r4, #0]
 8004b44:	2364      	movs	r3, #100	@ 0x64
 8004b46:	2200      	movs	r2, #0
 8004b48:	f10d 0107 	add.w	r1, sp, #7
 8004b4c:	f003 fe30 	bl	80087b0 <osMessageQueueGet>
 8004b50:	e7e7      	b.n	8004b22 <_ZN11Screen2View7easyBtnEv+0xa>
 8004b52:	bf00      	nop
 8004b54:	200003bc 	.word	0x200003bc

08004b58 <_ZN11Screen2View9mediumBtnEv>:
void Screen2View::mediumBtn(){
 8004b58:	b513      	push	{r0, r1, r4, lr}
	char res = 'a';
 8004b5a:	2361      	movs	r3, #97	@ 0x61
	while(osMessageQueueGetCount(levelQueueHandle) > 0){
 8004b5c:	4c0d      	ldr	r4, [pc, #52]	@ (8004b94 <_ZN11Screen2View9mediumBtnEv+0x3c>)
	char res = 'a';
 8004b5e:	f88d 3007 	strb.w	r3, [sp, #7]
	while(osMessageQueueGetCount(levelQueueHandle) > 0){
 8004b62:	6820      	ldr	r0, [r4, #0]
 8004b64:	f003 fe54 	bl	8008810 <osMessageQueueGetCount>
 8004b68:	4602      	mov	r2, r0
 8004b6a:	b950      	cbnz	r0, 8004b82 <_ZN11Screen2View9mediumBtnEv+0x2a>
		osMessageQueueGet(levelQueueHandle, &res, NULL, 100);
	}

	res = 'm';
 8004b6c:	236d      	movs	r3, #109	@ 0x6d
 8004b6e:	f88d 3007 	strb.w	r3, [sp, #7]
	osMessageQueuePut(levelQueueHandle, &res, 0, 10);
 8004b72:	6820      	ldr	r0, [r4, #0]
 8004b74:	230a      	movs	r3, #10
 8004b76:	f10d 0107 	add.w	r1, sp, #7
 8004b7a:	f003 fde8 	bl	800874e <osMessageQueuePut>
}
 8004b7e:	b002      	add	sp, #8
 8004b80:	bd10      	pop	{r4, pc}
		osMessageQueueGet(levelQueueHandle, &res, NULL, 100);
 8004b82:	6820      	ldr	r0, [r4, #0]
 8004b84:	2364      	movs	r3, #100	@ 0x64
 8004b86:	2200      	movs	r2, #0
 8004b88:	f10d 0107 	add.w	r1, sp, #7
 8004b8c:	f003 fe10 	bl	80087b0 <osMessageQueueGet>
 8004b90:	e7e7      	b.n	8004b62 <_ZN11Screen2View9mediumBtnEv+0xa>
 8004b92:	bf00      	nop
 8004b94:	200003bc 	.word	0x200003bc

08004b98 <_ZN11Screen2View7hardBtnEv>:
void Screen2View::hardBtn(){
 8004b98:	b513      	push	{r0, r1, r4, lr}
	char res = 'a';
 8004b9a:	2361      	movs	r3, #97	@ 0x61
	while(osMessageQueueGetCount(levelQueueHandle) > 0){
 8004b9c:	4c0d      	ldr	r4, [pc, #52]	@ (8004bd4 <_ZN11Screen2View7hardBtnEv+0x3c>)
	char res = 'a';
 8004b9e:	f88d 3007 	strb.w	r3, [sp, #7]
	while(osMessageQueueGetCount(levelQueueHandle) > 0){
 8004ba2:	6820      	ldr	r0, [r4, #0]
 8004ba4:	f003 fe34 	bl	8008810 <osMessageQueueGetCount>
 8004ba8:	4602      	mov	r2, r0
 8004baa:	b950      	cbnz	r0, 8004bc2 <_ZN11Screen2View7hardBtnEv+0x2a>
		osMessageQueueGet(levelQueueHandle, &res, NULL, 100);
	}

	res = 'h';
 8004bac:	2368      	movs	r3, #104	@ 0x68
 8004bae:	f88d 3007 	strb.w	r3, [sp, #7]
	osMessageQueuePut(levelQueueHandle, &res, 0, 10);
 8004bb2:	6820      	ldr	r0, [r4, #0]
 8004bb4:	230a      	movs	r3, #10
 8004bb6:	f10d 0107 	add.w	r1, sp, #7
 8004bba:	f003 fdc8 	bl	800874e <osMessageQueuePut>
}
 8004bbe:	b002      	add	sp, #8
 8004bc0:	bd10      	pop	{r4, pc}
		osMessageQueueGet(levelQueueHandle, &res, NULL, 100);
 8004bc2:	6820      	ldr	r0, [r4, #0]
 8004bc4:	2364      	movs	r3, #100	@ 0x64
 8004bc6:	2200      	movs	r2, #0
 8004bc8:	f10d 0107 	add.w	r1, sp, #7
 8004bcc:	f003 fdf0 	bl	80087b0 <osMessageQueueGet>
 8004bd0:	e7e7      	b.n	8004ba2 <_ZN11Screen2View7hardBtnEv+0xa>
 8004bd2:	bf00      	nop
 8004bd4:	200003bc 	.word	0x200003bc

08004bd8 <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 8004bd8:	b510      	push	{r4, lr}
 8004bda:	4b03      	ldr	r3, [pc, #12]	@ (8004be8 <_ZN11Screen2ViewD1Ev+0x10>)
 8004bdc:	6003      	str	r3, [r0, #0]
 8004bde:	4604      	mov	r4, r0
 8004be0:	f7ff f918 	bl	8003e14 <_ZN15Screen2ViewBaseD1Ev>
 8004be4:	4620      	mov	r0, r4
 8004be6:	bd10      	pop	{r4, pc}
 8004be8:	080274c0 	.word	0x080274c0

08004bec <_ZN11Screen2ViewD0Ev>:
 8004bec:	b510      	push	{r4, lr}
 8004bee:	4604      	mov	r4, r0
 8004bf0:	f7ff fff2 	bl	8004bd8 <_ZN11Screen2ViewD1Ev>
 8004bf4:	4620      	mov	r0, r4
 8004bf6:	f44f 71ea 	mov.w	r1, #468	@ 0x1d4
 8004bfa:	f01e fdaf 	bl	802375c <_ZdlPvj>
 8004bfe:	4620      	mov	r0, r4
 8004c00:	bd10      	pop	{r4, pc}
	...

08004c04 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 8004c04:	b510      	push	{r4, lr}
 8004c06:	4604      	mov	r4, r0
 8004c08:	f7ff fa5a 	bl	80040c0 <_ZN15Screen2ViewBaseC1Ev>
 8004c0c:	4b01      	ldr	r3, [pc, #4]	@ (8004c14 <_ZN11Screen2ViewC1Ev+0x10>)
 8004c0e:	6023      	str	r3, [r4, #0]
}
 8004c10:	4620      	mov	r0, r4
 8004c12:	bd10      	pop	{r4, pc}
 8004c14:	080274c0 	.word	0x080274c0

08004c18 <_ZN11Screen2View11setupScreenEv>:
    Screen2ViewBase::setupScreen();
 8004c18:	f7ff b8fd 	b.w	8003e16 <_ZN15Screen2ViewBase11setupScreenEv>

08004c1c <_ZN16Screen3PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen3Presenter() {}
 8004c1c:	4770      	bx	lr

08004c1e <_ZThn4_N16Screen3PresenterD1Ev>:
 8004c1e:	3804      	subs	r0, #4
 8004c20:	4770      	bx	lr

08004c22 <_ZN16Screen3Presenter10deactivateEv>:
}

void Screen3Presenter::activate()
{

}
 8004c22:	4770      	bx	lr

08004c24 <_ZN16Screen3PresenterD0Ev>:
 8004c24:	b510      	push	{r4, lr}
 8004c26:	2110      	movs	r1, #16
 8004c28:	4604      	mov	r4, r0
 8004c2a:	f01e fd97 	bl	802375c <_ZdlPvj>
 8004c2e:	4620      	mov	r0, r4
 8004c30:	bd10      	pop	{r4, pc}

08004c32 <_ZThn4_N16Screen3PresenterD0Ev>:
 8004c32:	f1a0 0004 	sub.w	r0, r0, #4
 8004c36:	e7f5      	b.n	8004c24 <_ZN16Screen3PresenterD0Ev>

08004c38 <_ZN16Screen3PresenterC1ER11Screen3View>:
 8004c38:	2200      	movs	r2, #0
 8004c3a:	6082      	str	r2, [r0, #8]
    : view(v)
 8004c3c:	4a02      	ldr	r2, [pc, #8]	@ (8004c48 <_ZN16Screen3PresenterC1ER11Screen3View+0x10>)
 8004c3e:	6002      	str	r2, [r0, #0]
 8004c40:	3218      	adds	r2, #24
 8004c42:	6042      	str	r2, [r0, #4]
 8004c44:	60c1      	str	r1, [r0, #12]
}
 8004c46:	4770      	bx	lr
 8004c48:	08027500 	.word	0x08027500

08004c4c <_ZNK16Screen3Presenter15getHighestScoreEv>:
{

}

int Screen3Presenter::getHighestScore() const{
	return model->getHighestScore();
 8004c4c:	6880      	ldr	r0, [r0, #8]
 8004c4e:	f7ff bedb 	b.w	8004a08 <_ZNK5Model15getHighestScoreEv>

08004c52 <_ZN16Screen3Presenter15setHighestScoreEi>:
}
void Screen3Presenter::setHighestScore(int score){
	model->setHighestScore(score);
 8004c52:	6880      	ldr	r0, [r0, #8]
 8004c54:	f7ff beda 	b.w	8004a0c <_ZN5Model15setHighestScoreEi>

08004c58 <_ZN11Screen3View14tearDownScreenEv>:
}

void Screen3View::tearDownScreen()
{
    Screen3ViewBase::tearDownScreen();
}
 8004c58:	4770      	bx	lr
	...

08004c5c <_ZN11Screen3ViewD1Ev>:

class Screen3View : public Screen3ViewBase
{
public:
    Screen3View();
    virtual ~Screen3View() {}
 8004c5c:	4b0e      	ldr	r3, [pc, #56]	@ (8004c98 <_ZN11Screen3ViewD1Ev+0x3c>)
 8004c5e:	b570      	push	{r4, r5, r6, lr}
 8004c60:	4605      	mov	r5, r0
 8004c62:	6003      	str	r3, [r0, #0]
 8004c64:	f243 149c 	movw	r4, #12700	@ 0x319c
 8004c68:	f642 665c 	movw	r6, #11868	@ 0x2e5c
 8004c6c:	42b4      	cmp	r4, r6
 8004c6e:	d10d      	bne.n	8004c8c <_ZN11Screen3ViewD1Ev+0x30>
 8004c70:	f240 56bc 	movw	r6, #1468	@ 0x5bc
 8004c74:	592b      	ldr	r3, [r5, r4]
 8004c76:	1928      	adds	r0, r5, r4
 8004c78:	681b      	ldr	r3, [r3, #0]
 8004c7a:	3c34      	subs	r4, #52	@ 0x34
 8004c7c:	4798      	blx	r3
 8004c7e:	42b4      	cmp	r4, r6
 8004c80:	d1f8      	bne.n	8004c74 <_ZN11Screen3ViewD1Ev+0x18>
 8004c82:	4628      	mov	r0, r5
 8004c84:	f7ff fb23 	bl	80042ce <_ZN15Screen3ViewBaseD1Ev>
 8004c88:	4628      	mov	r0, r5
 8004c8a:	bd70      	pop	{r4, r5, r6, pc}
 8004c8c:	592b      	ldr	r3, [r5, r4]
 8004c8e:	1928      	adds	r0, r5, r4
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	4798      	blx	r3
 8004c94:	3c34      	subs	r4, #52	@ 0x34
 8004c96:	e7e9      	b.n	8004c6c <_ZN11Screen3ViewD1Ev+0x10>
 8004c98:	08027528 	.word	0x08027528

08004c9c <_ZN11Screen3ViewD0Ev>:
 8004c9c:	b510      	push	{r4, lr}
 8004c9e:	4604      	mov	r4, r0
 8004ca0:	f7ff ffdc 	bl	8004c5c <_ZN11Screen3ViewD1Ev>
 8004ca4:	4620      	mov	r0, r4
 8004ca6:	f243 11d8 	movw	r1, #12760	@ 0x31d8
 8004caa:	f01e fd57 	bl	802375c <_ZdlPvj>
 8004cae:	4620      	mov	r0, r4
 8004cb0:	bd10      	pop	{r4, pc}
	...

08004cb4 <_ZN8touchgfx3BoxC1Ev>:
        : Widget(), alpha(255), color(0)
 8004cb4:	4a09      	ldr	r2, [pc, #36]	@ (8004cdc <_ZN8touchgfx3BoxC1Ev+0x28>)
 8004cb6:	6002      	str	r2, [r0, #0]
          touchable(false),
 8004cb8:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8004cbc:	2200      	movs	r2, #0
 8004cbe:	8481      	strh	r1, [r0, #36]	@ 0x24
 8004cc0:	21ff      	movs	r1, #255	@ 0xff
 8004cc2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8004cc6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8004cca:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8004cce:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004cd2:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
        : color(col)
 8004cd6:	6282      	str	r2, [r0, #40]	@ 0x28
    }
 8004cd8:	4770      	bx	lr
 8004cda:	bf00      	nop
 8004cdc:	08027830 	.word	0x08027830

08004ce0 <_ZN11Screen3View8drawGridEv>:

/**
 * @brief	Vẽ lưới game
 * @retval	None
 */
void Screen3View::drawGrid(){
 8004ce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004ce4:	b089      	sub	sp, #36	@ 0x24
    void rotate();
    void drop();

	void getBlockBounds(const BlockMatrix& block, int& minX, int& maxX, int& minY, int& maxY);
    const Grid& getGrid() const { return grid; }
    const BlockMatrix& getCurrentBlock() const { return currBlock; }
 8004ce6:	f500 63a9 	add.w	r3, r0, #1352	@ 0x548
    int getBlockSize() const { return blockSize; }
    int getCurrX() const { return currX; }
 8004cea:	f8d0 8588 	ldr.w	r8, [r0, #1416]	@ 0x588
    int getCurrY() const { return currY; }
 8004cee:	f8d0 758c 	ldr.w	r7, [r0, #1420]	@ 0x58c
    const BlockMatrix& getCurrentBlock() const { return currBlock; }
 8004cf2:	9303      	str	r3, [sp, #12]
 8004cf4:	4605      	mov	r5, r0
    const auto& block = engine.getCurrentBlock();
    int currX = engine.getCurrX();
    int currY = engine.getCurrY();

    //Vẽ lưới chính
    for (int y = 0; y < GRID_HEIGHT; ++y) {
 8004cf6:	f04f 0a00 	mov.w	sl, #0
 8004cfa:	f44f 7b02 	mov.w	fp, #520	@ 0x208
        for (int x = 0; x < GRID_WIDTH; ++x) {
//            colBoxes[y][x].setColor(grid[y][x] ? Color::getColorFromRGB(255, 0, 255)
//                                               : Color::getColorFromRGB(0, 0, 0));
        	uint16_t gridColor = engine.getGridColor(x, y);
 8004cfe:	f500 760a 	add.w	r6, r0, #552	@ 0x228
        for (int x = 0; x < GRID_WIDTH; ++x) {
 8004d02:	fb0b 540a 	mla	r4, fp, sl, r5
 8004d06:	f04f 0900 	mov.w	r9, #0
        	uint16_t gridColor = engine.getGridColor(x, y);
 8004d0a:	4652      	mov	r2, sl
 8004d0c:	4649      	mov	r1, r9
 8004d0e:	4630      	mov	r0, r6
 8004d10:	f7fb ff30 	bl	8000b74 <_ZNK12TetrisEngine12getGridColorEii>
			uint8_t r, g, b;
			convertRGB565ToRGB888(gridColor, r, g, b);
			colBoxes[y][x].setColor(gridColor ? Color::getColorFromRGB(r, g, b)
 8004d14:	4603      	mov	r3, r0
 8004d16:	2800      	cmp	r0, #0
 8004d18:	d04c      	beq.n	8004db4 <_ZN11Screen3View8drawGridEv+0xd4>
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 8004d1a:	ea4f 2c03 	mov.w	ip, r3, lsl #8
 8004d1e:	0140      	lsls	r0, r0, #5
 8004d20:	f400 407c 	and.w	r0, r0, #64512	@ 0xfc00
 8004d24:	f40c 0c78 	and.w	ip, ip, #16252928	@ 0xf80000
    b = (rgb565 & 0x1F) << 3;         // 5-bit blue => 8-bit
 8004d28:	00db      	lsls	r3, r3, #3
 8004d2a:	ea40 000c 	orr.w	r0, r0, ip
 8004d2e:	b2db      	uxtb	r3, r3
 8004d30:	4318      	orrs	r0, r3
 8004d32:	f040 407f 	orr.w	r0, r0, #4278190080	@ 0xff000000
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8004d36:	f04f 33ff 	mov.w	r3, #4294967295
 8004d3a:	f884 3616 	strb.w	r3, [r4, #1558]	@ 0x616
											 : Color::getColorFromRGB(0, 0, 0));
			colBoxes[y][x].setAlpha(255);
            colBoxes[y][x].invalidate();
 8004d3e:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	@ 0x5f0
        color = newColor;
 8004d42:	f8c4 0618 	str.w	r0, [r4, #1560]	@ 0x618
 8004d46:	695b      	ldr	r3, [r3, #20]
 8004d48:	f504 60be 	add.w	r0, r4, #1520	@ 0x5f0
        for (int x = 0; x < GRID_WIDTH; ++x) {
 8004d4c:	f109 0901 	add.w	r9, r9, #1
            colBoxes[y][x].invalidate();
 8004d50:	4798      	blx	r3
        for (int x = 0; x < GRID_WIDTH; ++x) {
 8004d52:	f1b9 0f0a 	cmp.w	r9, #10
 8004d56:	f104 0434 	add.w	r4, r4, #52	@ 0x34
 8004d5a:	d1d6      	bne.n	8004d0a <_ZN11Screen3View8drawGridEv+0x2a>
    for (int y = 0; y < GRID_HEIGHT; ++y) {
 8004d5c:	f10a 0a01 	add.w	sl, sl, #1
 8004d60:	f1ba 0f14 	cmp.w	sl, #20
 8004d64:	d1cd      	bne.n	8004d02 <_ZN11Screen3View8drawGridEv+0x22>
        }
    }

    // Vẽ block đang rơi
    uint16_t blockColor = engine.getCurrentBlockColor();
 8004d66:	4630      	mov	r0, r6
 8004d68:	f7fb fefc 	bl	8000b64 <_ZNK12TetrisEngine20getCurrentBlockColorEv>
	uint8_t r, g, b;
	convertRGB565ToRGB888(blockColor, r, g, b);

	//lấy bound của block (hình chữ nhật nhỏ nhất mà chứa được toàn bộ block)
    int minX, maxX, minY, maxY;
    engine.getBlockBounds(block, minX, maxX, minY, maxY);
 8004d6c:	ab07      	add	r3, sp, #28
    r = ((rgb565 >> 11) & 0x1F) << 3; // 5-bit red => 8-bit
 8004d6e:	ea4f 2b10 	mov.w	fp, r0, lsr #8
    g = ((rgb565 >> 5) & 0x3F) << 2;  // 6-bit green => 8-bit
 8004d72:	08c4      	lsrs	r4, r0, #3
    engine.getBlockBounds(block, minX, maxX, minY, maxY);
 8004d74:	9301      	str	r3, [sp, #4]
    b = (rgb565 & 0x1F) << 3;         // 5-bit blue => 8-bit
 8004d76:	00c0      	lsls	r0, r0, #3
    engine.getBlockBounds(block, minX, maxX, minY, maxY);
 8004d78:	ab06      	add	r3, sp, #24
 8004d7a:	9300      	str	r3, [sp, #0]
 8004d7c:	9903      	ldr	r1, [sp, #12]
 8004d7e:	ab05      	add	r3, sp, #20
    b = (rgb565 & 0x1F) << 3;         // 5-bit blue => 8-bit
 8004d80:	fa5f fa80 	uxtb.w	sl, r0
    engine.getBlockBounds(block, minX, maxX, minY, maxY);
 8004d84:	aa04      	add	r2, sp, #16
 8004d86:	4630      	mov	r0, r6
 8004d88:	f7fb fd83 	bl	8000892 <_ZN12TetrisEngine14getBlockBoundsERKSt5arrayIS0_IiLj4EELj4EERiS5_S5_S5_>
 8004d8c:	9e06      	ldr	r6, [sp, #24]
    g = ((rgb565 >> 5) & 0x3F) << 2;  // 6-bit green => 8-bit
 8004d8e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8004d92:	eb05 1906 	add.w	r9, r5, r6, lsl #4
    r = ((rgb565 >> 11) & 0x1F) << 3; // 5-bit red => 8-bit
 8004d96:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8004d9a:	0224      	lsls	r4, r4, #8
 8004d9c:	f509 69a9 	add.w	r9, r9, #1352	@ 0x548
 8004da0:	443e      	add	r6, r7
 8004da2:	ea44 430b 	orr.w	r3, r4, fp, lsl #16
    for (int i = minY; i <= maxY; ++i)
 8004da6:	9a07      	ldr	r2, [sp, #28]
 8004da8:	1bf1      	subs	r1, r6, r7
 8004daa:	428a      	cmp	r2, r1
 8004dac:	da05      	bge.n	8004dba <_ZN11Screen3View8drawGridEv+0xda>
                    colBoxes[gy][gx].setColor(Color::getColorFromRGB(r, g, b));
                    colBoxes[gy][gx].setAlpha(255);
                    colBoxes[gy][gx].invalidate();
                }
            }
}
 8004dae:	b009      	add	sp, #36	@ 0x24
 8004db0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004db4:	f04f 407f 	mov.w	r0, #4278190080	@ 0xff000000
 8004db8:	e7bd      	b.n	8004d36 <_ZN11Screen3View8drawGridEv+0x56>
        for (int j = minX; j <= maxX; ++j)
 8004dba:	f8dd b010 	ldr.w	fp, [sp, #16]
 8004dbe:	f44f 7402 	mov.w	r4, #520	@ 0x208
 8004dc2:	eb0b 0208 	add.w	r2, fp, r8
 8004dc6:	4374      	muls	r4, r6
 8004dc8:	2134      	movs	r1, #52	@ 0x34
 8004dca:	fb01 4402 	mla	r4, r1, r2, r4
 8004dce:	442c      	add	r4, r5
 8004dd0:	9a05      	ldr	r2, [sp, #20]
 8004dd2:	455a      	cmp	r2, fp
 8004dd4:	da03      	bge.n	8004dde <_ZN11Screen3View8drawGridEv+0xfe>
    for (int i = minY; i <= maxY; ++i)
 8004dd6:	f109 0910 	add.w	r9, r9, #16
 8004dda:	3601      	adds	r6, #1
 8004ddc:	e7e3      	b.n	8004da6 <_ZN11Screen3View8drawGridEv+0xc6>
            if (block[i][j]) {
 8004dde:	f859 202b 	ldr.w	r2, [r9, fp, lsl #2]
 8004de2:	b1b2      	cbz	r2, 8004e12 <_ZN11Screen3View8drawGridEv+0x132>
                if (gx >= 0 && gx < GRID_WIDTH && gy >= 0 && gy < GRID_HEIGHT) {
 8004de4:	eb08 020b 	add.w	r2, r8, fp
 8004de8:	2a09      	cmp	r2, #9
 8004dea:	d812      	bhi.n	8004e12 <_ZN11Screen3View8drawGridEv+0x132>
 8004dec:	2e13      	cmp	r6, #19
 8004dee:	d810      	bhi.n	8004e12 <_ZN11Screen3View8drawGridEv+0x132>
 8004df0:	ea43 020a 	orr.w	r2, r3, sl
 8004df4:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8004df8:	f8c4 2618 	str.w	r2, [r4, #1560]	@ 0x618
        alpha = newAlpha;
 8004dfc:	22ff      	movs	r2, #255	@ 0xff
 8004dfe:	f884 2616 	strb.w	r2, [r4, #1558]	@ 0x616
                    colBoxes[gy][gx].invalidate();
 8004e02:	f8d4 25f0 	ldr.w	r2, [r4, #1520]	@ 0x5f0
 8004e06:	9303      	str	r3, [sp, #12]
 8004e08:	6952      	ldr	r2, [r2, #20]
 8004e0a:	f504 60be 	add.w	r0, r4, #1520	@ 0x5f0
 8004e0e:	4790      	blx	r2
 8004e10:	9b03      	ldr	r3, [sp, #12]
        for (int j = minX; j <= maxX; ++j)
 8004e12:	f10b 0b01 	add.w	fp, fp, #1
 8004e16:	3434      	adds	r4, #52	@ 0x34
 8004e18:	e7da      	b.n	8004dd0 <_ZN11Screen3View8drawGridEv+0xf0>

08004e1a <_ZN11Screen3View11drawPreviewEv>:

/**
 * @brief	Vẽ pre block
 * @retval	None
 */
void Screen3View::drawPreview() {
 8004e1a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    // Lấy khối tiếp theo
    TetrisEngine::BlockMatrix nextBlock;
    int nextBlockSize;
    uint16_t nextBlockColor;
    engine.getNextBlock(nextBlock, nextBlockSize, nextBlockColor);
 8004e1e:	f500 780a 	add.w	r8, r0, #552	@ 0x228
void Screen3View::drawPreview() {
 8004e22:	b098      	sub	sp, #96	@ 0x60
 8004e24:	4605      	mov	r5, r0
    engine.getNextBlock(nextBlock, nextBlockSize, nextBlockColor);
 8004e26:	f10d 030a 	add.w	r3, sp, #10
 8004e2a:	aa03      	add	r2, sp, #12
 8004e2c:	a908      	add	r1, sp, #32
 8004e2e:	4640      	mov	r0, r8
 8004e30:	f7fb fc86 	bl	8000740 <_ZNK12TetrisEngine12getNextBlockERSt5arrayIS0_IiLj4EELj4EERiRt>
 8004e34:	2600      	movs	r6, #0
 8004e36:	f505 593a 	add.w	r9, r5, #11904	@ 0x2e80
 8004e3a:	f109 0910 	add.w	r9, r9, #16
 8004e3e:	46b2      	mov	sl, r6

    // Đặt lại previewBox trước về trạng thái trong suốt
	for (int i = 0; i < 4; ++i) {
		for (int j = 0; j < 4; ++j) {
 8004e40:	eb09 0406 	add.w	r4, r9, r6
 8004e44:	2700      	movs	r7, #0
			previewBoxes[i][j].setAlpha(0);
			previewBoxes[i][j].invalidate();
 8004e46:	6823      	ldr	r3, [r4, #0]
 8004e48:	f884 a026 	strb.w	sl, [r4, #38]	@ 0x26
 8004e4c:	4620      	mov	r0, r4
 8004e4e:	695b      	ldr	r3, [r3, #20]
		for (int j = 0; j < 4; ++j) {
 8004e50:	3701      	adds	r7, #1
			previewBoxes[i][j].invalidate();
 8004e52:	4798      	blx	r3
		for (int j = 0; j < 4; ++j) {
 8004e54:	2f04      	cmp	r7, #4
 8004e56:	f104 0434 	add.w	r4, r4, #52	@ 0x34
 8004e5a:	d1f4      	bne.n	8004e46 <_ZN11Screen3View11drawPreviewEv+0x2c>
	for (int i = 0; i < 4; ++i) {
 8004e5c:	36d0      	adds	r6, #208	@ 0xd0
 8004e5e:	f5b6 7f50 	cmp.w	r6, #832	@ 0x340
 8004e62:	d1ed      	bne.n	8004e40 <_ZN11Screen3View11drawPreviewEv+0x26>
	// Vẽ preview block
	uint8_t r, g, b;
	convertRGB565ToRGB888(nextBlockColor, r, g, b);

	int minX, maxX, minY, maxY;
	engine.getBlockBounds(nextBlock, minX, maxX, minY, maxY);
 8004e64:	ab07      	add	r3, sp, #28
 8004e66:	9301      	str	r3, [sp, #4]
 8004e68:	ab06      	add	r3, sp, #24
	convertRGB565ToRGB888(nextBlockColor, r, g, b);
 8004e6a:	f8bd 400a 	ldrh.w	r4, [sp, #10]
	engine.getBlockBounds(nextBlock, minX, maxX, minY, maxY);
 8004e6e:	9300      	str	r3, [sp, #0]
 8004e70:	4640      	mov	r0, r8
 8004e72:	ab05      	add	r3, sp, #20
 8004e74:	aa04      	add	r2, sp, #16
 8004e76:	a908      	add	r1, sp, #32
 8004e78:	f7fb fd0b 	bl	8000892 <_ZN12TetrisEngine14getBlockBoundsERKSt5arrayIS0_IiLj4EELj4EERiS5_S5_S5_>
    r = ((rgb565 >> 11) & 0x1F) << 3; // 5-bit red => 8-bit
 8004e7c:	0ae6      	lsrs	r6, r4, #11
    g = ((rgb565 >> 5) & 0x3F) << 2;  // 6-bit green => 8-bit
 8004e7e:	08e7      	lsrs	r7, r4, #3
    b = (rgb565 & 0x1F) << 3;         // 5-bit blue => 8-bit
 8004e80:	00e4      	lsls	r4, r4, #3
    r = ((rgb565 >> 11) & 0x1F) << 3; // 5-bit red => 8-bit
 8004e82:	00f6      	lsls	r6, r6, #3
    g = ((rgb565 >> 5) & 0x3F) << 2;  // 6-bit green => 8-bit
 8004e84:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
    b = (rgb565 & 0x1F) << 3;         // 5-bit blue => 8-bit
 8004e88:	b2e4      	uxtb	r4, r4

	for (int i = 0; i < 4; i++) {
 8004e8a:	f04f 0800 	mov.w	r8, #0
		for (int j = 0; j < 4; j++) {
 8004e8e:	ab08      	add	r3, sp, #32
 8004e90:	eb03 1a08 	add.w	sl, r3, r8, lsl #4
 8004e94:	f04f 0900 	mov.w	r9, #0
			if (nextBlock[i][j]) {
 8004e98:	f85a 3b04 	ldr.w	r3, [sl], #4
 8004e9c:	b333      	cbz	r3, 8004eec <_ZN11Screen3View11drawPreviewEv+0xd2>
				int px = j - minX;
 8004e9e:	9b04      	ldr	r3, [sp, #16]
 8004ea0:	eba9 0c03 	sub.w	ip, r9, r3
				int py = i - minY;
 8004ea4:	9b06      	ldr	r3, [sp, #24]
 8004ea6:	eba8 0303 	sub.w	r3, r8, r3
				if (px < 4 && py < 4 && px >= 0 && py >= 0) {
 8004eaa:	ea4c 0203 	orr.w	r2, ip, r3
 8004eae:	2a03      	cmp	r2, #3
 8004eb0:	d81c      	bhi.n	8004eec <_ZN11Screen3View11drawPreviewEv+0xd2>
        color = newColor;
 8004eb2:	2234      	movs	r2, #52	@ 0x34
 8004eb4:	fb02 fc0c 	mul.w	ip, r2, ip
 8004eb8:	22d0      	movs	r2, #208	@ 0xd0
 8004eba:	4353      	muls	r3, r2
 8004ebc:	023a      	lsls	r2, r7, #8
 8004ebe:	eb0c 0103 	add.w	r1, ip, r3
 8004ec2:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
 8004ec6:	4429      	add	r1, r5
 8004ec8:	f642 60b8 	movw	r0, #11960	@ 0x2eb8
 8004ecc:	4322      	orrs	r2, r4
 8004ece:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8004ed2:	500a      	str	r2, [r1, r0]
        alpha = newAlpha;
 8004ed4:	f642 62b6 	movw	r2, #11958	@ 0x2eb6
 8004ed8:	20ff      	movs	r0, #255	@ 0xff
 8004eda:	5488      	strb	r0, [r1, r2]
					previewBoxes[py][px].setColor(Color::getColorFromRGB(r, g, b));
					previewBoxes[py][px].setAlpha(255);
					previewBoxes[py][px].invalidate();
 8004edc:	f642 6290 	movw	r2, #11920	@ 0x2e90
 8004ee0:	1898      	adds	r0, r3, r2
 8004ee2:	588b      	ldr	r3, [r1, r2]
 8004ee4:	4460      	add	r0, ip
 8004ee6:	695b      	ldr	r3, [r3, #20]
 8004ee8:	4428      	add	r0, r5
 8004eea:	4798      	blx	r3
		for (int j = 0; j < 4; j++) {
 8004eec:	f109 0901 	add.w	r9, r9, #1
 8004ef0:	f1b9 0f04 	cmp.w	r9, #4
 8004ef4:	d1d0      	bne.n	8004e98 <_ZN11Screen3View11drawPreviewEv+0x7e>
	for (int i = 0; i < 4; i++) {
 8004ef6:	f108 0801 	add.w	r8, r8, #1
 8004efa:	f1b8 0f04 	cmp.w	r8, #4
 8004efe:	d1c6      	bne.n	8004e8e <_ZN11Screen3View11drawPreviewEv+0x74>
				}
			}
		}
	}
}
 8004f00:	b018      	add	sp, #96	@ 0x60
 8004f02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08004f08 <_ZN11Screen3View15handleTickEventEv>:
{
 8004f08:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    if (++tickCount % level == 0) {
 8004f0c:	f500 5640 	add.w	r6, r0, #12288	@ 0x3000
{
 8004f10:	4604      	mov	r4, r0
    if (++tickCount % level == 0) {
 8004f12:	f8d6 51d0 	ldr.w	r5, [r6, #464]	@ 0x1d0
 8004f16:	f896 31d5 	ldrb.w	r3, [r6, #469]	@ 0x1d5
 8004f1a:	3501      	adds	r5, #1
 8004f1c:	f8c6 51d0 	str.w	r5, [r6, #464]	@ 0x1d0
 8004f20:	fb95 f2f3 	sdiv	r2, r5, r3
 8004f24:	fb03 5512 	mls	r5, r3, r2, r5
 8004f28:	2d00      	cmp	r5, #0
 8004f2a:	f040 80c0 	bne.w	80050ae <_ZN11Screen3View15handleTickEventEv+0x1a6>
		if(engine.isGameOver()) {	//kiểm tra gameover
 8004f2e:	f890 8594 	ldrb.w	r8, [r0, #1428]	@ 0x594
 8004f32:	f1b8 0f00 	cmp.w	r8, #0
 8004f36:	d161      	bne.n	8004ffc <_ZN11Screen3View15handleTickEventEv+0xf4>
    	if(osMessageQueueGetCount(movingQueueHandle) > 0){
 8004f38:	4f5e      	ldr	r7, [pc, #376]	@ (80050b4 <_ZN11Screen3View15handleTickEventEv+0x1ac>)
 8004f3a:	6838      	ldr	r0, [r7, #0]
 8004f3c:	f003 fc68 	bl	8008810 <osMessageQueueGetCount>
 8004f40:	f504 750a 	add.w	r5, r4, #552	@ 0x228
 8004f44:	b1b8      	cbz	r0, 8004f76 <_ZN11Screen3View15handleTickEventEv+0x6e>
    		osMessageQueueGet(movingQueueHandle, &res, NULL, 10);
 8004f46:	230a      	movs	r3, #10
 8004f48:	6838      	ldr	r0, [r7, #0]
 8004f4a:	4642      	mov	r2, r8
 8004f4c:	a901      	add	r1, sp, #4
 8004f4e:	f003 fc2f 	bl	80087b0 <osMessageQueueGet>
    		if(res == 'L') engine.moveLeft();
 8004f52:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8004f56:	2b52      	cmp	r3, #82	@ 0x52
 8004f58:	f000 80a1 	beq.w	800509e <_ZN11Screen3View15handleTickEventEv+0x196>
 8004f5c:	f200 8094 	bhi.w	8005088 <_ZN11Screen3View15handleTickEventEv+0x180>
 8004f60:	2b44      	cmp	r3, #68	@ 0x44
 8004f62:	f000 80a0 	beq.w	80050a6 <_ZN11Screen3View15handleTickEventEv+0x19e>
 8004f66:	2b4c      	cmp	r3, #76	@ 0x4c
 8004f68:	f000 8095 	beq.w	8005096 <_ZN11Screen3View15handleTickEventEv+0x18e>
    		osThreadNew(SingleBeepTask, NULL, NULL);
 8004f6c:	2200      	movs	r2, #0
 8004f6e:	4852      	ldr	r0, [pc, #328]	@ (80050b8 <_ZN11Screen3View15handleTickEventEv+0x1b0>)
 8004f70:	4611      	mov	r1, r2
 8004f72:	f003 fa2c 	bl	80083ce <osThreadNew>
        engine.update();
 8004f76:	4628      	mov	r0, r5
 8004f78:	f7fb fd63 	bl	8000a42 <_ZN12TetrisEngine6updateEv>
        Unicode::snprintf(scoreBuffer, SCORE_SIZE, "%d", engine.getScore());
 8004f7c:	f8d4 3598 	ldr.w	r3, [r4, #1432]	@ 0x598
 8004f80:	4a4e      	ldr	r2, [pc, #312]	@ (80050bc <_ZN11Screen3View15handleTickEventEv+0x1b4>)
 8004f82:	210a      	movs	r1, #10
 8004f84:	f504 7001 	add.w	r0, r4, #516	@ 0x204
 8004f88:	f00f fa90 	bl	80144ac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        score.invalidate();
 8004f8c:	f504 70c6 	add.w	r0, r4, #396	@ 0x18c
 8004f90:	f00c ff5a 	bl	8011e48 <_ZNK8touchgfx8Drawable10invalidateEv>
        presenter->setHighestScore(engine.getScore());
 8004f94:	f8d4 1598 	ldr.w	r1, [r4, #1432]	@ 0x598
 8004f98:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8004f9a:	f7ff fe5a 	bl	8004c52 <_ZN16Screen3Presenter15setHighestScoreEi>
        if(engine.getTakeScore()){	//nếu ghi được điểm -> tạo tiếng beep - beep
 8004f9e:	f894 359c 	ldrb.w	r3, [r4, #1436]	@ 0x59c
 8004fa2:	b13b      	cbz	r3, 8004fb4 <_ZN11Screen3View15handleTickEventEv+0xac>
        	osThreadNew(DoubleBeepTask, NULL, NULL);
 8004fa4:	2200      	movs	r2, #0
 8004fa6:	4846      	ldr	r0, [pc, #280]	@ (80050c0 <_ZN11Screen3View15handleTickEventEv+0x1b8>)
 8004fa8:	4611      	mov	r1, r2
 8004faa:	f003 fa10 	bl	80083ce <osThreadNew>
    int getScore() const { return score; } 
    void setTakeScore(bool param) { takeScore = param; }
 8004fae:	2300      	movs	r3, #0
 8004fb0:	f884 359c 	strb.w	r3, [r4, #1436]	@ 0x59c
        if(engine.isGameOver() && musicGameOver == false){ //game over -> bật nhạc game over + ghi điểm vào flash
 8004fb4:	f894 3594 	ldrb.w	r3, [r4, #1428]	@ 0x594
 8004fb8:	b1bb      	cbz	r3, 8004fea <_ZN11Screen3View15handleTickEventEv+0xe2>
 8004fba:	f896 21d4 	ldrb.w	r2, [r6, #468]	@ 0x1d4
 8004fbe:	b9a2      	cbnz	r2, 8004fea <_ZN11Screen3View15handleTickEventEv+0xe2>
        	musicGameOver = true;
 8004fc0:	2501      	movs	r5, #1
        	osThreadNew(GameOverTask, NULL, NULL);
 8004fc2:	4611      	mov	r1, r2
 8004fc4:	483f      	ldr	r0, [pc, #252]	@ (80050c4 <_ZN11Screen3View15handleTickEventEv+0x1bc>)
        	musicGameOver = true;
 8004fc6:	f886 51d4 	strb.w	r5, [r6, #468]	@ 0x1d4
        	osThreadNew(GameOverTask, NULL, NULL);
 8004fca:	f003 fa00 	bl	80083ce <osThreadNew>
        	uint32_t tmp = engine.getScore();
 8004fce:	f8d4 3598 	ldr.w	r3, [r4, #1432]	@ 0x598
        	if((uint32_t)presenter->getHighestScore() <= tmp){
 8004fd2:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
        	uint32_t tmp = engine.getScore();
 8004fd4:	9301      	str	r3, [sp, #4]
        	if((uint32_t)presenter->getHighestScore() <= tmp){
 8004fd6:	f7ff fe39 	bl	8004c4c <_ZNK16Screen3Presenter15getHighestScoreEv>
 8004fda:	9b01      	ldr	r3, [sp, #4]
 8004fdc:	4298      	cmp	r0, r3
 8004fde:	d804      	bhi.n	8004fea <_ZN11Screen3View15handleTickEventEv+0xe2>
        		Flash_Write_Data(0x081E0000, &tmp, 1);
 8004fe0:	4839      	ldr	r0, [pc, #228]	@ (80050c8 <_ZN11Screen3View15handleTickEventEv+0x1c0>)
 8004fe2:	462a      	mov	r2, r5
 8004fe4:	a901      	add	r1, sp, #4
 8004fe6:	f7fc fae3 	bl	80015b0 <Flash_Write_Data>
        drawGrid();
 8004fea:	4620      	mov	r0, r4
 8004fec:	f7ff fe78 	bl	8004ce0 <_ZN11Screen3View8drawGridEv>
        drawPreview();
 8004ff0:	4620      	mov	r0, r4
}
 8004ff2:	b003      	add	sp, #12
 8004ff4:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
        drawPreview();
 8004ff8:	f7ff bf0f 	b.w	8004e1a <_ZN11Screen3View11drawPreviewEv>
        visible = vis;
 8004ffc:	46a8      	mov	r8, r5
			for(int y = 0; y < GRID_HEIGHT; y++) {
 8004ffe:	f642 09a0 	movw	r9, #10400	@ 0x28a0
				for(int x = 0; x < GRID_WIDTH; x++) {
 8005002:	192e      	adds	r6, r5, r4
 8005004:	2700      	movs	r7, #0
					colBoxes[y][x].invalidate();
 8005006:	f8d6 35f0 	ldr.w	r3, [r6, #1520]	@ 0x5f0
 800500a:	f886 8615 	strb.w	r8, [r6, #1557]	@ 0x615
 800500e:	f506 60be 	add.w	r0, r6, #1520	@ 0x5f0
 8005012:	695b      	ldr	r3, [r3, #20]
				for(int x = 0; x < GRID_WIDTH; x++) {
 8005014:	3701      	adds	r7, #1
					colBoxes[y][x].invalidate();
 8005016:	4798      	blx	r3
				for(int x = 0; x < GRID_WIDTH; x++) {
 8005018:	2f0a      	cmp	r7, #10
 800501a:	f106 0634 	add.w	r6, r6, #52	@ 0x34
 800501e:	d1f2      	bne.n	8005006 <_ZN11Screen3View15handleTickEventEv+0xfe>
			for(int y = 0; y < GRID_HEIGHT; y++) {
 8005020:	f505 7502 	add.w	r5, r5, #520	@ 0x208
 8005024:	454d      	cmp	r5, r9
 8005026:	d1ec      	bne.n	8005002 <_ZN11Screen3View15handleTickEventEv+0xfa>
 8005028:	2600      	movs	r6, #0
 800502a:	f504 593a 	add.w	r9, r4, #11904	@ 0x2e80
 800502e:	f109 0910 	add.w	r9, r9, #16
 8005032:	4637      	mov	r7, r6
				for (int x = 0; x < 4; x++) {
 8005034:	eb09 0506 	add.w	r5, r9, r6
 8005038:	f04f 0800 	mov.w	r8, #0
					previewBoxes[y][x].invalidate();
 800503c:	682b      	ldr	r3, [r5, #0]
 800503e:	f885 7025 	strb.w	r7, [r5, #37]	@ 0x25
 8005042:	4628      	mov	r0, r5
 8005044:	695b      	ldr	r3, [r3, #20]
				for (int x = 0; x < 4; x++) {
 8005046:	f108 0801 	add.w	r8, r8, #1
					previewBoxes[y][x].invalidate();
 800504a:	4798      	blx	r3
				for (int x = 0; x < 4; x++) {
 800504c:	f1b8 0f04 	cmp.w	r8, #4
 8005050:	f105 0534 	add.w	r5, r5, #52	@ 0x34
 8005054:	d1f2      	bne.n	800503c <_ZN11Screen3View15handleTickEventEv+0x134>
			for (int y = 0; y < 4; y++) {
 8005056:	36d0      	adds	r6, #208	@ 0xd0
 8005058:	f5b6 7f50 	cmp.w	r6, #832	@ 0x340
 800505c:	d1ea      	bne.n	8005034 <_ZN11Screen3View15handleTickEventEv+0x12c>
 800505e:	2301      	movs	r3, #1
			image2.invalidate();
 8005060:	f504 70ec 	add.w	r0, r4, #472	@ 0x1d8
 8005064:	f884 7121 	strb.w	r7, [r4, #289]	@ 0x121
 8005068:	f884 7169 	strb.w	r7, [r4, #361]	@ 0x169
 800506c:	f884 71b1 	strb.w	r7, [r4, #433]	@ 0x1b1
 8005070:	f884 31fd 	strb.w	r3, [r4, #509]	@ 0x1fd
 8005074:	f00c fee8 	bl	8011e48 <_ZNK8touchgfx8Drawable10invalidateEv>
			presenter->setHighestScore(engine.getScore());	//cập nhật highest score
 8005078:	f8d4 1598 	ldr.w	r1, [r4, #1432]	@ 0x598
 800507c:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
}
 800507e:	b003      	add	sp, #12
 8005080:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
			presenter->setHighestScore(engine.getScore());	//cập nhật highest score
 8005084:	f7ff bde5 	b.w	8004c52 <_ZN16Screen3Presenter15setHighestScoreEi>
 8005088:	2b54      	cmp	r3, #84	@ 0x54
 800508a:	f47f af6f 	bne.w	8004f6c <_ZN11Screen3View15handleTickEventEv+0x64>
    		else if(res == 'T') engine.rotate();
 800508e:	4628      	mov	r0, r5
 8005090:	f7fb fd3b 	bl	8000b0a <_ZN12TetrisEngine6rotateEv>
 8005094:	e76a      	b.n	8004f6c <_ZN11Screen3View15handleTickEventEv+0x64>
    		if(res == 'L') engine.moveLeft();
 8005096:	4628      	mov	r0, r5
 8005098:	f7fb fcf5 	bl	8000a86 <_ZN12TetrisEngine8moveLeftEv>
 800509c:	e766      	b.n	8004f6c <_ZN11Screen3View15handleTickEventEv+0x64>
    		else if(res == 'R') engine.moveRight();
 800509e:	4628      	mov	r0, r5
 80050a0:	f7fb fd04 	bl	8000aac <_ZN12TetrisEngine9moveRightEv>
 80050a4:	e762      	b.n	8004f6c <_ZN11Screen3View15handleTickEventEv+0x64>
    		else if(res == 'D') engine.drop();
 80050a6:	4628      	mov	r0, r5
 80050a8:	f7fb fd13 	bl	8000ad2 <_ZN12TetrisEngine4dropEv>
 80050ac:	e75e      	b.n	8004f6c <_ZN11Screen3View15handleTickEventEv+0x64>
}
 80050ae:	b003      	add	sp, #12
 80050b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80050b4:	200003c0 	.word	0x200003c0
 80050b8:	08000e2d 	.word	0x08000e2d
 80050bc:	08026712 	.word	0x08026712
 80050c0:	08000e61 	.word	0x08000e61
 80050c4:	08000f01 	.word	0x08000f01
 80050c8:	081e0000 	.word	0x081e0000

080050cc <_ZN11Screen3ViewC1Ev>:
Screen3View::Screen3View()
 80050cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80050d0:	4604      	mov	r4, r0
 80050d2:	b089      	sub	sp, #36	@ 0x24
 80050d4:	f7ff f94c 	bl	8004370 <_ZN15Screen3ViewBaseC1Ev>
 80050d8:	f504 553a 	add.w	r5, r4, #11904	@ 0x2e80
 80050dc:	4b6b      	ldr	r3, [pc, #428]	@ (800528c <_ZN11Screen3ViewC1Ev+0x1c0>)
 80050de:	6023      	str	r3, [r4, #0]
 80050e0:	f504 700a 	add.w	r0, r4, #552	@ 0x228
 80050e4:	3510      	adds	r5, #16
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
 80050e6:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 800529c <_ZN11Screen3ViewC1Ev+0x1d0>
 80050ea:	f7fb fb9e 	bl	800082a <_ZN12TetrisEngineC1Ev>
 80050ee:	f504 67be 	add.w	r7, r4, #1520	@ 0x5f0
 80050f2:	9503      	str	r5, [sp, #12]
 80050f4:	f04f 0900 	mov.w	r9, #0
 80050f8:	463e      	mov	r6, r7
 80050fa:	4630      	mov	r0, r6
 80050fc:	f7ff fdda 	bl	8004cb4 <_ZN8touchgfx3BoxC1Ev>
 8005100:	3634      	adds	r6, #52	@ 0x34
 8005102:	f507 7302 	add.w	r3, r7, #520	@ 0x208
 8005106:	f846 8c34 	str.w	r8, [r6, #-52]
 800510a:	f846 9c08 	str.w	r9, [r6, #-8]
 800510e:	f826 9c04 	strh.w	r9, [r6, #-4]
 8005112:	429e      	cmp	r6, r3
 8005114:	d1f1      	bne.n	80050fa <_ZN11Screen3ViewC1Ev+0x2e>
 8005116:	42ae      	cmp	r6, r5
 8005118:	4637      	mov	r7, r6
 800511a:	d1ed      	bne.n	80050f8 <_ZN11Screen3ViewC1Ev+0x2c>
 800511c:	f504 5647 	add.w	r6, r4, #12736	@ 0x31c0
 8005120:	3610      	adds	r6, #16
 8005122:	2700      	movs	r7, #0
 8005124:	f105 09d0 	add.w	r9, r5, #208	@ 0xd0
 8005128:	4628      	mov	r0, r5
 800512a:	f7ff fdc3 	bl	8004cb4 <_ZN8touchgfx3BoxC1Ev>
 800512e:	3534      	adds	r5, #52	@ 0x34
 8005130:	f845 8c34 	str.w	r8, [r5, #-52]
 8005134:	f845 7c08 	str.w	r7, [r5, #-8]
 8005138:	f825 7c04 	strh.w	r7, [r5, #-4]
 800513c:	454d      	cmp	r5, r9
 800513e:	d1f3      	bne.n	8005128 <_ZN11Screen3ViewC1Ev+0x5c>
 8005140:	42b5      	cmp	r5, r6
 8005142:	d1ef      	bne.n	8005124 <_ZN11Screen3ViewC1Ev+0x58>
    for (int y = 0; y < GRID_HEIGHT; y++) {
 8005144:	2700      	movs	r7, #0
 8005146:	f44f 7a02 	mov.w	sl, #520	@ 0x208
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 800514a:	f04f 4b7f 	mov.w	fp, #4278190080	@ 0xff000000
            colBoxes[y][x].setPosition(px, py, 16, 16);
 800514e:	013a      	lsls	r2, r7, #4
 8005150:	b212      	sxth	r2, r2
 8005152:	fb0a 4607 	mla	r6, sl, r7, r4
 8005156:	2500      	movs	r5, #0
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8005158:	f04f 0901 	mov.w	r9, #1
 800515c:	2310      	movs	r3, #16
 800515e:	f506 60be 	add.w	r0, r6, #1520	@ 0x5f0
        borderColor = colorBorder;
 8005162:	f8c6 b61c 	str.w	fp, [r6, #1564]	@ 0x61c
        borderSize = size;
 8005166:	f8a6 9620 	strh.w	r9, [r6, #1568]	@ 0x620
 800516a:	b229      	sxth	r1, r5
 800516c:	9300      	str	r3, [sp, #0]
 800516e:	9205      	str	r2, [sp, #20]
 8005170:	9004      	str	r0, [sp, #16]
 8005172:	f7fe fcd5 	bl	8003b20 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005176:	9804      	ldr	r0, [sp, #16]
 8005178:	f886 9615 	strb.w	r9, [r6, #1557]	@ 0x615
 800517c:	f104 0804 	add.w	r8, r4, #4
        for (int x = 0; x < GRID_WIDTH; x++) {
 8005180:	3510      	adds	r5, #16
 8005182:	4601      	mov	r1, r0
 8005184:	b2ad      	uxth	r5, r5
 8005186:	4640      	mov	r0, r8
 8005188:	f005 fc42 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800518c:	2da0      	cmp	r5, #160	@ 0xa0
 800518e:	9a05      	ldr	r2, [sp, #20]
 8005190:	f106 0634 	add.w	r6, r6, #52	@ 0x34
 8005194:	d1e2      	bne.n	800515c <_ZN11Screen3ViewC1Ev+0x90>
    for (int y = 0; y < GRID_HEIGHT; y++) {
 8005196:	3701      	adds	r7, #1
 8005198:	2f14      	cmp	r7, #20
 800519a:	d1d8      	bne.n	800514e <_ZN11Screen3ViewC1Ev+0x82>
 800519c:	2700      	movs	r7, #0
 800519e:	f04f 095a 	mov.w	r9, #90	@ 0x5a
 80051a2:	46ba      	mov	sl, r7
 80051a4:	f04f 0b01 	mov.w	fp, #1
		for (int x = 0; x < 4; x++) {
 80051a8:	9b03      	ldr	r3, [sp, #12]
			previewBoxes[y][x].setPosition(px, py, 8, 8);
 80051aa:	fa0f f289 	sxth.w	r2, r9
 80051ae:	19dd      	adds	r5, r3, r7
 80051b0:	26c8      	movs	r6, #200	@ 0xc8
 80051b2:	2308      	movs	r3, #8
 80051b4:	f885 a026 	strb.w	sl, [r5, #38]	@ 0x26
 80051b8:	f8a5 b030 	strh.w	fp, [r5, #48]	@ 0x30
 80051bc:	b231      	sxth	r1, r6
 80051be:	4628      	mov	r0, r5
 80051c0:	9300      	str	r3, [sp, #0]
		for (int x = 0; x < 4; x++) {
 80051c2:	3608      	adds	r6, #8
			previewBoxes[y][x].setPosition(px, py, 8, 8);
 80051c4:	9204      	str	r2, [sp, #16]
		for (int x = 0; x < 4; x++) {
 80051c6:	b2b6      	uxth	r6, r6
			previewBoxes[y][x].setPosition(px, py, 8, 8);
 80051c8:	f7fe fcaa 	bl	8003b20 <_ZN8touchgfx8Drawable11setPositionEssss>
 80051cc:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 80051d0:	4629      	mov	r1, r5
 80051d2:	4640      	mov	r0, r8
 80051d4:	f005 fc1c 	bl	800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
		for (int x = 0; x < 4; x++) {
 80051d8:	2ee8      	cmp	r6, #232	@ 0xe8
 80051da:	9a04      	ldr	r2, [sp, #16]
 80051dc:	f105 0534 	add.w	r5, r5, #52	@ 0x34
 80051e0:	d1e7      	bne.n	80051b2 <_ZN11Screen3ViewC1Ev+0xe6>
	for (int y = 0; y < 4; y++) {
 80051e2:	37d0      	adds	r7, #208	@ 0xd0
 80051e4:	f109 0908 	add.w	r9, r9, #8
 80051e8:	f5b7 7f50 	cmp.w	r7, #832	@ 0x340
 80051ec:	fa1f f989 	uxth.w	r9, r9
 80051f0:	d1da      	bne.n	80051a8 <_ZN11Screen3ViewC1Ev+0xdc>
	currScreen = 3;
 80051f2:	4b27      	ldr	r3, [pc, #156]	@ (8005290 <_ZN11Screen3ViewC1Ev+0x1c4>)
 80051f4:	f884 a1fd 	strb.w	sl, [r4, #509]	@ 0x1fd
	musicGameOver = false;
 80051f8:	f504 5540 	add.w	r5, r4, #12288	@ 0x3000
	currScreen = 3;
 80051fc:	2203      	movs	r2, #3
 80051fe:	701a      	strb	r2, [r3, #0]
	musicGameOver = false;
 8005200:	f885 a1d4 	strb.w	sl, [r5, #468]	@ 0x1d4
    DF_SendCommand(0x0F, 0x02, 0x01);
 8005204:	2201      	movs	r2, #1
 8005206:	2102      	movs	r1, #2
 8005208:	200f      	movs	r0, #15
 800520a:	f7fb fe4d 	bl	8000ea8 <DF_SendCommand>
    while(osMessageQueueGetCount(movingQueueHandle) > 0){
 800520e:	4e21      	ldr	r6, [pc, #132]	@ (8005294 <_ZN11Screen3ViewC1Ev+0x1c8>)
    char res = 'a';
 8005210:	2361      	movs	r3, #97	@ 0x61
 8005212:	f88d 301f 	strb.w	r3, [sp, #31]
    while(osMessageQueueGetCount(movingQueueHandle) > 0){
 8005216:	6830      	ldr	r0, [r6, #0]
 8005218:	f003 fafa 	bl	8008810 <osMessageQueueGetCount>
 800521c:	b9f0      	cbnz	r0, 800525c <_ZN11Screen3ViewC1Ev+0x190>
    level = 20;
 800521e:	2314      	movs	r3, #20
    while(osMessageQueueGetCount(levelQueueHandle) > 1){
 8005220:	4e1d      	ldr	r6, [pc, #116]	@ (8005298 <_ZN11Screen3ViewC1Ev+0x1cc>)
    level = 20;
 8005222:	f885 31d5 	strb.w	r3, [r5, #469]	@ 0x1d5
    while(osMessageQueueGetCount(levelQueueHandle) > 1){
 8005226:	6830      	ldr	r0, [r6, #0]
 8005228:	f003 faf2 	bl	8008810 <osMessageQueueGetCount>
 800522c:	2801      	cmp	r0, #1
 800522e:	d81d      	bhi.n	800526c <_ZN11Screen3ViewC1Ev+0x1a0>
    if(osMessageQueueGetCount(levelQueueHandle) > 0){
 8005230:	6830      	ldr	r0, [r6, #0]
 8005232:	f003 faed 	bl	8008810 <osMessageQueueGetCount>
 8005236:	b130      	cbz	r0, 8005246 <_ZN11Screen3ViewC1Ev+0x17a>
    	osMessageQueueGet(levelQueueHandle, &res, NULL, 10);
 8005238:	6830      	ldr	r0, [r6, #0]
 800523a:	230a      	movs	r3, #10
 800523c:	2200      	movs	r2, #0
 800523e:	f10d 011f 	add.w	r1, sp, #31
 8005242:	f003 fab5 	bl	80087b0 <osMessageQueueGet>
    if(res == 'e') level = 20;
 8005246:	f89d 301f 	ldrb.w	r3, [sp, #31]
 800524a:	2b65      	cmp	r3, #101	@ 0x65
 800524c:	d116      	bne.n	800527c <_ZN11Screen3ViewC1Ev+0x1b0>
 800524e:	2314      	movs	r3, #20
    else if(res == 'h') level = 10;
 8005250:	f885 31d5 	strb.w	r3, [r5, #469]	@ 0x1d5
}
 8005254:	4620      	mov	r0, r4
 8005256:	b009      	add	sp, #36	@ 0x24
 8005258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    	osMessageQueueGet(movingQueueHandle, &res, NULL, 10);
 800525c:	6830      	ldr	r0, [r6, #0]
 800525e:	230a      	movs	r3, #10
 8005260:	2200      	movs	r2, #0
 8005262:	f10d 011f 	add.w	r1, sp, #31
 8005266:	f003 faa3 	bl	80087b0 <osMessageQueueGet>
 800526a:	e7d4      	b.n	8005216 <_ZN11Screen3ViewC1Ev+0x14a>
    	osMessageQueueGet(levelQueueHandle, &res, NULL, 10);
 800526c:	6830      	ldr	r0, [r6, #0]
 800526e:	230a      	movs	r3, #10
 8005270:	2200      	movs	r2, #0
 8005272:	f10d 011f 	add.w	r1, sp, #31
 8005276:	f003 fa9b 	bl	80087b0 <osMessageQueueGet>
 800527a:	e7d4      	b.n	8005226 <_ZN11Screen3ViewC1Ev+0x15a>
    else if(res == 'm') level = 15;
 800527c:	2b6d      	cmp	r3, #109	@ 0x6d
 800527e:	d101      	bne.n	8005284 <_ZN11Screen3ViewC1Ev+0x1b8>
 8005280:	230f      	movs	r3, #15
 8005282:	e7e5      	b.n	8005250 <_ZN11Screen3ViewC1Ev+0x184>
    else if(res == 'h') level = 10;
 8005284:	2b68      	cmp	r3, #104	@ 0x68
 8005286:	d1e5      	bne.n	8005254 <_ZN11Screen3ViewC1Ev+0x188>
 8005288:	230a      	movs	r3, #10
 800528a:	e7e1      	b.n	8005250 <_ZN11Screen3ViewC1Ev+0x184>
 800528c:	08027528 	.word	0x08027528
 8005290:	20000010 	.word	0x20000010
 8005294:	200003c0 	.word	0x200003c0
 8005298:	200003bc 	.word	0x200003bc
 800529c:	0802790c 	.word	0x0802790c

080052a0 <_ZN11Screen3View11setupScreenEv>:
{
 80052a0:	b510      	push	{r4, lr}
 80052a2:	4604      	mov	r4, r0
    Screen3ViewBase::setupScreen();
 80052a4:	f7ff f814 	bl	80042d0 <_ZN15Screen3ViewBase11setupScreenEv>
	engine.init();
 80052a8:	f504 700a 	add.w	r0, r4, #552	@ 0x228
 80052ac:	f7fb fa9b 	bl	80007e6 <_ZN12TetrisEngine4initEv>
	tickCount = 0;
 80052b0:	f504 5240 	add.w	r2, r4, #12288	@ 0x3000
 80052b4:	2300      	movs	r3, #0
 80052b6:	f8c2 31d0 	str.w	r3, [r2, #464]	@ 0x1d0
	image2.invalidate();
 80052ba:	f504 70ec 	add.w	r0, r4, #472	@ 0x1d8
 80052be:	f884 31fd 	strb.w	r3, [r4, #509]	@ 0x1fd
}
 80052c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	image2.invalidate();
 80052c6:	f00c bdbf 	b.w	8011e48 <_ZNK8touchgfx8Drawable10invalidateEv>

080052ca <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80052ca:	20f0      	movs	r0, #240	@ 0xf0
 80052cc:	4770      	bx	lr

080052ce <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80052ce:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 80052d2:	4770      	bx	lr

080052d4 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80052d4:	2029      	movs	r0, #41	@ 0x29
 80052d6:	f7fb bd59 	b.w	8000d8c <LCD_IO_WriteReg>

080052da <ili9341_DisplayOff>:
 80052da:	2028      	movs	r0, #40	@ 0x28
 80052dc:	f7fb bd56 	b.w	8000d8c <LCD_IO_WriteReg>

080052e0 <ili9341_Init>:
{
 80052e0:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80052e2:	f7fb fd27 	bl	8000d34 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80052e6:	20ca      	movs	r0, #202	@ 0xca
 80052e8:	f7fb fd50 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80052ec:	20c3      	movs	r0, #195	@ 0xc3
 80052ee:	f7fb fd31 	bl	8000d54 <LCD_IO_WriteData>
 80052f2:	2008      	movs	r0, #8
 80052f4:	f7fb fd2e 	bl	8000d54 <LCD_IO_WriteData>
 80052f8:	2050      	movs	r0, #80	@ 0x50
 80052fa:	f7fb fd2b 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80052fe:	20cf      	movs	r0, #207	@ 0xcf
 8005300:	f7fb fd44 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005304:	2000      	movs	r0, #0
 8005306:	f7fb fd25 	bl	8000d54 <LCD_IO_WriteData>
 800530a:	20c1      	movs	r0, #193	@ 0xc1
 800530c:	f7fb fd22 	bl	8000d54 <LCD_IO_WriteData>
 8005310:	2030      	movs	r0, #48	@ 0x30
 8005312:	f7fb fd1f 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005316:	20ed      	movs	r0, #237	@ 0xed
 8005318:	f7fb fd38 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800531c:	2064      	movs	r0, #100	@ 0x64
 800531e:	f7fb fd19 	bl	8000d54 <LCD_IO_WriteData>
 8005322:	2003      	movs	r0, #3
 8005324:	f7fb fd16 	bl	8000d54 <LCD_IO_WriteData>
 8005328:	2012      	movs	r0, #18
 800532a:	f7fb fd13 	bl	8000d54 <LCD_IO_WriteData>
 800532e:	2081      	movs	r0, #129	@ 0x81
 8005330:	f7fb fd10 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005334:	20e8      	movs	r0, #232	@ 0xe8
 8005336:	f7fb fd29 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800533a:	2085      	movs	r0, #133	@ 0x85
 800533c:	f7fb fd0a 	bl	8000d54 <LCD_IO_WriteData>
 8005340:	2000      	movs	r0, #0
 8005342:	f7fb fd07 	bl	8000d54 <LCD_IO_WriteData>
 8005346:	2078      	movs	r0, #120	@ 0x78
 8005348:	f7fb fd04 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800534c:	20cb      	movs	r0, #203	@ 0xcb
 800534e:	f7fb fd1d 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005352:	2039      	movs	r0, #57	@ 0x39
 8005354:	f7fb fcfe 	bl	8000d54 <LCD_IO_WriteData>
 8005358:	202c      	movs	r0, #44	@ 0x2c
 800535a:	f7fb fcfb 	bl	8000d54 <LCD_IO_WriteData>
 800535e:	2000      	movs	r0, #0
 8005360:	f7fb fcf8 	bl	8000d54 <LCD_IO_WriteData>
 8005364:	2034      	movs	r0, #52	@ 0x34
 8005366:	f7fb fcf5 	bl	8000d54 <LCD_IO_WriteData>
 800536a:	2002      	movs	r0, #2
 800536c:	f7fb fcf2 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005370:	20f7      	movs	r0, #247	@ 0xf7
 8005372:	f7fb fd0b 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005376:	2020      	movs	r0, #32
 8005378:	f7fb fcec 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800537c:	20ea      	movs	r0, #234	@ 0xea
 800537e:	f7fb fd05 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005382:	2000      	movs	r0, #0
 8005384:	f7fb fce6 	bl	8000d54 <LCD_IO_WriteData>
 8005388:	2000      	movs	r0, #0
 800538a:	f7fb fce3 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800538e:	20b1      	movs	r0, #177	@ 0xb1
 8005390:	f7fb fcfc 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005394:	2000      	movs	r0, #0
 8005396:	f7fb fcdd 	bl	8000d54 <LCD_IO_WriteData>
 800539a:	201b      	movs	r0, #27
 800539c:	f7fb fcda 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80053a0:	20b6      	movs	r0, #182	@ 0xb6
 80053a2:	f7fb fcf3 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80053a6:	200a      	movs	r0, #10
 80053a8:	f7fb fcd4 	bl	8000d54 <LCD_IO_WriteData>
 80053ac:	20a2      	movs	r0, #162	@ 0xa2
 80053ae:	f7fb fcd1 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80053b2:	20c0      	movs	r0, #192	@ 0xc0
 80053b4:	f7fb fcea 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80053b8:	2010      	movs	r0, #16
 80053ba:	f7fb fccb 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80053be:	20c1      	movs	r0, #193	@ 0xc1
 80053c0:	f7fb fce4 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80053c4:	2010      	movs	r0, #16
 80053c6:	f7fb fcc5 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80053ca:	20c5      	movs	r0, #197	@ 0xc5
 80053cc:	f7fb fcde 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80053d0:	2045      	movs	r0, #69	@ 0x45
 80053d2:	f7fb fcbf 	bl	8000d54 <LCD_IO_WriteData>
 80053d6:	2015      	movs	r0, #21
 80053d8:	f7fb fcbc 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80053dc:	20c7      	movs	r0, #199	@ 0xc7
 80053de:	f7fb fcd5 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80053e2:	2090      	movs	r0, #144	@ 0x90
 80053e4:	f7fb fcb6 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80053e8:	2036      	movs	r0, #54	@ 0x36
 80053ea:	f7fb fccf 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80053ee:	20c8      	movs	r0, #200	@ 0xc8
 80053f0:	f7fb fcb0 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80053f4:	20f2      	movs	r0, #242	@ 0xf2
 80053f6:	f7fb fcc9 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80053fa:	2000      	movs	r0, #0
 80053fc:	f7fb fcaa 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005400:	20b0      	movs	r0, #176	@ 0xb0
 8005402:	f7fb fcc3 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005406:	20c2      	movs	r0, #194	@ 0xc2
 8005408:	f7fb fca4 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800540c:	20b6      	movs	r0, #182	@ 0xb6
 800540e:	f7fb fcbd 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005412:	200a      	movs	r0, #10
 8005414:	f7fb fc9e 	bl	8000d54 <LCD_IO_WriteData>
 8005418:	20a7      	movs	r0, #167	@ 0xa7
 800541a:	f7fb fc9b 	bl	8000d54 <LCD_IO_WriteData>
 800541e:	2027      	movs	r0, #39	@ 0x27
 8005420:	f7fb fc98 	bl	8000d54 <LCD_IO_WriteData>
 8005424:	2004      	movs	r0, #4
 8005426:	f7fb fc95 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800542a:	202a      	movs	r0, #42	@ 0x2a
 800542c:	f7fb fcae 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005430:	2000      	movs	r0, #0
 8005432:	f7fb fc8f 	bl	8000d54 <LCD_IO_WriteData>
 8005436:	2000      	movs	r0, #0
 8005438:	f7fb fc8c 	bl	8000d54 <LCD_IO_WriteData>
 800543c:	2000      	movs	r0, #0
 800543e:	f7fb fc89 	bl	8000d54 <LCD_IO_WriteData>
 8005442:	20ef      	movs	r0, #239	@ 0xef
 8005444:	f7fb fc86 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005448:	202b      	movs	r0, #43	@ 0x2b
 800544a:	f7fb fc9f 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800544e:	2000      	movs	r0, #0
 8005450:	f7fb fc80 	bl	8000d54 <LCD_IO_WriteData>
 8005454:	2000      	movs	r0, #0
 8005456:	f7fb fc7d 	bl	8000d54 <LCD_IO_WriteData>
 800545a:	2001      	movs	r0, #1
 800545c:	f7fb fc7a 	bl	8000d54 <LCD_IO_WriteData>
 8005460:	203f      	movs	r0, #63	@ 0x3f
 8005462:	f7fb fc77 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005466:	20f6      	movs	r0, #246	@ 0xf6
 8005468:	f7fb fc90 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800546c:	2001      	movs	r0, #1
 800546e:	f7fb fc71 	bl	8000d54 <LCD_IO_WriteData>
 8005472:	2000      	movs	r0, #0
 8005474:	f7fb fc6e 	bl	8000d54 <LCD_IO_WriteData>
 8005478:	2006      	movs	r0, #6
 800547a:	f7fb fc6b 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800547e:	202c      	movs	r0, #44	@ 0x2c
 8005480:	f7fb fc84 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005484:	20c8      	movs	r0, #200	@ 0xc8
 8005486:	f7fb fccf 	bl	8000e28 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800548a:	2026      	movs	r0, #38	@ 0x26
 800548c:	f7fb fc7e 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005490:	2001      	movs	r0, #1
 8005492:	f7fb fc5f 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005496:	20e0      	movs	r0, #224	@ 0xe0
 8005498:	f7fb fc78 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800549c:	200f      	movs	r0, #15
 800549e:	f7fb fc59 	bl	8000d54 <LCD_IO_WriteData>
 80054a2:	2029      	movs	r0, #41	@ 0x29
 80054a4:	f7fb fc56 	bl	8000d54 <LCD_IO_WriteData>
 80054a8:	2024      	movs	r0, #36	@ 0x24
 80054aa:	f7fb fc53 	bl	8000d54 <LCD_IO_WriteData>
 80054ae:	200c      	movs	r0, #12
 80054b0:	f7fb fc50 	bl	8000d54 <LCD_IO_WriteData>
 80054b4:	200e      	movs	r0, #14
 80054b6:	f7fb fc4d 	bl	8000d54 <LCD_IO_WriteData>
 80054ba:	2009      	movs	r0, #9
 80054bc:	f7fb fc4a 	bl	8000d54 <LCD_IO_WriteData>
 80054c0:	204e      	movs	r0, #78	@ 0x4e
 80054c2:	f7fb fc47 	bl	8000d54 <LCD_IO_WriteData>
 80054c6:	2078      	movs	r0, #120	@ 0x78
 80054c8:	f7fb fc44 	bl	8000d54 <LCD_IO_WriteData>
 80054cc:	203c      	movs	r0, #60	@ 0x3c
 80054ce:	f7fb fc41 	bl	8000d54 <LCD_IO_WriteData>
 80054d2:	2009      	movs	r0, #9
 80054d4:	f7fb fc3e 	bl	8000d54 <LCD_IO_WriteData>
 80054d8:	2013      	movs	r0, #19
 80054da:	f7fb fc3b 	bl	8000d54 <LCD_IO_WriteData>
 80054de:	2005      	movs	r0, #5
 80054e0:	f7fb fc38 	bl	8000d54 <LCD_IO_WriteData>
 80054e4:	2017      	movs	r0, #23
 80054e6:	f7fb fc35 	bl	8000d54 <LCD_IO_WriteData>
 80054ea:	2011      	movs	r0, #17
 80054ec:	f7fb fc32 	bl	8000d54 <LCD_IO_WriteData>
 80054f0:	2000      	movs	r0, #0
 80054f2:	f7fb fc2f 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80054f6:	20e1      	movs	r0, #225	@ 0xe1
 80054f8:	f7fb fc48 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80054fc:	2000      	movs	r0, #0
 80054fe:	f7fb fc29 	bl	8000d54 <LCD_IO_WriteData>
 8005502:	2016      	movs	r0, #22
 8005504:	f7fb fc26 	bl	8000d54 <LCD_IO_WriteData>
 8005508:	201b      	movs	r0, #27
 800550a:	f7fb fc23 	bl	8000d54 <LCD_IO_WriteData>
 800550e:	2004      	movs	r0, #4
 8005510:	f7fb fc20 	bl	8000d54 <LCD_IO_WriteData>
 8005514:	2011      	movs	r0, #17
 8005516:	f7fb fc1d 	bl	8000d54 <LCD_IO_WriteData>
 800551a:	2007      	movs	r0, #7
 800551c:	f7fb fc1a 	bl	8000d54 <LCD_IO_WriteData>
 8005520:	2031      	movs	r0, #49	@ 0x31
 8005522:	f7fb fc17 	bl	8000d54 <LCD_IO_WriteData>
 8005526:	2033      	movs	r0, #51	@ 0x33
 8005528:	f7fb fc14 	bl	8000d54 <LCD_IO_WriteData>
 800552c:	2042      	movs	r0, #66	@ 0x42
 800552e:	f7fb fc11 	bl	8000d54 <LCD_IO_WriteData>
 8005532:	2005      	movs	r0, #5
 8005534:	f7fb fc0e 	bl	8000d54 <LCD_IO_WriteData>
 8005538:	200c      	movs	r0, #12
 800553a:	f7fb fc0b 	bl	8000d54 <LCD_IO_WriteData>
 800553e:	200a      	movs	r0, #10
 8005540:	f7fb fc08 	bl	8000d54 <LCD_IO_WriteData>
 8005544:	2028      	movs	r0, #40	@ 0x28
 8005546:	f7fb fc05 	bl	8000d54 <LCD_IO_WriteData>
 800554a:	202f      	movs	r0, #47	@ 0x2f
 800554c:	f7fb fc02 	bl	8000d54 <LCD_IO_WriteData>
 8005550:	200f      	movs	r0, #15
 8005552:	f7fb fbff 	bl	8000d54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005556:	2011      	movs	r0, #17
 8005558:	f7fb fc18 	bl	8000d8c <LCD_IO_WriteReg>
  LCD_Delay(200);
 800555c:	20c8      	movs	r0, #200	@ 0xc8
 800555e:	f7fb fc63 	bl	8000e28 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005562:	2029      	movs	r0, #41	@ 0x29
 8005564:	f7fb fc12 	bl	8000d8c <LCD_IO_WriteReg>
}
 8005568:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800556c:	202c      	movs	r0, #44	@ 0x2c
 800556e:	f7fb bc0d 	b.w	8000d8c <LCD_IO_WriteReg>

08005572 <ili9341_ReadID>:
{
 8005572:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005574:	f7fb fbde 	bl	8000d34 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8005578:	2103      	movs	r1, #3
 800557a:	20d3      	movs	r0, #211	@ 0xd3
 800557c:	f7fb fc22 	bl	8000dc4 <LCD_IO_ReadData>
}
 8005580:	b280      	uxth	r0, r0
 8005582:	bd08      	pop	{r3, pc}

08005584 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8005584:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8005586:	b2c4      	uxtb	r4, r0
 8005588:	2202      	movs	r2, #2
 800558a:	2103      	movs	r1, #3
 800558c:	4620      	mov	r0, r4
 800558e:	f7fb fb87 	bl	8000ca0 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8005592:	200a      	movs	r0, #10
 8005594:	f7fb fbcc 	bl	8000d30 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8005598:	4620      	mov	r0, r4
 800559a:	2200      	movs	r2, #0
 800559c:	2103      	movs	r1, #3
 800559e:	f7fb fb7f 	bl	8000ca0 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 80055a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80055a6:	2002      	movs	r0, #2
 80055a8:	f7fb bbc2 	b.w	8000d30 <IOE_Delay>

080055ac <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80055ac:	b538      	push	{r3, r4, r5, lr}
 80055ae:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80055b0:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80055b2:	f7fb fb73 	bl	8000c9c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80055b6:	2100      	movs	r1, #0
 80055b8:	4620      	mov	r0, r4
 80055ba:	f7fb fb89 	bl	8000cd0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80055be:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80055c0:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80055c2:	4620      	mov	r0, r4
 80055c4:	f7fb fb84 	bl	8000cd0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80055c8:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80055cc:	b280      	uxth	r0, r0
 80055ce:	bd38      	pop	{r3, r4, r5, pc}

080055d0 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80055d0:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80055d2:	b2c4      	uxtb	r4, r0
 80055d4:	2140      	movs	r1, #64	@ 0x40
 80055d6:	4620      	mov	r0, r4
 80055d8:	f7fb fb7a 	bl	8000cd0 <IOE_Read>
  
  if(state > 0)
 80055dc:	0603      	lsls	r3, r0, #24
 80055de:	d507      	bpl.n	80055f0 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80055e0:	214c      	movs	r1, #76	@ 0x4c
 80055e2:	4620      	mov	r0, r4
 80055e4:	f7fb fb74 	bl	8000cd0 <IOE_Read>
 80055e8:	3800      	subs	r0, #0
 80055ea:	bf18      	it	ne
 80055ec:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80055ee:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80055f0:	2201      	movs	r2, #1
 80055f2:	214b      	movs	r1, #75	@ 0x4b
 80055f4:	4620      	mov	r0, r4
 80055f6:	f7fb fb53 	bl	8000ca0 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80055fa:	4620      	mov	r0, r4
 80055fc:	2200      	movs	r2, #0
 80055fe:	214b      	movs	r1, #75	@ 0x4b
 8005600:	f7fb fb4e 	bl	8000ca0 <IOE_Write>
  uint8_t ret = 0;
 8005604:	2000      	movs	r0, #0
 8005606:	e7f2      	b.n	80055ee <stmpe811_TS_DetectTouch+0x1e>

08005608 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8005608:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800560a:	2304      	movs	r3, #4
 800560c:	b2c4      	uxtb	r4, r0
{
 800560e:	460e      	mov	r6, r1
 8005610:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005612:	21d7      	movs	r1, #215	@ 0xd7
 8005614:	eb0d 0203 	add.w	r2, sp, r3
 8005618:	4620      	mov	r0, r4
 800561a:	f7fb fb73 	bl	8000d04 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800561e:	9b01      	ldr	r3, [sp, #4]
 8005620:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005622:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005624:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005628:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800562a:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800562c:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800562e:	2201      	movs	r2, #1
 8005630:	214b      	movs	r1, #75	@ 0x4b
 8005632:	f7fb fb35 	bl	8000ca0 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005636:	2200      	movs	r2, #0
 8005638:	214b      	movs	r1, #75	@ 0x4b
 800563a:	4620      	mov	r0, r4
 800563c:	f7fb fb30 	bl	8000ca0 <IOE_Write>
}
 8005640:	b002      	add	sp, #8
 8005642:	bd70      	pop	{r4, r5, r6, pc}

08005644 <stmpe811_Init>:
{
 8005644:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8005646:	4a0a      	ldr	r2, [pc, #40]	@ (8005670 <stmpe811_Init+0x2c>)
 8005648:	7813      	ldrb	r3, [r2, #0]
 800564a:	4298      	cmp	r0, r3
{
 800564c:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800564e:	d00d      	beq.n	800566c <stmpe811_Init+0x28>
 8005650:	7851      	ldrb	r1, [r2, #1]
 8005652:	4288      	cmp	r0, r1
 8005654:	d00a      	beq.n	800566c <stmpe811_Init+0x28>
 8005656:	b10b      	cbz	r3, 800565c <stmpe811_Init+0x18>
 8005658:	b941      	cbnz	r1, 800566c <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800565a:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 800565c:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800565e:	f7fb fb1d 	bl	8000c9c <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8005662:	4620      	mov	r0, r4
}
 8005664:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8005668:	f7ff bf8c 	b.w	8005584 <stmpe811_Reset>
}
 800566c:	bd10      	pop	{r4, pc}
 800566e:	bf00      	nop
 8005670:	20004a38 	.word	0x20004a38

08005674 <stmpe811_EnableGlobalIT>:
{
 8005674:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005676:	b2c4      	uxtb	r4, r0
 8005678:	2109      	movs	r1, #9
 800567a:	4620      	mov	r0, r4
 800567c:	f7fb fb28 	bl	8000cd0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8005680:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005684:	b2d2      	uxtb	r2, r2
 8005686:	4620      	mov	r0, r4
 8005688:	2109      	movs	r1, #9
}
 800568a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800568e:	f7fb bb07 	b.w	8000ca0 <IOE_Write>

08005692 <stmpe811_DisableGlobalIT>:
{
 8005692:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005694:	b2c4      	uxtb	r4, r0
 8005696:	2109      	movs	r1, #9
 8005698:	4620      	mov	r0, r4
 800569a:	f7fb fb19 	bl	8000cd0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800569e:	2109      	movs	r1, #9
 80056a0:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 80056a4:	4620      	mov	r0, r4
}
 80056a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80056aa:	f7fb baf9 	b.w	8000ca0 <IOE_Write>

080056ae <stmpe811_EnableITSource>:
{
 80056ae:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80056b0:	b2c4      	uxtb	r4, r0
{
 80056b2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80056b4:	4620      	mov	r0, r4
 80056b6:	210a      	movs	r1, #10
 80056b8:	f7fb fb0a 	bl	8000cd0 <IOE_Read>
  tmp |= Source; 
 80056bc:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80056c0:	b2d2      	uxtb	r2, r2
 80056c2:	4620      	mov	r0, r4
 80056c4:	210a      	movs	r1, #10
}
 80056c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80056ca:	f7fb bae9 	b.w	8000ca0 <IOE_Write>

080056ce <stmpe811_TS_EnableIT>:
{
 80056ce:	b510      	push	{r4, lr}
 80056d0:	4604      	mov	r4, r0
  IOE_ITConfig();
 80056d2:	f7fb fae4 	bl	8000c9e <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 80056d6:	4620      	mov	r0, r4
 80056d8:	211f      	movs	r1, #31
 80056da:	f7ff ffe8 	bl	80056ae <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 80056de:	4620      	mov	r0, r4
}
 80056e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 80056e4:	f7ff bfc6 	b.w	8005674 <stmpe811_EnableGlobalIT>

080056e8 <stmpe811_DisableITSource>:
{
 80056e8:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80056ea:	b2c4      	uxtb	r4, r0
{
 80056ec:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80056ee:	4620      	mov	r0, r4
 80056f0:	210a      	movs	r1, #10
 80056f2:	f7fb faed 	bl	8000cd0 <IOE_Read>
  tmp &= ~Source; 
 80056f6:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80056fa:	b2d2      	uxtb	r2, r2
 80056fc:	4620      	mov	r0, r4
 80056fe:	210a      	movs	r1, #10
}
 8005700:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005704:	f7fb bacc 	b.w	8000ca0 <IOE_Write>

08005708 <stmpe811_TS_DisableIT>:
{
 8005708:	b510      	push	{r4, lr}
 800570a:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 800570c:	f7ff ffc1 	bl	8005692 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005710:	4620      	mov	r0, r4
 8005712:	211f      	movs	r1, #31
}
 8005714:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005718:	f7ff bfe6 	b.w	80056e8 <stmpe811_DisableITSource>

0800571c <stmpe811_ReadGITStatus>:
{
 800571c:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800571e:	b2c0      	uxtb	r0, r0
{
 8005720:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005722:	210b      	movs	r1, #11
 8005724:	f7fb fad4 	bl	8000cd0 <IOE_Read>
}
 8005728:	4020      	ands	r0, r4
 800572a:	bd10      	pop	{r4, pc}

0800572c <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 800572c:	211f      	movs	r1, #31
 800572e:	f7ff bff5 	b.w	800571c <stmpe811_ReadGITStatus>

08005732 <stmpe811_ClearGlobalIT>:
{
 8005732:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8005734:	b2c0      	uxtb	r0, r0
 8005736:	210b      	movs	r1, #11
 8005738:	f7fb bab2 	b.w	8000ca0 <IOE_Write>

0800573c <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 800573c:	211f      	movs	r1, #31
 800573e:	f7ff bff8 	b.w	8005732 <stmpe811_ClearGlobalIT>

08005742 <stmpe811_IO_EnableAF>:
{
 8005742:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005744:	b2c4      	uxtb	r4, r0
{
 8005746:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005748:	4620      	mov	r0, r4
 800574a:	2117      	movs	r1, #23
 800574c:	f7fb fac0 	bl	8000cd0 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8005750:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005754:	b2d2      	uxtb	r2, r2
 8005756:	4620      	mov	r0, r4
 8005758:	2117      	movs	r1, #23
}
 800575a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800575e:	f7fb ba9f 	b.w	8000ca0 <IOE_Write>

08005762 <stmpe811_TS_Start>:
{
 8005762:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005764:	b2c4      	uxtb	r4, r0
{
 8005766:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005768:	2104      	movs	r1, #4
 800576a:	4620      	mov	r0, r4
 800576c:	f7fb fab0 	bl	8000cd0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005770:	2104      	movs	r1, #4
 8005772:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005776:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005778:	4620      	mov	r0, r4
 800577a:	f7fb fa91 	bl	8000ca0 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800577e:	4630      	mov	r0, r6
 8005780:	21f0      	movs	r1, #240	@ 0xf0
 8005782:	f7ff ffde 	bl	8005742 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005786:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 800578a:	4620      	mov	r0, r4
 800578c:	2104      	movs	r1, #4
 800578e:	f7fb fa87 	bl	8000ca0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8005792:	2249      	movs	r2, #73	@ 0x49
 8005794:	2120      	movs	r1, #32
 8005796:	4620      	mov	r0, r4
 8005798:	f7fb fa82 	bl	8000ca0 <IOE_Write>
  IOE_Delay(2); 
 800579c:	2002      	movs	r0, #2
 800579e:	f7fb fac7 	bl	8000d30 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80057a2:	4620      	mov	r0, r4
 80057a4:	2201      	movs	r2, #1
 80057a6:	2121      	movs	r1, #33	@ 0x21
 80057a8:	f7fb fa7a 	bl	8000ca0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80057ac:	4620      	mov	r0, r4
 80057ae:	229a      	movs	r2, #154	@ 0x9a
 80057b0:	2141      	movs	r1, #65	@ 0x41
 80057b2:	f7fb fa75 	bl	8000ca0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80057b6:	4620      	mov	r0, r4
 80057b8:	2201      	movs	r2, #1
 80057ba:	214a      	movs	r1, #74	@ 0x4a
 80057bc:	f7fb fa70 	bl	8000ca0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80057c0:	4620      	mov	r0, r4
 80057c2:	2201      	movs	r2, #1
 80057c4:	214b      	movs	r1, #75	@ 0x4b
 80057c6:	f7fb fa6b 	bl	8000ca0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80057ca:	4620      	mov	r0, r4
 80057cc:	2200      	movs	r2, #0
 80057ce:	214b      	movs	r1, #75	@ 0x4b
 80057d0:	f7fb fa66 	bl	8000ca0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80057d4:	4620      	mov	r0, r4
 80057d6:	2201      	movs	r2, #1
 80057d8:	2156      	movs	r1, #86	@ 0x56
 80057da:	f7fb fa61 	bl	8000ca0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80057de:	4620      	mov	r0, r4
 80057e0:	2201      	movs	r2, #1
 80057e2:	2158      	movs	r1, #88	@ 0x58
 80057e4:	f7fb fa5c 	bl	8000ca0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80057e8:	4620      	mov	r0, r4
 80057ea:	2201      	movs	r2, #1
 80057ec:	2140      	movs	r1, #64	@ 0x40
 80057ee:	f7fb fa57 	bl	8000ca0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80057f2:	4620      	mov	r0, r4
 80057f4:	22ff      	movs	r2, #255	@ 0xff
 80057f6:	210b      	movs	r1, #11
 80057f8:	f7fb fa52 	bl	8000ca0 <IOE_Write>
}
 80057fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8005800:	2002      	movs	r0, #2
 8005802:	f7fb ba95 	b.w	8000d30 <IOE_Delay>
	...

08005808 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005808:	4b05      	ldr	r3, [pc, #20]	@ (8005820 <SystemInit+0x18>)
 800580a:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800580e:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8005812:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8005816:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800581a:	609a      	str	r2, [r3, #8]
#endif
}
 800581c:	4770      	bx	lr
 800581e:	bf00      	nop
 8005820:	e000ed00 	.word	0xe000ed00

08005824 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005824:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005826:	4b0b      	ldr	r3, [pc, #44]	@ (8005854 <HAL_Init+0x30>)
 8005828:	681a      	ldr	r2, [r3, #0]
 800582a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800582e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8005830:	681a      	ldr	r2, [r3, #0]
 8005832:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8005836:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005838:	681a      	ldr	r2, [r3, #0]
 800583a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800583e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005840:	2003      	movs	r0, #3
 8005842:	f000 f82f 	bl	80058a4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8005846:	2000      	movs	r0, #0
 8005848:	f7fc f9de 	bl	8001c08 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800584c:	f7fb ff5c 	bl	8001708 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005850:	2000      	movs	r0, #0
 8005852:	bd08      	pop	{r3, pc}
 8005854:	40023c00 	.word	0x40023c00

08005858 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8005858:	4a03      	ldr	r2, [pc, #12]	@ (8005868 <HAL_IncTick+0x10>)
 800585a:	4b04      	ldr	r3, [pc, #16]	@ (800586c <HAL_IncTick+0x14>)
 800585c:	6811      	ldr	r1, [r2, #0]
 800585e:	781b      	ldrb	r3, [r3, #0]
 8005860:	440b      	add	r3, r1
 8005862:	6013      	str	r3, [r2, #0]
}
 8005864:	4770      	bx	lr
 8005866:	bf00      	nop
 8005868:	20004a3c 	.word	0x20004a3c
 800586c:	20000080 	.word	0x20000080

08005870 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005870:	4b01      	ldr	r3, [pc, #4]	@ (8005878 <HAL_GetTick+0x8>)
 8005872:	6818      	ldr	r0, [r3, #0]
}
 8005874:	4770      	bx	lr
 8005876:	bf00      	nop
 8005878:	20004a3c 	.word	0x20004a3c

0800587c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800587c:	b538      	push	{r3, r4, r5, lr}
 800587e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005880:	f7ff fff6 	bl	8005870 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005884:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005886:	bf1c      	itt	ne
 8005888:	4b05      	ldrne	r3, [pc, #20]	@ (80058a0 <HAL_Delay+0x24>)
 800588a:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800588c:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800588e:	bf18      	it	ne
 8005890:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8005892:	f7ff ffed 	bl	8005870 <HAL_GetTick>
 8005896:	1b43      	subs	r3, r0, r5
 8005898:	42a3      	cmp	r3, r4
 800589a:	d3fa      	bcc.n	8005892 <HAL_Delay+0x16>
  {
  }
}
 800589c:	bd38      	pop	{r3, r4, r5, pc}
 800589e:	bf00      	nop
 80058a0:	20000080 	.word	0x20000080

080058a4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80058a4:	4907      	ldr	r1, [pc, #28]	@ (80058c4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80058a6:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80058a8:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80058ac:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80058ae:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80058b0:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80058b4:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80058b6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80058b8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80058bc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 80058c0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80058c2:	4770      	bx	lr
 80058c4:	e000ed00 	.word	0xe000ed00

080058c8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80058c8:	4b16      	ldr	r3, [pc, #88]	@ (8005924 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80058ca:	b530      	push	{r4, r5, lr}
 80058cc:	68dc      	ldr	r4, [r3, #12]
 80058ce:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80058d2:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80058d6:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80058d8:	2b04      	cmp	r3, #4
 80058da:	bf28      	it	cs
 80058dc:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80058de:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80058e0:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80058e4:	bf8c      	ite	hi
 80058e6:	3c03      	subhi	r4, #3
 80058e8:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80058ea:	fa05 f303 	lsl.w	r3, r5, r3
 80058ee:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80058f2:	40a5      	lsls	r5, r4
 80058f4:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80058f8:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 80058fa:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80058fc:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005900:	bfac      	ite	ge
 8005902:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005906:	4a08      	ldrlt	r2, [pc, #32]	@ (8005928 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005908:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800590c:	bfb8      	it	lt
 800590e:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005912:	b2db      	uxtb	r3, r3
 8005914:	bfaa      	itet	ge
 8005916:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800591a:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800591c:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8005920:	bd30      	pop	{r4, r5, pc}
 8005922:	bf00      	nop
 8005924:	e000ed00 	.word	0xe000ed00
 8005928:	e000ed14 	.word	0xe000ed14

0800592c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800592c:	2800      	cmp	r0, #0
 800592e:	db07      	blt.n	8005940 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005930:	4a04      	ldr	r2, [pc, #16]	@ (8005944 <HAL_NVIC_EnableIRQ+0x18>)
 8005932:	0941      	lsrs	r1, r0, #5
 8005934:	2301      	movs	r3, #1
 8005936:	f000 001f 	and.w	r0, r0, #31
 800593a:	4083      	lsls	r3, r0
 800593c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8005940:	4770      	bx	lr
 8005942:	bf00      	nop
 8005944:	e000e100 	.word	0xe000e100

08005948 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8005948:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800594a:	4604      	mov	r4, r0
 800594c:	b150      	cbz	r0, 8005964 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800594e:	7943      	ldrb	r3, [r0, #5]
 8005950:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005954:	b913      	cbnz	r3, 800595c <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8005956:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8005958:	f7fb fef6 	bl	8001748 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800595c:	2301      	movs	r3, #1
 800595e:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8005960:	2000      	movs	r0, #0
}
 8005962:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005964:	2001      	movs	r0, #1
 8005966:	e7fc      	b.n	8005962 <HAL_CRC_Init+0x1a>

08005968 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8005968:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800596a:	4604      	mov	r4, r0
 800596c:	b320      	cbz	r0, 80059b8 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800596e:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8005972:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005976:	b91b      	cbnz	r3, 8005980 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8005978:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800597c:	f7fb fefc 	bl	8001778 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005980:	2302      	movs	r3, #2
 8005982:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005986:	6823      	ldr	r3, [r4, #0]
 8005988:	6861      	ldr	r1, [r4, #4]
 800598a:	681a      	ldr	r2, [r3, #0]
 800598c:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8005990:	430a      	orrs	r2, r1
 8005992:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8005994:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005996:	68a1      	ldr	r1, [r4, #8]
 8005998:	f022 0207 	bic.w	r2, r2, #7
 800599c:	430a      	orrs	r2, r1
 800599e:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80059a0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80059a2:	68e1      	ldr	r1, [r4, #12]
 80059a4:	f36f 020d 	bfc	r2, #0, #14
 80059a8:	430a      	orrs	r2, r1
 80059aa:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80059ac:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80059ae:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80059b0:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80059b2:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 80059b6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80059b8:	2001      	movs	r0, #1
 80059ba:	e7fc      	b.n	80059b6 <HAL_DMA2D_Init+0x4e>

080059bc <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 80059bc:	4770      	bx	lr

080059be <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 80059be:	4770      	bx	lr

080059c0 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80059c0:	6803      	ldr	r3, [r0, #0]
{
 80059c2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80059c4:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80059c6:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80059c8:	07f2      	lsls	r2, r6, #31
{
 80059ca:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80059cc:	d514      	bpl.n	80059f8 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 80059ce:	05e9      	lsls	r1, r5, #23
 80059d0:	d512      	bpl.n	80059f8 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80059d2:	681a      	ldr	r2, [r3, #0]
 80059d4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80059d8:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80059da:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80059dc:	f042 0201 	orr.w	r2, r2, #1
 80059e0:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80059e2:	2201      	movs	r2, #1
 80059e4:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80059e6:	2304      	movs	r3, #4
 80059e8:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80059ec:	2300      	movs	r3, #0
 80059ee:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80059f2:	6943      	ldr	r3, [r0, #20]
 80059f4:	b103      	cbz	r3, 80059f8 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80059f6:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80059f8:	06b2      	lsls	r2, r6, #26
 80059fa:	d516      	bpl.n	8005a2a <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80059fc:	04ab      	lsls	r3, r5, #18
 80059fe:	d514      	bpl.n	8005a2a <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8005a00:	6823      	ldr	r3, [r4, #0]
 8005a02:	681a      	ldr	r2, [r3, #0]
 8005a04:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005a08:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8005a0a:	2220      	movs	r2, #32
 8005a0c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8005a0e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8005a10:	f043 0302 	orr.w	r3, r3, #2
 8005a14:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005a16:	2304      	movs	r3, #4
 8005a18:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8005a1c:	2300      	movs	r3, #0
 8005a1e:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8005a22:	6963      	ldr	r3, [r4, #20]
 8005a24:	b10b      	cbz	r3, 8005a2a <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8005a26:	4620      	mov	r0, r4
 8005a28:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8005a2a:	0730      	lsls	r0, r6, #28
 8005a2c:	d516      	bpl.n	8005a5c <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8005a2e:	0529      	lsls	r1, r5, #20
 8005a30:	d514      	bpl.n	8005a5c <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8005a32:	6823      	ldr	r3, [r4, #0]
 8005a34:	681a      	ldr	r2, [r3, #0]
 8005a36:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005a3a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8005a3c:	2208      	movs	r2, #8
 8005a3e:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8005a40:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8005a42:	f043 0304 	orr.w	r3, r3, #4
 8005a46:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005a48:	2304      	movs	r3, #4
 8005a4a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8005a4e:	2300      	movs	r3, #0
 8005a50:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8005a54:	6963      	ldr	r3, [r4, #20]
 8005a56:	b10b      	cbz	r3, 8005a5c <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8005a58:	4620      	mov	r0, r4
 8005a5a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8005a5c:	0772      	lsls	r2, r6, #29
 8005a5e:	d50b      	bpl.n	8005a78 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8005a60:	056b      	lsls	r3, r5, #21
 8005a62:	d509      	bpl.n	8005a78 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8005a64:	6823      	ldr	r3, [r4, #0]
 8005a66:	681a      	ldr	r2, [r3, #0]
 8005a68:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005a6c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8005a6e:	2204      	movs	r2, #4
 8005a70:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8005a72:	4620      	mov	r0, r4
 8005a74:	f7ff ffa2 	bl	80059bc <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8005a78:	07b0      	lsls	r0, r6, #30
 8005a7a:	d514      	bpl.n	8005aa6 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8005a7c:	05a9      	lsls	r1, r5, #22
 8005a7e:	d512      	bpl.n	8005aa6 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8005a80:	6823      	ldr	r3, [r4, #0]
 8005a82:	681a      	ldr	r2, [r3, #0]
 8005a84:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8005a88:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8005a8a:	2202      	movs	r2, #2
 8005a8c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005a8e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8005a90:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005a92:	2301      	movs	r3, #1
 8005a94:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8005a98:	2300      	movs	r3, #0
 8005a9a:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8005a9e:	6923      	ldr	r3, [r4, #16]
 8005aa0:	b10b      	cbz	r3, 8005aa6 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8005aa2:	4620      	mov	r0, r4
 8005aa4:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8005aa6:	06f2      	lsls	r2, r6, #27
 8005aa8:	d513      	bpl.n	8005ad2 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8005aaa:	04eb      	lsls	r3, r5, #19
 8005aac:	d511      	bpl.n	8005ad2 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8005aae:	6823      	ldr	r3, [r4, #0]
 8005ab0:	681a      	ldr	r2, [r3, #0]
 8005ab2:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8005ab6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8005ab8:	2210      	movs	r2, #16
 8005aba:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005abc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8005abe:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005ac0:	2301      	movs	r3, #1
 8005ac2:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8005ac6:	2300      	movs	r3, #0
 8005ac8:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8005acc:	4620      	mov	r0, r4
 8005ace:	f7ff ff76 	bl	80059be <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8005ad2:	bd70      	pop	{r4, r5, r6, pc}

08005ad4 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8005ad4:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8005ad6:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8005ada:	2a01      	cmp	r2, #1
{
 8005adc:	4603      	mov	r3, r0
 8005ade:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 8005ae2:	d02b      	beq.n	8005b3c <HAL_DMA2D_ConfigLayer+0x68>
 8005ae4:	2201      	movs	r2, #1
 8005ae6:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005aea:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005aee:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 8005af2:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8005af6:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8005af8:	4f17      	ldr	r7, [pc, #92]	@ (8005b58 <HAL_DMA2D_ConfigLayer+0x84>)
 8005afa:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005afe:	3c09      	subs	r4, #9
 8005b00:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8005b02:	bf9c      	itt	ls
 8005b04:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8005b08:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005b0a:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005b0e:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8005b10:	bf88      	it	hi
 8005b12:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8005b16:	b991      	cbnz	r1, 8005b3e <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005b18:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8005b1a:	4039      	ands	r1, r7
 8005b1c:	4301      	orrs	r1, r0
 8005b1e:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005b20:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8005b22:	6999      	ldr	r1, [r3, #24]
 8005b24:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005b26:	d803      	bhi.n	8005b30 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8005b28:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8005b2a:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8005b2e:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8005b30:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8005b32:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8005b34:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8005b38:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8005b3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8005b3e:	69d1      	ldr	r1, [r2, #28]
 8005b40:	4039      	ands	r1, r7
 8005b42:	4301      	orrs	r1, r0
 8005b44:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005b46:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005b48:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005b4a:	6989      	ldr	r1, [r1, #24]
 8005b4c:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8005b4e:	bf9c      	itt	ls
 8005b50:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8005b54:	6215      	strls	r5, [r2, #32]
 8005b56:	e7eb      	b.n	8005b30 <HAL_DMA2D_ConfigLayer+0x5c>
 8005b58:	00fcfff0 	.word	0x00fcfff0

08005b5c <FLASH_Program_DoubleWord>:
{
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));

  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8005b5c:	4909      	ldr	r1, [pc, #36]	@ (8005b84 <FLASH_Program_DoubleWord+0x28>)
{
 8005b5e:	b510      	push	{r4, lr}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8005b60:	690c      	ldr	r4, [r1, #16]
 8005b62:	f424 7440 	bic.w	r4, r4, #768	@ 0x300
 8005b66:	610c      	str	r4, [r1, #16]
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8005b68:	690c      	ldr	r4, [r1, #16]
 8005b6a:	f444 7440 	orr.w	r4, r4, #768	@ 0x300
 8005b6e:	610c      	str	r4, [r1, #16]
  FLASH->CR |= FLASH_CR_PG;
 8005b70:	690c      	ldr	r4, [r1, #16]
 8005b72:	f044 0401 	orr.w	r4, r4, #1
 8005b76:	610c      	str	r4, [r1, #16]

  /* Program first word */
  *(__IO uint32_t *)Address = (uint32_t)Data;
 8005b78:	6002      	str	r2, [r0, #0]
 8005b7a:	f3bf 8f6f 	isb	sy
  /* Barrier to ensure programming is performed in 2 steps, in right order
    (independently of compiler optimization behavior) */
  __ISB();

  /* Program second word */
  *(__IO uint32_t *)(Address + 4) = (uint32_t)(Data >> 32);
 8005b7e:	6043      	str	r3, [r0, #4]
}
 8005b80:	bd10      	pop	{r4, pc}
 8005b82:	bf00      	nop
 8005b84:	40023c00 	.word	0x40023c00

08005b88 <FLASH_Program_Word>:
{
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));

  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8005b88:	4b07      	ldr	r3, [pc, #28]	@ (8005ba8 <FLASH_Program_Word+0x20>)
 8005b8a:	691a      	ldr	r2, [r3, #16]
 8005b8c:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8005b90:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_WORD;
 8005b92:	691a      	ldr	r2, [r3, #16]
 8005b94:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005b98:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8005b9a:	691a      	ldr	r2, [r3, #16]
 8005b9c:	f042 0201 	orr.w	r2, r2, #1
 8005ba0:	611a      	str	r2, [r3, #16]

  *(__IO uint32_t *)Address = Data;
 8005ba2:	6001      	str	r1, [r0, #0]
}
 8005ba4:	4770      	bx	lr
 8005ba6:	bf00      	nop
 8005ba8:	40023c00 	.word	0x40023c00

08005bac <FLASH_Program_HalfWord>:
{
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));

  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8005bac:	4b07      	ldr	r3, [pc, #28]	@ (8005bcc <FLASH_Program_HalfWord+0x20>)
 8005bae:	691a      	ldr	r2, [r3, #16]
 8005bb0:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8005bb4:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 8005bb6:	691a      	ldr	r2, [r3, #16]
 8005bb8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005bbc:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8005bbe:	691a      	ldr	r2, [r3, #16]
 8005bc0:	f042 0201 	orr.w	r2, r2, #1
 8005bc4:	611a      	str	r2, [r3, #16]

  *(__IO uint16_t *)Address = Data;
 8005bc6:	8001      	strh	r1, [r0, #0]
}
 8005bc8:	4770      	bx	lr
 8005bca:	bf00      	nop
 8005bcc:	40023c00 	.word	0x40023c00

08005bd0 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 8005bd0:	4b20      	ldr	r3, [pc, #128]	@ (8005c54 <FLASH_SetErrorCode+0x84>)
 8005bd2:	68da      	ldr	r2, [r3, #12]
 8005bd4:	06d0      	lsls	r0, r2, #27
 8005bd6:	d506      	bpl.n	8005be6 <FLASH_SetErrorCode+0x16>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8005bd8:	491f      	ldr	r1, [pc, #124]	@ (8005c58 <FLASH_SetErrorCode+0x88>)
 8005bda:	69ca      	ldr	r2, [r1, #28]
 8005bdc:	f042 0210 	orr.w	r2, r2, #16
 8005be0:	61ca      	str	r2, [r1, #28]

    /* Clear FLASH write protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8005be2:	2210      	movs	r2, #16
 8005be4:	60da      	str	r2, [r3, #12]
  }

  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 8005be6:	68da      	ldr	r2, [r3, #12]
 8005be8:	0691      	lsls	r1, r2, #26
 8005bea:	d506      	bpl.n	8005bfa <FLASH_SetErrorCode+0x2a>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8005bec:	491a      	ldr	r1, [pc, #104]	@ (8005c58 <FLASH_SetErrorCode+0x88>)
 8005bee:	69ca      	ldr	r2, [r1, #28]
 8005bf0:	f042 0208 	orr.w	r2, r2, #8
 8005bf4:	61ca      	str	r2, [r1, #28]

    /* Clear FLASH Programming alignment error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8005bf6:	2220      	movs	r2, #32
 8005bf8:	60da      	str	r2, [r3, #12]
  }

  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 8005bfa:	4b16      	ldr	r3, [pc, #88]	@ (8005c54 <FLASH_SetErrorCode+0x84>)
 8005bfc:	68da      	ldr	r2, [r3, #12]
 8005bfe:	0652      	lsls	r2, r2, #25
 8005c00:	d506      	bpl.n	8005c10 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8005c02:	4915      	ldr	r1, [pc, #84]	@ (8005c58 <FLASH_SetErrorCode+0x88>)
 8005c04:	69ca      	ldr	r2, [r1, #28]
 8005c06:	f042 0204 	orr.w	r2, r2, #4
 8005c0a:	61ca      	str	r2, [r1, #28]

    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8005c0c:	2240      	movs	r2, #64	@ 0x40
 8005c0e:	60da      	str	r2, [r3, #12]
  }

  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8005c10:	68da      	ldr	r2, [r3, #12]
 8005c12:	0610      	lsls	r0, r2, #24
 8005c14:	d506      	bpl.n	8005c24 <FLASH_SetErrorCode+0x54>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8005c16:	4910      	ldr	r1, [pc, #64]	@ (8005c58 <FLASH_SetErrorCode+0x88>)
 8005c18:	69ca      	ldr	r2, [r1, #28]
 8005c1a:	f042 0202 	orr.w	r2, r2, #2
 8005c1e:	61ca      	str	r2, [r1, #28]

    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8005c20:	2280      	movs	r2, #128	@ 0x80
 8005c22:	60da      	str	r2, [r3, #12]
  }
#if defined(FLASH_SR_RDERR)
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 8005c24:	4b0b      	ldr	r3, [pc, #44]	@ (8005c54 <FLASH_SetErrorCode+0x84>)
 8005c26:	68da      	ldr	r2, [r3, #12]
 8005c28:	05d1      	lsls	r1, r2, #23
 8005c2a:	d507      	bpl.n	8005c3c <FLASH_SetErrorCode+0x6c>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8005c2c:	490a      	ldr	r1, [pc, #40]	@ (8005c58 <FLASH_SetErrorCode+0x88>)
 8005c2e:	69ca      	ldr	r2, [r1, #28]
 8005c30:	f042 0201 	orr.w	r2, r2, #1
 8005c34:	61ca      	str	r2, [r1, #28]

    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8005c36:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8005c3a:	60da      	str	r2, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8005c3c:	68da      	ldr	r2, [r3, #12]
 8005c3e:	0792      	lsls	r2, r2, #30
 8005c40:	d506      	bpl.n	8005c50 <FLASH_SetErrorCode+0x80>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8005c42:	4905      	ldr	r1, [pc, #20]	@ (8005c58 <FLASH_SetErrorCode+0x88>)
 8005c44:	69ca      	ldr	r2, [r1, #28]
 8005c46:	f042 0220 	orr.w	r2, r2, #32
 8005c4a:	61ca      	str	r2, [r1, #28]

    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8005c4c:	2202      	movs	r2, #2
 8005c4e:	60da      	str	r2, [r3, #12]
  }
}
 8005c50:	4770      	bx	lr
 8005c52:	bf00      	nop
 8005c54:	40023c00 	.word	0x40023c00
 8005c58:	20004a40 	.word	0x20004a40

08005c5c <HAL_FLASH_Unlock>:
  if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8005c5c:	4b06      	ldr	r3, [pc, #24]	@ (8005c78 <HAL_FLASH_Unlock+0x1c>)
 8005c5e:	691a      	ldr	r2, [r3, #16]
 8005c60:	2a00      	cmp	r2, #0
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8005c62:	bfbf      	itttt	lt
 8005c64:	4a05      	ldrlt	r2, [pc, #20]	@ (8005c7c <HAL_FLASH_Unlock+0x20>)
 8005c66:	605a      	strlt	r2, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8005c68:	f102 3288 	addlt.w	r2, r2, #2290649224	@ 0x88888888
 8005c6c:	605a      	strlt	r2, [r3, #4]
    if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8005c6e:	bfba      	itte	lt
 8005c70:	6918      	ldrlt	r0, [r3, #16]
 8005c72:	0fc0      	lsrlt	r0, r0, #31
  HAL_StatusTypeDef status = HAL_OK;
 8005c74:	2000      	movge	r0, #0
}
 8005c76:	4770      	bx	lr
 8005c78:	40023c00 	.word	0x40023c00
 8005c7c:	45670123 	.word	0x45670123

08005c80 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 8005c80:	4a03      	ldr	r2, [pc, #12]	@ (8005c90 <HAL_FLASH_Lock+0x10>)
 8005c82:	6913      	ldr	r3, [r2, #16]
 8005c84:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8005c88:	6113      	str	r3, [r2, #16]
}
 8005c8a:	2000      	movs	r0, #0
 8005c8c:	4770      	bx	lr
 8005c8e:	bf00      	nop
 8005c90:	40023c00 	.word	0x40023c00

08005c94 <HAL_FLASH_GetError>:
  return pFlash.ErrorCode;
 8005c94:	4b01      	ldr	r3, [pc, #4]	@ (8005c9c <HAL_FLASH_GetError+0x8>)
 8005c96:	69d8      	ldr	r0, [r3, #28]
}
 8005c98:	4770      	bx	lr
 8005c9a:	bf00      	nop
 8005c9c:	20004a40 	.word	0x20004a40

08005ca0 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8005ca0:	4b11      	ldr	r3, [pc, #68]	@ (8005ce8 <FLASH_WaitForLastOperation+0x48>)
{
 8005ca2:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8005ca4:	2200      	movs	r2, #0
{
 8005ca6:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8005ca8:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 8005caa:	f7ff fde1 	bl	8005870 <HAL_GetTick>
  while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET)
 8005cae:	4d0f      	ldr	r5, [pc, #60]	@ (8005cec <FLASH_WaitForLastOperation+0x4c>)
  tickstart = HAL_GetTick();
 8005cb0:	4606      	mov	r6, r0
  while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET)
 8005cb2:	68eb      	ldr	r3, [r5, #12]
 8005cb4:	03da      	lsls	r2, r3, #15
 8005cb6:	d40c      	bmi.n	8005cd2 <FLASH_WaitForLastOperation+0x32>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8005cb8:	68eb      	ldr	r3, [r5, #12]
 8005cba:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8005cbc:	bf44      	itt	mi
 8005cbe:	2301      	movmi	r3, #1
 8005cc0:	60eb      	strmi	r3, [r5, #12]
  if (__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8005cc2:	68e8      	ldr	r0, [r5, #12]
 8005cc4:	f410 70f9 	ands.w	r0, r0, #498	@ 0x1f2
 8005cc8:	d007      	beq.n	8005cda <FLASH_WaitForLastOperation+0x3a>
    FLASH_SetErrorCode();
 8005cca:	f7ff ff81 	bl	8005bd0 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8005cce:	2001      	movs	r0, #1
 8005cd0:	e003      	b.n	8005cda <FLASH_WaitForLastOperation+0x3a>
    if (Timeout != HAL_MAX_DELAY)
 8005cd2:	1c61      	adds	r1, r4, #1
 8005cd4:	d0ed      	beq.n	8005cb2 <FLASH_WaitForLastOperation+0x12>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8005cd6:	b90c      	cbnz	r4, 8005cdc <FLASH_WaitForLastOperation+0x3c>
        return HAL_TIMEOUT;
 8005cd8:	2003      	movs	r0, #3
}
 8005cda:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8005cdc:	f7ff fdc8 	bl	8005870 <HAL_GetTick>
 8005ce0:	1b80      	subs	r0, r0, r6
 8005ce2:	42a0      	cmp	r0, r4
 8005ce4:	d9e5      	bls.n	8005cb2 <FLASH_WaitForLastOperation+0x12>
 8005ce6:	e7f7      	b.n	8005cd8 <FLASH_WaitForLastOperation+0x38>
 8005ce8:	20004a40 	.word	0x20004a40
 8005cec:	40023c00 	.word	0x40023c00

08005cf0 <HAL_FLASH_Program>:
{
 8005cf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(&pFlash);
 8005cf4:	4e1f      	ldr	r6, [pc, #124]	@ (8005d74 <HAL_FLASH_Program+0x84>)
{
 8005cf6:	4698      	mov	r8, r3
  __HAL_LOCK(&pFlash);
 8005cf8:	7e33      	ldrb	r3, [r6, #24]
 8005cfa:	2b01      	cmp	r3, #1
{
 8005cfc:	4607      	mov	r7, r0
 8005cfe:	460d      	mov	r5, r1
 8005d00:	4614      	mov	r4, r2
  __HAL_LOCK(&pFlash);
 8005d02:	d035      	beq.n	8005d70 <HAL_FLASH_Program+0x80>
 8005d04:	2301      	movs	r3, #1
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005d06:	f24c 3050 	movw	r0, #50000	@ 0xc350
  __HAL_LOCK(&pFlash);
 8005d0a:	7633      	strb	r3, [r6, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005d0c:	f7ff ffc8 	bl	8005ca0 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 8005d10:	b9b0      	cbnz	r0, 8005d40 <HAL_FLASH_Program+0x50>
    if (TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 8005d12:	b9cf      	cbnz	r7, 8005d48 <HAL_FLASH_Program+0x58>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8005d14:	4b18      	ldr	r3, [pc, #96]	@ (8005d78 <HAL_FLASH_Program+0x88>)
 8005d16:	691a      	ldr	r2, [r3, #16]
 8005d18:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8005d1c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 8005d1e:	691a      	ldr	r2, [r3, #16]
 8005d20:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8005d22:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 8005d24:	b2e4      	uxtb	r4, r4
  FLASH->CR |= FLASH_CR_PG;
 8005d26:	f042 0201 	orr.w	r2, r2, #1
 8005d2a:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t *)Address = Data;
 8005d2c:	702c      	strb	r4, [r5, #0]
    status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005d2e:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8005d32:	f7ff ffb5 	bl	8005ca0 <FLASH_WaitForLastOperation>
    FLASH->CR &= (~FLASH_CR_PG);
 8005d36:	4a10      	ldr	r2, [pc, #64]	@ (8005d78 <HAL_FLASH_Program+0x88>)
 8005d38:	6913      	ldr	r3, [r2, #16]
 8005d3a:	f023 0301 	bic.w	r3, r3, #1
 8005d3e:	6113      	str	r3, [r2, #16]
  __HAL_UNLOCK(&pFlash);
 8005d40:	2300      	movs	r3, #0
 8005d42:	7633      	strb	r3, [r6, #24]
}
 8005d44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    else if (TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8005d48:	2f01      	cmp	r7, #1
 8005d4a:	d104      	bne.n	8005d56 <HAL_FLASH_Program+0x66>
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 8005d4c:	b2a1      	uxth	r1, r4
 8005d4e:	4628      	mov	r0, r5
 8005d50:	f7ff ff2c 	bl	8005bac <FLASH_Program_HalfWord>
 8005d54:	e7eb      	b.n	8005d2e <HAL_FLASH_Program+0x3e>
    else if (TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8005d56:	2f02      	cmp	r7, #2
 8005d58:	d104      	bne.n	8005d64 <HAL_FLASH_Program+0x74>
      FLASH_Program_Word(Address, (uint32_t) Data);
 8005d5a:	4621      	mov	r1, r4
 8005d5c:	4628      	mov	r0, r5
 8005d5e:	f7ff ff13 	bl	8005b88 <FLASH_Program_Word>
 8005d62:	e7e4      	b.n	8005d2e <HAL_FLASH_Program+0x3e>
      FLASH_Program_DoubleWord(Address, Data);
 8005d64:	4622      	mov	r2, r4
 8005d66:	4643      	mov	r3, r8
 8005d68:	4628      	mov	r0, r5
 8005d6a:	f7ff fef7 	bl	8005b5c <FLASH_Program_DoubleWord>
 8005d6e:	e7de      	b.n	8005d2e <HAL_FLASH_Program+0x3e>
  __HAL_LOCK(&pFlash);
 8005d70:	2002      	movs	r0, #2
 8005d72:	e7e7      	b.n	8005d44 <HAL_FLASH_Program+0x54>
 8005d74:	20004a40 	.word	0x20004a40
 8005d78:	40023c00 	.word	0x40023c00

08005d7c <FLASH_MassErase>:
  /* Check the parameters */
  assert_param(IS_VOLTAGERANGE(VoltageRange));
  assert_param(IS_FLASH_BANK(Banks));

  /* if the previous operation is completed, proceed to erase all sectors */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8005d7c:	4b0c      	ldr	r3, [pc, #48]	@ (8005db0 <FLASH_MassErase+0x34>)
 8005d7e:	691a      	ldr	r2, [r3, #16]
 8005d80:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8005d84:	611a      	str	r2, [r3, #16]

  if (Banks == FLASH_BANK_BOTH)
 8005d86:	2903      	cmp	r1, #3
  {
    /* bank1 & bank2 will be erased*/
    FLASH->CR |= FLASH_MER_BIT;
 8005d88:	691a      	ldr	r2, [r3, #16]
  if (Banks == FLASH_BANK_BOTH)
 8005d8a:	d10b      	bne.n	8005da4 <FLASH_MassErase+0x28>
    FLASH->CR |= FLASH_MER_BIT;
 8005d8c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
  }
  else if (Banks == FLASH_BANK_1)
  {
    /*Only bank1 will be erased*/
    FLASH->CR |= FLASH_CR_MER1;
 8005d90:	f042 0204 	orr.w	r2, r2, #4
  }
  else
  {
    /*Only bank2 will be erased*/
    FLASH->CR |= FLASH_CR_MER2;
 8005d94:	611a      	str	r2, [r3, #16]
  }
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 8005d96:	691a      	ldr	r2, [r3, #16]
 8005d98:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 8005d9c:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
 8005da0:	6118      	str	r0, [r3, #16]
}
 8005da2:	4770      	bx	lr
  else if (Banks == FLASH_BANK_1)
 8005da4:	2901      	cmp	r1, #1
 8005da6:	d0f3      	beq.n	8005d90 <FLASH_MassErase+0x14>
    FLASH->CR |= FLASH_CR_MER2;
 8005da8:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005dac:	e7f2      	b.n	8005d94 <FLASH_MassErase+0x18>
 8005dae:	bf00      	nop
 8005db0:	40023c00 	.word	0x40023c00

08005db4 <FLASH_Erase_Sector>:
  if (Sector > FLASH_SECTOR_11)
  {
    Sector += 4U;
  }
  /* If the previous operation is completed, proceed to erase the sector */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8005db4:	4b0f      	ldr	r3, [pc, #60]	@ (8005df4 <FLASH_Erase_Sector+0x40>)
 8005db6:	691a      	ldr	r2, [r3, #16]
 8005db8:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8005dbc:	611a      	str	r2, [r3, #16]
  FLASH->CR |= tmp_psize;
 8005dbe:	691a      	ldr	r2, [r3, #16]
 8005dc0:	2902      	cmp	r1, #2
 8005dc2:	bf94      	ite	ls
 8005dc4:	0209      	lslls	r1, r1, #8
{
 8005dc6:	f44f 7140 	movhi.w	r1, #768	@ 0x300
  FLASH->CR |= tmp_psize;
 8005dca:	430a      	orrs	r2, r1
 8005dcc:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 8005dce:	691a      	ldr	r2, [r3, #16]
 8005dd0:	f022 02f8 	bic.w	r2, r2, #248	@ 0xf8
 8005dd4:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8005dd6:	691a      	ldr	r2, [r3, #16]
  if (Sector > FLASH_SECTOR_11)
 8005dd8:	280b      	cmp	r0, #11
    Sector += 4U;
 8005dda:	bf88      	it	hi
 8005ddc:	3004      	addhi	r0, #4
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8005dde:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 8005de2:	f042 0202 	orr.w	r2, r2, #2
 8005de6:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_STRT;
 8005de8:	691a      	ldr	r2, [r3, #16]
 8005dea:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8005dee:	611a      	str	r2, [r3, #16]
}
 8005df0:	4770      	bx	lr
 8005df2:	bf00      	nop
 8005df4:	40023c00 	.word	0x40023c00

08005df8 <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 8005df8:	4b14      	ldr	r3, [pc, #80]	@ (8005e4c <FLASH_FlushCaches+0x54>)
 8005dfa:	681a      	ldr	r2, [r3, #0]
 8005dfc:	0591      	lsls	r1, r2, #22
 8005dfe:	d50f      	bpl.n	8005e20 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 8005e00:	681a      	ldr	r2, [r3, #0]
 8005e02:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8005e06:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 8005e08:	681a      	ldr	r2, [r3, #0]
 8005e0a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005e0e:	601a      	str	r2, [r3, #0]
 8005e10:	681a      	ldr	r2, [r3, #0]
 8005e12:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005e16:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005e18:	681a      	ldr	r2, [r3, #0]
 8005e1a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005e1e:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 8005e20:	4b0a      	ldr	r3, [pc, #40]	@ (8005e4c <FLASH_FlushCaches+0x54>)
 8005e22:	681a      	ldr	r2, [r3, #0]
 8005e24:	0552      	lsls	r2, r2, #21
 8005e26:	d50f      	bpl.n	8005e48 <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 8005e28:	681a      	ldr	r2, [r3, #0]
 8005e2a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005e2e:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 8005e30:	681a      	ldr	r2, [r3, #0]
 8005e32:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8005e36:	601a      	str	r2, [r3, #0]
 8005e38:	681a      	ldr	r2, [r3, #0]
 8005e3a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8005e3e:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 8005e40:	681a      	ldr	r2, [r3, #0]
 8005e42:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8005e46:	601a      	str	r2, [r3, #0]
  }
}
 8005e48:	4770      	bx	lr
 8005e4a:	bf00      	nop
 8005e4c:	40023c00 	.word	0x40023c00

08005e50 <HAL_FLASHEx_Erase>:
{
 8005e50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 8005e54:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 8005ef4 <HAL_FLASHEx_Erase+0xa4>
 8005e58:	f898 3018 	ldrb.w	r3, [r8, #24]
 8005e5c:	2b01      	cmp	r3, #1
{
 8005e5e:	4605      	mov	r5, r0
 8005e60:	460f      	mov	r7, r1
  __HAL_LOCK(&pFlash);
 8005e62:	d042      	beq.n	8005eea <HAL_FLASHEx_Erase+0x9a>
 8005e64:	2301      	movs	r3, #1
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005e66:	f24c 3050 	movw	r0, #50000	@ 0xc350
  __HAL_LOCK(&pFlash);
 8005e6a:	f888 3018 	strb.w	r3, [r8, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005e6e:	f7ff ff17 	bl	8005ca0 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 8005e72:	4604      	mov	r4, r0
 8005e74:	b9b8      	cbnz	r0, 8005ea6 <HAL_FLASHEx_Erase+0x56>
    *SectorError = 0xFFFFFFFFU;
 8005e76:	f04f 33ff 	mov.w	r3, #4294967295
 8005e7a:	603b      	str	r3, [r7, #0]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 8005e7c:	682b      	ldr	r3, [r5, #0]
 8005e7e:	2b01      	cmp	r3, #1
 8005e80:	d117      	bne.n	8005eb2 <HAL_FLASHEx_Erase+0x62>
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8005e82:	6869      	ldr	r1, [r5, #4]
 8005e84:	7c28      	ldrb	r0, [r5, #16]
 8005e86:	f7ff ff79 	bl	8005d7c <FLASH_MassErase>
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005e8a:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8005e8e:	f7ff ff07 	bl	8005ca0 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 8005e92:	4a17      	ldr	r2, [pc, #92]	@ (8005ef0 <HAL_FLASHEx_Erase+0xa0>)
 8005e94:	6913      	ldr	r3, [r2, #16]
 8005e96:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8005e9a:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005e9e:	4604      	mov	r4, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 8005ea0:	6113      	str	r3, [r2, #16]
    FLASH_FlushCaches();
 8005ea2:	f7ff ffa9 	bl	8005df8 <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 8005ea6:	2300      	movs	r3, #0
 8005ea8:	f888 3018 	strb.w	r3, [r8, #24]
}
 8005eac:	4620      	mov	r0, r4
 8005eae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8005eb2:	68ae      	ldr	r6, [r5, #8]
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 8005eb4:	f8df 9038 	ldr.w	r9, [pc, #56]	@ 8005ef0 <HAL_FLASHEx_Erase+0xa0>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8005eb8:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8005ebc:	4413      	add	r3, r2
 8005ebe:	42b3      	cmp	r3, r6
 8005ec0:	d9ef      	bls.n	8005ea2 <HAL_FLASHEx_Erase+0x52>
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 8005ec2:	7c29      	ldrb	r1, [r5, #16]
 8005ec4:	4630      	mov	r0, r6
 8005ec6:	f7ff ff75 	bl	8005db4 <FLASH_Erase_Sector>
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005eca:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8005ece:	f7ff fee7 	bl	8005ca0 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 8005ed2:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8005ed6:	f023 03fa 	bic.w	r3, r3, #250	@ 0xfa
 8005eda:	f8c9 3010 	str.w	r3, [r9, #16]
        if (status != HAL_OK)
 8005ede:	b110      	cbz	r0, 8005ee6 <HAL_FLASHEx_Erase+0x96>
          *SectorError = index;
 8005ee0:	603e      	str	r6, [r7, #0]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005ee2:	4604      	mov	r4, r0
          break;
 8005ee4:	e7dd      	b.n	8005ea2 <HAL_FLASHEx_Erase+0x52>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8005ee6:	3601      	adds	r6, #1
 8005ee8:	e7e6      	b.n	8005eb8 <HAL_FLASHEx_Erase+0x68>
  __HAL_LOCK(&pFlash);
 8005eea:	2402      	movs	r4, #2
 8005eec:	e7de      	b.n	8005eac <HAL_FLASHEx_Erase+0x5c>
 8005eee:	bf00      	nop
 8005ef0:	40023c00 	.word	0x40023c00
 8005ef4:	20004a40 	.word	0x20004a40

08005ef8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005ef8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005efc:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 80060bc <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8005f00:	4a6c      	ldr	r2, [pc, #432]	@ (80060b4 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005f02:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005f04:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8005f06:	2401      	movs	r4, #1
 8005f08:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005f0a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8005f0e:	43ac      	bics	r4, r5
 8005f10:	f040 80b7 	bne.w	8006082 <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005f14:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005f16:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005f18:	f005 0403 	and.w	r4, r5, #3
 8005f1c:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005f20:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005f24:	1e67      	subs	r7, r4, #1
 8005f26:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005f28:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005f2c:	d834      	bhi.n	8005f98 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8005f2e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005f30:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8005f34:	68cf      	ldr	r7, [r1, #12]
 8005f36:	fa07 f708 	lsl.w	r7, r7, r8
 8005f3a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8005f3e:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8005f40:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005f42:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8005f46:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8005f4a:	409f      	lsls	r7, r3
 8005f4c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8005f50:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8005f52:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8005f54:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005f58:	688f      	ldr	r7, [r1, #8]
 8005f5a:	fa07 f708 	lsl.w	r7, r7, r8
 8005f5e:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005f62:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8005f64:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005f66:	d119      	bne.n	8005f9c <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8005f68:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8005f6c:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005f70:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8005f74:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005f78:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8005f7c:	f04f 0e0f 	mov.w	lr, #15
 8005f80:	fa0e fe0b 	lsl.w	lr, lr, fp
 8005f84:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8005f88:	690f      	ldr	r7, [r1, #16]
 8005f8a:	fa07 f70b 	lsl.w	r7, r7, fp
 8005f8e:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8005f92:	f8ca 7020 	str.w	r7, [sl, #32]
 8005f96:	e001      	b.n	8005f9c <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8005f98:	2c03      	cmp	r4, #3
 8005f9a:	d1da      	bne.n	8005f52 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8005f9c:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005f9e:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8005fa2:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005fa6:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8005fa8:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8005fac:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8005fae:	d068      	beq.n	8006082 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005fb0:	2400      	movs	r4, #0
 8005fb2:	9401      	str	r4, [sp, #4]
 8005fb4:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8005fb8:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8005fbc:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8005fc0:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8005fc4:	f023 0703 	bic.w	r7, r3, #3
 8005fc8:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8005fcc:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8005fd0:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8005fd4:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005fd6:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005fda:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8005fdc:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005fe0:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8005fe4:	240f      	movs	r4, #15
 8005fe6:	fa04 f40c 	lsl.w	r4, r4, ip
 8005fea:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005fee:	4c32      	ldr	r4, [pc, #200]	@ (80060b8 <HAL_GPIO_Init+0x1c0>)
 8005ff0:	42a0      	cmp	r0, r4
 8005ff2:	d04d      	beq.n	8006090 <HAL_GPIO_Init+0x198>
 8005ff4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005ff8:	42a0      	cmp	r0, r4
 8005ffa:	d04b      	beq.n	8006094 <HAL_GPIO_Init+0x19c>
 8005ffc:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8006000:	42a0      	cmp	r0, r4
 8006002:	d049      	beq.n	8006098 <HAL_GPIO_Init+0x1a0>
 8006004:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8006008:	42a0      	cmp	r0, r4
 800600a:	d047      	beq.n	800609c <HAL_GPIO_Init+0x1a4>
 800600c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8006010:	42a0      	cmp	r0, r4
 8006012:	d045      	beq.n	80060a0 <HAL_GPIO_Init+0x1a8>
 8006014:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8006018:	42a0      	cmp	r0, r4
 800601a:	d043      	beq.n	80060a4 <HAL_GPIO_Init+0x1ac>
 800601c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8006020:	42a0      	cmp	r0, r4
 8006022:	d041      	beq.n	80060a8 <HAL_GPIO_Init+0x1b0>
 8006024:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8006028:	42a0      	cmp	r0, r4
 800602a:	d03f      	beq.n	80060ac <HAL_GPIO_Init+0x1b4>
 800602c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8006030:	42a0      	cmp	r0, r4
 8006032:	d03d      	beq.n	80060b0 <HAL_GPIO_Init+0x1b8>
 8006034:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8006038:	42a0      	cmp	r0, r4
 800603a:	bf14      	ite	ne
 800603c:	240a      	movne	r4, #10
 800603e:	2409      	moveq	r4, #9
 8006040:	fa04 f40c 	lsl.w	r4, r4, ip
 8006044:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8006048:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 800604a:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800604c:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800604e:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 8006052:	bf0c      	ite	eq
 8006054:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8006056:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8006058:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800605a:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800605c:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 8006060:	bf0c      	ite	eq
 8006062:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8006064:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8006066:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8006068:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800606a:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 800606e:	bf0c      	ite	eq
 8006070:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8006072:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 8006074:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8006076:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8006078:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800607a:	bf54      	ite	pl
 800607c:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 800607e:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 8006080:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006082:	3301      	adds	r3, #1
 8006084:	2b10      	cmp	r3, #16
 8006086:	f47f af3d 	bne.w	8005f04 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800608a:	b003      	add	sp, #12
 800608c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006090:	2400      	movs	r4, #0
 8006092:	e7d5      	b.n	8006040 <HAL_GPIO_Init+0x148>
 8006094:	2401      	movs	r4, #1
 8006096:	e7d3      	b.n	8006040 <HAL_GPIO_Init+0x148>
 8006098:	2402      	movs	r4, #2
 800609a:	e7d1      	b.n	8006040 <HAL_GPIO_Init+0x148>
 800609c:	2403      	movs	r4, #3
 800609e:	e7cf      	b.n	8006040 <HAL_GPIO_Init+0x148>
 80060a0:	2404      	movs	r4, #4
 80060a2:	e7cd      	b.n	8006040 <HAL_GPIO_Init+0x148>
 80060a4:	2405      	movs	r4, #5
 80060a6:	e7cb      	b.n	8006040 <HAL_GPIO_Init+0x148>
 80060a8:	2406      	movs	r4, #6
 80060aa:	e7c9      	b.n	8006040 <HAL_GPIO_Init+0x148>
 80060ac:	2407      	movs	r4, #7
 80060ae:	e7c7      	b.n	8006040 <HAL_GPIO_Init+0x148>
 80060b0:	2408      	movs	r4, #8
 80060b2:	e7c5      	b.n	8006040 <HAL_GPIO_Init+0x148>
 80060b4:	40013c00 	.word	0x40013c00
 80060b8:	40020000 	.word	0x40020000
 80060bc:	40023800 	.word	0x40023800

080060c0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80060c0:	6903      	ldr	r3, [r0, #16]
 80060c2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80060c4:	bf14      	ite	ne
 80060c6:	2001      	movne	r0, #1
 80060c8:	2000      	moveq	r0, #0
 80060ca:	4770      	bx	lr

080060cc <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80060cc:	b10a      	cbz	r2, 80060d2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80060ce:	6181      	str	r1, [r0, #24]
  }
}
 80060d0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80060d2:	0409      	lsls	r1, r1, #16
 80060d4:	e7fb      	b.n	80060ce <HAL_GPIO_WritePin+0x2>

080060d6 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80060d6:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80060d8:	ea01 0203 	and.w	r2, r1, r3
 80060dc:	ea21 0103 	bic.w	r1, r1, r3
 80060e0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80060e4:	6181      	str	r1, [r0, #24]
}
 80060e6:	4770      	bx	lr

080060e8 <HAL_GPIO_EXTI_IRQHandler>:
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80060e8:	4a04      	ldr	r2, [pc, #16]	@ (80060fc <HAL_GPIO_EXTI_IRQHandler+0x14>)
 80060ea:	6951      	ldr	r1, [r2, #20]
 80060ec:	4201      	tst	r1, r0
{
 80060ee:	b508      	push	{r3, lr}
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80060f0:	d002      	beq.n	80060f8 <HAL_GPIO_EXTI_IRQHandler+0x10>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80060f2:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80060f4:	f7fb fabe 	bl	8001674 <HAL_GPIO_EXTI_Callback>
  }
}
 80060f8:	bd08      	pop	{r3, pc}
 80060fa:	bf00      	nop
 80060fc:	40013c00 	.word	0x40013c00

08006100 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006100:	6801      	ldr	r1, [r0, #0]
 8006102:	694b      	ldr	r3, [r1, #20]
 8006104:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 8006108:	f04f 0200 	mov.w	r2, #0
 800610c:	d010      	beq.n	8006130 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800610e:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8006112:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8006114:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006116:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8006118:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800611c:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006120:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006122:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006126:	f043 0304 	orr.w	r3, r3, #4
 800612a:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 800612c:	2001      	movs	r0, #1
 800612e:	4770      	bx	lr
  }
  return HAL_OK;
 8006130:	4618      	mov	r0, r3
}
 8006132:	4770      	bx	lr

08006134 <I2C_WaitOnFlagUntilTimeout>:
{
 8006134:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8006138:	4606      	mov	r6, r0
 800613a:	460f      	mov	r7, r1
 800613c:	4691      	mov	r9, r2
 800613e:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006140:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006144:	6833      	ldr	r3, [r6, #0]
 8006146:	f1ba 0f01 	cmp.w	sl, #1
 800614a:	bf0c      	ite	eq
 800614c:	695c      	ldreq	r4, [r3, #20]
 800614e:	699c      	ldrne	r4, [r3, #24]
 8006150:	ea27 0404 	bic.w	r4, r7, r4
 8006154:	b2a4      	uxth	r4, r4
 8006156:	fab4 f484 	clz	r4, r4
 800615a:	0964      	lsrs	r4, r4, #5
 800615c:	45a1      	cmp	r9, r4
 800615e:	d001      	beq.n	8006164 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8006160:	2000      	movs	r0, #0
 8006162:	e025      	b.n	80061b0 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 8006164:	1c6a      	adds	r2, r5, #1
 8006166:	d0ee      	beq.n	8006146 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006168:	f7ff fb82 	bl	8005870 <HAL_GetTick>
 800616c:	9b08      	ldr	r3, [sp, #32]
 800616e:	1ac0      	subs	r0, r0, r3
 8006170:	42a8      	cmp	r0, r5
 8006172:	d801      	bhi.n	8006178 <I2C_WaitOnFlagUntilTimeout+0x44>
 8006174:	2d00      	cmp	r5, #0
 8006176:	d1e5      	bne.n	8006144 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8006178:	6833      	ldr	r3, [r6, #0]
 800617a:	f1ba 0f01 	cmp.w	sl, #1
 800617e:	bf0c      	ite	eq
 8006180:	695b      	ldreq	r3, [r3, #20]
 8006182:	699b      	ldrne	r3, [r3, #24]
 8006184:	ea27 0303 	bic.w	r3, r7, r3
 8006188:	b29b      	uxth	r3, r3
 800618a:	fab3 f383 	clz	r3, r3
 800618e:	095b      	lsrs	r3, r3, #5
 8006190:	4599      	cmp	r9, r3
 8006192:	d1d7      	bne.n	8006144 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 8006194:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 8006196:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 8006198:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800619a:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 800619e:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80061a2:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80061a4:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80061a8:	f042 0220 	orr.w	r2, r2, #32
 80061ac:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 80061ae:	2001      	movs	r0, #1
}
 80061b0:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080061b4 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80061b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80061b8:	4604      	mov	r4, r0
 80061ba:	460f      	mov	r7, r1
 80061bc:	4616      	mov	r6, r2
 80061be:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80061c0:	6825      	ldr	r5, [r4, #0]
 80061c2:	6968      	ldr	r0, [r5, #20]
 80061c4:	ea27 0000 	bic.w	r0, r7, r0
 80061c8:	b280      	uxth	r0, r0
 80061ca:	b1c0      	cbz	r0, 80061fe <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80061cc:	696b      	ldr	r3, [r5, #20]
 80061ce:	055a      	lsls	r2, r3, #21
 80061d0:	d517      	bpl.n	8006202 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80061d2:	682b      	ldr	r3, [r5, #0]
 80061d4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80061d8:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80061da:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 80061de:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80061e0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80061e2:	2300      	movs	r3, #0
 80061e4:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80061e6:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80061ea:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80061ee:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80061f0:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80061f4:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80061f6:	2300      	movs	r3, #0
 80061f8:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 80061fc:	2001      	movs	r0, #1
}
 80061fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8006202:	1c73      	adds	r3, r6, #1
 8006204:	d0dd      	beq.n	80061c2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006206:	f7ff fb33 	bl	8005870 <HAL_GetTick>
 800620a:	eba0 0008 	sub.w	r0, r0, r8
 800620e:	42b0      	cmp	r0, r6
 8006210:	d801      	bhi.n	8006216 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 8006212:	2e00      	cmp	r6, #0
 8006214:	d1d4      	bne.n	80061c0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8006216:	6823      	ldr	r3, [r4, #0]
 8006218:	695a      	ldr	r2, [r3, #20]
 800621a:	ea27 0202 	bic.w	r2, r7, r2
 800621e:	b292      	uxth	r2, r2
 8006220:	2a00      	cmp	r2, #0
 8006222:	d0cd      	beq.n	80061c0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 8006224:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 8006226:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8006228:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800622a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800622e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006232:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8006234:	4313      	orrs	r3, r2
 8006236:	e7dd      	b.n	80061f4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08006238 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8006238:	b570      	push	{r4, r5, r6, lr}
 800623a:	4604      	mov	r4, r0
 800623c:	460d      	mov	r5, r1
 800623e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8006240:	6823      	ldr	r3, [r4, #0]
 8006242:	695b      	ldr	r3, [r3, #20]
 8006244:	061b      	lsls	r3, r3, #24
 8006246:	d501      	bpl.n	800624c <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8006248:	2000      	movs	r0, #0
 800624a:	e01e      	b.n	800628a <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800624c:	4620      	mov	r0, r4
 800624e:	f7ff ff57 	bl	8006100 <I2C_IsAcknowledgeFailed>
 8006252:	b9c8      	cbnz	r0, 8006288 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8006254:	1c6a      	adds	r2, r5, #1
 8006256:	d0f3      	beq.n	8006240 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006258:	f7ff fb0a 	bl	8005870 <HAL_GetTick>
 800625c:	1b80      	subs	r0, r0, r6
 800625e:	42a8      	cmp	r0, r5
 8006260:	d801      	bhi.n	8006266 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8006262:	2d00      	cmp	r5, #0
 8006264:	d1ec      	bne.n	8006240 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8006266:	6823      	ldr	r3, [r4, #0]
 8006268:	695b      	ldr	r3, [r3, #20]
 800626a:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 800626e:	d1e7      	bne.n	8006240 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8006270:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8006272:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8006274:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006278:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800627c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800627e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006282:	f042 0220 	orr.w	r2, r2, #32
 8006286:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8006288:	2001      	movs	r0, #1
}
 800628a:	bd70      	pop	{r4, r5, r6, pc}

0800628c <I2C_RequestMemoryWrite>:
{
 800628c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006290:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006292:	6802      	ldr	r2, [r0, #0]
{
 8006294:	b085      	sub	sp, #20
 8006296:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 800629a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800629c:	6813      	ldr	r3, [r2, #0]
 800629e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80062a2:	6013      	str	r3, [r2, #0]
{
 80062a4:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80062a6:	463b      	mov	r3, r7
 80062a8:	f8cd 8000 	str.w	r8, [sp]
 80062ac:	2200      	movs	r2, #0
 80062ae:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 80062b2:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80062b4:	f7ff ff3e 	bl	8006134 <I2C_WaitOnFlagUntilTimeout>
 80062b8:	6823      	ldr	r3, [r4, #0]
 80062ba:	b138      	cbz	r0, 80062cc <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80062bc:	681b      	ldr	r3, [r3, #0]
 80062be:	05db      	lsls	r3, r3, #23
 80062c0:	d502      	bpl.n	80062c8 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80062c2:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80062c6:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 80062c8:	2603      	movs	r6, #3
 80062ca:	e020      	b.n	800630e <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80062cc:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 80062d0:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80062d2:	491a      	ldr	r1, [pc, #104]	@ (800633c <I2C_RequestMemoryWrite+0xb0>)
 80062d4:	4643      	mov	r3, r8
 80062d6:	463a      	mov	r2, r7
 80062d8:	4620      	mov	r0, r4
 80062da:	f7ff ff6b 	bl	80061b4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80062de:	b9a8      	cbnz	r0, 800630c <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80062e0:	6823      	ldr	r3, [r4, #0]
 80062e2:	9003      	str	r0, [sp, #12]
 80062e4:	695a      	ldr	r2, [r3, #20]
 80062e6:	9203      	str	r2, [sp, #12]
 80062e8:	699b      	ldr	r3, [r3, #24]
 80062ea:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80062ec:	4642      	mov	r2, r8
 80062ee:	4639      	mov	r1, r7
 80062f0:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80062f2:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80062f4:	f7ff ffa0 	bl	8006238 <I2C_WaitOnTXEFlagUntilTimeout>
 80062f8:	4606      	mov	r6, r0
 80062fa:	b160      	cbz	r0, 8006316 <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80062fc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80062fe:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006300:	bf01      	itttt	eq
 8006302:	6822      	ldreq	r2, [r4, #0]
 8006304:	6813      	ldreq	r3, [r2, #0]
 8006306:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800630a:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 800630c:	2601      	movs	r6, #1
}
 800630e:	4630      	mov	r0, r6
 8006310:	b005      	add	sp, #20
 8006312:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006316:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800631a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800631c:	d102      	bne.n	8006324 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800631e:	b2ed      	uxtb	r5, r5
 8006320:	611d      	str	r5, [r3, #16]
 8006322:	e7f4      	b.n	800630e <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006324:	0a2a      	lsrs	r2, r5, #8
 8006326:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006328:	4639      	mov	r1, r7
 800632a:	4642      	mov	r2, r8
 800632c:	4620      	mov	r0, r4
 800632e:	f7ff ff83 	bl	8006238 <I2C_WaitOnTXEFlagUntilTimeout>
 8006332:	2800      	cmp	r0, #0
 8006334:	d1e2      	bne.n	80062fc <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006336:	6823      	ldr	r3, [r4, #0]
 8006338:	e7f1      	b.n	800631e <I2C_RequestMemoryWrite+0x92>
 800633a:	bf00      	nop
 800633c:	00010002 	.word	0x00010002

08006340 <I2C_RequestMemoryRead>:
{
 8006340:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006344:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006346:	6803      	ldr	r3, [r0, #0]
{
 8006348:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800634a:	681a      	ldr	r2, [r3, #0]
 800634c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8006350:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006352:	681a      	ldr	r2, [r3, #0]
{
 8006354:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006358:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800635c:	601a      	str	r2, [r3, #0]
{
 800635e:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006360:	463b      	mov	r3, r7
 8006362:	f8cd 8000 	str.w	r8, [sp]
 8006366:	2200      	movs	r2, #0
 8006368:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 800636c:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800636e:	f7ff fee1 	bl	8006134 <I2C_WaitOnFlagUntilTimeout>
 8006372:	6823      	ldr	r3, [r4, #0]
 8006374:	b138      	cbz	r0, 8006386 <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006376:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006378:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800637a:	bf44      	itt	mi
 800637c:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8006380:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8006382:	2003      	movs	r0, #3
 8006384:	e021      	b.n	80063ca <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006386:	fa5f f986 	uxtb.w	r9, r6
 800638a:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 800638e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006390:	492b      	ldr	r1, [pc, #172]	@ (8006440 <I2C_RequestMemoryRead+0x100>)
 8006392:	4643      	mov	r3, r8
 8006394:	463a      	mov	r2, r7
 8006396:	4620      	mov	r0, r4
 8006398:	f7ff ff0c 	bl	80061b4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800639c:	b9a0      	cbnz	r0, 80063c8 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800639e:	6823      	ldr	r3, [r4, #0]
 80063a0:	9003      	str	r0, [sp, #12]
 80063a2:	695a      	ldr	r2, [r3, #20]
 80063a4:	9203      	str	r2, [sp, #12]
 80063a6:	699b      	ldr	r3, [r3, #24]
 80063a8:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80063aa:	4642      	mov	r2, r8
 80063ac:	4639      	mov	r1, r7
 80063ae:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80063b0:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80063b2:	f7ff ff41 	bl	8006238 <I2C_WaitOnTXEFlagUntilTimeout>
 80063b6:	b158      	cbz	r0, 80063d0 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80063b8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80063ba:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80063bc:	bf01      	itttt	eq
 80063be:	6822      	ldreq	r2, [r4, #0]
 80063c0:	6813      	ldreq	r3, [r2, #0]
 80063c2:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 80063c6:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 80063c8:	2001      	movs	r0, #1
}
 80063ca:	b004      	add	sp, #16
 80063cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80063d0:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80063d4:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80063d6:	d11a      	bne.n	800640e <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80063d8:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80063da:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80063dc:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80063de:	4639      	mov	r1, r7
 80063e0:	4620      	mov	r0, r4
 80063e2:	f7ff ff29 	bl	8006238 <I2C_WaitOnTXEFlagUntilTimeout>
 80063e6:	4602      	mov	r2, r0
 80063e8:	2800      	cmp	r0, #0
 80063ea:	d1e5      	bne.n	80063b8 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80063ec:	6821      	ldr	r1, [r4, #0]
 80063ee:	680b      	ldr	r3, [r1, #0]
 80063f0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80063f4:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80063f6:	4620      	mov	r0, r4
 80063f8:	f8cd 8000 	str.w	r8, [sp]
 80063fc:	463b      	mov	r3, r7
 80063fe:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8006402:	f7ff fe97 	bl	8006134 <I2C_WaitOnFlagUntilTimeout>
 8006406:	6822      	ldr	r2, [r4, #0]
 8006408:	b160      	cbz	r0, 8006424 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800640a:	6813      	ldr	r3, [r2, #0]
 800640c:	e7b4      	b.n	8006378 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800640e:	0a2a      	lsrs	r2, r5, #8
 8006410:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006412:	4639      	mov	r1, r7
 8006414:	4642      	mov	r2, r8
 8006416:	4620      	mov	r0, r4
 8006418:	f7ff ff0e 	bl	8006238 <I2C_WaitOnTXEFlagUntilTimeout>
 800641c:	2800      	cmp	r0, #0
 800641e:	d1cb      	bne.n	80063b8 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006420:	6823      	ldr	r3, [r4, #0]
 8006422:	e7d9      	b.n	80063d8 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8006424:	f049 0301 	orr.w	r3, r9, #1
 8006428:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800642a:	4905      	ldr	r1, [pc, #20]	@ (8006440 <I2C_RequestMemoryRead+0x100>)
 800642c:	4643      	mov	r3, r8
 800642e:	463a      	mov	r2, r7
 8006430:	4620      	mov	r0, r4
 8006432:	f7ff febf 	bl	80061b4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006436:	3800      	subs	r0, #0
 8006438:	bf18      	it	ne
 800643a:	2001      	movne	r0, #1
 800643c:	e7c5      	b.n	80063ca <I2C_RequestMemoryRead+0x8a>
 800643e:	bf00      	nop
 8006440:	00010002 	.word	0x00010002

08006444 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8006444:	b570      	push	{r4, r5, r6, lr}
 8006446:	4604      	mov	r4, r0
 8006448:	460d      	mov	r5, r1
 800644a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800644c:	6823      	ldr	r3, [r4, #0]
 800644e:	695b      	ldr	r3, [r3, #20]
 8006450:	075b      	lsls	r3, r3, #29
 8006452:	d501      	bpl.n	8006458 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8006454:	2000      	movs	r0, #0
 8006456:	e01e      	b.n	8006496 <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006458:	4620      	mov	r0, r4
 800645a:	f7ff fe51 	bl	8006100 <I2C_IsAcknowledgeFailed>
 800645e:	b9c8      	cbnz	r0, 8006494 <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8006460:	1c6a      	adds	r2, r5, #1
 8006462:	d0f3      	beq.n	800644c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006464:	f7ff fa04 	bl	8005870 <HAL_GetTick>
 8006468:	1b80      	subs	r0, r0, r6
 800646a:	42a8      	cmp	r0, r5
 800646c:	d801      	bhi.n	8006472 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800646e:	2d00      	cmp	r5, #0
 8006470:	d1ec      	bne.n	800644c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8006472:	6823      	ldr	r3, [r4, #0]
 8006474:	695b      	ldr	r3, [r3, #20]
 8006476:	f013 0304 	ands.w	r3, r3, #4
 800647a:	d1e7      	bne.n	800644c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 800647c:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800647e:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8006480:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006484:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006488:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800648a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800648e:	f042 0220 	orr.w	r2, r2, #32
 8006492:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8006494:	2001      	movs	r0, #1
}
 8006496:	bd70      	pop	{r4, r5, r6, pc}

08006498 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8006498:	b570      	push	{r4, r5, r6, lr}
 800649a:	4604      	mov	r4, r0
 800649c:	460d      	mov	r5, r1
 800649e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80064a0:	6821      	ldr	r1, [r4, #0]
 80064a2:	694b      	ldr	r3, [r1, #20]
 80064a4:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 80064a8:	d001      	beq.n	80064ae <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80064aa:	2000      	movs	r0, #0
 80064ac:	e011      	b.n	80064d2 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80064ae:	694a      	ldr	r2, [r1, #20]
 80064b0:	06d2      	lsls	r2, r2, #27
 80064b2:	d50f      	bpl.n	80064d4 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80064b4:	f06f 0210 	mvn.w	r2, #16
 80064b8:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80064ba:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80064bc:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80064be:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80064c2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80064c6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80064c8:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 80064ca:	2300      	movs	r3, #0
 80064cc:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 80064d0:	2001      	movs	r0, #1
}
 80064d2:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80064d4:	f7ff f9cc 	bl	8005870 <HAL_GetTick>
 80064d8:	1b80      	subs	r0, r0, r6
 80064da:	42a8      	cmp	r0, r5
 80064dc:	d801      	bhi.n	80064e2 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 80064de:	2d00      	cmp	r5, #0
 80064e0:	d1de      	bne.n	80064a0 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 80064e2:	6823      	ldr	r3, [r4, #0]
 80064e4:	695b      	ldr	r3, [r3, #20]
 80064e6:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 80064ea:	d1d9      	bne.n	80064a0 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 80064ec:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80064ee:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80064f0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80064f4:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80064f8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80064fa:	4313      	orrs	r3, r2
 80064fc:	e7e4      	b.n	80064c8 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08006500 <HAL_I2C_Init>:
{
 8006500:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8006502:	4604      	mov	r4, r0
 8006504:	b908      	cbnz	r0, 800650a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8006506:	2001      	movs	r0, #1
}
 8006508:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800650a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800650e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006512:	b91b      	cbnz	r3, 800651c <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8006514:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 8006518:	f7fb f950 	bl	80017bc <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800651c:	2324      	movs	r3, #36	@ 0x24
 800651e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8006522:	6823      	ldr	r3, [r4, #0]
 8006524:	681a      	ldr	r2, [r3, #0]
 8006526:	f022 0201 	bic.w	r2, r2, #1
 800652a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800652c:	681a      	ldr	r2, [r3, #0]
 800652e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8006532:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8006534:	681a      	ldr	r2, [r3, #0]
 8006536:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800653a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800653c:	f000 fea8 	bl	8007290 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8006540:	4b3f      	ldr	r3, [pc, #252]	@ (8006640 <HAL_I2C_Init+0x140>)
 8006542:	6865      	ldr	r5, [r4, #4]
 8006544:	429d      	cmp	r5, r3
 8006546:	bf94      	ite	ls
 8006548:	4b3e      	ldrls	r3, [pc, #248]	@ (8006644 <HAL_I2C_Init+0x144>)
 800654a:	4b3f      	ldrhi	r3, [pc, #252]	@ (8006648 <HAL_I2C_Init+0x148>)
 800654c:	4298      	cmp	r0, r3
 800654e:	bf8c      	ite	hi
 8006550:	2300      	movhi	r3, #0
 8006552:	2301      	movls	r3, #1
 8006554:	2b00      	cmp	r3, #0
 8006556:	d1d6      	bne.n	8006506 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006558:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800655a:	4e39      	ldr	r6, [pc, #228]	@ (8006640 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800655c:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800655e:	4b3b      	ldr	r3, [pc, #236]	@ (800664c <HAL_I2C_Init+0x14c>)
 8006560:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006564:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8006568:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800656a:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800656c:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800656e:	bf88      	it	hi
 8006570:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8006574:	6a11      	ldr	r1, [r2, #32]
 8006576:	bf88      	it	hi
 8006578:	4373      	mulhi	r3, r6
 800657a:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800657e:	bf84      	itt	hi
 8006580:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8006584:	fbb3 f3f6 	udivhi	r3, r3, r6
 8006588:	3301      	adds	r3, #1
 800658a:	430b      	orrs	r3, r1
 800658c:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800658e:	69d1      	ldr	r1, [r2, #28]
 8006590:	1e43      	subs	r3, r0, #1
 8006592:	482b      	ldr	r0, [pc, #172]	@ (8006640 <HAL_I2C_Init+0x140>)
 8006594:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 8006598:	4285      	cmp	r5, r0
 800659a:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800659e:	d832      	bhi.n	8006606 <HAL_I2C_Init+0x106>
 80065a0:	006d      	lsls	r5, r5, #1
 80065a2:	f640 70fc 	movw	r0, #4092	@ 0xffc
 80065a6:	fbb3 f3f5 	udiv	r3, r3, r5
 80065aa:	3301      	adds	r3, #1
 80065ac:	4203      	tst	r3, r0
 80065ae:	d042      	beq.n	8006636 <HAL_I2C_Init+0x136>
 80065b0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80065b4:	4319      	orrs	r1, r3
 80065b6:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80065b8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80065bc:	6811      	ldr	r1, [r2, #0]
 80065be:	4303      	orrs	r3, r0
 80065c0:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 80065c4:	430b      	orrs	r3, r1
 80065c6:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80065c8:	6891      	ldr	r1, [r2, #8]
 80065ca:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80065ce:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 80065d2:	4303      	orrs	r3, r0
 80065d4:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80065d8:	430b      	orrs	r3, r1
 80065da:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80065dc:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80065e0:	68d1      	ldr	r1, [r2, #12]
 80065e2:	4303      	orrs	r3, r0
 80065e4:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80065e8:	430b      	orrs	r3, r1
 80065ea:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80065ec:	6813      	ldr	r3, [r2, #0]
 80065ee:	f043 0301 	orr.w	r3, r3, #1
 80065f2:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80065f4:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80065f6:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80065f8:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80065fa:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80065fe:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006600:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 8006604:	e780      	b.n	8006508 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006606:	68a0      	ldr	r0, [r4, #8]
 8006608:	b950      	cbnz	r0, 8006620 <HAL_I2C_Init+0x120>
 800660a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800660e:	fbb3 f3f5 	udiv	r3, r3, r5
 8006612:	3301      	adds	r3, #1
 8006614:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006618:	b17b      	cbz	r3, 800663a <HAL_I2C_Init+0x13a>
 800661a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800661e:	e7c9      	b.n	80065b4 <HAL_I2C_Init+0xb4>
 8006620:	2019      	movs	r0, #25
 8006622:	4368      	muls	r0, r5
 8006624:	fbb3 f3f0 	udiv	r3, r3, r0
 8006628:	3301      	adds	r3, #1
 800662a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800662e:	b123      	cbz	r3, 800663a <HAL_I2C_Init+0x13a>
 8006630:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8006634:	e7be      	b.n	80065b4 <HAL_I2C_Init+0xb4>
 8006636:	2304      	movs	r3, #4
 8006638:	e7bc      	b.n	80065b4 <HAL_I2C_Init+0xb4>
 800663a:	2301      	movs	r3, #1
 800663c:	e7ba      	b.n	80065b4 <HAL_I2C_Init+0xb4>
 800663e:	bf00      	nop
 8006640:	000186a0 	.word	0x000186a0
 8006644:	001e847f 	.word	0x001e847f
 8006648:	003d08ff 	.word	0x003d08ff
 800664c:	000f4240 	.word	0x000f4240

08006650 <HAL_I2C_Mem_Write>:
{
 8006650:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006654:	4604      	mov	r4, r0
 8006656:	4699      	mov	r9, r3
 8006658:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800665a:	460f      	mov	r7, r1
 800665c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800665e:	f7ff f907 	bl	8005870 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006662:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8006666:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006668:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800666a:	d003      	beq.n	8006674 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 800666c:	2002      	movs	r0, #2
}
 800666e:	b003      	add	sp, #12
 8006670:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006674:	9000      	str	r0, [sp, #0]
 8006676:	493c      	ldr	r1, [pc, #240]	@ (8006768 <HAL_I2C_Mem_Write+0x118>)
 8006678:	2319      	movs	r3, #25
 800667a:	2201      	movs	r2, #1
 800667c:	4620      	mov	r0, r4
 800667e:	f7ff fd59 	bl	8006134 <I2C_WaitOnFlagUntilTimeout>
 8006682:	2800      	cmp	r0, #0
 8006684:	d1f2      	bne.n	800666c <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8006686:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800668a:	2b01      	cmp	r3, #1
 800668c:	d0ee      	beq.n	800666c <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800668e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006690:	2301      	movs	r3, #1
 8006692:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006696:	6803      	ldr	r3, [r0, #0]
 8006698:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800669a:	bf5e      	ittt	pl
 800669c:	6803      	ldrpl	r3, [r0, #0]
 800669e:	f043 0301 	orrpl.w	r3, r3, #1
 80066a2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80066a4:	6803      	ldr	r3, [r0, #0]
 80066a6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80066aa:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80066ac:	2321      	movs	r3, #33	@ 0x21
 80066ae:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80066b2:	2340      	movs	r3, #64	@ 0x40
 80066b4:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80066b8:	2300      	movs	r3, #0
 80066ba:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 80066bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80066be:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80066c0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80066c4:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80066c6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80066c8:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80066ca:	4b28      	ldr	r3, [pc, #160]	@ (800676c <HAL_I2C_Mem_Write+0x11c>)
 80066cc:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80066ce:	4642      	mov	r2, r8
 80066d0:	e9cd 6500 	strd	r6, r5, [sp]
 80066d4:	464b      	mov	r3, r9
 80066d6:	4639      	mov	r1, r7
 80066d8:	4620      	mov	r0, r4
 80066da:	f7ff fdd7 	bl	800628c <I2C_RequestMemoryWrite>
 80066de:	2800      	cmp	r0, #0
 80066e0:	d02a      	beq.n	8006738 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80066e2:	2001      	movs	r0, #1
 80066e4:	e7c3      	b.n	800666e <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80066e6:	f7ff fda7 	bl	8006238 <I2C_WaitOnTXEFlagUntilTimeout>
 80066ea:	b140      	cbz	r0, 80066fe <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80066ec:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80066ee:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80066f0:	bf01      	itttt	eq
 80066f2:	6822      	ldreq	r2, [r4, #0]
 80066f4:	6813      	ldreq	r3, [r2, #0]
 80066f6:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 80066fa:	6013      	streq	r3, [r2, #0]
 80066fc:	e7f1      	b.n	80066e2 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80066fe:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006700:	6827      	ldr	r7, [r4, #0]
 8006702:	461a      	mov	r2, r3
 8006704:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006708:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800670a:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 800670c:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800670e:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8006710:	3a01      	subs	r2, #1
 8006712:	b292      	uxth	r2, r2
 8006714:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006716:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006718:	1e48      	subs	r0, r1, #1
 800671a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800671c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800671e:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006720:	d50a      	bpl.n	8006738 <HAL_I2C_Mem_Write+0xe8>
 8006722:	b148      	cbz	r0, 8006738 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006724:	785a      	ldrb	r2, [r3, #1]
 8006726:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006728:	3302      	adds	r3, #2
 800672a:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800672c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800672e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006730:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006732:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006734:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 8006736:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8006738:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800673a:	462a      	mov	r2, r5
 800673c:	4631      	mov	r1, r6
 800673e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006740:	2b00      	cmp	r3, #0
 8006742:	d1d0      	bne.n	80066e6 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006744:	f7ff fe7e 	bl	8006444 <I2C_WaitOnBTFFlagUntilTimeout>
 8006748:	2800      	cmp	r0, #0
 800674a:	d1cf      	bne.n	80066ec <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800674c:	6822      	ldr	r2, [r4, #0]
 800674e:	6813      	ldr	r3, [r2, #0]
 8006750:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8006754:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006756:	2320      	movs	r3, #32
 8006758:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800675c:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006760:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 8006764:	e783      	b.n	800666e <HAL_I2C_Mem_Write+0x1e>
 8006766:	bf00      	nop
 8006768:	00100002 	.word	0x00100002
 800676c:	ffff0000 	.word	0xffff0000

08006770 <HAL_I2C_Mem_Read>:
{
 8006770:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006774:	4604      	mov	r4, r0
 8006776:	b087      	sub	sp, #28
 8006778:	4699      	mov	r9, r3
 800677a:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 800677c:	460d      	mov	r5, r1
 800677e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006780:	f7ff f876 	bl	8005870 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006784:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8006788:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800678a:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800678c:	d004      	beq.n	8006798 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 800678e:	2502      	movs	r5, #2
}
 8006790:	4628      	mov	r0, r5
 8006792:	b007      	add	sp, #28
 8006794:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006798:	9000      	str	r0, [sp, #0]
 800679a:	497a      	ldr	r1, [pc, #488]	@ (8006984 <HAL_I2C_Mem_Read+0x214>)
 800679c:	2319      	movs	r3, #25
 800679e:	2201      	movs	r2, #1
 80067a0:	4620      	mov	r0, r4
 80067a2:	f7ff fcc7 	bl	8006134 <I2C_WaitOnFlagUntilTimeout>
 80067a6:	2800      	cmp	r0, #0
 80067a8:	d1f1      	bne.n	800678e <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80067aa:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 80067ae:	2b01      	cmp	r3, #1
 80067b0:	d0ed      	beq.n	800678e <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80067b2:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80067b4:	2301      	movs	r3, #1
 80067b6:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80067ba:	6803      	ldr	r3, [r0, #0]
 80067bc:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80067be:	bf5e      	ittt	pl
 80067c0:	6803      	ldrpl	r3, [r0, #0]
 80067c2:	f043 0301 	orrpl.w	r3, r3, #1
 80067c6:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80067c8:	6803      	ldr	r3, [r0, #0]
 80067ca:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80067ce:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80067d0:	2322      	movs	r3, #34	@ 0x22
 80067d2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80067d6:	2340      	movs	r3, #64	@ 0x40
 80067d8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80067dc:	2300      	movs	r3, #0
 80067de:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 80067e0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80067e2:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80067e4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 80067e8:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80067ea:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80067ec:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80067ee:	4b66      	ldr	r3, [pc, #408]	@ (8006988 <HAL_I2C_Mem_Read+0x218>)
 80067f0:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80067f2:	4629      	mov	r1, r5
 80067f4:	e9cd 7600 	strd	r7, r6, [sp]
 80067f8:	464b      	mov	r3, r9
 80067fa:	4642      	mov	r2, r8
 80067fc:	4620      	mov	r0, r4
 80067fe:	f7ff fd9f 	bl	8006340 <I2C_RequestMemoryRead>
 8006802:	4605      	mov	r5, r0
 8006804:	b108      	cbz	r0, 800680a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8006806:	2501      	movs	r5, #1
 8006808:	e7c2      	b.n	8006790 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800680a:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800680c:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800680e:	b9b2      	cbnz	r2, 800683e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006810:	9002      	str	r0, [sp, #8]
 8006812:	695a      	ldr	r2, [r3, #20]
 8006814:	9202      	str	r2, [sp, #8]
 8006816:	699a      	ldr	r2, [r3, #24]
 8006818:	9202      	str	r2, [sp, #8]
 800681a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800681c:	681a      	ldr	r2, [r3, #0]
 800681e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8006822:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006824:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 800698c <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 8006828:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800682a:	2b00      	cmp	r3, #0
 800682c:	d12c      	bne.n	8006888 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800682e:	2220      	movs	r2, #32
 8006830:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8006834:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006838:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 800683c:	e7a8      	b.n	8006790 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800683e:	2a01      	cmp	r2, #1
 8006840:	d10a      	bne.n	8006858 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006842:	681a      	ldr	r2, [r3, #0]
 8006844:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8006848:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800684a:	9003      	str	r0, [sp, #12]
 800684c:	695a      	ldr	r2, [r3, #20]
 800684e:	9203      	str	r2, [sp, #12]
 8006850:	699a      	ldr	r2, [r3, #24]
 8006852:	9203      	str	r2, [sp, #12]
 8006854:	9a03      	ldr	r2, [sp, #12]
 8006856:	e7e1      	b.n	800681c <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006858:	2a02      	cmp	r2, #2
 800685a:	d10e      	bne.n	800687a <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800685c:	681a      	ldr	r2, [r3, #0]
 800685e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8006862:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006864:	681a      	ldr	r2, [r3, #0]
 8006866:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800686a:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800686c:	9004      	str	r0, [sp, #16]
 800686e:	695a      	ldr	r2, [r3, #20]
 8006870:	9204      	str	r2, [sp, #16]
 8006872:	699b      	ldr	r3, [r3, #24]
 8006874:	9304      	str	r3, [sp, #16]
 8006876:	9b04      	ldr	r3, [sp, #16]
 8006878:	e7d4      	b.n	8006824 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800687a:	9005      	str	r0, [sp, #20]
 800687c:	695a      	ldr	r2, [r3, #20]
 800687e:	9205      	str	r2, [sp, #20]
 8006880:	699b      	ldr	r3, [r3, #24]
 8006882:	9305      	str	r3, [sp, #20]
 8006884:	9b05      	ldr	r3, [sp, #20]
 8006886:	e7cd      	b.n	8006824 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006888:	2b03      	cmp	r3, #3
 800688a:	d856      	bhi.n	800693a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800688c:	2b01      	cmp	r3, #1
 800688e:	d115      	bne.n	80068bc <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006890:	4632      	mov	r2, r6
 8006892:	4639      	mov	r1, r7
 8006894:	4620      	mov	r0, r4
 8006896:	f7ff fdff 	bl	8006498 <I2C_WaitOnRXNEFlagUntilTimeout>
 800689a:	2800      	cmp	r0, #0
 800689c:	d1b3      	bne.n	8006806 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800689e:	6823      	ldr	r3, [r4, #0]
 80068a0:	691a      	ldr	r2, [r3, #16]
 80068a2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80068a4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80068a6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80068a8:	3301      	adds	r3, #1
 80068aa:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80068ac:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80068ae:	3b01      	subs	r3, #1
 80068b0:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80068b2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80068b4:	3b01      	subs	r3, #1
 80068b6:	b29b      	uxth	r3, r3
 80068b8:	8563      	strh	r3, [r4, #42]	@ 0x2a
 80068ba:	e7b5      	b.n	8006828 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80068bc:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80068be:	9600      	str	r6, [sp, #0]
 80068c0:	463b      	mov	r3, r7
 80068c2:	f04f 0200 	mov.w	r2, #0
 80068c6:	4641      	mov	r1, r8
 80068c8:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80068ca:	d119      	bne.n	8006900 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80068cc:	f7ff fc32 	bl	8006134 <I2C_WaitOnFlagUntilTimeout>
 80068d0:	2800      	cmp	r0, #0
 80068d2:	d198      	bne.n	8006806 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80068d4:	6823      	ldr	r3, [r4, #0]
 80068d6:	681a      	ldr	r2, [r3, #0]
 80068d8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80068dc:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80068de:	691a      	ldr	r2, [r3, #16]
 80068e0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80068e2:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80068e4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80068e6:	1c53      	adds	r3, r2, #1
 80068e8:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80068ea:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80068ec:	3b01      	subs	r3, #1
 80068ee:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80068f0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80068f2:	3b01      	subs	r3, #1
 80068f4:	b29b      	uxth	r3, r3
 80068f6:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80068f8:	6823      	ldr	r3, [r4, #0]
 80068fa:	691b      	ldr	r3, [r3, #16]
 80068fc:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 80068fe:	e7d2      	b.n	80068a6 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006900:	f7ff fc18 	bl	8006134 <I2C_WaitOnFlagUntilTimeout>
 8006904:	4602      	mov	r2, r0
 8006906:	2800      	cmp	r0, #0
 8006908:	f47f af7d 	bne.w	8006806 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800690c:	6823      	ldr	r3, [r4, #0]
 800690e:	6819      	ldr	r1, [r3, #0]
 8006910:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 8006914:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006916:	6919      	ldr	r1, [r3, #16]
 8006918:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800691a:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 800691c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800691e:	3301      	adds	r3, #1
 8006920:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8006922:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8006924:	3b01      	subs	r3, #1
 8006926:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8006928:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800692a:	3b01      	subs	r3, #1
 800692c:	b29b      	uxth	r3, r3
 800692e:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006930:	4641      	mov	r1, r8
 8006932:	9600      	str	r6, [sp, #0]
 8006934:	463b      	mov	r3, r7
 8006936:	4620      	mov	r0, r4
 8006938:	e7c8      	b.n	80068cc <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800693a:	4632      	mov	r2, r6
 800693c:	4639      	mov	r1, r7
 800693e:	4620      	mov	r0, r4
 8006940:	f7ff fdaa 	bl	8006498 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006944:	2800      	cmp	r0, #0
 8006946:	f47f af5e 	bne.w	8006806 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800694a:	6823      	ldr	r3, [r4, #0]
 800694c:	691a      	ldr	r2, [r3, #16]
 800694e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006950:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 8006952:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 8006954:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8006956:	3a01      	subs	r2, #1
 8006958:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800695a:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 800695c:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800695e:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 8006960:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 8006962:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006964:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 8006966:	3b01      	subs	r3, #1
 8006968:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800696a:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 800696c:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800696e:	f57f af5b 	bpl.w	8006828 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 8006972:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006974:	bf02      	ittt	eq
 8006976:	6813      	ldreq	r3, [r2, #0]
 8006978:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 800697c:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800697e:	6913      	ldr	r3, [r2, #16]
 8006980:	704b      	strb	r3, [r1, #1]
 8006982:	e790      	b.n	80068a6 <HAL_I2C_Mem_Read+0x136>
 8006984:	00100002 	.word	0x00100002
 8006988:	ffff0000 	.word	0xffff0000
 800698c:	00010004 	.word	0x00010004

08006990 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006990:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006992:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006996:	2b20      	cmp	r3, #32
 8006998:	b2dc      	uxtb	r4, r3
 800699a:	d116      	bne.n	80069ca <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 800699c:	2324      	movs	r3, #36	@ 0x24
 800699e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80069a2:	6803      	ldr	r3, [r0, #0]
 80069a4:	681a      	ldr	r2, [r3, #0]
 80069a6:	f022 0201 	bic.w	r2, r2, #1
 80069aa:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 80069ac:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80069ae:	f022 0210 	bic.w	r2, r2, #16
 80069b2:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80069b4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80069b6:	4311      	orrs	r1, r2
 80069b8:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 80069ba:	681a      	ldr	r2, [r3, #0]
 80069bc:	f042 0201 	orr.w	r2, r2, #1
 80069c0:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80069c2:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 80069c6:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80069c8:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80069ca:	2002      	movs	r0, #2
 80069cc:	e7fc      	b.n	80069c8 <HAL_I2CEx_ConfigAnalogFilter+0x38>

080069ce <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80069ce:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80069d0:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80069d4:	2b20      	cmp	r3, #32
 80069d6:	b2dc      	uxtb	r4, r3
 80069d8:	d116      	bne.n	8006a08 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80069da:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 80069dc:	2324      	movs	r3, #36	@ 0x24
 80069de:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80069e2:	6813      	ldr	r3, [r2, #0]
 80069e4:	f023 0301 	bic.w	r3, r3, #1
 80069e8:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80069ea:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 80069ec:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 80069f0:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 80069f2:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 80069f4:	b29b      	uxth	r3, r3
 80069f6:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 80069f8:	6813      	ldr	r3, [r2, #0]
 80069fa:	f043 0301 	orr.w	r3, r3, #1
 80069fe:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006a00:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8006a04:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006a06:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8006a08:	2002      	movs	r0, #2
 8006a0a:	e7fc      	b.n	8006a06 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08006a0c <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006a0c:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006a0e:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006a12:	01d2      	lsls	r2, r2, #7
 8006a14:	3284      	adds	r2, #132	@ 0x84
 8006a16:	1883      	adds	r3, r0, r2
{
 8006a18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006a1c:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006a1e:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006a20:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006a22:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006a26:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8006a2a:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006a2c:	68c5      	ldr	r5, [r0, #12]
 8006a2e:	f10c 0701 	add.w	r7, ip, #1
 8006a32:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006a36:	f3c6 460b 	ubfx	r6, r6, #16, #12
 8006a3a:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006a3c:	443d      	add	r5, r7
 8006a3e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006a42:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006a44:	68c6      	ldr	r6, [r0, #12]
 8006a46:	68cd      	ldr	r5, [r1, #12]
 8006a48:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8006a4c:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006a4e:	689d      	ldr	r5, [r3, #8]
 8006a50:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8006a54:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8006a56:	68c7      	ldr	r7, [r0, #12]
 8006a58:	688d      	ldr	r5, [r1, #8]
 8006a5a:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006a5e:	3501      	adds	r5, #1
 8006a60:	443d      	add	r5, r7
 8006a62:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006a66:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006a68:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006a6a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006a6c:	f025 0507 	bic.w	r5, r5, #7
 8006a70:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8006a72:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006a76:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8006a78:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8006a7c:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006a7e:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8006a82:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8006a86:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8006a8a:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006a8e:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8006a92:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006a96:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006a98:	695d      	ldr	r5, [r3, #20]
 8006a9a:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8006a9e:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006aa0:	694d      	ldr	r5, [r1, #20]
 8006aa2:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006aa4:	69dd      	ldr	r5, [r3, #28]
 8006aa6:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8006aaa:	f025 0507 	bic.w	r5, r5, #7
 8006aae:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006ab0:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8006ab4:	433d      	orrs	r5, r7
 8006ab6:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006ab8:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006aba:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006abc:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006ac0:	2e07      	cmp	r6, #7
 8006ac2:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006ac4:	bf9c      	itt	ls
 8006ac6:	4d0e      	ldrls	r5, [pc, #56]	@ (8006b00 <LTDC_SetConfig+0xf4>)
 8006ac8:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006aca:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8006acc:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 8006ad0:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006ad2:	bf88      	it	hi
 8006ad4:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006ad6:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006ad8:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006ada:	eba4 040c 	sub.w	r4, r4, ip
 8006ade:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006ae0:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006ae2:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006ae4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8006ae8:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8006aea:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8006aec:	f36f 040a 	bfc	r4, #0, #11
 8006af0:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006af2:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006af4:	5883      	ldr	r3, [r0, r2]
 8006af6:	f043 0301 	orr.w	r3, r3, #1
 8006afa:	5083      	str	r3, [r0, r2]
}
 8006afc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006b00:	0802756c 	.word	0x0802756c

08006b04 <HAL_LTDC_Init>:
{
 8006b04:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8006b06:	4604      	mov	r4, r0
 8006b08:	2800      	cmp	r0, #0
 8006b0a:	d063      	beq.n	8006bd4 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006b0c:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8006b10:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006b14:	b91b      	cbnz	r3, 8006b1e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8006b16:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006b1a:	f7fa feab 	bl	8001874 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006b1e:	2302      	movs	r3, #2
 8006b20:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8006b24:	6823      	ldr	r3, [r4, #0]
 8006b26:	699a      	ldr	r2, [r3, #24]
 8006b28:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8006b2c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006b2e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8006b32:	4302      	orrs	r2, r0
 8006b34:	68e0      	ldr	r0, [r4, #12]
 8006b36:	6999      	ldr	r1, [r3, #24]
 8006b38:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006b3a:	6920      	ldr	r0, [r4, #16]
 8006b3c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006b3e:	430a      	orrs	r2, r1
 8006b40:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006b42:	689a      	ldr	r2, [r3, #8]
 8006b44:	4924      	ldr	r1, [pc, #144]	@ (8006bd8 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8006b46:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006b48:	400a      	ands	r2, r1
 8006b4a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006b4c:	689a      	ldr	r2, [r3, #8]
 8006b4e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006b52:	69a0      	ldr	r0, [r4, #24]
 8006b54:	4302      	orrs	r2, r0
 8006b56:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006b58:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8006b5a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006b5c:	400a      	ands	r2, r1
 8006b5e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006b60:	68da      	ldr	r2, [r3, #12]
 8006b62:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006b66:	6a20      	ldr	r0, [r4, #32]
 8006b68:	4302      	orrs	r2, r0
 8006b6a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006b6c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8006b6e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006b70:	400a      	ands	r2, r1
 8006b72:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8006b74:	691a      	ldr	r2, [r3, #16]
 8006b76:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006b7a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8006b7c:	4302      	orrs	r2, r0
 8006b7e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8006b80:	695a      	ldr	r2, [r3, #20]
 8006b82:	400a      	ands	r2, r1
 8006b84:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006b86:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8006b88:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006b8a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8006b8e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8006b90:	430a      	orrs	r2, r1
 8006b92:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006b94:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8006b96:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8006b9a:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006b9e:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8006ba2:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8006ba4:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8006ba6:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8006baa:	432a      	orrs	r2, r5
 8006bac:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8006bb0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8006bb4:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8006bb6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006bb8:	f042 0206 	orr.w	r2, r2, #6
 8006bbc:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8006bbe:	699a      	ldr	r2, [r3, #24]
 8006bc0:	f042 0201 	orr.w	r2, r2, #1
 8006bc4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006bc6:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8006bc8:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006bca:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8006bce:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8006bd2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006bd4:	2001      	movs	r0, #1
 8006bd6:	e7fc      	b.n	8006bd2 <HAL_LTDC_Init+0xce>
 8006bd8:	f000f800 	.word	0xf000f800

08006bdc <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8006bdc:	4770      	bx	lr

08006bde <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8006bde:	4770      	bx	lr

08006be0 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006be0:	6803      	ldr	r3, [r0, #0]
{
 8006be2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006be4:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8006be6:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006be8:	0772      	lsls	r2, r6, #29
{
 8006bea:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006bec:	d514      	bpl.n	8006c18 <HAL_LTDC_IRQHandler+0x38>
 8006bee:	0769      	lsls	r1, r5, #29
 8006bf0:	d512      	bpl.n	8006c18 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8006bf2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006bf4:	f022 0204 	bic.w	r2, r2, #4
 8006bf8:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8006bfa:	2204      	movs	r2, #4
 8006bfc:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8006bfe:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8006c02:	f043 0301 	orr.w	r3, r3, #1
 8006c06:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8006c0a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006c0c:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006c10:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006c14:	f7ff ffe2 	bl	8006bdc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8006c18:	07b2      	lsls	r2, r6, #30
 8006c1a:	d516      	bpl.n	8006c4a <HAL_LTDC_IRQHandler+0x6a>
 8006c1c:	07ab      	lsls	r3, r5, #30
 8006c1e:	d514      	bpl.n	8006c4a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8006c20:	6823      	ldr	r3, [r4, #0]
 8006c22:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006c24:	f022 0202 	bic.w	r2, r2, #2
 8006c28:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8006c2a:	2202      	movs	r2, #2
 8006c2c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8006c2e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8006c32:	4313      	orrs	r3, r2
 8006c34:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006c38:	2304      	movs	r3, #4
 8006c3a:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006c3e:	2300      	movs	r3, #0
 8006c40:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006c44:	4620      	mov	r0, r4
 8006c46:	f7ff ffc9 	bl	8006bdc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8006c4a:	07f0      	lsls	r0, r6, #31
 8006c4c:	d510      	bpl.n	8006c70 <HAL_LTDC_IRQHandler+0x90>
 8006c4e:	07e9      	lsls	r1, r5, #31
 8006c50:	d50e      	bpl.n	8006c70 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006c52:	6823      	ldr	r3, [r4, #0]
 8006c54:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006c56:	f022 0201 	bic.w	r2, r2, #1
 8006c5a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8006c5c:	2201      	movs	r2, #1
 8006c5e:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8006c60:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8006c62:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006c66:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8006c6a:	4620      	mov	r0, r4
 8006c6c:	f7fc f852 	bl	8002d14 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8006c70:	0732      	lsls	r2, r6, #28
 8006c72:	d511      	bpl.n	8006c98 <HAL_LTDC_IRQHandler+0xb8>
 8006c74:	072b      	lsls	r3, r5, #28
 8006c76:	d50f      	bpl.n	8006c98 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006c78:	6823      	ldr	r3, [r4, #0]
 8006c7a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006c7c:	f022 0208 	bic.w	r2, r2, #8
 8006c80:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8006c82:	2208      	movs	r2, #8
 8006c84:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8006c86:	2301      	movs	r3, #1
 8006c88:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006c8c:	2300      	movs	r3, #0
 8006c8e:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8006c92:	4620      	mov	r0, r4
 8006c94:	f7ff ffa3 	bl	8006bde <HAL_LTDC_ReloadEventCallback>
}
 8006c98:	bd70      	pop	{r4, r5, r6, pc}

08006c9a <HAL_LTDC_ConfigLayer>:
{
 8006c9a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8006c9e:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 8006ca2:	2b01      	cmp	r3, #1
{
 8006ca4:	4606      	mov	r6, r0
 8006ca6:	460f      	mov	r7, r1
 8006ca8:	4694      	mov	ip, r2
 8006caa:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8006cae:	d01f      	beq.n	8006cf0 <HAL_LTDC_ConfigLayer+0x56>
 8006cb0:	f04f 0801 	mov.w	r8, #1
 8006cb4:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006cb8:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006cbc:	2434      	movs	r4, #52	@ 0x34
 8006cbe:	460d      	mov	r5, r1
 8006cc0:	fb04 6402 	mla	r4, r4, r2, r6
 8006cc4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006cc6:	3438      	adds	r4, #56	@ 0x38
 8006cc8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006cca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006ccc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006cce:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006cd0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006cd2:	682b      	ldr	r3, [r5, #0]
 8006cd4:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006cd6:	4630      	mov	r0, r6
 8006cd8:	4662      	mov	r2, ip
 8006cda:	4639      	mov	r1, r7
 8006cdc:	f7ff fe96 	bl	8006a0c <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006ce0:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8006ce2:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006ce4:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8006ce8:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8006cec:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8006cf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006cf4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8006cf4:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 8006cf8:	2a01      	cmp	r2, #1
{
 8006cfa:	4603      	mov	r3, r0
 8006cfc:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8006d00:	d012      	beq.n	8006d28 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006d02:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006d04:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006d08:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8006d0a:	f020 0001 	bic.w	r0, r0, #1
 8006d0e:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8006d10:	4806      	ldr	r0, [pc, #24]	@ (8006d2c <HAL_LTDC_ProgramLineEvent+0x38>)
 8006d12:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8006d14:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8006d16:	f041 0101 	orr.w	r1, r1, #1
 8006d1a:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8006d1c:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8006d1e:	2201      	movs	r2, #1
 8006d20:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8006d24:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 8006d28:	4770      	bx	lr
 8006d2a:	bf00      	nop
 8006d2c:	40016800 	.word	0x40016800

08006d30 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8006d30:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 8006d32:	2300      	movs	r3, #0
 8006d34:	9301      	str	r3, [sp, #4]
 8006d36:	4b18      	ldr	r3, [pc, #96]	@ (8006d98 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8006d38:	4d18      	ldr	r5, [pc, #96]	@ (8006d9c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8006d3a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006d3c:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006d40:	641a      	str	r2, [r3, #64]	@ 0x40
 8006d42:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006d44:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006d48:	9301      	str	r3, [sp, #4]
 8006d4a:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8006d4c:	4b14      	ldr	r3, [pc, #80]	@ (8006da0 <HAL_PWREx_EnableOverDrive+0x70>)
 8006d4e:	2201      	movs	r2, #1
 8006d50:	641a      	str	r2, [r3, #64]	@ 0x40
  tickstart = HAL_GetTick();
 8006d52:	f7fe fd8d 	bl	8005870 <HAL_GetTick>
 8006d56:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8006d58:	686b      	ldr	r3, [r5, #4]
 8006d5a:	03da      	lsls	r2, r3, #15
 8006d5c:	d50b      	bpl.n	8006d76 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8006d5e:	4b10      	ldr	r3, [pc, #64]	@ (8006da0 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8006d60:	4d0e      	ldr	r5, [pc, #56]	@ (8006d9c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8006d62:	2201      	movs	r2, #1
 8006d64:	645a      	str	r2, [r3, #68]	@ 0x44
  tickstart = HAL_GetTick();
 8006d66:	f7fe fd83 	bl	8005870 <HAL_GetTick>
 8006d6a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8006d6c:	686b      	ldr	r3, [r5, #4]
 8006d6e:	039b      	lsls	r3, r3, #14
 8006d70:	d50a      	bpl.n	8006d88 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8006d72:	2000      	movs	r0, #0
 8006d74:	e006      	b.n	8006d84 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8006d76:	f7fe fd7b 	bl	8005870 <HAL_GetTick>
 8006d7a:	1b00      	subs	r0, r0, r4
 8006d7c:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8006d80:	d9ea      	bls.n	8006d58 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8006d82:	2003      	movs	r0, #3
}
 8006d84:	b003      	add	sp, #12
 8006d86:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8006d88:	f7fe fd72 	bl	8005870 <HAL_GetTick>
 8006d8c:	1b00      	subs	r0, r0, r4
 8006d8e:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8006d92:	d9eb      	bls.n	8006d6c <HAL_PWREx_EnableOverDrive+0x3c>
 8006d94:	e7f5      	b.n	8006d82 <HAL_PWREx_EnableOverDrive+0x52>
 8006d96:	bf00      	nop
 8006d98:	40023800 	.word	0x40023800
 8006d9c:	40007000 	.word	0x40007000
 8006da0:	420e0000 	.word	0x420e0000

08006da4 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006da4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8006da8:	4604      	mov	r4, r0
 8006daa:	b340      	cbz	r0, 8006dfe <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006dac:	6803      	ldr	r3, [r0, #0]
 8006dae:	07de      	lsls	r6, r3, #31
 8006db0:	d410      	bmi.n	8006dd4 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006db2:	6823      	ldr	r3, [r4, #0]
 8006db4:	079d      	lsls	r5, r3, #30
 8006db6:	d45b      	bmi.n	8006e70 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006db8:	6823      	ldr	r3, [r4, #0]
 8006dba:	0719      	lsls	r1, r3, #28
 8006dbc:	f100 809d 	bmi.w	8006efa <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006dc0:	6823      	ldr	r3, [r4, #0]
 8006dc2:	075a      	lsls	r2, r3, #29
 8006dc4:	f100 80bd 	bmi.w	8006f42 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006dc8:	69a3      	ldr	r3, [r4, #24]
 8006dca:	2b00      	cmp	r3, #0
 8006dcc:	f040 8124 	bne.w	8007018 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8006dd0:	2000      	movs	r0, #0
 8006dd2:	e02c      	b.n	8006e2e <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8006dd4:	4b8d      	ldr	r3, [pc, #564]	@ (800700c <HAL_RCC_OscConfig+0x268>)
 8006dd6:	689a      	ldr	r2, [r3, #8]
 8006dd8:	f002 020c 	and.w	r2, r2, #12
 8006ddc:	2a04      	cmp	r2, #4
 8006dde:	d007      	beq.n	8006df0 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006de0:	689a      	ldr	r2, [r3, #8]
 8006de2:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8006de6:	2a08      	cmp	r2, #8
 8006de8:	d10b      	bne.n	8006e02 <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006dea:	685b      	ldr	r3, [r3, #4]
 8006dec:	0259      	lsls	r1, r3, #9
 8006dee:	d508      	bpl.n	8006e02 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006df0:	4b86      	ldr	r3, [pc, #536]	@ (800700c <HAL_RCC_OscConfig+0x268>)
 8006df2:	681b      	ldr	r3, [r3, #0]
 8006df4:	039a      	lsls	r2, r3, #14
 8006df6:	d5dc      	bpl.n	8006db2 <HAL_RCC_OscConfig+0xe>
 8006df8:	6863      	ldr	r3, [r4, #4]
 8006dfa:	2b00      	cmp	r3, #0
 8006dfc:	d1d9      	bne.n	8006db2 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 8006dfe:	2001      	movs	r0, #1
 8006e00:	e015      	b.n	8006e2e <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006e02:	6863      	ldr	r3, [r4, #4]
 8006e04:	4d81      	ldr	r5, [pc, #516]	@ (800700c <HAL_RCC_OscConfig+0x268>)
 8006e06:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006e0a:	d113      	bne.n	8006e34 <HAL_RCC_OscConfig+0x90>
 8006e0c:	682b      	ldr	r3, [r5, #0]
 8006e0e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006e12:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006e14:	f7fe fd2c 	bl	8005870 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006e18:	4e7c      	ldr	r6, [pc, #496]	@ (800700c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8006e1a:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006e1c:	6833      	ldr	r3, [r6, #0]
 8006e1e:	039b      	lsls	r3, r3, #14
 8006e20:	d4c7      	bmi.n	8006db2 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006e22:	f7fe fd25 	bl	8005870 <HAL_GetTick>
 8006e26:	1b40      	subs	r0, r0, r5
 8006e28:	2864      	cmp	r0, #100	@ 0x64
 8006e2a:	d9f7      	bls.n	8006e1c <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8006e2c:	2003      	movs	r0, #3
}
 8006e2e:	b002      	add	sp, #8
 8006e30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006e34:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006e38:	d104      	bne.n	8006e44 <HAL_RCC_OscConfig+0xa0>
 8006e3a:	682b      	ldr	r3, [r5, #0]
 8006e3c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006e40:	602b      	str	r3, [r5, #0]
 8006e42:	e7e3      	b.n	8006e0c <HAL_RCC_OscConfig+0x68>
 8006e44:	682a      	ldr	r2, [r5, #0]
 8006e46:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8006e4a:	602a      	str	r2, [r5, #0]
 8006e4c:	682a      	ldr	r2, [r5, #0]
 8006e4e:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8006e52:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006e54:	2b00      	cmp	r3, #0
 8006e56:	d1dd      	bne.n	8006e14 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8006e58:	f7fe fd0a 	bl	8005870 <HAL_GetTick>
 8006e5c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006e5e:	682b      	ldr	r3, [r5, #0]
 8006e60:	039f      	lsls	r7, r3, #14
 8006e62:	d5a6      	bpl.n	8006db2 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006e64:	f7fe fd04 	bl	8005870 <HAL_GetTick>
 8006e68:	1b80      	subs	r0, r0, r6
 8006e6a:	2864      	cmp	r0, #100	@ 0x64
 8006e6c:	d9f7      	bls.n	8006e5e <HAL_RCC_OscConfig+0xba>
 8006e6e:	e7dd      	b.n	8006e2c <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8006e70:	4b66      	ldr	r3, [pc, #408]	@ (800700c <HAL_RCC_OscConfig+0x268>)
 8006e72:	689a      	ldr	r2, [r3, #8]
 8006e74:	f012 0f0c 	tst.w	r2, #12
 8006e78:	d007      	beq.n	8006e8a <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006e7a:	689a      	ldr	r2, [r3, #8]
 8006e7c:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8006e80:	2a08      	cmp	r2, #8
 8006e82:	d111      	bne.n	8006ea8 <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006e84:	685b      	ldr	r3, [r3, #4]
 8006e86:	025d      	lsls	r5, r3, #9
 8006e88:	d40e      	bmi.n	8006ea8 <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006e8a:	4a60      	ldr	r2, [pc, #384]	@ (800700c <HAL_RCC_OscConfig+0x268>)
 8006e8c:	6813      	ldr	r3, [r2, #0]
 8006e8e:	0799      	lsls	r1, r3, #30
 8006e90:	d502      	bpl.n	8006e98 <HAL_RCC_OscConfig+0xf4>
 8006e92:	68e3      	ldr	r3, [r4, #12]
 8006e94:	2b01      	cmp	r3, #1
 8006e96:	d1b2      	bne.n	8006dfe <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006e98:	6813      	ldr	r3, [r2, #0]
 8006e9a:	6921      	ldr	r1, [r4, #16]
 8006e9c:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8006ea0:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006ea4:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006ea6:	e787      	b.n	8006db8 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8006ea8:	68e2      	ldr	r2, [r4, #12]
 8006eaa:	4b59      	ldr	r3, [pc, #356]	@ (8007010 <HAL_RCC_OscConfig+0x26c>)
 8006eac:	b1b2      	cbz	r2, 8006edc <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 8006eae:	2201      	movs	r2, #1
 8006eb0:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006eb2:	f7fe fcdd 	bl	8005870 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006eb6:	4d55      	ldr	r5, [pc, #340]	@ (800700c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8006eb8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006eba:	682b      	ldr	r3, [r5, #0]
 8006ebc:	079b      	lsls	r3, r3, #30
 8006ebe:	d507      	bpl.n	8006ed0 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006ec0:	682b      	ldr	r3, [r5, #0]
 8006ec2:	6922      	ldr	r2, [r4, #16]
 8006ec4:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8006ec8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006ecc:	602b      	str	r3, [r5, #0]
 8006ece:	e773      	b.n	8006db8 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006ed0:	f7fe fcce 	bl	8005870 <HAL_GetTick>
 8006ed4:	1b80      	subs	r0, r0, r6
 8006ed6:	2802      	cmp	r0, #2
 8006ed8:	d9ef      	bls.n	8006eba <HAL_RCC_OscConfig+0x116>
 8006eda:	e7a7      	b.n	8006e2c <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8006edc:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006ede:	f7fe fcc7 	bl	8005870 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006ee2:	4e4a      	ldr	r6, [pc, #296]	@ (800700c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8006ee4:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006ee6:	6833      	ldr	r3, [r6, #0]
 8006ee8:	079f      	lsls	r7, r3, #30
 8006eea:	f57f af65 	bpl.w	8006db8 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006eee:	f7fe fcbf 	bl	8005870 <HAL_GetTick>
 8006ef2:	1b40      	subs	r0, r0, r5
 8006ef4:	2802      	cmp	r0, #2
 8006ef6:	d9f6      	bls.n	8006ee6 <HAL_RCC_OscConfig+0x142>
 8006ef8:	e798      	b.n	8006e2c <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8006efa:	6962      	ldr	r2, [r4, #20]
 8006efc:	4b44      	ldr	r3, [pc, #272]	@ (8007010 <HAL_RCC_OscConfig+0x26c>)
 8006efe:	b182      	cbz	r2, 8006f22 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 8006f00:	2201      	movs	r2, #1
 8006f02:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8006f06:	f7fe fcb3 	bl	8005870 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006f0a:	4e40      	ldr	r6, [pc, #256]	@ (800700c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8006f0c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006f0e:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8006f10:	079b      	lsls	r3, r3, #30
 8006f12:	f53f af55 	bmi.w	8006dc0 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006f16:	f7fe fcab 	bl	8005870 <HAL_GetTick>
 8006f1a:	1b40      	subs	r0, r0, r5
 8006f1c:	2802      	cmp	r0, #2
 8006f1e:	d9f6      	bls.n	8006f0e <HAL_RCC_OscConfig+0x16a>
 8006f20:	e784      	b.n	8006e2c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8006f22:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8006f26:	f7fe fca3 	bl	8005870 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006f2a:	4e38      	ldr	r6, [pc, #224]	@ (800700c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8006f2c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006f2e:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8006f30:	079f      	lsls	r7, r3, #30
 8006f32:	f57f af45 	bpl.w	8006dc0 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006f36:	f7fe fc9b 	bl	8005870 <HAL_GetTick>
 8006f3a:	1b40      	subs	r0, r0, r5
 8006f3c:	2802      	cmp	r0, #2
 8006f3e:	d9f6      	bls.n	8006f2e <HAL_RCC_OscConfig+0x18a>
 8006f40:	e774      	b.n	8006e2c <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006f42:	4b32      	ldr	r3, [pc, #200]	@ (800700c <HAL_RCC_OscConfig+0x268>)
 8006f44:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006f46:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 8006f4a:	d128      	bne.n	8006f9e <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 8006f4c:	9201      	str	r2, [sp, #4]
 8006f4e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006f50:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006f54:	641a      	str	r2, [r3, #64]	@ 0x40
 8006f56:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006f58:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006f5c:	9301      	str	r3, [sp, #4]
 8006f5e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8006f60:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006f62:	4d2c      	ldr	r5, [pc, #176]	@ (8007014 <HAL_RCC_OscConfig+0x270>)
 8006f64:	682b      	ldr	r3, [r5, #0]
 8006f66:	05d8      	lsls	r0, r3, #23
 8006f68:	d51b      	bpl.n	8006fa2 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006f6a:	68a3      	ldr	r3, [r4, #8]
 8006f6c:	4d27      	ldr	r5, [pc, #156]	@ (800700c <HAL_RCC_OscConfig+0x268>)
 8006f6e:	2b01      	cmp	r3, #1
 8006f70:	d127      	bne.n	8006fc2 <HAL_RCC_OscConfig+0x21e>
 8006f72:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006f74:	f043 0301 	orr.w	r3, r3, #1
 8006f78:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 8006f7a:	f7fe fc79 	bl	8005870 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006f7e:	4e23      	ldr	r6, [pc, #140]	@ (800700c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8006f80:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006f82:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006f86:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8006f88:	079a      	lsls	r2, r3, #30
 8006f8a:	d539      	bpl.n	8007000 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 8006f8c:	2f00      	cmp	r7, #0
 8006f8e:	f43f af1b 	beq.w	8006dc8 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006f92:	4a1e      	ldr	r2, [pc, #120]	@ (800700c <HAL_RCC_OscConfig+0x268>)
 8006f94:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8006f96:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006f9a:	6413      	str	r3, [r2, #64]	@ 0x40
 8006f9c:	e714      	b.n	8006dc8 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8006f9e:	2700      	movs	r7, #0
 8006fa0:	e7df      	b.n	8006f62 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006fa2:	682b      	ldr	r3, [r5, #0]
 8006fa4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006fa8:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006faa:	f7fe fc61 	bl	8005870 <HAL_GetTick>
 8006fae:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006fb0:	682b      	ldr	r3, [r5, #0]
 8006fb2:	05d9      	lsls	r1, r3, #23
 8006fb4:	d4d9      	bmi.n	8006f6a <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006fb6:	f7fe fc5b 	bl	8005870 <HAL_GetTick>
 8006fba:	1b80      	subs	r0, r0, r6
 8006fbc:	2802      	cmp	r0, #2
 8006fbe:	d9f7      	bls.n	8006fb0 <HAL_RCC_OscConfig+0x20c>
 8006fc0:	e734      	b.n	8006e2c <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006fc2:	2b05      	cmp	r3, #5
 8006fc4:	d104      	bne.n	8006fd0 <HAL_RCC_OscConfig+0x22c>
 8006fc6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006fc8:	f043 0304 	orr.w	r3, r3, #4
 8006fcc:	672b      	str	r3, [r5, #112]	@ 0x70
 8006fce:	e7d0      	b.n	8006f72 <HAL_RCC_OscConfig+0x1ce>
 8006fd0:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8006fd2:	f022 0201 	bic.w	r2, r2, #1
 8006fd6:	672a      	str	r2, [r5, #112]	@ 0x70
 8006fd8:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8006fda:	f022 0204 	bic.w	r2, r2, #4
 8006fde:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006fe0:	2b00      	cmp	r3, #0
 8006fe2:	d1ca      	bne.n	8006f7a <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 8006fe4:	f7fe fc44 	bl	8005870 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006fe8:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8006fec:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006fee:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006ff0:	079b      	lsls	r3, r3, #30
 8006ff2:	d5cb      	bpl.n	8006f8c <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006ff4:	f7fe fc3c 	bl	8005870 <HAL_GetTick>
 8006ff8:	1b80      	subs	r0, r0, r6
 8006ffa:	4540      	cmp	r0, r8
 8006ffc:	d9f7      	bls.n	8006fee <HAL_RCC_OscConfig+0x24a>
 8006ffe:	e715      	b.n	8006e2c <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007000:	f7fe fc36 	bl	8005870 <HAL_GetTick>
 8007004:	1b40      	subs	r0, r0, r5
 8007006:	4540      	cmp	r0, r8
 8007008:	d9bd      	bls.n	8006f86 <HAL_RCC_OscConfig+0x1e2>
 800700a:	e70f      	b.n	8006e2c <HAL_RCC_OscConfig+0x88>
 800700c:	40023800 	.word	0x40023800
 8007010:	42470000 	.word	0x42470000
 8007014:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8007018:	4d37      	ldr	r5, [pc, #220]	@ (80070f8 <HAL_RCC_OscConfig+0x354>)
 800701a:	68aa      	ldr	r2, [r5, #8]
 800701c:	f002 020c 	and.w	r2, r2, #12
 8007020:	2a08      	cmp	r2, #8
 8007022:	d03e      	beq.n	80070a2 <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007024:	2b02      	cmp	r3, #2
 8007026:	4b35      	ldr	r3, [pc, #212]	@ (80070fc <HAL_RCC_OscConfig+0x358>)
 8007028:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 800702c:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800702e:	d12b      	bne.n	8007088 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 8007030:	f7fe fc1e 	bl	8005870 <HAL_GetTick>
 8007034:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007036:	682b      	ldr	r3, [r5, #0]
 8007038:	0199      	lsls	r1, r3, #6
 800703a:	d41f      	bmi.n	800707c <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800703c:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8007040:	4313      	orrs	r3, r2
 8007042:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8007044:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007048:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800704a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800704e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8007050:	0852      	lsrs	r2, r2, #1
 8007052:	3a01      	subs	r2, #1
 8007054:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007058:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800705a:	4b28      	ldr	r3, [pc, #160]	@ (80070fc <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800705c:	4d26      	ldr	r5, [pc, #152]	@ (80070f8 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 800705e:	2201      	movs	r2, #1
 8007060:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 8007062:	f7fe fc05 	bl	8005870 <HAL_GetTick>
 8007066:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007068:	682b      	ldr	r3, [r5, #0]
 800706a:	019a      	lsls	r2, r3, #6
 800706c:	f53f aeb0 	bmi.w	8006dd0 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007070:	f7fe fbfe 	bl	8005870 <HAL_GetTick>
 8007074:	1b00      	subs	r0, r0, r4
 8007076:	2802      	cmp	r0, #2
 8007078:	d9f6      	bls.n	8007068 <HAL_RCC_OscConfig+0x2c4>
 800707a:	e6d7      	b.n	8006e2c <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800707c:	f7fe fbf8 	bl	8005870 <HAL_GetTick>
 8007080:	1b80      	subs	r0, r0, r6
 8007082:	2802      	cmp	r0, #2
 8007084:	d9d7      	bls.n	8007036 <HAL_RCC_OscConfig+0x292>
 8007086:	e6d1      	b.n	8006e2c <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8007088:	f7fe fbf2 	bl	8005870 <HAL_GetTick>
 800708c:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800708e:	682b      	ldr	r3, [r5, #0]
 8007090:	019b      	lsls	r3, r3, #6
 8007092:	f57f ae9d 	bpl.w	8006dd0 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007096:	f7fe fbeb 	bl	8005870 <HAL_GetTick>
 800709a:	1b00      	subs	r0, r0, r4
 800709c:	2802      	cmp	r0, #2
 800709e:	d9f6      	bls.n	800708e <HAL_RCC_OscConfig+0x2ea>
 80070a0:	e6c4      	b.n	8006e2c <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80070a2:	2b01      	cmp	r3, #1
 80070a4:	f43f aeab 	beq.w	8006dfe <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 80070a8:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80070aa:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80070ac:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80070b0:	4291      	cmp	r1, r2
 80070b2:	f47f aea4 	bne.w	8006dfe <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80070b6:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80070b8:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80070bc:	428a      	cmp	r2, r1
 80070be:	f47f ae9e 	bne.w	8006dfe <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80070c2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80070c4:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 80070c8:	401a      	ands	r2, r3
 80070ca:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 80070ce:	f47f ae96 	bne.w	8006dfe <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80070d2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80070d4:	0852      	lsrs	r2, r2, #1
 80070d6:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 80070da:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80070dc:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 80070e0:	f47f ae8d 	bne.w	8006dfe <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80070e4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80070e6:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80070ea:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 80070ee:	bf14      	ite	ne
 80070f0:	2001      	movne	r0, #1
 80070f2:	2000      	moveq	r0, #0
 80070f4:	e69b      	b.n	8006e2e <HAL_RCC_OscConfig+0x8a>
 80070f6:	bf00      	nop
 80070f8:	40023800 	.word	0x40023800
 80070fc:	42470000 	.word	0x42470000

08007100 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007100:	4913      	ldr	r1, [pc, #76]	@ (8007150 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007102:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007104:	688b      	ldr	r3, [r1, #8]
 8007106:	f003 030c 	and.w	r3, r3, #12
 800710a:	2b04      	cmp	r3, #4
 800710c:	d01c      	beq.n	8007148 <HAL_RCC_GetSysClockFreq+0x48>
 800710e:	2b08      	cmp	r3, #8
 8007110:	d11c      	bne.n	800714c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007112:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007114:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007116:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007118:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800711c:	bf14      	ite	ne
 800711e:	480d      	ldrne	r0, [pc, #52]	@ (8007154 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007120:	480d      	ldreq	r0, [pc, #52]	@ (8007158 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007122:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8007126:	bf18      	it	ne
 8007128:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800712a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800712e:	fba1 0100 	umull	r0, r1, r1, r0
 8007132:	f7f9 f8fd 	bl	8000330 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 8007136:	4b06      	ldr	r3, [pc, #24]	@ (8007150 <HAL_RCC_GetSysClockFreq+0x50>)
 8007138:	685b      	ldr	r3, [r3, #4]
 800713a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800713e:	3301      	adds	r3, #1
 8007140:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8007142:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8007146:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007148:	4802      	ldr	r0, [pc, #8]	@ (8007154 <HAL_RCC_GetSysClockFreq+0x54>)
 800714a:	e7fc      	b.n	8007146 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800714c:	4802      	ldr	r0, [pc, #8]	@ (8007158 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800714e:	e7fa      	b.n	8007146 <HAL_RCC_GetSysClockFreq+0x46>
 8007150:	40023800 	.word	0x40023800
 8007154:	007a1200 	.word	0x007a1200
 8007158:	00f42400 	.word	0x00f42400

0800715c <HAL_RCC_ClockConfig>:
{
 800715c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007160:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8007162:	4604      	mov	r4, r0
 8007164:	b910      	cbnz	r0, 800716c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8007166:	2001      	movs	r0, #1
}
 8007168:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800716c:	4b43      	ldr	r3, [pc, #268]	@ (800727c <HAL_RCC_ClockConfig+0x120>)
 800716e:	681a      	ldr	r2, [r3, #0]
 8007170:	f002 020f 	and.w	r2, r2, #15
 8007174:	428a      	cmp	r2, r1
 8007176:	d328      	bcc.n	80071ca <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007178:	6821      	ldr	r1, [r4, #0]
 800717a:	078f      	lsls	r7, r1, #30
 800717c:	d42d      	bmi.n	80071da <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800717e:	07c8      	lsls	r0, r1, #31
 8007180:	d440      	bmi.n	8007204 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8007182:	4b3e      	ldr	r3, [pc, #248]	@ (800727c <HAL_RCC_ClockConfig+0x120>)
 8007184:	681a      	ldr	r2, [r3, #0]
 8007186:	f002 020f 	and.w	r2, r2, #15
 800718a:	42aa      	cmp	r2, r5
 800718c:	d865      	bhi.n	800725a <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800718e:	6822      	ldr	r2, [r4, #0]
 8007190:	0751      	lsls	r1, r2, #29
 8007192:	d46b      	bmi.n	800726c <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007194:	0713      	lsls	r3, r2, #28
 8007196:	d507      	bpl.n	80071a8 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8007198:	4a39      	ldr	r2, [pc, #228]	@ (8007280 <HAL_RCC_ClockConfig+0x124>)
 800719a:	6921      	ldr	r1, [r4, #16]
 800719c:	6893      	ldr	r3, [r2, #8]
 800719e:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 80071a2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80071a6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 80071a8:	f7ff ffaa 	bl	8007100 <HAL_RCC_GetSysClockFreq>
 80071ac:	4b34      	ldr	r3, [pc, #208]	@ (8007280 <HAL_RCC_ClockConfig+0x124>)
 80071ae:	4a35      	ldr	r2, [pc, #212]	@ (8007284 <HAL_RCC_ClockConfig+0x128>)
 80071b0:	689b      	ldr	r3, [r3, #8]
 80071b2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80071b6:	5cd3      	ldrb	r3, [r2, r3]
 80071b8:	40d8      	lsrs	r0, r3
 80071ba:	4b33      	ldr	r3, [pc, #204]	@ (8007288 <HAL_RCC_ClockConfig+0x12c>)
 80071bc:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 80071be:	4b33      	ldr	r3, [pc, #204]	@ (800728c <HAL_RCC_ClockConfig+0x130>)
 80071c0:	6818      	ldr	r0, [r3, #0]
 80071c2:	f7fa fd21 	bl	8001c08 <HAL_InitTick>
  return HAL_OK;
 80071c6:	2000      	movs	r0, #0
 80071c8:	e7ce      	b.n	8007168 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80071ca:	b2ca      	uxtb	r2, r1
 80071cc:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80071ce:	681b      	ldr	r3, [r3, #0]
 80071d0:	f003 030f 	and.w	r3, r3, #15
 80071d4:	428b      	cmp	r3, r1
 80071d6:	d1c6      	bne.n	8007166 <HAL_RCC_ClockConfig+0xa>
 80071d8:	e7ce      	b.n	8007178 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80071da:	4b29      	ldr	r3, [pc, #164]	@ (8007280 <HAL_RCC_ClockConfig+0x124>)
 80071dc:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80071e0:	bf1e      	ittt	ne
 80071e2:	689a      	ldrne	r2, [r3, #8]
 80071e4:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 80071e8:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80071ea:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80071ec:	bf42      	ittt	mi
 80071ee:	689a      	ldrmi	r2, [r3, #8]
 80071f0:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 80071f4:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80071f6:	689a      	ldr	r2, [r3, #8]
 80071f8:	68a0      	ldr	r0, [r4, #8]
 80071fa:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 80071fe:	4302      	orrs	r2, r0
 8007200:	609a      	str	r2, [r3, #8]
 8007202:	e7bc      	b.n	800717e <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007204:	6862      	ldr	r2, [r4, #4]
 8007206:	4b1e      	ldr	r3, [pc, #120]	@ (8007280 <HAL_RCC_ClockConfig+0x124>)
 8007208:	2a01      	cmp	r2, #1
 800720a:	d11c      	bne.n	8007246 <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800720c:	681b      	ldr	r3, [r3, #0]
 800720e:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007212:	d0a8      	beq.n	8007166 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8007214:	4e1a      	ldr	r6, [pc, #104]	@ (8007280 <HAL_RCC_ClockConfig+0x124>)
 8007216:	68b3      	ldr	r3, [r6, #8]
 8007218:	f023 0303 	bic.w	r3, r3, #3
 800721c:	4313      	orrs	r3, r2
 800721e:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8007220:	f7fe fb26 	bl	8005870 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007224:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 8007228:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800722a:	68b3      	ldr	r3, [r6, #8]
 800722c:	6862      	ldr	r2, [r4, #4]
 800722e:	f003 030c 	and.w	r3, r3, #12
 8007232:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8007236:	d0a4      	beq.n	8007182 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007238:	f7fe fb1a 	bl	8005870 <HAL_GetTick>
 800723c:	1bc0      	subs	r0, r0, r7
 800723e:	4540      	cmp	r0, r8
 8007240:	d9f3      	bls.n	800722a <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8007242:	2003      	movs	r0, #3
 8007244:	e790      	b.n	8007168 <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007246:	1e91      	subs	r1, r2, #2
 8007248:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800724a:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800724c:	d802      	bhi.n	8007254 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800724e:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 8007252:	e7de      	b.n	8007212 <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007254:	f013 0f02 	tst.w	r3, #2
 8007258:	e7db      	b.n	8007212 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800725a:	b2ea      	uxtb	r2, r5
 800725c:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800725e:	681b      	ldr	r3, [r3, #0]
 8007260:	f003 030f 	and.w	r3, r3, #15
 8007264:	42ab      	cmp	r3, r5
 8007266:	f47f af7e 	bne.w	8007166 <HAL_RCC_ClockConfig+0xa>
 800726a:	e790      	b.n	800718e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800726c:	4904      	ldr	r1, [pc, #16]	@ (8007280 <HAL_RCC_ClockConfig+0x124>)
 800726e:	68e0      	ldr	r0, [r4, #12]
 8007270:	688b      	ldr	r3, [r1, #8]
 8007272:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8007276:	4303      	orrs	r3, r0
 8007278:	608b      	str	r3, [r1, #8]
 800727a:	e78b      	b.n	8007194 <HAL_RCC_ClockConfig+0x38>
 800727c:	40023c00 	.word	0x40023c00
 8007280:	40023800 	.word	0x40023800
 8007284:	0802755c 	.word	0x0802755c
 8007288:	2000007c 	.word	0x2000007c
 800728c:	20000084 	.word	0x20000084

08007290 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8007290:	4b04      	ldr	r3, [pc, #16]	@ (80072a4 <HAL_RCC_GetPCLK1Freq+0x14>)
 8007292:	4a05      	ldr	r2, [pc, #20]	@ (80072a8 <HAL_RCC_GetPCLK1Freq+0x18>)
 8007294:	689b      	ldr	r3, [r3, #8]
 8007296:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800729a:	5cd3      	ldrb	r3, [r2, r3]
 800729c:	4a03      	ldr	r2, [pc, #12]	@ (80072ac <HAL_RCC_GetPCLK1Freq+0x1c>)
 800729e:	6810      	ldr	r0, [r2, #0]
}
 80072a0:	40d8      	lsrs	r0, r3
 80072a2:	4770      	bx	lr
 80072a4:	40023800 	.word	0x40023800
 80072a8:	08027554 	.word	0x08027554
 80072ac:	2000007c 	.word	0x2000007c

080072b0 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 80072b0:	4b04      	ldr	r3, [pc, #16]	@ (80072c4 <HAL_RCC_GetPCLK2Freq+0x14>)
 80072b2:	4a05      	ldr	r2, [pc, #20]	@ (80072c8 <HAL_RCC_GetPCLK2Freq+0x18>)
 80072b4:	689b      	ldr	r3, [r3, #8]
 80072b6:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80072ba:	5cd3      	ldrb	r3, [r2, r3]
 80072bc:	4a03      	ldr	r2, [pc, #12]	@ (80072cc <HAL_RCC_GetPCLK2Freq+0x1c>)
 80072be:	6810      	ldr	r0, [r2, #0]
}
 80072c0:	40d8      	lsrs	r0, r3
 80072c2:	4770      	bx	lr
 80072c4:	40023800 	.word	0x40023800
 80072c8:	08027554 	.word	0x08027554
 80072cc:	2000007c 	.word	0x2000007c

080072d0 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80072d0:	230f      	movs	r3, #15
 80072d2:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80072d4:	4b0b      	ldr	r3, [pc, #44]	@ (8007304 <HAL_RCC_GetClockConfig+0x34>)
 80072d6:	689a      	ldr	r2, [r3, #8]
 80072d8:	f002 0203 	and.w	r2, r2, #3
 80072dc:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80072de:	689a      	ldr	r2, [r3, #8]
 80072e0:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 80072e4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80072e6:	689a      	ldr	r2, [r3, #8]
 80072e8:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 80072ec:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80072ee:	689b      	ldr	r3, [r3, #8]
 80072f0:	08db      	lsrs	r3, r3, #3
 80072f2:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 80072f6:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80072f8:	4b03      	ldr	r3, [pc, #12]	@ (8007308 <HAL_RCC_GetClockConfig+0x38>)
 80072fa:	681b      	ldr	r3, [r3, #0]
 80072fc:	f003 030f 	and.w	r3, r3, #15
 8007300:	600b      	str	r3, [r1, #0]
}
 8007302:	4770      	bx	lr
 8007304:	40023800 	.word	0x40023800
 8007308:	40023c00 	.word	0x40023c00

0800730c <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800730c:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800730e:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 8007312:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007314:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007316:	f040 8088 	bne.w	800742a <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800731a:	6823      	ldr	r3, [r4, #0]
 800731c:	f013 0f0c 	tst.w	r3, #12
 8007320:	d045      	beq.n	80073ae <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8007322:	4b8c      	ldr	r3, [pc, #560]	@ (8007554 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007324:	4d8c      	ldr	r5, [pc, #560]	@ (8007558 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 8007326:	2200      	movs	r2, #0
 8007328:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800732a:	f7fe faa1 	bl	8005870 <HAL_GetTick>
 800732e:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007330:	682b      	ldr	r3, [r5, #0]
 8007332:	0099      	lsls	r1, r3, #2
 8007334:	f100 80cb 	bmi.w	80074ce <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8007338:	6821      	ldr	r1, [r4, #0]
 800733a:	074a      	lsls	r2, r1, #29
 800733c:	d515      	bpl.n	800736a <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800733e:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8007342:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8007346:	061b      	lsls	r3, r3, #24
 8007348:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 800734c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007350:	4313      	orrs	r3, r2
 8007352:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8007356:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 800735a:	6a22      	ldr	r2, [r4, #32]
 800735c:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8007360:	3a01      	subs	r2, #1
 8007362:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007366:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800736a:	070b      	lsls	r3, r1, #28
 800736c:	d514      	bpl.n	8007398 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800736e:	4a7a      	ldr	r2, [pc, #488]	@ (8007558 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8007370:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007372:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8007376:	6920      	ldr	r0, [r4, #16]
 8007378:	071b      	lsls	r3, r3, #28
 800737a:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 800737e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007382:	430b      	orrs	r3, r1
 8007384:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8007388:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 800738c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800738e:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8007392:	430b      	orrs	r3, r1
 8007394:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8007398:	4b6e      	ldr	r3, [pc, #440]	@ (8007554 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800739a:	4e6f      	ldr	r6, [pc, #444]	@ (8007558 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 800739c:	2201      	movs	r2, #1
 800739e:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 80073a0:	f7fe fa66 	bl	8005870 <HAL_GetTick>
 80073a4:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80073a6:	6833      	ldr	r3, [r6, #0]
 80073a8:	009f      	lsls	r7, r3, #2
 80073aa:	f140 8097 	bpl.w	80074dc <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80073ae:	6823      	ldr	r3, [r4, #0]
 80073b0:	0698      	lsls	r0, r3, #26
 80073b2:	d534      	bpl.n	800741e <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80073b4:	2300      	movs	r3, #0
 80073b6:	9301      	str	r3, [sp, #4]
 80073b8:	4b67      	ldr	r3, [pc, #412]	@ (8007558 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80073ba:	4d68      	ldr	r5, [pc, #416]	@ (800755c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80073bc:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80073be:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80073c2:	641a      	str	r2, [r3, #64]	@ 0x40
 80073c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80073c6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80073ca:	9301      	str	r3, [sp, #4]
 80073cc:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80073ce:	682b      	ldr	r3, [r5, #0]
 80073d0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80073d4:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 80073d6:	f7fe fa4b 	bl	8005870 <HAL_GetTick>
 80073da:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 80073dc:	682b      	ldr	r3, [r5, #0]
 80073de:	05d8      	lsls	r0, r3, #23
 80073e0:	f140 8083 	bpl.w	80074ea <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80073e4:	4d5c      	ldr	r5, [pc, #368]	@ (8007558 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80073e6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80073e8:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80073ea:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 80073ee:	f040 8083 	bne.w	80074f8 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80073f2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80073f4:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 80073f8:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 80073fc:	4a56      	ldr	r2, [pc, #344]	@ (8007558 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 80073fe:	f040 809e 	bne.w	800753e <HAL_RCCEx_PeriphCLKConfig+0x232>
 8007402:	6891      	ldr	r1, [r2, #8]
 8007404:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8007408:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 800740c:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8007410:	4301      	orrs	r1, r0
 8007412:	6091      	str	r1, [r2, #8]
 8007414:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8007416:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800741a:	430b      	orrs	r3, r1
 800741c:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800741e:	6823      	ldr	r3, [r4, #0]
 8007420:	06db      	lsls	r3, r3, #27
 8007422:	f100 8090 	bmi.w	8007546 <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 8007426:	2000      	movs	r0, #0
 8007428:	e04f      	b.n	80074ca <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 800742a:	4b4a      	ldr	r3, [pc, #296]	@ (8007554 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800742c:	4e4a      	ldr	r6, [pc, #296]	@ (8007558 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 800742e:	2200      	movs	r2, #0
 8007430:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8007432:	f7fe fa1d 	bl	8005870 <HAL_GetTick>
 8007436:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007438:	6833      	ldr	r3, [r6, #0]
 800743a:	011f      	lsls	r7, r3, #4
 800743c:	d43f      	bmi.n	80074be <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800743e:	6821      	ldr	r1, [r4, #0]
 8007440:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 8007442:	bf41      	itttt	mi
 8007444:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8007448:	071b      	lslmi	r3, r3, #28
 800744a:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800744e:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8007452:	078a      	lsls	r2, r1, #30
 8007454:	d515      	bpl.n	8007482 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007456:	4a40      	ldr	r2, [pc, #256]	@ (8007558 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8007458:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800745a:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800745e:	6865      	ldr	r5, [r4, #4]
 8007460:	061b      	lsls	r3, r3, #24
 8007462:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8007466:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800746a:	4303      	orrs	r3, r0
 800746c:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8007470:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8007474:	69e3      	ldr	r3, [r4, #28]
 8007476:	f020 001f 	bic.w	r0, r0, #31
 800747a:	3b01      	subs	r3, #1
 800747c:	4303      	orrs	r3, r0
 800747e:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8007482:	064b      	lsls	r3, r1, #25
 8007484:	d50a      	bpl.n	800749c <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 8007486:	68e3      	ldr	r3, [r4, #12]
 8007488:	6862      	ldr	r2, [r4, #4]
 800748a:	061b      	lsls	r3, r3, #24
 800748c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007490:	68a2      	ldr	r2, [r4, #8]
 8007492:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8007496:	4a30      	ldr	r2, [pc, #192]	@ (8007558 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8007498:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800749c:	4b2d      	ldr	r3, [pc, #180]	@ (8007554 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800749e:	4e2e      	ldr	r6, [pc, #184]	@ (8007558 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 80074a0:	2201      	movs	r2, #1
 80074a2:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 80074a4:	f7fe f9e4 	bl	8005870 <HAL_GetTick>
 80074a8:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80074aa:	6833      	ldr	r3, [r6, #0]
 80074ac:	011f      	lsls	r7, r3, #4
 80074ae:	f53f af34 	bmi.w	800731a <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80074b2:	f7fe f9dd 	bl	8005870 <HAL_GetTick>
 80074b6:	1b40      	subs	r0, r0, r5
 80074b8:	2802      	cmp	r0, #2
 80074ba:	d9f6      	bls.n	80074aa <HAL_RCCEx_PeriphCLKConfig+0x19e>
 80074bc:	e004      	b.n	80074c8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80074be:	f7fe f9d7 	bl	8005870 <HAL_GetTick>
 80074c2:	1b40      	subs	r0, r0, r5
 80074c4:	2802      	cmp	r0, #2
 80074c6:	d9b7      	bls.n	8007438 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 80074c8:	2003      	movs	r0, #3
}
 80074ca:	b003      	add	sp, #12
 80074cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80074ce:	f7fe f9cf 	bl	8005870 <HAL_GetTick>
 80074d2:	1b80      	subs	r0, r0, r6
 80074d4:	2802      	cmp	r0, #2
 80074d6:	f67f af2b 	bls.w	8007330 <HAL_RCCEx_PeriphCLKConfig+0x24>
 80074da:	e7f5      	b.n	80074c8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80074dc:	f7fe f9c8 	bl	8005870 <HAL_GetTick>
 80074e0:	1b40      	subs	r0, r0, r5
 80074e2:	2802      	cmp	r0, #2
 80074e4:	f67f af5f 	bls.w	80073a6 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 80074e8:	e7ee      	b.n	80074c8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80074ea:	f7fe f9c1 	bl	8005870 <HAL_GetTick>
 80074ee:	1b80      	subs	r0, r0, r6
 80074f0:	2802      	cmp	r0, #2
 80074f2:	f67f af73 	bls.w	80073dc <HAL_RCCEx_PeriphCLKConfig+0xd0>
 80074f6:	e7e7      	b.n	80074c8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80074f8:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 80074fc:	4293      	cmp	r3, r2
 80074fe:	f43f af78 	beq.w	80073f2 <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007502:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007504:	4a13      	ldr	r2, [pc, #76]	@ (8007554 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007506:	2101      	movs	r1, #1
 8007508:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800750c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8007510:	2100      	movs	r1, #0
 8007512:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 8007516:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8007518:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800751a:	07d9      	lsls	r1, r3, #31
 800751c:	f57f af69 	bpl.w	80073f2 <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 8007520:	f7fe f9a6 	bl	8005870 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007524:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8007528:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800752a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800752c:	079a      	lsls	r2, r3, #30
 800752e:	f53f af60 	bmi.w	80073f2 <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007532:	f7fe f99d 	bl	8005870 <HAL_GetTick>
 8007536:	1b80      	subs	r0, r0, r6
 8007538:	42b8      	cmp	r0, r7
 800753a:	d9f6      	bls.n	800752a <HAL_RCCEx_PeriphCLKConfig+0x21e>
 800753c:	e7c4      	b.n	80074c8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800753e:	6891      	ldr	r1, [r2, #8]
 8007540:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8007544:	e765      	b.n	8007412 <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007546:	4b06      	ldr	r3, [pc, #24]	@ (8007560 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8007548:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 800754c:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 8007550:	e769      	b.n	8007426 <HAL_RCCEx_PeriphCLKConfig+0x11a>
 8007552:	bf00      	nop
 8007554:	42470000 	.word	0x42470000
 8007558:	40023800 	.word	0x40023800
 800755c:	40007000 	.word	0x40007000
 8007560:	42471000 	.word	0x42471000

08007564 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8007564:	b538      	push	{r3, r4, r5, lr}
 8007566:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8007568:	4604      	mov	r4, r0
 800756a:	b1c8      	cbz	r0, 80075a0 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800756c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8007570:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8007574:	b91b      	cbnz	r3, 800757e <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8007576:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800757a:	f7fa fa8d 	bl	8001a98 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800757e:	2302      	movs	r3, #2
 8007580:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007584:	1d21      	adds	r1, r4, #4
 8007586:	6820      	ldr	r0, [r4, #0]
 8007588:	f000 fe49 	bl	800821e <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800758c:	6862      	ldr	r2, [r4, #4]
 800758e:	6820      	ldr	r0, [r4, #0]
 8007590:	4629      	mov	r1, r5
 8007592:	f000 fe7a 	bl	800828a <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007596:	2301      	movs	r3, #1
 8007598:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 800759c:	2000      	movs	r0, #0
}
 800759e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80075a0:	2001      	movs	r0, #1
 80075a2:	e7fc      	b.n	800759e <HAL_SDRAM_Init+0x3a>

080075a4 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 80075a4:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80075a6:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 80075aa:	2b02      	cmp	r3, #2
{
 80075ac:	4605      	mov	r5, r0
 80075ae:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80075b0:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 80075b2:	d012      	beq.n	80075da <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 80075b4:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 80075b8:	2c01      	cmp	r4, #1
 80075ba:	d10f      	bne.n	80075dc <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80075bc:	2302      	movs	r3, #2
 80075be:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80075c2:	6828      	ldr	r0, [r5, #0]
 80075c4:	f000 fe97 	bl	80082f6 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80075c8:	6833      	ldr	r3, [r6, #0]
 80075ca:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80075cc:	bf06      	itte	eq
 80075ce:	2305      	moveq	r3, #5
 80075d0:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 80075d4:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80075d8:	2000      	movs	r0, #0
}
 80075da:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 80075dc:	2001      	movs	r0, #1
 80075de:	e7fc      	b.n	80075da <HAL_SDRAM_SendCommand+0x36>

080075e0 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80075e0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80075e2:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 80075e6:	2b02      	cmp	r3, #2
{
 80075e8:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80075ea:	b2d8      	uxtb	r0, r3
 80075ec:	d00d      	beq.n	800760a <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 80075ee:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 80075f2:	2b01      	cmp	r3, #1
 80075f4:	b2dd      	uxtb	r5, r3
 80075f6:	d109      	bne.n	800760c <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80075f8:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80075fa:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80075fc:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8007600:	f000 fe9d 	bl	800833e <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8007604:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8007608:	2000      	movs	r0, #0
}
 800760a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800760c:	2001      	movs	r0, #1
 800760e:	e7fc      	b.n	800760a <HAL_SDRAM_ProgramRefreshRate+0x2a>

08007610 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8007610:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8007614:	461f      	mov	r7, r3
 8007616:	4689      	mov	r9, r1
 8007618:	4690      	mov	r8, r2
 800761a:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800761c:	f7fe f928 	bl	8005870 <HAL_GetTick>
 8007620:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8007622:	443d      	add	r5, r7
 8007624:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 8007626:	f7fe f923 	bl	8005870 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800762a:	4b26      	ldr	r3, [pc, #152]	@ (80076c4 <SPI_WaitFlagStateUntilTimeout+0xb4>)
 800762c:	681e      	ldr	r6, [r3, #0]
 800762e:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 8007632:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 8007634:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8007636:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007638:	6822      	ldr	r2, [r4, #0]
 800763a:	6893      	ldr	r3, [r2, #8]
 800763c:	ea39 0303 	bics.w	r3, r9, r3
 8007640:	bf0c      	ite	eq
 8007642:	2301      	moveq	r3, #1
 8007644:	2300      	movne	r3, #0
 8007646:	4543      	cmp	r3, r8
 8007648:	d101      	bne.n	800764e <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 800764a:	2000      	movs	r0, #0
 800764c:	e02e      	b.n	80076ac <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 800764e:	1c7b      	adds	r3, r7, #1
 8007650:	d0f3      	beq.n	800763a <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8007652:	f7fe f90d 	bl	8005870 <HAL_GetTick>
 8007656:	eba0 000a 	sub.w	r0, r0, sl
 800765a:	42a8      	cmp	r0, r5
 800765c:	d329      	bcc.n	80076b2 <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800765e:	6823      	ldr	r3, [r4, #0]
 8007660:	685a      	ldr	r2, [r3, #4]
 8007662:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8007666:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007668:	6862      	ldr	r2, [r4, #4]
 800766a:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800766e:	d10a      	bne.n	8007686 <SPI_WaitFlagStateUntilTimeout+0x76>
 8007670:	68a2      	ldr	r2, [r4, #8]
 8007672:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8007676:	d002      	beq.n	800767e <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007678:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 800767c:	d103      	bne.n	8007686 <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 800767e:	681a      	ldr	r2, [r3, #0]
 8007680:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007684:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007686:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8007688:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 800768c:	d107      	bne.n	800769e <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 800768e:	681a      	ldr	r2, [r3, #0]
 8007690:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8007694:	601a      	str	r2, [r3, #0]
 8007696:	681a      	ldr	r2, [r3, #0]
 8007698:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800769c:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800769e:	2301      	movs	r3, #1
 80076a0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 80076a4:	2300      	movs	r3, #0
 80076a6:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 80076aa:	2003      	movs	r0, #3
}
 80076ac:	b002      	add	sp, #8
 80076ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 80076b2:	9a01      	ldr	r2, [sp, #4]
      count--;
 80076b4:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 80076b6:	2a00      	cmp	r2, #0
      count--;
 80076b8:	f103 33ff 	add.w	r3, r3, #4294967295
 80076bc:	9301      	str	r3, [sp, #4]
 80076be:	bf08      	it	eq
 80076c0:	4615      	moveq	r5, r2
 80076c2:	e7b9      	b.n	8007638 <SPI_WaitFlagStateUntilTimeout+0x28>
 80076c4:	2000007c 	.word	0x2000007c

080076c8 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80076c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80076ca:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 80076cc:	460b      	mov	r3, r1
 80076ce:	9200      	str	r2, [sp, #0]
{
 80076d0:	460e      	mov	r6, r1
 80076d2:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 80076d4:	2102      	movs	r1, #2
 80076d6:	2201      	movs	r2, #1
{
 80076d8:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 80076da:	f7ff ff99 	bl	8007610 <SPI_WaitFlagStateUntilTimeout>
 80076de:	4605      	mov	r5, r0
 80076e0:	b128      	cbz	r0, 80076ee <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80076e2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80076e4:	f043 0320 	orr.w	r3, r3, #32
 80076e8:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 80076ea:	2503      	movs	r5, #3
 80076ec:	e015      	b.n	800771a <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80076ee:	4b12      	ldr	r3, [pc, #72]	@ (8007738 <SPI_EndRxTxTransaction+0x70>)
 80076f0:	6818      	ldr	r0, [r3, #0]
 80076f2:	4b12      	ldr	r3, [pc, #72]	@ (800773c <SPI_EndRxTxTransaction+0x74>)
 80076f4:	fbb0 f0f3 	udiv	r0, r0, r3
 80076f8:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80076fc:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80076fe:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007700:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007702:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007706:	d10b      	bne.n	8007720 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007708:	9700      	str	r7, [sp, #0]
 800770a:	4633      	mov	r3, r6
 800770c:	462a      	mov	r2, r5
 800770e:	2180      	movs	r1, #128	@ 0x80
 8007710:	4620      	mov	r0, r4
 8007712:	f7ff ff7d 	bl	8007610 <SPI_WaitFlagStateUntilTimeout>
 8007716:	2800      	cmp	r0, #0
 8007718:	d1e3      	bne.n	80076e2 <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800771a:	4628      	mov	r0, r5
 800771c:	b005      	add	sp, #20
 800771e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8007720:	9b03      	ldr	r3, [sp, #12]
 8007722:	2b00      	cmp	r3, #0
 8007724:	d0f9      	beq.n	800771a <SPI_EndRxTxTransaction+0x52>
      count--;
 8007726:	9b03      	ldr	r3, [sp, #12]
 8007728:	3b01      	subs	r3, #1
 800772a:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800772c:	6823      	ldr	r3, [r4, #0]
 800772e:	689b      	ldr	r3, [r3, #8]
 8007730:	061b      	lsls	r3, r3, #24
 8007732:	d4f5      	bmi.n	8007720 <SPI_EndRxTxTransaction+0x58>
 8007734:	e7f1      	b.n	800771a <SPI_EndRxTxTransaction+0x52>
 8007736:	bf00      	nop
 8007738:	2000007c 	.word	0x2000007c
 800773c:	016e3600 	.word	0x016e3600

08007740 <SPI_EndRxTransaction>:
{
 8007740:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007742:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007744:	6841      	ldr	r1, [r0, #4]
 8007746:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 800774a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800774c:	d008      	beq.n	8007760 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800774e:	9200      	str	r2, [sp, #0]
 8007750:	2101      	movs	r1, #1
 8007752:	2200      	movs	r2, #0
 8007754:	f7ff ff5c 	bl	8007610 <SPI_WaitFlagStateUntilTimeout>
 8007758:	b9d0      	cbnz	r0, 8007790 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 800775a:	2000      	movs	r0, #0
}
 800775c:	b003      	add	sp, #12
 800775e:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007760:	6881      	ldr	r1, [r0, #8]
 8007762:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 8007766:	d002      	beq.n	800776e <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007768:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 800776c:	d107      	bne.n	800777e <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 800776e:	6825      	ldr	r5, [r4, #0]
 8007770:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007772:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 8007776:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800777a:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800777c:	d004      	beq.n	8007788 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800777e:	9200      	str	r2, [sp, #0]
 8007780:	2180      	movs	r1, #128	@ 0x80
 8007782:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007784:	4620      	mov	r0, r4
 8007786:	e7e5      	b.n	8007754 <SPI_EndRxTransaction+0x14>
 8007788:	9200      	str	r2, [sp, #0]
 800778a:	2101      	movs	r1, #1
 800778c:	2200      	movs	r2, #0
 800778e:	e7f9      	b.n	8007784 <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007790:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8007792:	f043 0320 	orr.w	r3, r3, #32
 8007796:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 8007798:	2003      	movs	r0, #3
 800779a:	e7df      	b.n	800775c <SPI_EndRxTransaction+0x1c>

0800779c <HAL_SPI_Init>:
{
 800779c:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800779e:	4604      	mov	r4, r0
 80077a0:	2800      	cmp	r0, #0
 80077a2:	d055      	beq.n	8007850 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80077a4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80077a6:	2b00      	cmp	r3, #0
 80077a8:	d14e      	bne.n	8007848 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80077aa:	6842      	ldr	r2, [r0, #4]
 80077ac:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80077b0:	d000      	beq.n	80077b4 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80077b2:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80077b4:	2300      	movs	r3, #0
 80077b6:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80077b8:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 80077bc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80077c0:	b923      	cbnz	r3, 80077cc <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 80077c2:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 80077c6:	4620      	mov	r0, r4
 80077c8:	f7fa f930 	bl	8001a2c <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 80077cc:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80077ce:	68a0      	ldr	r0, [r4, #8]
 80077d0:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 80077d2:	2302      	movs	r3, #2
 80077d4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 80077d8:	680b      	ldr	r3, [r1, #0]
 80077da:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80077de:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80077e0:	6863      	ldr	r3, [r4, #4]
 80077e2:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 80077e6:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 80077ea:	4303      	orrs	r3, r0
 80077ec:	68e0      	ldr	r0, [r4, #12]
 80077ee:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 80077f2:	4303      	orrs	r3, r0
 80077f4:	6920      	ldr	r0, [r4, #16]
 80077f6:	f000 0002 	and.w	r0, r0, #2
 80077fa:	4303      	orrs	r3, r0
 80077fc:	6960      	ldr	r0, [r4, #20]
 80077fe:	f000 0001 	and.w	r0, r0, #1
 8007802:	4303      	orrs	r3, r0
 8007804:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 8007808:	4303      	orrs	r3, r0
 800780a:	69e0      	ldr	r0, [r4, #28]
 800780c:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8007810:	4303      	orrs	r3, r0
 8007812:	6a20      	ldr	r0, [r4, #32]
 8007814:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 8007818:	4303      	orrs	r3, r0
 800781a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800781c:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8007820:	4303      	orrs	r3, r0
 8007822:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8007824:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007826:	0c12      	lsrs	r2, r2, #16
 8007828:	f003 0310 	and.w	r3, r3, #16
 800782c:	f002 0204 	and.w	r2, r2, #4
 8007830:	431a      	orrs	r2, r3
 8007832:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007834:	69cb      	ldr	r3, [r1, #28]
 8007836:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800783a:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800783c:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800783e:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007840:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007842:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 8007846:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8007848:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800784a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800784e:	e7b1      	b.n	80077b4 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8007850:	2001      	movs	r0, #1
 8007852:	e7f8      	b.n	8007846 <HAL_SPI_Init+0xaa>

08007854 <HAL_SPI_Transmit>:
{
 8007854:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007858:	4604      	mov	r4, r0
 800785a:	461f      	mov	r7, r3
 800785c:	460d      	mov	r5, r1
 800785e:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 8007860:	f7fe f806 	bl	8005870 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007864:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8007868:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800786a:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800786c:	b2d8      	uxtb	r0, r3
 800786e:	f040 809f 	bne.w	80079b0 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 8007872:	2d00      	cmp	r5, #0
 8007874:	d074      	beq.n	8007960 <HAL_SPI_Transmit+0x10c>
 8007876:	f1b8 0f00 	cmp.w	r8, #0
 800787a:	d071      	beq.n	8007960 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 800787c:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8007880:	2b01      	cmp	r3, #1
 8007882:	f000 8095 	beq.w	80079b0 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007886:	2303      	movs	r3, #3
 8007888:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800788c:	2300      	movs	r3, #0
 800788e:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 8007890:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 8007894:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007898:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 800789a:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 800789c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800789e:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 80078a0:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 80078a2:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80078a6:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 80078aa:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 80078ac:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80078b0:	d107      	bne.n	80078c2 <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 80078b2:	6833      	ldr	r3, [r6, #0]
 80078b4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80078b8:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 80078ba:	6833      	ldr	r3, [r6, #0]
 80078bc:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80078c0:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80078c2:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80078c4:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80078c6:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 80078c8:	bf5e      	ittt	pl
 80078ca:	6833      	ldrpl	r3, [r6, #0]
 80078cc:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 80078d0:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80078d2:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80078d6:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80078d8:	d145      	bne.n	8007966 <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80078da:	b113      	cbz	r3, 80078e2 <HAL_SPI_Transmit+0x8e>
 80078dc:	f1b8 0f01 	cmp.w	r8, #1
 80078e0:	d107      	bne.n	80078f2 <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80078e2:	f835 3b02 	ldrh.w	r3, [r5], #2
 80078e6:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80078e8:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80078ea:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80078ec:	3b01      	subs	r3, #1
 80078ee:	b29b      	uxth	r3, r3
 80078f0:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 80078f2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80078f4:	b29b      	uxth	r3, r3
 80078f6:	b9d3      	cbnz	r3, 800792e <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80078f8:	464a      	mov	r2, r9
 80078fa:	4639      	mov	r1, r7
 80078fc:	4620      	mov	r0, r4
 80078fe:	f7ff fee3 	bl	80076c8 <SPI_EndRxTxTransaction>
 8007902:	2800      	cmp	r0, #0
 8007904:	d151      	bne.n	80079aa <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007906:	68a3      	ldr	r3, [r4, #8]
 8007908:	b933      	cbnz	r3, 8007918 <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800790a:	9301      	str	r3, [sp, #4]
 800790c:	6823      	ldr	r3, [r4, #0]
 800790e:	68da      	ldr	r2, [r3, #12]
 8007910:	9201      	str	r2, [sp, #4]
 8007912:	689b      	ldr	r3, [r3, #8]
 8007914:	9301      	str	r3, [sp, #4]
 8007916:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 8007918:	2301      	movs	r3, #1
 800791a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800791e:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8007920:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007922:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8007924:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007928:	bf18      	it	ne
 800792a:	2001      	movne	r0, #1
 800792c:	e018      	b.n	8007960 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800792e:	6822      	ldr	r2, [r4, #0]
 8007930:	6893      	ldr	r3, [r2, #8]
 8007932:	0798      	lsls	r0, r3, #30
 8007934:	d505      	bpl.n	8007942 <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8007936:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007938:	f833 1b02 	ldrh.w	r1, [r3], #2
 800793c:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800793e:	6323      	str	r3, [r4, #48]	@ 0x30
 8007940:	e7d3      	b.n	80078ea <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007942:	f7fd ff95 	bl	8005870 <HAL_GetTick>
 8007946:	eba0 0009 	sub.w	r0, r0, r9
 800794a:	42b8      	cmp	r0, r7
 800794c:	d3d1      	bcc.n	80078f2 <HAL_SPI_Transmit+0x9e>
 800794e:	1c79      	adds	r1, r7, #1
 8007950:	d0cf      	beq.n	80078f2 <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 8007952:	2301      	movs	r3, #1
 8007954:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8007958:	2300      	movs	r3, #0
 800795a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800795e:	2003      	movs	r0, #3
}
 8007960:	b003      	add	sp, #12
 8007962:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007966:	b113      	cbz	r3, 800796e <HAL_SPI_Transmit+0x11a>
 8007968:	f1b8 0f01 	cmp.w	r8, #1
 800796c:	d108      	bne.n	8007980 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800796e:	782b      	ldrb	r3, [r5, #0]
 8007970:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8007972:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007974:	3301      	adds	r3, #1
 8007976:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8007978:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800797a:	3b01      	subs	r3, #1
 800797c:	b29b      	uxth	r3, r3
 800797e:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8007980:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8007982:	b29b      	uxth	r3, r3
 8007984:	2b00      	cmp	r3, #0
 8007986:	d0b7      	beq.n	80078f8 <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007988:	6823      	ldr	r3, [r4, #0]
 800798a:	689a      	ldr	r2, [r3, #8]
 800798c:	0792      	lsls	r2, r2, #30
 800798e:	d503      	bpl.n	8007998 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8007990:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8007992:	7812      	ldrb	r2, [r2, #0]
 8007994:	731a      	strb	r2, [r3, #12]
 8007996:	e7ec      	b.n	8007972 <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007998:	f7fd ff6a 	bl	8005870 <HAL_GetTick>
 800799c:	eba0 0009 	sub.w	r0, r0, r9
 80079a0:	42b8      	cmp	r0, r7
 80079a2:	d3ed      	bcc.n	8007980 <HAL_SPI_Transmit+0x12c>
 80079a4:	1c7b      	adds	r3, r7, #1
 80079a6:	d0eb      	beq.n	8007980 <HAL_SPI_Transmit+0x12c>
 80079a8:	e7d3      	b.n	8007952 <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80079aa:	2320      	movs	r3, #32
 80079ac:	6563      	str	r3, [r4, #84]	@ 0x54
 80079ae:	e7aa      	b.n	8007906 <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 80079b0:	2002      	movs	r0, #2
 80079b2:	e7d5      	b.n	8007960 <HAL_SPI_Transmit+0x10c>

080079b4 <HAL_SPI_TransmitReceive>:
{
 80079b4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80079b8:	4604      	mov	r4, r0
 80079ba:	460d      	mov	r5, r1
 80079bc:	4691      	mov	r9, r2
 80079be:	461e      	mov	r6, r3
 80079c0:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 80079c4:	f7fd ff54 	bl	8005870 <HAL_GetTick>
  tmp_state           = hspi->State;
 80079c8:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 80079cc:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80079ce:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80079d0:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 80079d2:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80079d4:	d00a      	beq.n	80079ec <HAL_SPI_TransmitReceive+0x38>
 80079d6:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80079da:	f040 80e5 	bne.w	8007ba8 <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80079de:	68a3      	ldr	r3, [r4, #8]
 80079e0:	2b00      	cmp	r3, #0
 80079e2:	f040 80e1 	bne.w	8007ba8 <HAL_SPI_TransmitReceive+0x1f4>
 80079e6:	2904      	cmp	r1, #4
 80079e8:	f040 80de 	bne.w	8007ba8 <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80079ec:	2d00      	cmp	r5, #0
 80079ee:	d04b      	beq.n	8007a88 <HAL_SPI_TransmitReceive+0xd4>
 80079f0:	f1b9 0f00 	cmp.w	r9, #0
 80079f4:	d048      	beq.n	8007a88 <HAL_SPI_TransmitReceive+0xd4>
 80079f6:	2e00      	cmp	r6, #0
 80079f8:	d046      	beq.n	8007a88 <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 80079fa:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80079fe:	2b01      	cmp	r3, #1
 8007a00:	f000 80d2 	beq.w	8007ba8 <HAL_SPI_TransmitReceive+0x1f4>
 8007a04:	2301      	movs	r3, #1
 8007a06:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007a0a:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8007a0e:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007a12:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8007a14:	bf1c      	itt	ne
 8007a16:	2305      	movne	r3, #5
 8007a18:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007a1c:	2300      	movs	r3, #0
 8007a1e:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8007a20:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007a24:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8007a26:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 8007a28:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007a2a:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8007a2c:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007a2e:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8007a30:	bf58      	it	pl
 8007a32:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8007a34:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 8007a36:	bf58      	it	pl
 8007a38:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8007a3c:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 8007a3e:	bf58      	it	pl
 8007a40:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007a42:	68e1      	ldr	r1, [r4, #12]
 8007a44:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 8007a48:	d155      	bne.n	8007af6 <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007a4a:	b10a      	cbz	r2, 8007a50 <HAL_SPI_TransmitReceive+0x9c>
 8007a4c:	2e01      	cmp	r6, #1
 8007a4e:	d107      	bne.n	8007a60 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8007a50:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007a54:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8007a56:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007a58:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8007a5a:	3b01      	subs	r3, #1
 8007a5c:	b29b      	uxth	r3, r3
 8007a5e:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8007a60:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007a62:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8007a64:	b29b      	uxth	r3, r3
 8007a66:	b98b      	cbnz	r3, 8007a8c <HAL_SPI_TransmitReceive+0xd8>
 8007a68:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007a6a:	b29b      	uxth	r3, r3
 8007a6c:	b973      	cbnz	r3, 8007a8c <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007a6e:	463a      	mov	r2, r7
 8007a70:	4641      	mov	r1, r8
 8007a72:	4620      	mov	r0, r4
 8007a74:	f7ff fe28 	bl	80076c8 <SPI_EndRxTxTransaction>
 8007a78:	2800      	cmp	r0, #0
 8007a7a:	f000 8081 	beq.w	8007b80 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007a7e:	2320      	movs	r3, #32
 8007a80:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 8007a82:	2300      	movs	r3, #0
 8007a84:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 8007a88:	2001      	movs	r0, #1
 8007a8a:	e031      	b.n	8007af0 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007a8c:	6821      	ldr	r1, [r4, #0]
 8007a8e:	688b      	ldr	r3, [r1, #8]
 8007a90:	079a      	lsls	r2, r3, #30
 8007a92:	d50d      	bpl.n	8007ab0 <HAL_SPI_TransmitReceive+0xfc>
 8007a94:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8007a96:	b29b      	uxth	r3, r3
 8007a98:	b153      	cbz	r3, 8007ab0 <HAL_SPI_TransmitReceive+0xfc>
 8007a9a:	b145      	cbz	r5, 8007aae <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8007a9c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007a9e:	f833 2b02 	ldrh.w	r2, [r3], #2
 8007aa2:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007aa4:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8007aa6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8007aa8:	3b01      	subs	r3, #1
 8007aaa:	b29b      	uxth	r3, r3
 8007aac:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 8007aae:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007ab0:	688a      	ldr	r2, [r1, #8]
 8007ab2:	f012 0201 	ands.w	r2, r2, #1
 8007ab6:	d00c      	beq.n	8007ad2 <HAL_SPI_TransmitReceive+0x11e>
 8007ab8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007aba:	b29b      	uxth	r3, r3
 8007abc:	b14b      	cbz	r3, 8007ad2 <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007abe:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007ac0:	68c9      	ldr	r1, [r1, #12]
 8007ac2:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007ac6:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8007ac8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007aca:	3b01      	subs	r3, #1
 8007acc:	b29b      	uxth	r3, r3
 8007ace:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8007ad0:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8007ad2:	f7fd fecd 	bl	8005870 <HAL_GetTick>
 8007ad6:	1bc0      	subs	r0, r0, r7
 8007ad8:	4540      	cmp	r0, r8
 8007ada:	d3c2      	bcc.n	8007a62 <HAL_SPI_TransmitReceive+0xae>
 8007adc:	f1b8 3fff 	cmp.w	r8, #4294967295
 8007ae0:	d0bf      	beq.n	8007a62 <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 8007ae2:	2301      	movs	r3, #1
 8007ae4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8007ae8:	2300      	movs	r3, #0
 8007aea:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8007aee:	2003      	movs	r0, #3
}
 8007af0:	b003      	add	sp, #12
 8007af2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007af6:	b10a      	cbz	r2, 8007afc <HAL_SPI_TransmitReceive+0x148>
 8007af8:	2e01      	cmp	r6, #1
 8007afa:	d108      	bne.n	8007b0e <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8007afc:	782a      	ldrb	r2, [r5, #0]
 8007afe:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8007b00:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007b02:	3301      	adds	r3, #1
 8007b04:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8007b06:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8007b08:	3b01      	subs	r3, #1
 8007b0a:	b29b      	uxth	r3, r3
 8007b0c:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8007b0e:	2501      	movs	r5, #1
 8007b10:	e02d      	b.n	8007b6e <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007b12:	6822      	ldr	r2, [r4, #0]
 8007b14:	6893      	ldr	r3, [r2, #8]
 8007b16:	079b      	lsls	r3, r3, #30
 8007b18:	d50e      	bpl.n	8007b38 <HAL_SPI_TransmitReceive+0x184>
 8007b1a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8007b1c:	b29b      	uxth	r3, r3
 8007b1e:	b15b      	cbz	r3, 8007b38 <HAL_SPI_TransmitReceive+0x184>
 8007b20:	b14d      	cbz	r5, 8007b36 <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 8007b22:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007b24:	781b      	ldrb	r3, [r3, #0]
 8007b26:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8007b28:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007b2a:	3301      	adds	r3, #1
 8007b2c:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8007b2e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8007b30:	3b01      	subs	r3, #1
 8007b32:	b29b      	uxth	r3, r3
 8007b34:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8007b36:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007b38:	6822      	ldr	r2, [r4, #0]
 8007b3a:	6891      	ldr	r1, [r2, #8]
 8007b3c:	f011 0101 	ands.w	r1, r1, #1
 8007b40:	d00d      	beq.n	8007b5e <HAL_SPI_TransmitReceive+0x1aa>
 8007b42:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007b44:	b29b      	uxth	r3, r3
 8007b46:	b153      	cbz	r3, 8007b5e <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8007b48:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007b4a:	68d2      	ldr	r2, [r2, #12]
 8007b4c:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8007b4e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007b50:	3301      	adds	r3, #1
 8007b52:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8007b54:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007b56:	3b01      	subs	r3, #1
 8007b58:	b29b      	uxth	r3, r3
 8007b5a:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8007b5c:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007b5e:	f7fd fe87 	bl	8005870 <HAL_GetTick>
 8007b62:	1bc0      	subs	r0, r0, r7
 8007b64:	4540      	cmp	r0, r8
 8007b66:	d302      	bcc.n	8007b6e <HAL_SPI_TransmitReceive+0x1ba>
 8007b68:	f1b8 3fff 	cmp.w	r8, #4294967295
 8007b6c:	d1b9      	bne.n	8007ae2 <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007b6e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8007b70:	b29b      	uxth	r3, r3
 8007b72:	2b00      	cmp	r3, #0
 8007b74:	d1cd      	bne.n	8007b12 <HAL_SPI_TransmitReceive+0x15e>
 8007b76:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007b78:	b29b      	uxth	r3, r3
 8007b7a:	2b00      	cmp	r3, #0
 8007b7c:	d1c9      	bne.n	8007b12 <HAL_SPI_TransmitReceive+0x15e>
 8007b7e:	e776      	b.n	8007a6e <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007b80:	68a3      	ldr	r3, [r4, #8]
 8007b82:	b933      	cbnz	r3, 8007b92 <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007b84:	9301      	str	r3, [sp, #4]
 8007b86:	6823      	ldr	r3, [r4, #0]
 8007b88:	68da      	ldr	r2, [r3, #12]
 8007b8a:	9201      	str	r2, [sp, #4]
 8007b8c:	689b      	ldr	r3, [r3, #8]
 8007b8e:	9301      	str	r3, [sp, #4]
 8007b90:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 8007b92:	2301      	movs	r3, #1
 8007b94:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007b98:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8007b9a:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007b9c:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8007b9e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007ba2:	bf18      	it	ne
 8007ba4:	2001      	movne	r0, #1
 8007ba6:	e7a3      	b.n	8007af0 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 8007ba8:	2002      	movs	r0, #2
 8007baa:	e7a1      	b.n	8007af0 <HAL_SPI_TransmitReceive+0x13c>

08007bac <HAL_SPI_Receive>:
{
 8007bac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007bb0:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 8007bb2:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 8007bb6:	2b01      	cmp	r3, #1
{
 8007bb8:	4604      	mov	r4, r0
 8007bba:	4689      	mov	r9, r1
 8007bbc:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 8007bbe:	b2dd      	uxtb	r5, r3
 8007bc0:	d004      	beq.n	8007bcc <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 8007bc2:	2502      	movs	r5, #2
}
 8007bc4:	4628      	mov	r0, r5
 8007bc6:	b003      	add	sp, #12
 8007bc8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007bcc:	6843      	ldr	r3, [r0, #4]
 8007bce:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007bd2:	d10b      	bne.n	8007bec <HAL_SPI_Receive+0x40>
 8007bd4:	6883      	ldr	r3, [r0, #8]
 8007bd6:	b94b      	cbnz	r3, 8007bec <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8007bd8:	2304      	movs	r3, #4
 8007bda:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8007bde:	4613      	mov	r3, r2
 8007be0:	9600      	str	r6, [sp, #0]
 8007be2:	460a      	mov	r2, r1
 8007be4:	f7ff fee6 	bl	80079b4 <HAL_SPI_TransmitReceive>
 8007be8:	4605      	mov	r5, r0
 8007bea:	e7eb      	b.n	8007bc4 <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 8007bec:	f7fd fe40 	bl	8005870 <HAL_GetTick>
 8007bf0:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 8007bf2:	f1b9 0f00 	cmp.w	r9, #0
 8007bf6:	d0e5      	beq.n	8007bc4 <HAL_SPI_Receive+0x18>
 8007bf8:	2f00      	cmp	r7, #0
 8007bfa:	d0e3      	beq.n	8007bc4 <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 8007bfc:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8007c00:	2b01      	cmp	r3, #1
 8007c02:	d0de      	beq.n	8007bc2 <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c04:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8007c06:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 8007c0a:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007c0c:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 8007c0e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c12:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8007c16:	f04f 0304 	mov.w	r3, #4
 8007c1a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 8007c1e:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007c22:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 8007c24:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8007c26:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8007c28:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8007c2a:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8007c2c:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8007c2e:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c30:	d107      	bne.n	8007c42 <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 8007c32:	681a      	ldr	r2, [r3, #0]
 8007c34:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007c38:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8007c3a:	681a      	ldr	r2, [r3, #0]
 8007c3c:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8007c40:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007c42:	681a      	ldr	r2, [r3, #0]
 8007c44:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007c46:	bf5e      	ittt	pl
 8007c48:	681a      	ldrpl	r2, [r3, #0]
 8007c4a:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 8007c4e:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8007c50:	68e3      	ldr	r3, [r4, #12]
 8007c52:	b1f3      	cbz	r3, 8007c92 <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 8007c54:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007c56:	b29b      	uxth	r3, r3
 8007c58:	b1fb      	cbz	r3, 8007c9a <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007c5a:	6823      	ldr	r3, [r4, #0]
 8007c5c:	689a      	ldr	r2, [r3, #8]
 8007c5e:	07d2      	lsls	r2, r2, #31
 8007c60:	d53c      	bpl.n	8007cdc <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007c62:	68da      	ldr	r2, [r3, #12]
 8007c64:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007c66:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007c6a:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8007c6c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007c6e:	3b01      	subs	r3, #1
 8007c70:	b29b      	uxth	r3, r3
 8007c72:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8007c74:	e7ee      	b.n	8007c54 <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007c76:	6823      	ldr	r3, [r4, #0]
 8007c78:	689a      	ldr	r2, [r3, #8]
 8007c7a:	07d0      	lsls	r0, r2, #31
 8007c7c:	d51e      	bpl.n	8007cbc <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8007c7e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8007c80:	7b1b      	ldrb	r3, [r3, #12]
 8007c82:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8007c84:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007c86:	3301      	adds	r3, #1
 8007c88:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8007c8a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007c8c:	3b01      	subs	r3, #1
 8007c8e:	b29b      	uxth	r3, r3
 8007c90:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 8007c92:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007c94:	b29b      	uxth	r3, r3
 8007c96:	2b00      	cmp	r3, #0
 8007c98:	d1ed      	bne.n	8007c76 <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007c9a:	4642      	mov	r2, r8
 8007c9c:	4631      	mov	r1, r6
 8007c9e:	4620      	mov	r0, r4
 8007ca0:	f7ff fd4e 	bl	8007740 <SPI_EndRxTransaction>
 8007ca4:	bb18      	cbnz	r0, 8007cee <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 8007ca6:	2301      	movs	r3, #1
 8007ca8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007cac:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8007cae:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007cb0:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 8007cb2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007cb6:	bf18      	it	ne
 8007cb8:	2501      	movne	r5, #1
 8007cba:	e783      	b.n	8007bc4 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007cbc:	f7fd fdd8 	bl	8005870 <HAL_GetTick>
 8007cc0:	eba0 0008 	sub.w	r0, r0, r8
 8007cc4:	42b0      	cmp	r0, r6
 8007cc6:	d3e4      	bcc.n	8007c92 <HAL_SPI_Receive+0xe6>
 8007cc8:	1c71      	adds	r1, r6, #1
 8007cca:	d0e2      	beq.n	8007c92 <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 8007ccc:	2301      	movs	r3, #1
 8007cce:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8007cd2:	2300      	movs	r3, #0
 8007cd4:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8007cd8:	2503      	movs	r5, #3
 8007cda:	e773      	b.n	8007bc4 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007cdc:	f7fd fdc8 	bl	8005870 <HAL_GetTick>
 8007ce0:	eba0 0008 	sub.w	r0, r0, r8
 8007ce4:	42b0      	cmp	r0, r6
 8007ce6:	d3b5      	bcc.n	8007c54 <HAL_SPI_Receive+0xa8>
 8007ce8:	1c73      	adds	r3, r6, #1
 8007cea:	d0b3      	beq.n	8007c54 <HAL_SPI_Receive+0xa8>
 8007cec:	e7ee      	b.n	8007ccc <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007cee:	2320      	movs	r3, #32
 8007cf0:	6563      	str	r3, [r4, #84]	@ 0x54
 8007cf2:	e7d8      	b.n	8007ca6 <HAL_SPI_Receive+0xfa>

08007cf4 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8007cf4:	4770      	bx	lr
	...

08007cf8 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8007cf8:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8007cfc:	2b01      	cmp	r3, #1
 8007cfe:	d130      	bne.n	8007d62 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007d00:	2302      	movs	r3, #2
 8007d02:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8007d06:	6803      	ldr	r3, [r0, #0]
 8007d08:	68da      	ldr	r2, [r3, #12]
 8007d0a:	f042 0201 	orr.w	r2, r2, #1
 8007d0e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007d10:	4a15      	ldr	r2, [pc, #84]	@ (8007d68 <HAL_TIM_Base_Start_IT+0x70>)
 8007d12:	4293      	cmp	r3, r2
 8007d14:	d01a      	beq.n	8007d4c <HAL_TIM_Base_Start_IT+0x54>
 8007d16:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007d1a:	d017      	beq.n	8007d4c <HAL_TIM_Base_Start_IT+0x54>
 8007d1c:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8007d20:	4293      	cmp	r3, r2
 8007d22:	d013      	beq.n	8007d4c <HAL_TIM_Base_Start_IT+0x54>
 8007d24:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007d28:	4293      	cmp	r3, r2
 8007d2a:	d00f      	beq.n	8007d4c <HAL_TIM_Base_Start_IT+0x54>
 8007d2c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007d30:	4293      	cmp	r3, r2
 8007d32:	d00b      	beq.n	8007d4c <HAL_TIM_Base_Start_IT+0x54>
 8007d34:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8007d38:	4293      	cmp	r3, r2
 8007d3a:	d007      	beq.n	8007d4c <HAL_TIM_Base_Start_IT+0x54>
 8007d3c:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8007d40:	4293      	cmp	r3, r2
 8007d42:	d003      	beq.n	8007d4c <HAL_TIM_Base_Start_IT+0x54>
 8007d44:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 8007d48:	4293      	cmp	r3, r2
 8007d4a:	d104      	bne.n	8007d56 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007d4c:	689a      	ldr	r2, [r3, #8]
 8007d4e:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007d52:	2a06      	cmp	r2, #6
 8007d54:	d003      	beq.n	8007d5e <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 8007d56:	681a      	ldr	r2, [r3, #0]
 8007d58:	f042 0201 	orr.w	r2, r2, #1
 8007d5c:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8007d5e:	2000      	movs	r0, #0
 8007d60:	4770      	bx	lr
    return HAL_ERROR;
 8007d62:	2001      	movs	r0, #1
}
 8007d64:	4770      	bx	lr
 8007d66:	bf00      	nop
 8007d68:	40010000 	.word	0x40010000

08007d6c <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8007d6c:	4770      	bx	lr

08007d6e <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8007d6e:	4770      	bx	lr

08007d70 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8007d70:	4770      	bx	lr

08007d72 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8007d72:	4770      	bx	lr

08007d74 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8007d74:	6803      	ldr	r3, [r0, #0]
{
 8007d76:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8007d78:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8007d7a:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8007d7c:	07b1      	lsls	r1, r6, #30
{
 8007d7e:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8007d80:	d50d      	bpl.n	8007d9e <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8007d82:	07aa      	lsls	r2, r5, #30
 8007d84:	d50b      	bpl.n	8007d9e <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8007d86:	f06f 0202 	mvn.w	r2, #2
 8007d8a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007d8c:	2201      	movs	r2, #1
 8007d8e:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007d90:	699b      	ldr	r3, [r3, #24]
 8007d92:	079b      	lsls	r3, r3, #30
 8007d94:	d069      	beq.n	8007e6a <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 8007d96:	f7ff ffea 	bl	8007d6e <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007d9a:	2300      	movs	r3, #0
 8007d9c:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8007d9e:	0771      	lsls	r1, r6, #29
 8007da0:	d510      	bpl.n	8007dc4 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8007da2:	076a      	lsls	r2, r5, #29
 8007da4:	d50e      	bpl.n	8007dc4 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007da6:	6823      	ldr	r3, [r4, #0]
 8007da8:	f06f 0204 	mvn.w	r2, #4
 8007dac:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007dae:	2202      	movs	r2, #2
 8007db0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007db2:	699b      	ldr	r3, [r3, #24]
 8007db4:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8007db8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007dba:	d05c      	beq.n	8007e76 <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 8007dbc:	f7ff ffd7 	bl	8007d6e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007dc0:	2300      	movs	r3, #0
 8007dc2:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8007dc4:	0733      	lsls	r3, r6, #28
 8007dc6:	d50f      	bpl.n	8007de8 <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8007dc8:	0728      	lsls	r0, r5, #28
 8007dca:	d50d      	bpl.n	8007de8 <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007dcc:	6823      	ldr	r3, [r4, #0]
 8007dce:	f06f 0208 	mvn.w	r2, #8
 8007dd2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007dd4:	2204      	movs	r2, #4
 8007dd6:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007dd8:	69db      	ldr	r3, [r3, #28]
 8007dda:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 8007ddc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007dde:	d050      	beq.n	8007e82 <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 8007de0:	f7ff ffc5 	bl	8007d6e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007de4:	2300      	movs	r3, #0
 8007de6:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8007de8:	06f2      	lsls	r2, r6, #27
 8007dea:	d510      	bpl.n	8007e0e <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8007dec:	06eb      	lsls	r3, r5, #27
 8007dee:	d50e      	bpl.n	8007e0e <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8007df0:	6823      	ldr	r3, [r4, #0]
 8007df2:	f06f 0210 	mvn.w	r2, #16
 8007df6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007df8:	2208      	movs	r2, #8
 8007dfa:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007dfc:	69db      	ldr	r3, [r3, #28]
 8007dfe:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8007e02:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007e04:	d043      	beq.n	8007e8e <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 8007e06:	f7ff ffb2 	bl	8007d6e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e0a:	2300      	movs	r3, #0
 8007e0c:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8007e0e:	07f0      	lsls	r0, r6, #31
 8007e10:	d508      	bpl.n	8007e24 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8007e12:	07e9      	lsls	r1, r5, #31
 8007e14:	d506      	bpl.n	8007e24 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8007e16:	6823      	ldr	r3, [r4, #0]
 8007e18:	f06f 0201 	mvn.w	r2, #1
 8007e1c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8007e1e:	4620      	mov	r0, r4
 8007e20:	f7f9 fc66 	bl	80016f0 <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8007e24:	0632      	lsls	r2, r6, #24
 8007e26:	d508      	bpl.n	8007e3a <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8007e28:	062b      	lsls	r3, r5, #24
 8007e2a:	d506      	bpl.n	8007e3a <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8007e2c:	6823      	ldr	r3, [r4, #0]
 8007e2e:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8007e32:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8007e34:	4620      	mov	r0, r4
 8007e36:	f000 f8b6 	bl	8007fa6 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8007e3a:	0670      	lsls	r0, r6, #25
 8007e3c:	d508      	bpl.n	8007e50 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8007e3e:	0669      	lsls	r1, r5, #25
 8007e40:	d506      	bpl.n	8007e50 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8007e42:	6823      	ldr	r3, [r4, #0]
 8007e44:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8007e48:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8007e4a:	4620      	mov	r0, r4
 8007e4c:	f7ff ff91 	bl	8007d72 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8007e50:	06b2      	lsls	r2, r6, #26
 8007e52:	d522      	bpl.n	8007e9a <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8007e54:	06ab      	lsls	r3, r5, #26
 8007e56:	d520      	bpl.n	8007e9a <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007e58:	6823      	ldr	r3, [r4, #0]
 8007e5a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8007e5e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007e60:	611a      	str	r2, [r3, #16]
}
 8007e62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 8007e66:	f000 b89d 	b.w	8007fa4 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007e6a:	f7ff ff7f 	bl	8007d6c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007e6e:	4620      	mov	r0, r4
 8007e70:	f7ff ff7e 	bl	8007d70 <HAL_TIM_PWM_PulseFinishedCallback>
 8007e74:	e791      	b.n	8007d9a <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007e76:	f7ff ff79 	bl	8007d6c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007e7a:	4620      	mov	r0, r4
 8007e7c:	f7ff ff78 	bl	8007d70 <HAL_TIM_PWM_PulseFinishedCallback>
 8007e80:	e79e      	b.n	8007dc0 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007e82:	f7ff ff73 	bl	8007d6c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007e86:	4620      	mov	r0, r4
 8007e88:	f7ff ff72 	bl	8007d70 <HAL_TIM_PWM_PulseFinishedCallback>
 8007e8c:	e7aa      	b.n	8007de4 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007e8e:	f7ff ff6d 	bl	8007d6c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007e92:	4620      	mov	r0, r4
 8007e94:	f7ff ff6c 	bl	8007d70 <HAL_TIM_PWM_PulseFinishedCallback>
 8007e98:	e7b7      	b.n	8007e0a <HAL_TIM_IRQHandler+0x96>
}
 8007e9a:	bd70      	pop	{r4, r5, r6, pc}

08007e9c <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007e9c:	4a29      	ldr	r2, [pc, #164]	@ (8007f44 <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 8007e9e:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007ea0:	4290      	cmp	r0, r2
 8007ea2:	d012      	beq.n	8007eca <TIM_Base_SetConfig+0x2e>
 8007ea4:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007ea8:	d00f      	beq.n	8007eca <TIM_Base_SetConfig+0x2e>
 8007eaa:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8007eae:	4290      	cmp	r0, r2
 8007eb0:	d00b      	beq.n	8007eca <TIM_Base_SetConfig+0x2e>
 8007eb2:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007eb6:	4290      	cmp	r0, r2
 8007eb8:	d007      	beq.n	8007eca <TIM_Base_SetConfig+0x2e>
 8007eba:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007ebe:	4290      	cmp	r0, r2
 8007ec0:	d003      	beq.n	8007eca <TIM_Base_SetConfig+0x2e>
 8007ec2:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8007ec6:	4290      	cmp	r0, r2
 8007ec8:	d108      	bne.n	8007edc <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007eca:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007ecc:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8007ed0:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007ed2:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8007ed4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007ed8:	4313      	orrs	r3, r2
 8007eda:	e016      	b.n	8007f0a <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007edc:	4a1a      	ldr	r2, [pc, #104]	@ (8007f48 <TIM_Base_SetConfig+0xac>)
 8007ede:	4290      	cmp	r0, r2
 8007ee0:	d0f7      	beq.n	8007ed2 <TIM_Base_SetConfig+0x36>
 8007ee2:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007ee6:	4290      	cmp	r0, r2
 8007ee8:	d0f3      	beq.n	8007ed2 <TIM_Base_SetConfig+0x36>
 8007eea:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007eee:	4290      	cmp	r0, r2
 8007ef0:	d0ef      	beq.n	8007ed2 <TIM_Base_SetConfig+0x36>
 8007ef2:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 8007ef6:	4290      	cmp	r0, r2
 8007ef8:	d0eb      	beq.n	8007ed2 <TIM_Base_SetConfig+0x36>
 8007efa:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007efe:	4290      	cmp	r0, r2
 8007f00:	d0e7      	beq.n	8007ed2 <TIM_Base_SetConfig+0x36>
 8007f02:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007f06:	4290      	cmp	r0, r2
 8007f08:	d0e3      	beq.n	8007ed2 <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007f0a:	694a      	ldr	r2, [r1, #20]
 8007f0c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007f10:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8007f12:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007f14:	688b      	ldr	r3, [r1, #8]
 8007f16:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007f18:	680b      	ldr	r3, [r1, #0]
 8007f1a:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007f1c:	4b09      	ldr	r3, [pc, #36]	@ (8007f44 <TIM_Base_SetConfig+0xa8>)
 8007f1e:	4298      	cmp	r0, r3
 8007f20:	d003      	beq.n	8007f2a <TIM_Base_SetConfig+0x8e>
 8007f22:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8007f26:	4298      	cmp	r0, r3
 8007f28:	d101      	bne.n	8007f2e <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8007f2a:	690b      	ldr	r3, [r1, #16]
 8007f2c:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007f2e:	2301      	movs	r3, #1
 8007f30:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8007f32:	6903      	ldr	r3, [r0, #16]
 8007f34:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8007f36:	bf42      	ittt	mi
 8007f38:	6903      	ldrmi	r3, [r0, #16]
 8007f3a:	f023 0301 	bicmi.w	r3, r3, #1
 8007f3e:	6103      	strmi	r3, [r0, #16]
  }
}
 8007f40:	4770      	bx	lr
 8007f42:	bf00      	nop
 8007f44:	40010000 	.word	0x40010000
 8007f48:	40014000 	.word	0x40014000

08007f4c <HAL_TIM_Base_Init>:
{
 8007f4c:	b510      	push	{r4, lr}
  if (htim == NULL)
 8007f4e:	4604      	mov	r4, r0
 8007f50:	b330      	cbz	r0, 8007fa0 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8007f52:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8007f56:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8007f5a:	b91b      	cbnz	r3, 8007f64 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007f5c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8007f60:	f7ff fec8 	bl	8007cf4 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8007f64:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007f66:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8007f68:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007f6c:	1d21      	adds	r1, r4, #4
 8007f6e:	f7ff ff95 	bl	8007e9c <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007f72:	2301      	movs	r3, #1
 8007f74:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 8007f78:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007f7a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 8007f7e:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8007f82:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8007f86:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007f8a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8007f8e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007f92:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8007f96:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 8007f9a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 8007f9e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007fa0:	2001      	movs	r0, #1
 8007fa2:	e7fc      	b.n	8007f9e <HAL_TIM_Base_Init+0x52>

08007fa4 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8007fa4:	4770      	bx	lr

08007fa6 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8007fa6:	4770      	bx	lr

08007fa8 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8007fa8:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007faa:	f102 030c 	add.w	r3, r2, #12
 8007fae:	e853 3f00 	ldrex	r3, [r3]
 8007fb2:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007fb6:	320c      	adds	r2, #12
 8007fb8:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8007fbc:	6802      	ldr	r2, [r0, #0]
 8007fbe:	2900      	cmp	r1, #0
 8007fc0:	d1f2      	bne.n	8007fa8 <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007fc2:	f102 0314 	add.w	r3, r2, #20
 8007fc6:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007fca:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007fce:	f102 0c14 	add.w	ip, r2, #20
 8007fd2:	e84c 3100 	strex	r1, r3, [ip]
 8007fd6:	2900      	cmp	r1, #0
 8007fd8:	d1f3      	bne.n	8007fc2 <UART_EndRxTransfer+0x1a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8007fda:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8007fdc:	2b01      	cmp	r3, #1
 8007fde:	d10b      	bne.n	8007ff8 <UART_EndRxTransfer+0x50>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007fe0:	f102 030c 	add.w	r3, r2, #12
 8007fe4:	e853 3f00 	ldrex	r3, [r3]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8007fe8:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007fec:	f102 0c0c 	add.w	ip, r2, #12
 8007ff0:	e84c 3100 	strex	r1, r3, [ip]
 8007ff4:	2900      	cmp	r1, #0
 8007ff6:	d1f3      	bne.n	8007fe0 <UART_EndRxTransfer+0x38>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8007ff8:	2320      	movs	r3, #32
 8007ffa:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007ffe:	2300      	movs	r3, #0
 8008000:	6303      	str	r3, [r0, #48]	@ 0x30
}
 8008002:	4770      	bx	lr

08008004 <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8008004:	6802      	ldr	r2, [r0, #0]
 8008006:	68c1      	ldr	r1, [r0, #12]
{
 8008008:	b538      	push	{r3, r4, r5, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800800a:	6913      	ldr	r3, [r2, #16]
 800800c:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8008010:	430b      	orrs	r3, r1
 8008012:	6113      	str	r3, [r2, #16]
{
 8008014:	4605      	mov	r5, r0
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8008016:	6883      	ldr	r3, [r0, #8]
 8008018:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 800801a:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800801c:	4303      	orrs	r3, r0
 800801e:	6968      	ldr	r0, [r5, #20]
 8008020:	4303      	orrs	r3, r0
 8008022:	69e8      	ldr	r0, [r5, #28]
  MODIFY_REG(huart->Instance->CR1,
 8008024:	f421 4116 	bic.w	r1, r1, #38400	@ 0x9600
 8008028:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800802c:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1,
 800802e:	430b      	orrs	r3, r1
 8008030:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8008032:	6953      	ldr	r3, [r2, #20]
 8008034:	69a9      	ldr	r1, [r5, #24]
 8008036:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800803a:	430b      	orrs	r3, r1
 800803c:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800803e:	4b1f      	ldr	r3, [pc, #124]	@ (80080bc <UART_SetConfig+0xb8>)
 8008040:	429a      	cmp	r2, r3
 8008042:	d003      	beq.n	800804c <UART_SetConfig+0x48>
 8008044:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8008048:	429a      	cmp	r2, r3
 800804a:	d124      	bne.n	8008096 <UART_SetConfig+0x92>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 800804c:	f7ff f930 	bl	80072b0 <HAL_RCC_GetPCLK2Freq>
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8008050:	69ea      	ldr	r2, [r5, #28]
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8008052:	2119      	movs	r1, #25
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8008054:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8008058:	e9d5 4300 	ldrd	r4, r3, [r5]
 800805c:	fba0 0101 	umull	r0, r1, r0, r1
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8008060:	d11c      	bne.n	800809c <UART_SetConfig+0x98>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8008062:	18da      	adds	r2, r3, r3
 8008064:	f04f 0500 	mov.w	r5, #0
 8008068:	eb45 0305 	adc.w	r3, r5, r5
 800806c:	f7f8 f960 	bl	8000330 <__aeabi_uldivmod>
 8008070:	2264      	movs	r2, #100	@ 0x64
 8008072:	fbb0 f1f2 	udiv	r1, r0, r2
 8008076:	fb02 0311 	mls	r3, r2, r1, r0
 800807a:	00db      	lsls	r3, r3, #3
 800807c:	3332      	adds	r3, #50	@ 0x32
 800807e:	fbb3 f3f2 	udiv	r3, r3, r2
 8008082:	f003 0207 	and.w	r2, r3, #7
 8008086:	005b      	lsls	r3, r3, #1
 8008088:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 800808c:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8008090:	4413      	add	r3, r2
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8008092:	60a3      	str	r3, [r4, #8]
  }
}
 8008094:	bd38      	pop	{r3, r4, r5, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 8008096:	f7ff f8fb 	bl	8007290 <HAL_RCC_GetPCLK1Freq>
 800809a:	e7d9      	b.n	8008050 <UART_SetConfig+0x4c>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800809c:	009a      	lsls	r2, r3, #2
 800809e:	0f9b      	lsrs	r3, r3, #30
 80080a0:	f7f8 f946 	bl	8000330 <__aeabi_uldivmod>
 80080a4:	2264      	movs	r2, #100	@ 0x64
 80080a6:	fbb0 f1f2 	udiv	r1, r0, r2
 80080aa:	fb02 0311 	mls	r3, r2, r1, r0
 80080ae:	011b      	lsls	r3, r3, #4
 80080b0:	3332      	adds	r3, #50	@ 0x32
 80080b2:	fbb3 f3f2 	udiv	r3, r3, r2
 80080b6:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 80080ba:	e7ea      	b.n	8008092 <UART_SetConfig+0x8e>
 80080bc:	40011000 	.word	0x40011000

080080c0 <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
 80080c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80080c2:	4605      	mov	r5, r0
 80080c4:	460c      	mov	r4, r1
 80080c6:	4617      	mov	r7, r2
 80080c8:	461e      	mov	r6, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80080ca:	682a      	ldr	r2, [r5, #0]
 80080cc:	6813      	ldr	r3, [r2, #0]
 80080ce:	ea34 0303 	bics.w	r3, r4, r3
 80080d2:	d101      	bne.n	80080d8 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 80080d4:	2000      	movs	r0, #0
 80080d6:	e021      	b.n	800811c <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>
    if (Timeout != HAL_MAX_DELAY)
 80080d8:	1c70      	adds	r0, r6, #1
 80080da:	d0f7      	beq.n	80080cc <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80080dc:	f7fd fbc8 	bl	8005870 <HAL_GetTick>
 80080e0:	1bc0      	subs	r0, r0, r7
 80080e2:	4286      	cmp	r6, r0
 80080e4:	d31c      	bcc.n	8008120 <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
 80080e6:	b1de      	cbz	r6, 8008120 <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 80080e8:	682b      	ldr	r3, [r5, #0]
 80080ea:	68da      	ldr	r2, [r3, #12]
 80080ec:	0751      	lsls	r1, r2, #29
 80080ee:	d5ec      	bpl.n	80080ca <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 80080f0:	2c80      	cmp	r4, #128	@ 0x80
 80080f2:	d0ea      	beq.n	80080ca <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 80080f4:	2c40      	cmp	r4, #64	@ 0x40
 80080f6:	d0e8      	beq.n	80080ca <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 80080f8:	681a      	ldr	r2, [r3, #0]
 80080fa:	0712      	lsls	r2, r2, #28
 80080fc:	d5e5      	bpl.n	80080ca <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
          __HAL_UART_CLEAR_OREFLAG(huart);
 80080fe:	2400      	movs	r4, #0
 8008100:	9401      	str	r4, [sp, #4]
 8008102:	681a      	ldr	r2, [r3, #0]
 8008104:	9201      	str	r2, [sp, #4]
 8008106:	685b      	ldr	r3, [r3, #4]
 8008108:	9301      	str	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 800810a:	4628      	mov	r0, r5
          __HAL_UART_CLEAR_OREFLAG(huart);
 800810c:	9b01      	ldr	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 800810e:	f7ff ff4b 	bl	8007fa8 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 8008112:	2308      	movs	r3, #8
 8008114:	646b      	str	r3, [r5, #68]	@ 0x44
          __HAL_UNLOCK(huart);
 8008116:	f885 4040 	strb.w	r4, [r5, #64]	@ 0x40
          return HAL_ERROR;
 800811a:	2001      	movs	r0, #1
}
 800811c:	b003      	add	sp, #12
 800811e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
 8008120:	2003      	movs	r0, #3
 8008122:	e7fb      	b.n	800811c <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>

08008124 <HAL_UART_Init>:
{
 8008124:	b510      	push	{r4, lr}
  if (huart == NULL)
 8008126:	4604      	mov	r4, r0
 8008128:	b348      	cbz	r0, 800817e <HAL_UART_Init+0x5a>
  if (huart->gState == HAL_UART_STATE_RESET)
 800812a:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 800812e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8008132:	b91b      	cbnz	r3, 800813c <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8008134:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_UART_MspInit(huart);
 8008138:	f7f9 fd1a 	bl	8001b70 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 800813c:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800813e:	2324      	movs	r3, #36	@ 0x24
 8008140:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UART_DISABLE(huart);
 8008144:	68d3      	ldr	r3, [r2, #12]
 8008146:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800814a:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 800814c:	4620      	mov	r0, r4
 800814e:	f7ff ff59 	bl	8008004 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8008152:	6823      	ldr	r3, [r4, #0]
 8008154:	691a      	ldr	r2, [r3, #16]
 8008156:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800815a:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800815c:	695a      	ldr	r2, [r3, #20]
 800815e:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8008162:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8008164:	68da      	ldr	r2, [r3, #12]
 8008166:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800816a:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800816c:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800816e:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008170:	6460      	str	r0, [r4, #68]	@ 0x44
  huart->gState = HAL_UART_STATE_READY;
 8008172:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8008176:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 800817a:	6360      	str	r0, [r4, #52]	@ 0x34
}
 800817c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800817e:	2001      	movs	r0, #1
 8008180:	e7fc      	b.n	800817c <HAL_UART_Init+0x58>

08008182 <HAL_UART_Transmit>:
{
 8008182:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008186:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8008188:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 800818c:	2b20      	cmp	r3, #32
{
 800818e:	4604      	mov	r4, r0
 8008190:	460e      	mov	r6, r1
 8008192:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8008194:	d13f      	bne.n	8008216 <HAL_UART_Transmit+0x94>
    if ((pData == NULL) || (Size == 0U))
 8008196:	2900      	cmp	r1, #0
 8008198:	d03f      	beq.n	800821a <HAL_UART_Transmit+0x98>
 800819a:	2a00      	cmp	r2, #0
 800819c:	d03d      	beq.n	800821a <HAL_UART_Transmit+0x98>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800819e:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80081a0:	2500      	movs	r5, #0
 80081a2:	6445      	str	r5, [r0, #68]	@ 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 80081a4:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
    tickstart = HAL_GetTick();
 80081a8:	f7fd fb62 	bl	8005870 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80081ac:	68a3      	ldr	r3, [r4, #8]
    huart->TxXferSize = Size;
 80081ae:	84a7      	strh	r7, [r4, #36]	@ 0x24
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80081b0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    tickstart = HAL_GetTick();
 80081b4:	4681      	mov	r9, r0
    huart->TxXferCount = Size;
 80081b6:	84e7      	strh	r7, [r4, #38]	@ 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80081b8:	d103      	bne.n	80081c2 <HAL_UART_Transmit+0x40>
 80081ba:	6923      	ldr	r3, [r4, #16]
 80081bc:	b90b      	cbnz	r3, 80081c2 <HAL_UART_Transmit+0x40>
      pdata16bits = (const uint16_t *) pData;
 80081be:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 80081c0:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 80081c2:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 80081c4:	b29b      	uxth	r3, r3
 80081c6:	b953      	cbnz	r3, 80081de <HAL_UART_Transmit+0x5c>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80081c8:	4643      	mov	r3, r8
 80081ca:	464a      	mov	r2, r9
 80081cc:	2140      	movs	r1, #64	@ 0x40
 80081ce:	4620      	mov	r0, r4
 80081d0:	f7ff ff76 	bl	80080c0 <UART_WaitOnFlagUntilTimeout.constprop.0>
 80081d4:	2320      	movs	r3, #32
 80081d6:	b950      	cbnz	r0, 80081ee <HAL_UART_Transmit+0x6c>
    huart->gState = HAL_UART_STATE_READY;
 80081d8:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    return HAL_OK;
 80081dc:	e00a      	b.n	80081f4 <HAL_UART_Transmit+0x72>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80081de:	4643      	mov	r3, r8
 80081e0:	464a      	mov	r2, r9
 80081e2:	2180      	movs	r1, #128	@ 0x80
 80081e4:	4620      	mov	r0, r4
 80081e6:	f7ff ff6b 	bl	80080c0 <UART_WaitOnFlagUntilTimeout.constprop.0>
 80081ea:	b128      	cbz	r0, 80081f8 <HAL_UART_Transmit+0x76>
        huart->gState = HAL_UART_STATE_READY;
 80081ec:	2320      	movs	r3, #32
 80081ee:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        return HAL_TIMEOUT;
 80081f2:	2003      	movs	r0, #3
}
 80081f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 80081f8:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 80081fa:	b94e      	cbnz	r6, 8008210 <HAL_UART_Transmit+0x8e>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 80081fc:	f835 3b02 	ldrh.w	r3, [r5], #2
 8008200:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8008204:	6053      	str	r3, [r2, #4]
      huart->TxXferCount--;
 8008206:	8ce1      	ldrh	r1, [r4, #38]	@ 0x26
 8008208:	3901      	subs	r1, #1
 800820a:	b289      	uxth	r1, r1
 800820c:	84e1      	strh	r1, [r4, #38]	@ 0x26
 800820e:	e7d8      	b.n	80081c2 <HAL_UART_Transmit+0x40>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8008210:	f816 3b01 	ldrb.w	r3, [r6], #1
 8008214:	e7f6      	b.n	8008204 <HAL_UART_Transmit+0x82>
    return HAL_BUSY;
 8008216:	2002      	movs	r0, #2
 8008218:	e7ec      	b.n	80081f4 <HAL_UART_Transmit+0x72>
      return  HAL_ERROR;
 800821a:	2001      	movs	r0, #1
 800821c:	e7ea      	b.n	80081f4 <HAL_UART_Transmit+0x72>

0800821e <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800821e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8008222:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 8008226:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 800822a:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 800822e:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 8008232:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8008236:	6809      	ldr	r1, [r1, #0]
 8008238:	ea43 0308 	orr.w	r3, r3, r8
 800823c:	b981      	cbnz	r1, 8008260 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800823e:	ea43 030e 	orr.w	r3, r3, lr
 8008242:	4313      	orrs	r3, r2
 8008244:	ea43 030c 	orr.w	r3, r3, ip
 8008248:	433b      	orrs	r3, r7
 800824a:	6801      	ldr	r1, [r0, #0]
 800824c:	4333      	orrs	r3, r6
 800824e:	432b      	orrs	r3, r5
 8008250:	4323      	orrs	r3, r4
 8008252:	f36f 010e 	bfc	r1, #0, #15
 8008256:	430b      	orrs	r3, r1
 8008258:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800825a:	2000      	movs	r0, #0
 800825c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8008260:	6801      	ldr	r1, [r0, #0]
 8008262:	ea43 030e 	orr.w	r3, r3, lr
 8008266:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 800826a:	430b      	orrs	r3, r1
 800826c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800826e:	ea42 030c 	orr.w	r3, r2, ip
 8008272:	6841      	ldr	r1, [r0, #4]
 8008274:	433b      	orrs	r3, r7
 8008276:	4333      	orrs	r3, r6
 8008278:	432b      	orrs	r3, r5
 800827a:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 800827e:	4323      	orrs	r3, r4
 8008280:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8008284:	4313      	orrs	r3, r2
 8008286:	6043      	str	r3, [r0, #4]
 8008288:	e7e7      	b.n	800825a <FMC_SDRAM_Init+0x3c>

0800828a <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800828a:	68cb      	ldr	r3, [r1, #12]
 800828c:	f103 3cff 	add.w	ip, r3, #4294967295
 8008290:	694b      	ldr	r3, [r1, #20]
{
 8008292:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008294:	684c      	ldr	r4, [r1, #4]
 8008296:	688f      	ldr	r7, [r1, #8]
 8008298:	690e      	ldr	r6, [r1, #16]
 800829a:	698d      	ldr	r5, [r1, #24]
 800829c:	6809      	ldr	r1, [r1, #0]
 800829e:	3b01      	subs	r3, #1
 80082a0:	051b      	lsls	r3, r3, #20
 80082a2:	3c01      	subs	r4, #1
 80082a4:	3f01      	subs	r7, #1
 80082a6:	3e01      	subs	r6, #1
 80082a8:	3d01      	subs	r5, #1
 80082aa:	0124      	lsls	r4, r4, #4
 80082ac:	023f      	lsls	r7, r7, #8
 80082ae:	0436      	lsls	r6, r6, #16
 80082b0:	062d      	lsls	r5, r5, #24
 80082b2:	3901      	subs	r1, #1
 80082b4:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 80082b8:	b95a      	cbnz	r2, 80082d2 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80082ba:	430b      	orrs	r3, r1
 80082bc:	4323      	orrs	r3, r4
 80082be:	6882      	ldr	r2, [r0, #8]
 80082c0:	433b      	orrs	r3, r7
 80082c2:	4333      	orrs	r3, r6
 80082c4:	432b      	orrs	r3, r5
 80082c6:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 80082ca:	4313      	orrs	r3, r2
 80082cc:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 80082ce:	2000      	movs	r0, #0
 80082d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80082d2:	6882      	ldr	r2, [r0, #8]
 80082d4:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80082d8:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 80082dc:	4313      	orrs	r3, r2
 80082de:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 80082e0:	ea44 0307 	orr.w	r3, r4, r7
 80082e4:	68c2      	ldr	r2, [r0, #12]
 80082e6:	430b      	orrs	r3, r1
 80082e8:	4333      	orrs	r3, r6
 80082ea:	432b      	orrs	r3, r5
 80082ec:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 80082f0:	4313      	orrs	r3, r2
 80082f2:	60c3      	str	r3, [r0, #12]
 80082f4:	e7eb      	b.n	80082ce <FMC_SDRAM_Timing_Init+0x44>

080082f6 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80082f6:	b570      	push	{r4, r5, r6, lr}
 80082f8:	4604      	mov	r4, r0
 80082fa:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80082fc:	6902      	ldr	r2, [r0, #16]
 80082fe:	e9d1 3000 	ldrd	r3, r0, [r1]
 8008302:	4303      	orrs	r3, r0
 8008304:	68c8      	ldr	r0, [r1, #12]
 8008306:	f36f 0215 	bfc	r2, #0, #22
 800830a:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800830e:	4313      	orrs	r3, r2
 8008310:	688a      	ldr	r2, [r1, #8]
 8008312:	3a01      	subs	r2, #1
 8008314:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008318:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800831a:	f7fd faa9 	bl	8005870 <HAL_GetTick>
 800831e:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8008320:	69a0      	ldr	r0, [r4, #24]
 8008322:	f010 0020 	ands.w	r0, r0, #32
 8008326:	d003      	beq.n	8008330 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8008328:	1c6b      	adds	r3, r5, #1
 800832a:	d0f9      	beq.n	8008320 <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800832c:	b90d      	cbnz	r5, 8008332 <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 800832e:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 8008330:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8008332:	f7fd fa9d 	bl	8005870 <HAL_GetTick>
 8008336:	1b80      	subs	r0, r0, r6
 8008338:	42a8      	cmp	r0, r5
 800833a:	d9f1      	bls.n	8008320 <FMC_SDRAM_SendCommand+0x2a>
 800833c:	e7f7      	b.n	800832e <FMC_SDRAM_SendCommand+0x38>

0800833e <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800833e:	6943      	ldr	r3, [r0, #20]
 8008340:	f36f 034d 	bfc	r3, #1, #13
 8008344:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8008348:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 800834a:	2000      	movs	r0, #0
 800834c:	4770      	bx	lr

0800834e <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800834e:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8008350:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008354:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8008356:	f001 ff11 	bl	800a17c <xTaskGetSchedulerState>
 800835a:	2801      	cmp	r0, #1
 800835c:	d003      	beq.n	8008366 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800835e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8008362:	f000 bc7f 	b.w	8008c64 <xPortSysTickHandler>
}
 8008366:	bd08      	pop	{r3, pc}

08008368 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008368:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800836c:	b92b      	cbnz	r3, 800837a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800836e:	4b06      	ldr	r3, [pc, #24]	@ (8008388 <osKernelInitialize+0x20>)
 8008370:	6818      	ldr	r0, [r3, #0]
 8008372:	b928      	cbnz	r0, 8008380 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008374:	2201      	movs	r2, #1
 8008376:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8008378:	4770      	bx	lr
    stat = osErrorISR;
 800837a:	f06f 0005 	mvn.w	r0, #5
 800837e:	4770      	bx	lr
    } else {
      stat = osError;
 8008380:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8008384:	4770      	bx	lr
 8008386:	bf00      	nop
 8008388:	20005120 	.word	0x20005120

0800838c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800838c:	b510      	push	{r4, lr}
 800838e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008392:	b95c      	cbnz	r4, 80083ac <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8008394:	4b08      	ldr	r3, [pc, #32]	@ (80083b8 <osKernelStart+0x2c>)
 8008396:	681a      	ldr	r2, [r3, #0]
 8008398:	2a01      	cmp	r2, #1
 800839a:	d10a      	bne.n	80083b2 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800839c:	4a07      	ldr	r2, [pc, #28]	@ (80083bc <osKernelStart+0x30>)
 800839e:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 80083a0:	2202      	movs	r2, #2
 80083a2:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 80083a4:	f001 fc60 	bl	8009c68 <vTaskStartScheduler>
      stat = osOK;
 80083a8:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 80083aa:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80083ac:	f06f 0005 	mvn.w	r0, #5
 80083b0:	e7fb      	b.n	80083aa <osKernelStart+0x1e>
      stat = osError;
 80083b2:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80083b6:	e7f8      	b.n	80083aa <osKernelStart+0x1e>
 80083b8:	20005120 	.word	0x20005120
 80083bc:	e000ed00 	.word	0xe000ed00

080083c0 <osKernelGetTickCount>:
 80083c0:	f3ef 8305 	mrs	r3, IPSR
}

uint32_t osKernelGetTickCount (void) {
  TickType_t ticks;

  if (IS_IRQ()) {
 80083c4:	b10b      	cbz	r3, 80083ca <osKernelGetTickCount+0xa>
    ticks = xTaskGetTickCountFromISR();
 80083c6:	f001 bca3 	b.w	8009d10 <xTaskGetTickCountFromISR>
  } else {
    ticks = xTaskGetTickCount();
 80083ca:	f001 bc9b 	b.w	8009d04 <xTaskGetTickCount>

080083ce <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80083ce:	b5f0      	push	{r4, r5, r6, r7, lr}
 80083d0:	b087      	sub	sp, #28
 80083d2:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80083d4:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80083d6:	460b      	mov	r3, r1
  hTask = NULL;
 80083d8:	9205      	str	r2, [sp, #20]
 80083da:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80083de:	b9fa      	cbnz	r2, 8008420 <osThreadNew+0x52>
 80083e0:	b1f0      	cbz	r0, 8008420 <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80083e2:	b354      	cbz	r4, 800843a <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80083e4:	69a5      	ldr	r5, [r4, #24]
 80083e6:	b125      	cbz	r5, 80083f2 <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80083e8:	1e69      	subs	r1, r5, #1
 80083ea:	2937      	cmp	r1, #55	@ 0x37
 80083ec:	d902      	bls.n	80083f4 <osThreadNew+0x26>
        return (NULL);
 80083ee:	2000      	movs	r0, #0
 80083f0:	e017      	b.n	8008422 <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 80083f2:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80083f4:	6862      	ldr	r2, [r4, #4]
 80083f6:	07d2      	lsls	r2, r2, #31
 80083f8:	d4f9      	bmi.n	80083ee <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 80083fa:	6966      	ldr	r6, [r4, #20]
 80083fc:	b19e      	cbz	r6, 8008426 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80083fe:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008400:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 8008404:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008406:	b187      	cbz	r7, 800842a <osThreadNew+0x5c>
 8008408:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 800840c:	d908      	bls.n	8008420 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800840e:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008410:	b134      	cbz	r4, 8008420 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008412:	b12e      	cbz	r6, 8008420 <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008414:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8008418:	9500      	str	r5, [sp, #0]
 800841a:	f001 fb66 	bl	8009aea <xTaskCreateStatic>
 800841e:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008420:	9805      	ldr	r0, [sp, #20]
}
 8008422:	b007      	add	sp, #28
 8008424:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008426:	2280      	movs	r2, #128	@ 0x80
 8008428:	e7ea      	b.n	8008400 <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800842a:	f1bc 0f00 	cmp.w	ip, #0
 800842e:	d1f7      	bne.n	8008420 <osThreadNew+0x52>
 8008430:	6924      	ldr	r4, [r4, #16]
 8008432:	2c00      	cmp	r4, #0
 8008434:	d1f4      	bne.n	8008420 <osThreadNew+0x52>
 8008436:	460c      	mov	r4, r1
 8008438:	e001      	b.n	800843e <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 800843a:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 800843c:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800843e:	a905      	add	r1, sp, #20
 8008440:	e9cd 5100 	strd	r5, r1, [sp]
 8008444:	b292      	uxth	r2, r2
 8008446:	4621      	mov	r1, r4
 8008448:	f001 fb87 	bl	8009b5a <xTaskCreate>
 800844c:	2801      	cmp	r0, #1
            hTask = NULL;
 800844e:	bf1c      	itt	ne
 8008450:	2300      	movne	r3, #0
 8008452:	9305      	strne	r3, [sp, #20]
 8008454:	e7e4      	b.n	8008420 <osThreadNew+0x52>

08008456 <osThreadExit>:

  return (stat);
}
#endif /* (configUSE_OS2_THREAD_SUSPEND_RESUME == 1) */

__NO_RETURN void osThreadExit (void) {
 8008456:	b508      	push	{r3, lr}
#ifndef USE_FreeRTOS_HEAP_1
  vTaskDelete (NULL);
 8008458:	2000      	movs	r0, #0
 800845a:	f001 fbad 	bl	8009bb8 <vTaskDelete>
#endif
  for (;;);
 800845e:	e7fe      	b.n	800845e <osThreadExit+0x8>

08008460 <osThreadFlagsSet>:
  return (count);
}
#endif /* (configUSE_OS2_THREAD_ENUMERATE == 1) */

#if (configUSE_OS2_THREAD_FLAGS == 1)
uint32_t osThreadFlagsSet (osThreadId_t thread_id, uint32_t flags) {
 8008460:	b530      	push	{r4, r5, lr}
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  uint32_t rflags;
  BaseType_t yield;

  if ((hTask == NULL) || ((flags & THREAD_FLAGS_INVALID_BITS) != 0U)) {
 8008462:	4604      	mov	r4, r0
uint32_t osThreadFlagsSet (osThreadId_t thread_id, uint32_t flags) {
 8008464:	b085      	sub	sp, #20
  if ((hTask == NULL) || ((flags & THREAD_FLAGS_INVALID_BITS) != 0U)) {
 8008466:	b108      	cbz	r0, 800846c <osThreadFlagsSet+0xc>
 8008468:	2900      	cmp	r1, #0
 800846a:	da05      	bge.n	8008478 <osThreadFlagsSet+0x18>
    rflags = (uint32_t)osErrorParameter;
 800846c:	f06f 0303 	mvn.w	r3, #3
 8008470:	9302      	str	r3, [sp, #8]
      (void)xTaskNotifyAndQuery (hTask, 0, eNoAction, &rflags);
    }
  }
  /* Return flags after setting */
  return (rflags);
}
 8008472:	9802      	ldr	r0, [sp, #8]
 8008474:	b005      	add	sp, #20
 8008476:	bd30      	pop	{r4, r5, pc}
    rflags = (uint32_t)osError;
 8008478:	f04f 33ff 	mov.w	r3, #4294967295
 800847c:	9302      	str	r3, [sp, #8]
 800847e:	f3ef 8505 	mrs	r5, IPSR
    if (IS_IRQ()) {
 8008482:	b1e5      	cbz	r5, 80084be <osThreadFlagsSet+0x5e>
      yield = pdFALSE;
 8008484:	2500      	movs	r5, #0
      (void)xTaskNotifyFromISR (hTask, flags, eSetBits, &yield);
 8008486:	ab03      	add	r3, sp, #12
 8008488:	9300      	str	r3, [sp, #0]
 800848a:	2201      	movs	r2, #1
 800848c:	462b      	mov	r3, r5
      yield = pdFALSE;
 800848e:	9503      	str	r5, [sp, #12]
      (void)xTaskNotifyFromISR (hTask, flags, eSetBits, &yield);
 8008490:	f002 f816 	bl	800a4c0 <xTaskGenericNotifyFromISR>
      (void)xTaskNotifyAndQueryFromISR (hTask, 0, eNoAction, &rflags, NULL);
 8008494:	ab02      	add	r3, sp, #8
 8008496:	9500      	str	r5, [sp, #0]
 8008498:	462a      	mov	r2, r5
 800849a:	4629      	mov	r1, r5
 800849c:	4620      	mov	r0, r4
 800849e:	f002 f80f 	bl	800a4c0 <xTaskGenericNotifyFromISR>
      portYIELD_FROM_ISR (yield);
 80084a2:	9b03      	ldr	r3, [sp, #12]
 80084a4:	2b00      	cmp	r3, #0
 80084a6:	d0e4      	beq.n	8008472 <osThreadFlagsSet+0x12>
 80084a8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80084ac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80084b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80084b4:	f3bf 8f4f 	dsb	sy
 80084b8:	f3bf 8f6f 	isb	sy
 80084bc:	e7d9      	b.n	8008472 <osThreadFlagsSet+0x12>
      (void)xTaskNotify (hTask, flags, eSetBits);
 80084be:	462b      	mov	r3, r5
 80084c0:	2201      	movs	r2, #1
 80084c2:	f001 ff8b 	bl	800a3dc <xTaskGenericNotify>
      (void)xTaskNotifyAndQuery (hTask, 0, eNoAction, &rflags);
 80084c6:	ab02      	add	r3, sp, #8
 80084c8:	462a      	mov	r2, r5
 80084ca:	4629      	mov	r1, r5
 80084cc:	4620      	mov	r0, r4
 80084ce:	f001 ff85 	bl	800a3dc <xTaskGenericNotify>
 80084d2:	e7ce      	b.n	8008472 <osThreadFlagsSet+0x12>

080084d4 <osThreadFlagsWait>:
  }

  return (rflags);
}

uint32_t osThreadFlagsWait (uint32_t flags, uint32_t options, uint32_t timeout) {
 80084d4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80084d8:	4606      	mov	r6, r0
 80084da:	460f      	mov	r7, r1
 80084dc:	4690      	mov	r8, r2
 80084de:	f3ef 8405 	mrs	r4, IPSR
  uint32_t rflags, nval;
  uint32_t clear;
  TickType_t t0, td, tout;
  BaseType_t rval;

  if (IS_IRQ()) {
 80084e2:	2c00      	cmp	r4, #0
 80084e4:	d13c      	bne.n	8008560 <osThreadFlagsWait+0x8c>
    rflags = (uint32_t)osErrorISR;
  }
  else if ((flags & THREAD_FLAGS_INVALID_BITS) != 0U) {
 80084e6:	2800      	cmp	r0, #0
 80084e8:	db3d      	blt.n	8008566 <osThreadFlagsWait+0x92>
    rflags = (uint32_t)osErrorParameter;
  }
  else {
    if ((options & osFlagsNoClear) == osFlagsNoClear) {
      clear = 0U;
 80084ea:	f011 0f02 	tst.w	r1, #2
 80084ee:	bf0c      	ite	eq
 80084f0:	4682      	moveq	sl, r0
 80084f2:	f04f 0a00 	movne.w	sl, #0
    }

    rflags = 0U;
    tout   = timeout;

    t0 = xTaskGetTickCount();
 80084f6:	f001 fc05 	bl	8009d04 <xTaskGetTickCount>
    tout   = timeout;
 80084fa:	4645      	mov	r5, r8
    t0 = xTaskGetTickCount();
 80084fc:	4681      	mov	r9, r0

      if (rval == pdPASS) {
        rflags &= flags;
        rflags |= nval;

        if ((options & osFlagsWaitAll) == osFlagsWaitAll) {
 80084fe:	f007 0701 	and.w	r7, r7, #1
      rval = xTaskNotifyWait (0, clear, &nval, tout);
 8008502:	462b      	mov	r3, r5
 8008504:	aa01      	add	r2, sp, #4
 8008506:	4651      	mov	r1, sl
 8008508:	2000      	movs	r0, #0
 800850a:	f001 ff21 	bl	800a350 <xTaskNotifyWait>
      if (rval == pdPASS) {
 800850e:	2801      	cmp	r0, #1
 8008510:	d11c      	bne.n	800854c <osThreadFlagsWait+0x78>
        rflags |= nval;
 8008512:	9b01      	ldr	r3, [sp, #4]
        rflags &= flags;
 8008514:	4034      	ands	r4, r6
        rflags |= nval;
 8008516:	431c      	orrs	r4, r3
          if ((flags & rflags) == flags) {
 8008518:	ea06 0304 	and.w	r3, r6, r4
        if ((options & osFlagsWaitAll) == osFlagsWaitAll) {
 800851c:	b13f      	cbz	r7, 800852e <osThreadFlagsWait+0x5a>
          if ((flags & rflags) == flags) {
 800851e:	429e      	cmp	r6, r3
 8008520:	d007      	beq.n	8008532 <osThreadFlagsWait+0x5e>
            break;
          } else {
            if (timeout == 0U) {
 8008522:	f1b8 0f00 	cmp.w	r8, #0
 8008526:	d108      	bne.n	800853a <osThreadFlagsWait+0x66>
              rflags = (uint32_t)osErrorResource;
 8008528:	f06f 0402 	mvn.w	r4, #2
    }
    while (rval != pdFAIL);
  }

  /* Return flags before clearing */
  return (rflags);
 800852c:	e001      	b.n	8008532 <osThreadFlagsWait+0x5e>
          if ((flags & rflags) != 0) {
 800852e:	2b00      	cmp	r3, #0
 8008530:	d0f7      	beq.n	8008522 <osThreadFlagsWait+0x4e>
}
 8008532:	4620      	mov	r0, r4
 8008534:	b002      	add	sp, #8
 8008536:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        td = xTaskGetTickCount() - t0;
 800853a:	f001 fbe3 	bl	8009d04 <xTaskGetTickCount>
 800853e:	eba0 0309 	sub.w	r3, r0, r9
        if (td > tout) {
 8008542:	429d      	cmp	r5, r3
 8008544:	d312      	bcc.n	800856c <osThreadFlagsWait+0x98>
          tout -= td;
 8008546:	444d      	add	r5, r9
 8008548:	1a2d      	subs	r5, r5, r0
 800854a:	e7da      	b.n	8008502 <osThreadFlagsWait+0x2e>
          rflags = (uint32_t)osErrorResource;
 800854c:	f1b8 0f00 	cmp.w	r8, #0
 8008550:	bf14      	ite	ne
 8008552:	f06f 0401 	mvnne.w	r4, #1
 8008556:	f06f 0402 	mvneq.w	r4, #2
    while (rval != pdFAIL);
 800855a:	2800      	cmp	r0, #0
 800855c:	d1d1      	bne.n	8008502 <osThreadFlagsWait+0x2e>
 800855e:	e7e8      	b.n	8008532 <osThreadFlagsWait+0x5e>
    rflags = (uint32_t)osErrorISR;
 8008560:	f06f 0405 	mvn.w	r4, #5
 8008564:	e7e5      	b.n	8008532 <osThreadFlagsWait+0x5e>
    rflags = (uint32_t)osErrorParameter;
 8008566:	f06f 0403 	mvn.w	r4, #3
 800856a:	e7e2      	b.n	8008532 <osThreadFlagsWait+0x5e>
          tout  = 0;
 800856c:	2500      	movs	r5, #0
    while (rval != pdFAIL);
 800856e:	e7c8      	b.n	8008502 <osThreadFlagsWait+0x2e>

08008570 <osDelay>:
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8008570:	b508      	push	{r3, lr}
 8008572:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008576:	b922      	cbnz	r2, 8008582 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8008578:	b108      	cbz	r0, 800857e <osDelay+0xe>
      vTaskDelay(ticks);
 800857a:	f001 fcdb 	bl	8009f34 <vTaskDelay>
    stat = osOK;
 800857e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8008580:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8008582:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8008586:	e7fb      	b.n	8008580 <osDelay+0x10>

08008588 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008588:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800858a:	4604      	mov	r4, r0
 800858c:	460e      	mov	r6, r1
 800858e:	4615      	mov	r5, r2
 8008590:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008594:	b942      	cbnz	r2, 80085a8 <osSemaphoreNew+0x20>
 8008596:	b138      	cbz	r0, 80085a8 <osSemaphoreNew+0x20>
 8008598:	4288      	cmp	r0, r1
 800859a:	d305      	bcc.n	80085a8 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 800859c:	b155      	cbz	r5, 80085b4 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800859e:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 80085a2:	b12b      	cbz	r3, 80085b0 <osSemaphoreNew+0x28>
 80085a4:	2f4f      	cmp	r7, #79	@ 0x4f
 80085a6:	d822      	bhi.n	80085ee <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 80085a8:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80085aa:	4620      	mov	r0, r4
 80085ac:	b003      	add	sp, #12
 80085ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80085b0:	2f00      	cmp	r7, #0
 80085b2:	d1f9      	bne.n	80085a8 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 80085b4:	2c01      	cmp	r4, #1
 80085b6:	d00c      	beq.n	80085d2 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80085b8:	4620      	mov	r0, r4
 80085ba:	4631      	mov	r1, r6
 80085bc:	f000 fd8a 	bl	80090d4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80085c0:	4604      	mov	r4, r0
 80085c2:	2800      	cmp	r0, #0
 80085c4:	d0f0      	beq.n	80085a8 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 80085c6:	b985      	cbnz	r5, 80085ea <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 80085c8:	4629      	mov	r1, r5
 80085ca:	4620      	mov	r0, r4
 80085cc:	f001 f8c8 	bl	8009760 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80085d0:	e7eb      	b.n	80085aa <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 80085d2:	2203      	movs	r2, #3
 80085d4:	2100      	movs	r1, #0
 80085d6:	2001      	movs	r0, #1
 80085d8:	f000 fd33 	bl	8009042 <xQueueGenericCreate>
 80085dc:	e00e      	b.n	80085fc <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80085de:	461a      	mov	r2, r3
 80085e0:	f000 fd56 	bl	8009090 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80085e4:	4604      	mov	r4, r0
 80085e6:	2800      	cmp	r0, #0
 80085e8:	d0de      	beq.n	80085a8 <osSemaphoreNew+0x20>
          name = attr->name;
 80085ea:	682d      	ldr	r5, [r5, #0]
 80085ec:	e7ec      	b.n	80085c8 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 80085ee:	2801      	cmp	r0, #1
 80085f0:	d1f5      	bne.n	80085de <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80085f2:	2103      	movs	r1, #3
 80085f4:	9100      	str	r1, [sp, #0]
 80085f6:	4611      	mov	r1, r2
 80085f8:	f000 fcd5 	bl	8008fa6 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 80085fc:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80085fe:	2800      	cmp	r0, #0
 8008600:	d0d2      	beq.n	80085a8 <osSemaphoreNew+0x20>
 8008602:	2e00      	cmp	r6, #0
 8008604:	d0df      	beq.n	80085c6 <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008606:	2300      	movs	r3, #0
 8008608:	461a      	mov	r2, r3
 800860a:	4619      	mov	r1, r3
 800860c:	f000 fd80 	bl	8009110 <xQueueGenericSend>
 8008610:	2801      	cmp	r0, #1
 8008612:	d0d8      	beq.n	80085c6 <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8008614:	4620      	mov	r0, r4
 8008616:	f001 f8cd 	bl	80097b4 <vQueueDelete>
      if (hSemaphore != NULL) {
 800861a:	e7c5      	b.n	80085a8 <osSemaphoreNew+0x20>

0800861c <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800861c:	b513      	push	{r0, r1, r4, lr}
 800861e:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008620:	b328      	cbz	r0, 800866e <osSemaphoreAcquire+0x52>
 8008622:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008626:	b1cb      	cbz	r3, 800865c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 8008628:	bb09      	cbnz	r1, 800866e <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800862a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800862c:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800862e:	f001 f82a 	bl	8009686 <xQueueReceiveFromISR>
 8008632:	2801      	cmp	r0, #1
 8008634:	d003      	beq.n	800863e <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 8008636:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800863a:	b002      	add	sp, #8
 800863c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800863e:	9b01      	ldr	r3, [sp, #4]
 8008640:	b90b      	cbnz	r3, 8008646 <osSemaphoreAcquire+0x2a>
  stat = osOK;
 8008642:	2000      	movs	r0, #0
 8008644:	e7f9      	b.n	800863a <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 8008646:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800864a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800864e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008652:	f3bf 8f4f 	dsb	sy
 8008656:	f3bf 8f6f 	isb	sy
 800865a:	e7f2      	b.n	8008642 <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800865c:	f000 ff56 	bl	800950c <xQueueSemaphoreTake>
 8008660:	2801      	cmp	r0, #1
 8008662:	d0ee      	beq.n	8008642 <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 8008664:	2c00      	cmp	r4, #0
 8008666:	d0e6      	beq.n	8008636 <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 8008668:	f06f 0001 	mvn.w	r0, #1
 800866c:	e7e5      	b.n	800863a <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 800866e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008672:	e7e2      	b.n	800863a <osSemaphoreAcquire+0x1e>

08008674 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008674:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008676:	b318      	cbz	r0, 80086c0 <osSemaphoreRelease+0x4c>
 8008678:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800867c:	b1cb      	cbz	r3, 80086b2 <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 800867e:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008680:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008682:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008684:	f000 fe53 	bl	800932e <xQueueGiveFromISR>
 8008688:	2801      	cmp	r0, #1
 800868a:	d004      	beq.n	8008696 <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800868c:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8008690:	b003      	add	sp, #12
 8008692:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 8008696:	9b01      	ldr	r3, [sp, #4]
 8008698:	b14b      	cbz	r3, 80086ae <osSemaphoreRelease+0x3a>
 800869a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800869e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80086a2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80086a6:	f3bf 8f4f 	dsb	sy
 80086aa:	f3bf 8f6f 	isb	sy
  stat = osOK;
 80086ae:	2000      	movs	r0, #0
 80086b0:	e7ee      	b.n	8008690 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80086b2:	461a      	mov	r2, r3
 80086b4:	4619      	mov	r1, r3
 80086b6:	f000 fd2b 	bl	8009110 <xQueueGenericSend>
 80086ba:	2801      	cmp	r0, #1
 80086bc:	d0f7      	beq.n	80086ae <osSemaphoreRelease+0x3a>
 80086be:	e7e5      	b.n	800868c <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 80086c0:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80086c4:	e7e4      	b.n	8008690 <osSemaphoreRelease+0x1c>

080086c6 <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
 80086c6:	b130      	cbz	r0, 80086d6 <osSemaphoreGetCount+0x10>
 80086c8:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
 80086cc:	b10b      	cbz	r3, 80086d2 <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
 80086ce:	f001 b83a 	b.w	8009746 <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
 80086d2:	f001 b825 	b.w	8009720 <uxQueueMessagesWaiting>
  }

  return (count);
}
 80086d6:	4770      	bx	lr

080086d8 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80086d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80086da:	4605      	mov	r5, r0
 80086dc:	460e      	mov	r6, r1
 80086de:	4614      	mov	r4, r2
 80086e0:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80086e4:	b11f      	cbz	r7, 80086ee <osMessageQueueNew+0x16>
  hQueue = NULL;
 80086e6:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80086e8:	4628      	mov	r0, r5
 80086ea:	b003      	add	sp, #12
 80086ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80086ee:	2800      	cmp	r0, #0
 80086f0:	d0f9      	beq.n	80086e6 <osMessageQueueNew+0xe>
 80086f2:	2900      	cmp	r1, #0
 80086f4:	d0f7      	beq.n	80086e6 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 80086f6:	b1da      	cbz	r2, 8008730 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80086f8:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 80086fc:	b183      	cbz	r3, 8008720 <osMessageQueueNew+0x48>
 80086fe:	2a4f      	cmp	r2, #79	@ 0x4f
 8008700:	d9f1      	bls.n	80086e6 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008702:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008704:	2a00      	cmp	r2, #0
 8008706:	d0ee      	beq.n	80086e6 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008708:	6966      	ldr	r6, [r4, #20]
 800870a:	434d      	muls	r5, r1
 800870c:	42ae      	cmp	r6, r5
 800870e:	d3ea      	bcc.n	80086e6 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008710:	9700      	str	r7, [sp, #0]
 8008712:	f000 fc48 	bl	8008fa6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008716:	4605      	mov	r5, r0
 8008718:	2800      	cmp	r0, #0
 800871a:	d0e4      	beq.n	80086e6 <osMessageQueueNew+0xe>
        name = attr->name;
 800871c:	6824      	ldr	r4, [r4, #0]
 800871e:	e011      	b.n	8008744 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008720:	2a00      	cmp	r2, #0
 8008722:	d1e0      	bne.n	80086e6 <osMessageQueueNew+0xe>
 8008724:	6923      	ldr	r3, [r4, #16]
 8008726:	2b00      	cmp	r3, #0
 8008728:	d1dd      	bne.n	80086e6 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800872a:	6963      	ldr	r3, [r4, #20]
 800872c:	2b00      	cmp	r3, #0
 800872e:	d1da      	bne.n	80086e6 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8008730:	4628      	mov	r0, r5
 8008732:	2200      	movs	r2, #0
 8008734:	4631      	mov	r1, r6
 8008736:	f000 fc84 	bl	8009042 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800873a:	4605      	mov	r5, r0
 800873c:	2800      	cmp	r0, #0
 800873e:	d0d2      	beq.n	80086e6 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8008740:	2c00      	cmp	r4, #0
 8008742:	d1eb      	bne.n	800871c <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8008744:	4621      	mov	r1, r4
 8008746:	4628      	mov	r0, r5
 8008748:	f001 f80a 	bl	8009760 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800874c:	e7cc      	b.n	80086e8 <osMessageQueueNew+0x10>

0800874e <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800874e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008750:	461c      	mov	r4, r3
 8008752:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008756:	b1de      	cbz	r6, 8008790 <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008758:	b338      	cbz	r0, 80087aa <osMessageQueuePut+0x5c>
 800875a:	b331      	cbz	r1, 80087aa <osMessageQueuePut+0x5c>
 800875c:	bb2b      	cbnz	r3, 80087aa <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800875e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008760:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008762:	f000 fd87 	bl	8009274 <xQueueGenericSendFromISR>
 8008766:	2801      	cmp	r0, #1
 8008768:	d003      	beq.n	8008772 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 800876a:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800876e:	b002      	add	sp, #8
 8008770:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008772:	9b01      	ldr	r3, [sp, #4]
 8008774:	b90b      	cbnz	r3, 800877a <osMessageQueuePut+0x2c>
  stat = osOK;
 8008776:	2000      	movs	r0, #0
 8008778:	e7f9      	b.n	800876e <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 800877a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800877e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008782:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008786:	f3bf 8f4f 	dsb	sy
 800878a:	f3bf 8f6f 	isb	sy
 800878e:	e7f2      	b.n	8008776 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008790:	b158      	cbz	r0, 80087aa <osMessageQueuePut+0x5c>
 8008792:	b151      	cbz	r1, 80087aa <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008794:	4633      	mov	r3, r6
 8008796:	4622      	mov	r2, r4
 8008798:	f000 fcba 	bl	8009110 <xQueueGenericSend>
 800879c:	2801      	cmp	r0, #1
 800879e:	d0ea      	beq.n	8008776 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 80087a0:	2c00      	cmp	r4, #0
 80087a2:	d0e2      	beq.n	800876a <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 80087a4:	f06f 0001 	mvn.w	r0, #1
 80087a8:	e7e1      	b.n	800876e <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 80087aa:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80087ae:	e7de      	b.n	800876e <osMessageQueuePut+0x20>

080087b0 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80087b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80087b2:	461c      	mov	r4, r3
 80087b4:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80087b8:	b1db      	cbz	r3, 80087f2 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80087ba:	b330      	cbz	r0, 800880a <osMessageQueueGet+0x5a>
 80087bc:	b329      	cbz	r1, 800880a <osMessageQueueGet+0x5a>
 80087be:	bb24      	cbnz	r4, 800880a <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80087c0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80087c2:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80087c4:	f000 ff5f 	bl	8009686 <xQueueReceiveFromISR>
 80087c8:	2801      	cmp	r0, #1
 80087ca:	d003      	beq.n	80087d4 <osMessageQueueGet+0x24>
        stat = osErrorResource;
 80087cc:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 80087d0:	b003      	add	sp, #12
 80087d2:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 80087d4:	9b01      	ldr	r3, [sp, #4]
 80087d6:	b90b      	cbnz	r3, 80087dc <osMessageQueueGet+0x2c>
  stat = osOK;
 80087d8:	2000      	movs	r0, #0
 80087da:	e7f9      	b.n	80087d0 <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 80087dc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80087e0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80087e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80087e8:	f3bf 8f4f 	dsb	sy
 80087ec:	f3bf 8f6f 	isb	sy
 80087f0:	e7f2      	b.n	80087d8 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80087f2:	b150      	cbz	r0, 800880a <osMessageQueueGet+0x5a>
 80087f4:	b149      	cbz	r1, 800880a <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80087f6:	4622      	mov	r2, r4
 80087f8:	f000 fdea 	bl	80093d0 <xQueueReceive>
 80087fc:	2801      	cmp	r0, #1
 80087fe:	d0eb      	beq.n	80087d8 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 8008800:	2c00      	cmp	r4, #0
 8008802:	d0e3      	beq.n	80087cc <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 8008804:	f06f 0001 	mvn.w	r0, #1
 8008808:	e7e2      	b.n	80087d0 <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 800880a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800880e:	e7df      	b.n	80087d0 <osMessageQueueGet+0x20>

08008810 <osMessageQueueGetCount>:
  }

  return (size);
}

uint32_t osMessageQueueGetCount (osMessageQueueId_t mq_id) {
 8008810:	f7ff bf59 	b.w	80086c6 <osSemaphoreGetCount>

08008814 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008814:	4b03      	ldr	r3, [pc, #12]	@ (8008824 <vApplicationGetIdleTaskMemory+0x10>)
 8008816:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008818:	4b03      	ldr	r3, [pc, #12]	@ (8008828 <vApplicationGetIdleTaskMemory+0x14>)
 800881a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800881c:	2380      	movs	r3, #128	@ 0x80
 800881e:	6013      	str	r3, [r2, #0]
}
 8008820:	4770      	bx	lr
 8008822:	bf00      	nop
 8008824:	200050c0 	.word	0x200050c0
 8008828:	20004ec0 	.word	0x20004ec0

0800882c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800882c:	4b03      	ldr	r3, [pc, #12]	@ (800883c <vApplicationGetTimerTaskMemory+0x10>)
 800882e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008830:	4b03      	ldr	r3, [pc, #12]	@ (8008840 <vApplicationGetTimerTaskMemory+0x14>)
 8008832:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008834:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8008838:	6013      	str	r3, [r2, #0]
}
 800883a:	4770      	bx	lr
 800883c:	20004e60 	.word	0x20004e60
 8008840:	20004a60 	.word	0x20004a60

08008844 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008844:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008846:	4b10      	ldr	r3, [pc, #64]	@ (8008888 <prvInsertBlockIntoFreeList+0x44>)
 8008848:	461a      	mov	r2, r3
 800884a:	681b      	ldr	r3, [r3, #0]
 800884c:	4283      	cmp	r3, r0
 800884e:	d3fb      	bcc.n	8008848 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008850:	6854      	ldr	r4, [r2, #4]
 8008852:	1911      	adds	r1, r2, r4
 8008854:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008856:	bf01      	itttt	eq
 8008858:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 800885a:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800885c:	1909      	addeq	r1, r1, r4
 800885e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008860:	6844      	ldr	r4, [r0, #4]
 8008862:	1901      	adds	r1, r0, r4
 8008864:	428b      	cmp	r3, r1
 8008866:	d10c      	bne.n	8008882 <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008868:	4908      	ldr	r1, [pc, #32]	@ (800888c <prvInsertBlockIntoFreeList+0x48>)
 800886a:	6809      	ldr	r1, [r1, #0]
 800886c:	428b      	cmp	r3, r1
 800886e:	d003      	beq.n	8008878 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008870:	6859      	ldr	r1, [r3, #4]
 8008872:	4421      	add	r1, r4
 8008874:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008876:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8008878:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800887a:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800887c:	bf18      	it	ne
 800887e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008880:	bd10      	pop	{r4, pc}
 8008882:	4619      	mov	r1, r3
 8008884:	e7f8      	b.n	8008878 <prvInsertBlockIntoFreeList+0x34>
 8008886:	bf00      	nop
 8008888:	2000513c 	.word	0x2000513c
 800888c:	20005138 	.word	0x20005138

08008890 <pvPortMalloc>:
{
 8008890:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008894:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008896:	f001 fa2d 	bl	8009cf4 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800889a:	4942      	ldr	r1, [pc, #264]	@ (80089a4 <pvPortMalloc+0x114>)
 800889c:	4d42      	ldr	r5, [pc, #264]	@ (80089a8 <pvPortMalloc+0x118>)
 800889e:	680b      	ldr	r3, [r1, #0]
 80088a0:	bb0b      	cbnz	r3, 80088e6 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 80088a2:	4a42      	ldr	r2, [pc, #264]	@ (80089ac <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 80088a4:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 80088a6:	bf1f      	itttt	ne
 80088a8:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80088aa:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80088ae:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 80088b2:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80088b4:	bf0c      	ite	eq
 80088b6:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80088ba:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 80088bc:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80088be:	4e3c      	ldr	r6, [pc, #240]	@ (80089b0 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 80088c0:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80088c2:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 80088c6:	2000      	movs	r0, #0
 80088c8:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80088ca:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 80088cc:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80088d0:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80088d2:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 80088d6:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80088d8:	4b36      	ldr	r3, [pc, #216]	@ (80089b4 <pvPortMalloc+0x124>)
 80088da:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80088dc:	4b36      	ldr	r3, [pc, #216]	@ (80089b8 <pvPortMalloc+0x128>)
 80088de:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80088e0:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 80088e4:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80088e6:	682e      	ldr	r6, [r5, #0]
 80088e8:	4226      	tst	r6, r4
 80088ea:	d155      	bne.n	8008998 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 80088ec:	2c00      	cmp	r4, #0
 80088ee:	d046      	beq.n	800897e <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 80088f0:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80088f4:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80088f6:	bf1c      	itt	ne
 80088f8:	f023 0307 	bicne.w	r3, r3, #7
 80088fc:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80088fe:	2b00      	cmp	r3, #0
 8008900:	d04a      	beq.n	8008998 <pvPortMalloc+0x108>
 8008902:	4f2d      	ldr	r7, [pc, #180]	@ (80089b8 <pvPortMalloc+0x128>)
 8008904:	683c      	ldr	r4, [r7, #0]
 8008906:	429c      	cmp	r4, r3
 8008908:	d346      	bcc.n	8008998 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800890a:	4a29      	ldr	r2, [pc, #164]	@ (80089b0 <pvPortMalloc+0x120>)
 800890c:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800890e:	6868      	ldr	r0, [r5, #4]
 8008910:	4298      	cmp	r0, r3
 8008912:	d204      	bcs.n	800891e <pvPortMalloc+0x8e>
 8008914:	f8d5 c000 	ldr.w	ip, [r5]
 8008918:	f1bc 0f00 	cmp.w	ip, #0
 800891c:	d115      	bne.n	800894a <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800891e:	6809      	ldr	r1, [r1, #0]
 8008920:	42a9      	cmp	r1, r5
 8008922:	d039      	beq.n	8008998 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008924:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008926:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800892a:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800892c:	1ac2      	subs	r2, r0, r3
 800892e:	2a10      	cmp	r2, #16
 8008930:	d912      	bls.n	8008958 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008932:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008934:	0741      	lsls	r1, r0, #29
 8008936:	d00b      	beq.n	8008950 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008938:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800893c:	f383 8811 	msr	BASEPRI, r3
 8008940:	f3bf 8f6f 	isb	sy
 8008944:	f3bf 8f4f 	dsb	sy
 8008948:	e7fe      	b.n	8008948 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 800894a:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 800894c:	4665      	mov	r5, ip
 800894e:	e7de      	b.n	800890e <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008950:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008952:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008954:	f7ff ff76 	bl	8008844 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008958:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800895a:	4916      	ldr	r1, [pc, #88]	@ (80089b4 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800895c:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800895e:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 8008960:	4a16      	ldr	r2, [pc, #88]	@ (80089bc <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008962:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008964:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 8008966:	2300      	movs	r3, #0
 8008968:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800896a:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800896c:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800896e:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 8008970:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008974:	bf38      	it	cc
 8008976:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8008978:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800897a:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800897e:	f001 fa65 	bl	8009e4c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008982:	0763      	lsls	r3, r4, #29
 8008984:	d00a      	beq.n	800899c <pvPortMalloc+0x10c>
 8008986:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800898a:	f383 8811 	msr	BASEPRI, r3
 800898e:	f3bf 8f6f 	isb	sy
 8008992:	f3bf 8f4f 	dsb	sy
 8008996:	e7fe      	b.n	8008996 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8008998:	2400      	movs	r4, #0
 800899a:	e7f0      	b.n	800897e <pvPortMalloc+0xee>
}
 800899c:	4620      	mov	r0, r4
 800899e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80089a2:	bf00      	nop
 80089a4:	20005138 	.word	0x20005138
 80089a8:	20005124 	.word	0x20005124
 80089ac:	20005144 	.word	0x20005144
 80089b0:	2000513c 	.word	0x2000513c
 80089b4:	20005130 	.word	0x20005130
 80089b8:	20005134 	.word	0x20005134
 80089bc:	2000512c 	.word	0x2000512c

080089c0 <vPortFree>:
{
 80089c0:	b510      	push	{r4, lr}
	if( pv != NULL )
 80089c2:	4604      	mov	r4, r0
 80089c4:	b390      	cbz	r0, 8008a2c <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 80089c6:	4a1a      	ldr	r2, [pc, #104]	@ (8008a30 <vPortFree+0x70>)
 80089c8:	f850 3c04 	ldr.w	r3, [r0, #-4]
 80089cc:	6812      	ldr	r2, [r2, #0]
 80089ce:	4213      	tst	r3, r2
 80089d0:	d108      	bne.n	80089e4 <vPortFree+0x24>
 80089d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089d6:	f383 8811 	msr	BASEPRI, r3
 80089da:	f3bf 8f6f 	isb	sy
 80089de:	f3bf 8f4f 	dsb	sy
 80089e2:	e7fe      	b.n	80089e2 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80089e4:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80089e8:	b141      	cbz	r1, 80089fc <vPortFree+0x3c>
 80089ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089ee:	f383 8811 	msr	BASEPRI, r3
 80089f2:	f3bf 8f6f 	isb	sy
 80089f6:	f3bf 8f4f 	dsb	sy
 80089fa:	e7fe      	b.n	80089fa <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80089fc:	ea23 0302 	bic.w	r3, r3, r2
 8008a00:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008a04:	f001 f976 	bl	8009cf4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008a08:	4a0a      	ldr	r2, [pc, #40]	@ (8008a34 <vPortFree+0x74>)
 8008a0a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008a0e:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008a10:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008a14:	440b      	add	r3, r1
 8008a16:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008a18:	f7ff ff14 	bl	8008844 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8008a1c:	4a06      	ldr	r2, [pc, #24]	@ (8008a38 <vPortFree+0x78>)
 8008a1e:	6813      	ldr	r3, [r2, #0]
}
 8008a20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8008a24:	3301      	adds	r3, #1
 8008a26:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8008a28:	f001 ba10 	b.w	8009e4c <xTaskResumeAll>
}
 8008a2c:	bd10      	pop	{r4, pc}
 8008a2e:	bf00      	nop
 8008a30:	20005124 	.word	0x20005124
 8008a34:	20005134 	.word	0x20005134
 8008a38:	20005128 	.word	0x20005128

08008a3c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008a3c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008a40:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008a44:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008a48:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008a4a:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008a4c:	2300      	movs	r3, #0
 8008a4e:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008a50:	4770      	bx	lr

08008a52 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008a52:	2300      	movs	r3, #0
 8008a54:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008a56:	4770      	bx	lr

08008a58 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008a58:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8008a5a:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008a5c:	689a      	ldr	r2, [r3, #8]
 8008a5e:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008a60:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008a62:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008a64:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008a66:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008a68:	3301      	adds	r3, #1
 8008a6a:	6003      	str	r3, [r0, #0]
}
 8008a6c:	4770      	bx	lr

08008a6e <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008a6e:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008a70:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008a72:	1c63      	adds	r3, r4, #1
 8008a74:	d10a      	bne.n	8008a8c <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008a76:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008a78:	685a      	ldr	r2, [r3, #4]
 8008a7a:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008a7c:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008a7e:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008a80:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008a82:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008a84:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008a86:	3301      	adds	r3, #1
 8008a88:	6003      	str	r3, [r0, #0]
}
 8008a8a:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008a8c:	f100 0208 	add.w	r2, r0, #8
 8008a90:	4613      	mov	r3, r2
 8008a92:	6852      	ldr	r2, [r2, #4]
 8008a94:	6815      	ldr	r5, [r2, #0]
 8008a96:	42a5      	cmp	r5, r4
 8008a98:	d9fa      	bls.n	8008a90 <vListInsert+0x22>
 8008a9a:	e7ed      	b.n	8008a78 <vListInsert+0xa>

08008a9c <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008a9c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008aa0:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008aa2:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008aa4:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008aa6:	6859      	ldr	r1, [r3, #4]
 8008aa8:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008aaa:	bf08      	it	eq
 8008aac:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008aae:	2200      	movs	r2, #0
 8008ab0:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008ab2:	681a      	ldr	r2, [r3, #0]
 8008ab4:	3a01      	subs	r2, #1
 8008ab6:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008ab8:	6818      	ldr	r0, [r3, #0]
}
 8008aba:	4770      	bx	lr

08008abc <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008abc:	4808      	ldr	r0, [pc, #32]	@ (8008ae0 <prvPortStartFirstTask+0x24>)
 8008abe:	6800      	ldr	r0, [r0, #0]
 8008ac0:	6800      	ldr	r0, [r0, #0]
 8008ac2:	f380 8808 	msr	MSP, r0
 8008ac6:	f04f 0000 	mov.w	r0, #0
 8008aca:	f380 8814 	msr	CONTROL, r0
 8008ace:	b662      	cpsie	i
 8008ad0:	b661      	cpsie	f
 8008ad2:	f3bf 8f4f 	dsb	sy
 8008ad6:	f3bf 8f6f 	isb	sy
 8008ada:	df00      	svc	0
 8008adc:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008ade:	0000      	.short	0x0000
 8008ae0:	e000ed08 	.word	0xe000ed08

08008ae4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008ae4:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8008af4 <vPortEnableVFP+0x10>
 8008ae8:	6801      	ldr	r1, [r0, #0]
 8008aea:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8008aee:	6001      	str	r1, [r0, #0]
 8008af0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008af2:	0000      	.short	0x0000
 8008af4:	e000ed88 	.word	0xe000ed88

08008af8 <prvTaskExitError>:
{
 8008af8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008afa:	2300      	movs	r3, #0
 8008afc:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008afe:	4b0d      	ldr	r3, [pc, #52]	@ (8008b34 <prvTaskExitError+0x3c>)
 8008b00:	681b      	ldr	r3, [r3, #0]
 8008b02:	3301      	adds	r3, #1
 8008b04:	d008      	beq.n	8008b18 <prvTaskExitError+0x20>
 8008b06:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b0a:	f383 8811 	msr	BASEPRI, r3
 8008b0e:	f3bf 8f6f 	isb	sy
 8008b12:	f3bf 8f4f 	dsb	sy
 8008b16:	e7fe      	b.n	8008b16 <prvTaskExitError+0x1e>
 8008b18:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b1c:	f383 8811 	msr	BASEPRI, r3
 8008b20:	f3bf 8f6f 	isb	sy
 8008b24:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008b28:	9b01      	ldr	r3, [sp, #4]
 8008b2a:	2b00      	cmp	r3, #0
 8008b2c:	d0fc      	beq.n	8008b28 <prvTaskExitError+0x30>
}
 8008b2e:	b002      	add	sp, #8
 8008b30:	4770      	bx	lr
 8008b32:	bf00      	nop
 8008b34:	20000088 	.word	0x20000088

08008b38 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008b38:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8008b3c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008b40:	4b07      	ldr	r3, [pc, #28]	@ (8008b60 <pxPortInitialiseStack+0x28>)
 8008b42:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008b46:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008b4a:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008b4e:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008b52:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008b56:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8008b5a:	3844      	subs	r0, #68	@ 0x44
 8008b5c:	4770      	bx	lr
 8008b5e:	bf00      	nop
 8008b60:	08008af9 	.word	0x08008af9
	...

08008b70 <SVC_Handler>:
	__asm volatile (
 8008b70:	4b07      	ldr	r3, [pc, #28]	@ (8008b90 <pxCurrentTCBConst2>)
 8008b72:	6819      	ldr	r1, [r3, #0]
 8008b74:	6808      	ldr	r0, [r1, #0]
 8008b76:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b7a:	f380 8809 	msr	PSP, r0
 8008b7e:	f3bf 8f6f 	isb	sy
 8008b82:	f04f 0000 	mov.w	r0, #0
 8008b86:	f380 8811 	msr	BASEPRI, r0
 8008b8a:	4770      	bx	lr
 8008b8c:	f3af 8000 	nop.w

08008b90 <pxCurrentTCBConst2>:
 8008b90:	20015684 	.word	0x20015684

08008b94 <vPortEnterCritical>:
 8008b94:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b98:	f383 8811 	msr	BASEPRI, r3
 8008b9c:	f3bf 8f6f 	isb	sy
 8008ba0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008ba4:	4a0a      	ldr	r2, [pc, #40]	@ (8008bd0 <vPortEnterCritical+0x3c>)
 8008ba6:	6813      	ldr	r3, [r2, #0]
 8008ba8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008baa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008bac:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008bae:	d10e      	bne.n	8008bce <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008bb0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008bb4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8008bb8:	b2db      	uxtb	r3, r3
 8008bba:	b143      	cbz	r3, 8008bce <vPortEnterCritical+0x3a>
 8008bbc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008bc0:	f383 8811 	msr	BASEPRI, r3
 8008bc4:	f3bf 8f6f 	isb	sy
 8008bc8:	f3bf 8f4f 	dsb	sy
 8008bcc:	e7fe      	b.n	8008bcc <vPortEnterCritical+0x38>
}
 8008bce:	4770      	bx	lr
 8008bd0:	20000088 	.word	0x20000088

08008bd4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008bd4:	4a08      	ldr	r2, [pc, #32]	@ (8008bf8 <vPortExitCritical+0x24>)
 8008bd6:	6813      	ldr	r3, [r2, #0]
 8008bd8:	b943      	cbnz	r3, 8008bec <vPortExitCritical+0x18>
 8008bda:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008bde:	f383 8811 	msr	BASEPRI, r3
 8008be2:	f3bf 8f6f 	isb	sy
 8008be6:	f3bf 8f4f 	dsb	sy
 8008bea:	e7fe      	b.n	8008bea <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008bec:	3b01      	subs	r3, #1
 8008bee:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008bf0:	b90b      	cbnz	r3, 8008bf6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008bf2:	f383 8811 	msr	BASEPRI, r3
}
 8008bf6:	4770      	bx	lr
 8008bf8:	20000088 	.word	0x20000088
 8008bfc:	00000000 	.word	0x00000000

08008c00 <PendSV_Handler>:
	__asm volatile
 8008c00:	f3ef 8009 	mrs	r0, PSP
 8008c04:	f3bf 8f6f 	isb	sy
 8008c08:	4b15      	ldr	r3, [pc, #84]	@ (8008c60 <pxCurrentTCBConst>)
 8008c0a:	681a      	ldr	r2, [r3, #0]
 8008c0c:	f01e 0f10 	tst.w	lr, #16
 8008c10:	bf08      	it	eq
 8008c12:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008c16:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c1a:	6010      	str	r0, [r2, #0]
 8008c1c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008c20:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8008c24:	f380 8811 	msr	BASEPRI, r0
 8008c28:	f3bf 8f4f 	dsb	sy
 8008c2c:	f3bf 8f6f 	isb	sy
 8008c30:	f001 f9a4 	bl	8009f7c <vTaskSwitchContext>
 8008c34:	f04f 0000 	mov.w	r0, #0
 8008c38:	f380 8811 	msr	BASEPRI, r0
 8008c3c:	bc09      	pop	{r0, r3}
 8008c3e:	6819      	ldr	r1, [r3, #0]
 8008c40:	6808      	ldr	r0, [r1, #0]
 8008c42:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c46:	f01e 0f10 	tst.w	lr, #16
 8008c4a:	bf08      	it	eq
 8008c4c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008c50:	f380 8809 	msr	PSP, r0
 8008c54:	f3bf 8f6f 	isb	sy
 8008c58:	4770      	bx	lr
 8008c5a:	bf00      	nop
 8008c5c:	f3af 8000 	nop.w

08008c60 <pxCurrentTCBConst>:
 8008c60:	20015684 	.word	0x20015684

08008c64 <xPortSysTickHandler>:
{
 8008c64:	b508      	push	{r3, lr}
	__asm volatile
 8008c66:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c6a:	f383 8811 	msr	BASEPRI, r3
 8008c6e:	f3bf 8f6f 	isb	sy
 8008c72:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008c76:	f001 f853 	bl	8009d20 <xTaskIncrementTick>
 8008c7a:	b128      	cbz	r0, 8008c88 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008c7c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008c80:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008c84:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8008c88:	2300      	movs	r3, #0
 8008c8a:	f383 8811 	msr	BASEPRI, r3
}
 8008c8e:	bd08      	pop	{r3, pc}

08008c90 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008c90:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8008c94:	2300      	movs	r3, #0
 8008c96:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008c98:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008c9a:	4b05      	ldr	r3, [pc, #20]	@ (8008cb0 <vPortSetupTimerInterrupt+0x20>)
 8008c9c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8008ca0:	681b      	ldr	r3, [r3, #0]
 8008ca2:	fbb3 f3f1 	udiv	r3, r3, r1
 8008ca6:	3b01      	subs	r3, #1
 8008ca8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008caa:	2307      	movs	r3, #7
 8008cac:	6113      	str	r3, [r2, #16]
}
 8008cae:	4770      	bx	lr
 8008cb0:	2000007c 	.word	0x2000007c

08008cb4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008cb4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8008cb8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008cba:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 8008cbe:	4a38      	ldr	r2, [pc, #224]	@ (8008da0 <xPortStartScheduler+0xec>)
 8008cc0:	4291      	cmp	r1, r2
 8008cc2:	d108      	bne.n	8008cd6 <xPortStartScheduler+0x22>
	__asm volatile
 8008cc4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008cc8:	f383 8811 	msr	BASEPRI, r3
 8008ccc:	f3bf 8f6f 	isb	sy
 8008cd0:	f3bf 8f4f 	dsb	sy
 8008cd4:	e7fe      	b.n	8008cd4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008cd6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 8008cda:	4b32      	ldr	r3, [pc, #200]	@ (8008da4 <xPortStartScheduler+0xf0>)
 8008cdc:	429a      	cmp	r2, r3
 8008cde:	d108      	bne.n	8008cf2 <xPortStartScheduler+0x3e>
 8008ce0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ce4:	f383 8811 	msr	BASEPRI, r3
 8008ce8:	f3bf 8f6f 	isb	sy
 8008cec:	f3bf 8f4f 	dsb	sy
 8008cf0:	e7fe      	b.n	8008cf0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008cf2:	4b2d      	ldr	r3, [pc, #180]	@ (8008da8 <xPortStartScheduler+0xf4>)
 8008cf4:	781a      	ldrb	r2, [r3, #0]
 8008cf6:	b2d2      	uxtb	r2, r2
 8008cf8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008cfa:	22ff      	movs	r2, #255	@ 0xff
 8008cfc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008cfe:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008d00:	4a2a      	ldr	r2, [pc, #168]	@ (8008dac <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008d02:	b2db      	uxtb	r3, r3
 8008d04:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008d08:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008d0c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8008d10:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008d12:	4a27      	ldr	r2, [pc, #156]	@ (8008db0 <xPortStartScheduler+0xfc>)
 8008d14:	2307      	movs	r3, #7
 8008d16:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008d18:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 8008d1c:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008d1e:	0609      	lsls	r1, r1, #24
 8008d20:	d40a      	bmi.n	8008d38 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008d22:	2b03      	cmp	r3, #3
 8008d24:	d011      	beq.n	8008d4a <xPortStartScheduler+0x96>
 8008d26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d2a:	f383 8811 	msr	BASEPRI, r3
 8008d2e:	f3bf 8f6f 	isb	sy
 8008d32:	f3bf 8f4f 	dsb	sy
 8008d36:	e7fe      	b.n	8008d36 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 8008d38:	3b01      	subs	r3, #1
 8008d3a:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008d3c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008d40:	005b      	lsls	r3, r3, #1
 8008d42:	b2db      	uxtb	r3, r3
 8008d44:	f88d 3003 	strb.w	r3, [sp, #3]
 8008d48:	e7e6      	b.n	8008d18 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008d4a:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8008d4e:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008d50:	9b01      	ldr	r3, [sp, #4]
 8008d52:	4a15      	ldr	r2, [pc, #84]	@ (8008da8 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008d54:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008d58:	b2db      	uxtb	r3, r3
 8008d5a:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008d5c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8008d60:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8008d64:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008d68:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8008d6c:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8008d70:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8008d74:	f7ff ff8c 	bl	8008c90 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008d78:	4b0e      	ldr	r3, [pc, #56]	@ (8008db4 <xPortStartScheduler+0x100>)
 8008d7a:	2500      	movs	r5, #0
 8008d7c:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008d7e:	f7ff feb1 	bl	8008ae4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008d82:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8008d86:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8008d8a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 8008d8e:	f7ff fe95 	bl	8008abc <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008d92:	f001 f8f3 	bl	8009f7c <vTaskSwitchContext>
	prvTaskExitError();
 8008d96:	f7ff feaf 	bl	8008af8 <prvTaskExitError>
}
 8008d9a:	4628      	mov	r0, r5
 8008d9c:	b003      	add	sp, #12
 8008d9e:	bd30      	pop	{r4, r5, pc}
 8008da0:	410fc271 	.word	0x410fc271
 8008da4:	410fc270 	.word	0x410fc270
 8008da8:	e000e400 	.word	0xe000e400
 8008dac:	20015148 	.word	0x20015148
 8008db0:	20015144 	.word	0x20015144
 8008db4:	20000088 	.word	0x20000088

08008db8 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008db8:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008dbc:	2b0f      	cmp	r3, #15
 8008dbe:	d90e      	bls.n	8008dde <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008dc0:	4a11      	ldr	r2, [pc, #68]	@ (8008e08 <vPortValidateInterruptPriority+0x50>)
 8008dc2:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008dc4:	4a11      	ldr	r2, [pc, #68]	@ (8008e0c <vPortValidateInterruptPriority+0x54>)
 8008dc6:	7812      	ldrb	r2, [r2, #0]
 8008dc8:	429a      	cmp	r2, r3
 8008dca:	d908      	bls.n	8008dde <vPortValidateInterruptPriority+0x26>
 8008dcc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008dd0:	f383 8811 	msr	BASEPRI, r3
 8008dd4:	f3bf 8f6f 	isb	sy
 8008dd8:	f3bf 8f4f 	dsb	sy
 8008ddc:	e7fe      	b.n	8008ddc <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008dde:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008de2:	4a0b      	ldr	r2, [pc, #44]	@ (8008e10 <vPortValidateInterruptPriority+0x58>)
 8008de4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8008de8:	6812      	ldr	r2, [r2, #0]
 8008dea:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8008dee:	4293      	cmp	r3, r2
 8008df0:	d908      	bls.n	8008e04 <vPortValidateInterruptPriority+0x4c>
 8008df2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008df6:	f383 8811 	msr	BASEPRI, r3
 8008dfa:	f3bf 8f6f 	isb	sy
 8008dfe:	f3bf 8f4f 	dsb	sy
 8008e02:	e7fe      	b.n	8008e02 <vPortValidateInterruptPriority+0x4a>
	}
 8008e04:	4770      	bx	lr
 8008e06:	bf00      	nop
 8008e08:	e000e3f0 	.word	0xe000e3f0
 8008e0c:	20015148 	.word	0x20015148
 8008e10:	20015144 	.word	0x20015144

08008e14 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008e14:	b510      	push	{r4, lr}
 8008e16:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008e18:	f7ff febc 	bl	8008b94 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008e1c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008e1e:	f7ff fed9 	bl	8008bd4 <vPortExitCritical>

	return xReturn;
}
 8008e22:	fab4 f084 	clz	r0, r4
 8008e26:	0940      	lsrs	r0, r0, #5
 8008e28:	bd10      	pop	{r4, pc}

08008e2a <prvCopyDataToQueue>:
{
 8008e2a:	b570      	push	{r4, r5, r6, lr}
 8008e2c:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008e2e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008e30:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 8008e32:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008e34:	b942      	cbnz	r2, 8008e48 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008e36:	6806      	ldr	r6, [r0, #0]
 8008e38:	b99e      	cbnz	r6, 8008e62 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008e3a:	6880      	ldr	r0, [r0, #8]
 8008e3c:	f001 f9ec 	bl	800a218 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008e40:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008e42:	3501      	adds	r5, #1
 8008e44:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8008e46:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008e48:	b96e      	cbnz	r6, 8008e66 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008e4a:	6840      	ldr	r0, [r0, #4]
 8008e4c:	f01b fe99 	bl	8024b82 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008e50:	6863      	ldr	r3, [r4, #4]
 8008e52:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008e54:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008e56:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008e58:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008e5a:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008e5c:	bf24      	itt	cs
 8008e5e:	6823      	ldrcs	r3, [r4, #0]
 8008e60:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8008e62:	2000      	movs	r0, #0
 8008e64:	e7ed      	b.n	8008e42 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008e66:	68c0      	ldr	r0, [r0, #12]
 8008e68:	f01b fe8b 	bl	8024b82 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008e6c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008e6e:	68e3      	ldr	r3, [r4, #12]
 8008e70:	4251      	negs	r1, r2
 8008e72:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008e74:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008e76:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008e78:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008e7a:	bf3e      	ittt	cc
 8008e7c:	68a3      	ldrcc	r3, [r4, #8]
 8008e7e:	185b      	addcc	r3, r3, r1
 8008e80:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008e82:	2e02      	cmp	r6, #2
 8008e84:	d1ed      	bne.n	8008e62 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008e86:	b10d      	cbz	r5, 8008e8c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8008e88:	3d01      	subs	r5, #1
 8008e8a:	e7ea      	b.n	8008e62 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8008e8c:	4628      	mov	r0, r5
 8008e8e:	e7d8      	b.n	8008e42 <prvCopyDataToQueue+0x18>

08008e90 <prvCopyDataFromQueue>:
{
 8008e90:	4603      	mov	r3, r0
 8008e92:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008e94:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8008e96:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008e98:	b16a      	cbz	r2, 8008eb6 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008e9a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008e9c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008e9e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008ea0:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008ea2:	bf28      	it	cs
 8008ea4:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008ea6:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008ea8:	bf28      	it	cs
 8008eaa:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008eac:	68d9      	ldr	r1, [r3, #12]
}
 8008eae:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008eb2:	f01b be66 	b.w	8024b82 <memcpy>
}
 8008eb6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008eba:	4770      	bx	lr

08008ebc <prvUnlockQueue>:
{
 8008ebc:	b570      	push	{r4, r5, r6, lr}
 8008ebe:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008ec0:	f7ff fe68 	bl	8008b94 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008ec4:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008ec8:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008ecc:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008ece:	2d00      	cmp	r5, #0
 8008ed0:	dd01      	ble.n	8008ed6 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008ed2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008ed4:	b9b3      	cbnz	r3, 8008f04 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 8008ed6:	23ff      	movs	r3, #255	@ 0xff
 8008ed8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8008edc:	f7ff fe7a 	bl	8008bd4 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008ee0:	f7ff fe58 	bl	8008b94 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008ee4:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008ee8:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8008eec:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008eee:	2d00      	cmp	r5, #0
 8008ef0:	dd01      	ble.n	8008ef6 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008ef2:	6923      	ldr	r3, [r4, #16]
 8008ef4:	b97b      	cbnz	r3, 8008f16 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 8008ef6:	23ff      	movs	r3, #255	@ 0xff
 8008ef8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 8008efc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008f00:	f7ff be68 	b.w	8008bd4 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008f04:	4630      	mov	r0, r6
 8008f06:	f001 f8ab 	bl	800a060 <xTaskRemoveFromEventList>
 8008f0a:	b108      	cbz	r0, 8008f10 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 8008f0c:	f001 f930 	bl	800a170 <vTaskMissedYield>
			--cTxLock;
 8008f10:	3d01      	subs	r5, #1
 8008f12:	b26d      	sxtb	r5, r5
 8008f14:	e7db      	b.n	8008ece <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008f16:	4630      	mov	r0, r6
 8008f18:	f001 f8a2 	bl	800a060 <xTaskRemoveFromEventList>
 8008f1c:	b108      	cbz	r0, 8008f22 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 8008f1e:	f001 f927 	bl	800a170 <vTaskMissedYield>
				--cRxLock;
 8008f22:	3d01      	subs	r5, #1
 8008f24:	b26d      	sxtb	r5, r5
 8008f26:	e7e2      	b.n	8008eee <prvUnlockQueue+0x32>

08008f28 <xQueueGenericReset>:
{
 8008f28:	b538      	push	{r3, r4, r5, lr}
 8008f2a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008f2c:	4604      	mov	r4, r0
 8008f2e:	b940      	cbnz	r0, 8008f42 <xQueueGenericReset+0x1a>
 8008f30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f34:	f383 8811 	msr	BASEPRI, r3
 8008f38:	f3bf 8f6f 	isb	sy
 8008f3c:	f3bf 8f4f 	dsb	sy
 8008f40:	e7fe      	b.n	8008f40 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8008f42:	f7ff fe27 	bl	8008b94 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008f46:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 8008f4a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8008f4c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008f4e:	434b      	muls	r3, r1
 8008f50:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008f52:	1a5b      	subs	r3, r3, r1
 8008f54:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008f56:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 8008f58:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008f5a:	2000      	movs	r0, #0
 8008f5c:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008f5e:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8008f60:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008f64:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 8008f68:	b9a5      	cbnz	r5, 8008f94 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008f6a:	6923      	ldr	r3, [r4, #16]
 8008f6c:	b173      	cbz	r3, 8008f8c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008f6e:	f104 0010 	add.w	r0, r4, #16
 8008f72:	f001 f875 	bl	800a060 <xTaskRemoveFromEventList>
 8008f76:	b148      	cbz	r0, 8008f8c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8008f78:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008f7c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008f80:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008f84:	f3bf 8f4f 	dsb	sy
 8008f88:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8008f8c:	f7ff fe22 	bl	8008bd4 <vPortExitCritical>
}
 8008f90:	2001      	movs	r0, #1
 8008f92:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008f94:	f104 0010 	add.w	r0, r4, #16
 8008f98:	f7ff fd50 	bl	8008a3c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8008f9c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008fa0:	f7ff fd4c 	bl	8008a3c <vListInitialise>
 8008fa4:	e7f2      	b.n	8008f8c <xQueueGenericReset+0x64>

08008fa6 <xQueueGenericCreateStatic>:
	{
 8008fa6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008fa8:	460d      	mov	r5, r1
 8008faa:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008fac:	b940      	cbnz	r0, 8008fc0 <xQueueGenericCreateStatic+0x1a>
 8008fae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008fb2:	f383 8811 	msr	BASEPRI, r3
 8008fb6:	f3bf 8f6f 	isb	sy
 8008fba:	f3bf 8f4f 	dsb	sy
 8008fbe:	e7fe      	b.n	8008fbe <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8008fc0:	b943      	cbnz	r3, 8008fd4 <xQueueGenericCreateStatic+0x2e>
 8008fc2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008fc6:	f383 8811 	msr	BASEPRI, r3
 8008fca:	f3bf 8f6f 	isb	sy
 8008fce:	f3bf 8f4f 	dsb	sy
 8008fd2:	e7fe      	b.n	8008fd2 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008fd4:	b14a      	cbz	r2, 8008fea <xQueueGenericCreateStatic+0x44>
 8008fd6:	b991      	cbnz	r1, 8008ffe <xQueueGenericCreateStatic+0x58>
 8008fd8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008fdc:	f383 8811 	msr	BASEPRI, r3
 8008fe0:	f3bf 8f6f 	isb	sy
 8008fe4:	f3bf 8f4f 	dsb	sy
 8008fe8:	e7fe      	b.n	8008fe8 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008fea:	b141      	cbz	r1, 8008ffe <xQueueGenericCreateStatic+0x58>
 8008fec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ff0:	f383 8811 	msr	BASEPRI, r3
 8008ff4:	f3bf 8f6f 	isb	sy
 8008ff8:	f3bf 8f4f 	dsb	sy
 8008ffc:	e7fe      	b.n	8008ffc <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8008ffe:	2350      	movs	r3, #80	@ 0x50
 8009000:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8009002:	9b01      	ldr	r3, [sp, #4]
 8009004:	2b50      	cmp	r3, #80	@ 0x50
 8009006:	d008      	beq.n	800901a <xQueueGenericCreateStatic+0x74>
 8009008:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800900c:	f383 8811 	msr	BASEPRI, r3
 8009010:	f3bf 8f6f 	isb	sy
 8009014:	f3bf 8f4f 	dsb	sy
 8009018:	e7fe      	b.n	8009018 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800901a:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800901c:	2d00      	cmp	r5, #0
 800901e:	bf08      	it	eq
 8009020:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 8009022:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009026:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 800902a:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800902c:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800902e:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009030:	f7ff ff7a 	bl	8008f28 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009034:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8009038:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 800903c:	4620      	mov	r0, r4
 800903e:	b003      	add	sp, #12
 8009040:	bd30      	pop	{r4, r5, pc}

08009042 <xQueueGenericCreate>:
	{
 8009042:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009044:	460d      	mov	r5, r1
 8009046:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009048:	4606      	mov	r6, r0
 800904a:	b940      	cbnz	r0, 800905e <xQueueGenericCreate+0x1c>
 800904c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009050:	f383 8811 	msr	BASEPRI, r3
 8009054:	f3bf 8f6f 	isb	sy
 8009058:	f3bf 8f4f 	dsb	sy
 800905c:	e7fe      	b.n	800905c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800905e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009060:	3050      	adds	r0, #80	@ 0x50
 8009062:	f7ff fc15 	bl	8008890 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009066:	4604      	mov	r4, r0
 8009068:	b170      	cbz	r0, 8009088 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800906a:	2300      	movs	r3, #0
 800906c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009070:	b165      	cbz	r5, 800908c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009072:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009076:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800907a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800907c:	2101      	movs	r1, #1
 800907e:	4620      	mov	r0, r4
 8009080:	f7ff ff52 	bl	8008f28 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009084:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8009088:	4620      	mov	r0, r4
 800908a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800908c:	4603      	mov	r3, r0
 800908e:	e7f2      	b.n	8009076 <xQueueGenericCreate+0x34>

08009090 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009090:	b513      	push	{r0, r1, r4, lr}
 8009092:	4613      	mov	r3, r2
 8009094:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009096:	b940      	cbnz	r0, 80090aa <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009098:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800909c:	f383 8811 	msr	BASEPRI, r3
 80090a0:	f3bf 8f6f 	isb	sy
 80090a4:	f3bf 8f4f 	dsb	sy
 80090a8:	e7fe      	b.n	80090a8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80090aa:	4288      	cmp	r0, r1
 80090ac:	d208      	bcs.n	80090c0 <xQueueCreateCountingSemaphoreStatic+0x30>
 80090ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090b2:	f383 8811 	msr	BASEPRI, r3
 80090b6:	f3bf 8f6f 	isb	sy
 80090ba:	f3bf 8f4f 	dsb	sy
 80090be:	e7fe      	b.n	80090be <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80090c0:	2202      	movs	r2, #2
 80090c2:	9200      	str	r2, [sp, #0]
 80090c4:	2200      	movs	r2, #0
 80090c6:	4611      	mov	r1, r2
 80090c8:	f7ff ff6d 	bl	8008fa6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80090cc:	b100      	cbz	r0, 80090d0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80090ce:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 80090d0:	b002      	add	sp, #8
 80090d2:	bd10      	pop	{r4, pc}

080090d4 <xQueueCreateCountingSemaphore>:
	{
 80090d4:	b510      	push	{r4, lr}
 80090d6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80090d8:	b940      	cbnz	r0, 80090ec <xQueueCreateCountingSemaphore+0x18>
 80090da:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090de:	f383 8811 	msr	BASEPRI, r3
 80090e2:	f3bf 8f6f 	isb	sy
 80090e6:	f3bf 8f4f 	dsb	sy
 80090ea:	e7fe      	b.n	80090ea <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80090ec:	4288      	cmp	r0, r1
 80090ee:	d208      	bcs.n	8009102 <xQueueCreateCountingSemaphore+0x2e>
 80090f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090f4:	f383 8811 	msr	BASEPRI, r3
 80090f8:	f3bf 8f6f 	isb	sy
 80090fc:	f3bf 8f4f 	dsb	sy
 8009100:	e7fe      	b.n	8009100 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009102:	2202      	movs	r2, #2
 8009104:	2100      	movs	r1, #0
 8009106:	f7ff ff9c 	bl	8009042 <xQueueGenericCreate>
		if( xHandle != NULL )
 800910a:	b100      	cbz	r0, 800910e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800910c:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800910e:	bd10      	pop	{r4, pc}

08009110 <xQueueGenericSend>:
{
 8009110:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009114:	460f      	mov	r7, r1
 8009116:	9201      	str	r2, [sp, #4]
 8009118:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800911a:	4604      	mov	r4, r0
 800911c:	b940      	cbnz	r0, 8009130 <xQueueGenericSend+0x20>
 800911e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009122:	f383 8811 	msr	BASEPRI, r3
 8009126:	f3bf 8f6f 	isb	sy
 800912a:	f3bf 8f4f 	dsb	sy
 800912e:	e7fe      	b.n	800912e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009130:	b951      	cbnz	r1, 8009148 <xQueueGenericSend+0x38>
 8009132:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009134:	b143      	cbz	r3, 8009148 <xQueueGenericSend+0x38>
 8009136:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800913a:	f383 8811 	msr	BASEPRI, r3
 800913e:	f3bf 8f6f 	isb	sy
 8009142:	f3bf 8f4f 	dsb	sy
 8009146:	e7fe      	b.n	8009146 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8009148:	2e02      	cmp	r6, #2
 800914a:	d10b      	bne.n	8009164 <xQueueGenericSend+0x54>
 800914c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800914e:	2b01      	cmp	r3, #1
 8009150:	d008      	beq.n	8009164 <xQueueGenericSend+0x54>
 8009152:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009156:	f383 8811 	msr	BASEPRI, r3
 800915a:	f3bf 8f6f 	isb	sy
 800915e:	f3bf 8f4f 	dsb	sy
 8009162:	e7fe      	b.n	8009162 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009164:	f001 f80a 	bl	800a17c <xTaskGetSchedulerState>
 8009168:	4605      	mov	r5, r0
 800916a:	b320      	cbz	r0, 80091b6 <xQueueGenericSend+0xa6>
 800916c:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800916e:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8009172:	f7ff fd0f 	bl	8008b94 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009176:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009178:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800917a:	429a      	cmp	r2, r3
 800917c:	d227      	bcs.n	80091ce <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800917e:	4632      	mov	r2, r6
 8009180:	4639      	mov	r1, r7
 8009182:	4620      	mov	r0, r4
 8009184:	f7ff fe51 	bl	8008e2a <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009188:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800918a:	b11b      	cbz	r3, 8009194 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800918c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009190:	f000 ff66 	bl	800a060 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009194:	b148      	cbz	r0, 80091aa <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 8009196:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800919a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800919e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80091a2:	f3bf 8f4f 	dsb	sy
 80091a6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80091aa:	f7ff fd13 	bl	8008bd4 <vPortExitCritical>
				return pdPASS;
 80091ae:	2001      	movs	r0, #1
}
 80091b0:	b004      	add	sp, #16
 80091b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80091b6:	9b01      	ldr	r3, [sp, #4]
 80091b8:	2b00      	cmp	r3, #0
 80091ba:	d0d8      	beq.n	800916e <xQueueGenericSend+0x5e>
 80091bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80091c0:	f383 8811 	msr	BASEPRI, r3
 80091c4:	f3bf 8f6f 	isb	sy
 80091c8:	f3bf 8f4f 	dsb	sy
 80091cc:	e7fe      	b.n	80091cc <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80091ce:	2e02      	cmp	r6, #2
 80091d0:	d0d5      	beq.n	800917e <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 80091d2:	9b01      	ldr	r3, [sp, #4]
 80091d4:	b91b      	cbnz	r3, 80091de <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 80091d6:	f7ff fcfd 	bl	8008bd4 <vPortExitCritical>
					return errQUEUE_FULL;
 80091da:	2000      	movs	r0, #0
 80091dc:	e7e8      	b.n	80091b0 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 80091de:	b915      	cbnz	r5, 80091e6 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80091e0:	a802      	add	r0, sp, #8
 80091e2:	f000 ff7d 	bl	800a0e0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80091e6:	f7ff fcf5 	bl	8008bd4 <vPortExitCritical>
		vTaskSuspendAll();
 80091ea:	f000 fd83 	bl	8009cf4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80091ee:	f7ff fcd1 	bl	8008b94 <vPortEnterCritical>
 80091f2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80091f6:	2bff      	cmp	r3, #255	@ 0xff
 80091f8:	bf08      	it	eq
 80091fa:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80091fe:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8009202:	2bff      	cmp	r3, #255	@ 0xff
 8009204:	bf08      	it	eq
 8009206:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800920a:	f7ff fce3 	bl	8008bd4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800920e:	a901      	add	r1, sp, #4
 8009210:	a802      	add	r0, sp, #8
 8009212:	f000 ff71 	bl	800a0f8 <xTaskCheckForTimeOut>
 8009216:	bb38      	cbnz	r0, 8009268 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8009218:	f7ff fcbc 	bl	8008b94 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800921c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800921e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009220:	429a      	cmp	r2, r3
 8009222:	d10e      	bne.n	8009242 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8009224:	f7ff fcd6 	bl	8008bd4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8009228:	9901      	ldr	r1, [sp, #4]
 800922a:	f104 0010 	add.w	r0, r4, #16
 800922e:	f000 fedf 	bl	8009ff0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009232:	4620      	mov	r0, r4
 8009234:	f7ff fe42 	bl	8008ebc <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009238:	f000 fe08 	bl	8009e4c <xTaskResumeAll>
 800923c:	b148      	cbz	r0, 8009252 <xQueueGenericSend+0x142>
 800923e:	2501      	movs	r5, #1
 8009240:	e797      	b.n	8009172 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 8009242:	f7ff fcc7 	bl	8008bd4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009246:	4620      	mov	r0, r4
 8009248:	f7ff fe38 	bl	8008ebc <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800924c:	f000 fdfe 	bl	8009e4c <xTaskResumeAll>
 8009250:	e7f5      	b.n	800923e <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 8009252:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009256:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800925a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800925e:	f3bf 8f4f 	dsb	sy
 8009262:	f3bf 8f6f 	isb	sy
 8009266:	e7ea      	b.n	800923e <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 8009268:	4620      	mov	r0, r4
 800926a:	f7ff fe27 	bl	8008ebc <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800926e:	f000 fded 	bl	8009e4c <xTaskResumeAll>
			return errQUEUE_FULL;
 8009272:	e7b2      	b.n	80091da <xQueueGenericSend+0xca>

08009274 <xQueueGenericSendFromISR>:
{
 8009274:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009278:	4689      	mov	r9, r1
 800927a:	4617      	mov	r7, r2
 800927c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800927e:	4604      	mov	r4, r0
 8009280:	b940      	cbnz	r0, 8009294 <xQueueGenericSendFromISR+0x20>
 8009282:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009286:	f383 8811 	msr	BASEPRI, r3
 800928a:	f3bf 8f6f 	isb	sy
 800928e:	f3bf 8f4f 	dsb	sy
 8009292:	e7fe      	b.n	8009292 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009294:	b951      	cbnz	r1, 80092ac <xQueueGenericSendFromISR+0x38>
 8009296:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009298:	b143      	cbz	r3, 80092ac <xQueueGenericSendFromISR+0x38>
 800929a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800929e:	f383 8811 	msr	BASEPRI, r3
 80092a2:	f3bf 8f6f 	isb	sy
 80092a6:	f3bf 8f4f 	dsb	sy
 80092aa:	e7fe      	b.n	80092aa <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80092ac:	2e02      	cmp	r6, #2
 80092ae:	d10b      	bne.n	80092c8 <xQueueGenericSendFromISR+0x54>
 80092b0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80092b2:	2b01      	cmp	r3, #1
 80092b4:	d008      	beq.n	80092c8 <xQueueGenericSendFromISR+0x54>
 80092b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092ba:	f383 8811 	msr	BASEPRI, r3
 80092be:	f3bf 8f6f 	isb	sy
 80092c2:	f3bf 8f4f 	dsb	sy
 80092c6:	e7fe      	b.n	80092c6 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80092c8:	f7ff fd76 	bl	8008db8 <vPortValidateInterruptPriority>
	__asm volatile
 80092cc:	f3ef 8811 	mrs	r8, BASEPRI
 80092d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092d4:	f383 8811 	msr	BASEPRI, r3
 80092d8:	f3bf 8f6f 	isb	sy
 80092dc:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80092e0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80092e2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80092e4:	429a      	cmp	r2, r3
 80092e6:	d301      	bcc.n	80092ec <xQueueGenericSendFromISR+0x78>
 80092e8:	2e02      	cmp	r6, #2
 80092ea:	d11e      	bne.n	800932a <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 80092ec:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80092f0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 80092f2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80092f4:	4632      	mov	r2, r6
 80092f6:	4649      	mov	r1, r9
 80092f8:	4620      	mov	r0, r4
 80092fa:	f7ff fd96 	bl	8008e2a <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80092fe:	1c6b      	adds	r3, r5, #1
 8009300:	d10e      	bne.n	8009320 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009302:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009304:	b13b      	cbz	r3, 8009316 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009306:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800930a:	f000 fea9 	bl	800a060 <xTaskRemoveFromEventList>
 800930e:	b110      	cbz	r0, 8009316 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 8009310:	b10f      	cbz	r7, 8009316 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009312:	2301      	movs	r3, #1
 8009314:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 8009316:	2001      	movs	r0, #1
	__asm volatile
 8009318:	f388 8811 	msr	BASEPRI, r8
}
 800931c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009320:	3501      	adds	r5, #1
 8009322:	b26d      	sxtb	r5, r5
 8009324:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8009328:	e7f5      	b.n	8009316 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 800932a:	2000      	movs	r0, #0
 800932c:	e7f4      	b.n	8009318 <xQueueGenericSendFromISR+0xa4>

0800932e <xQueueGiveFromISR>:
{
 800932e:	b570      	push	{r4, r5, r6, lr}
 8009330:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8009332:	4604      	mov	r4, r0
 8009334:	b940      	cbnz	r0, 8009348 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009336:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800933a:	f383 8811 	msr	BASEPRI, r3
 800933e:	f3bf 8f6f 	isb	sy
 8009342:	f3bf 8f4f 	dsb	sy
 8009346:	e7fe      	b.n	8009346 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009348:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800934a:	b143      	cbz	r3, 800935e <xQueueGiveFromISR+0x30>
 800934c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009350:	f383 8811 	msr	BASEPRI, r3
 8009354:	f3bf 8f6f 	isb	sy
 8009358:	f3bf 8f4f 	dsb	sy
 800935c:	e7fe      	b.n	800935c <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800935e:	6803      	ldr	r3, [r0, #0]
 8009360:	b953      	cbnz	r3, 8009378 <xQueueGiveFromISR+0x4a>
 8009362:	6883      	ldr	r3, [r0, #8]
 8009364:	b143      	cbz	r3, 8009378 <xQueueGiveFromISR+0x4a>
 8009366:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800936a:	f383 8811 	msr	BASEPRI, r3
 800936e:	f3bf 8f6f 	isb	sy
 8009372:	f3bf 8f4f 	dsb	sy
 8009376:	e7fe      	b.n	8009376 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009378:	f7ff fd1e 	bl	8008db8 <vPortValidateInterruptPriority>
	__asm volatile
 800937c:	f3ef 8611 	mrs	r6, BASEPRI
 8009380:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009384:	f383 8811 	msr	BASEPRI, r3
 8009388:	f3bf 8f6f 	isb	sy
 800938c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009390:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8009392:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009394:	4293      	cmp	r3, r2
 8009396:	d919      	bls.n	80093cc <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009398:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800939c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800939e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80093a0:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80093a2:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 80093a4:	d10d      	bne.n	80093c2 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80093a6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80093a8:	b13b      	cbz	r3, 80093ba <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80093aa:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80093ae:	f000 fe57 	bl	800a060 <xTaskRemoveFromEventList>
 80093b2:	b110      	cbz	r0, 80093ba <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 80093b4:	b10d      	cbz	r5, 80093ba <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80093b6:	2301      	movs	r3, #1
 80093b8:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 80093ba:	2001      	movs	r0, #1
	__asm volatile
 80093bc:	f386 8811 	msr	BASEPRI, r6
}
 80093c0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80093c2:	3301      	adds	r3, #1
 80093c4:	b25b      	sxtb	r3, r3
 80093c6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 80093ca:	e7f6      	b.n	80093ba <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 80093cc:	2000      	movs	r0, #0
 80093ce:	e7f5      	b.n	80093bc <xQueueGiveFromISR+0x8e>

080093d0 <xQueueReceive>:
{
 80093d0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80093d4:	460e      	mov	r6, r1
 80093d6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80093d8:	4604      	mov	r4, r0
 80093da:	b940      	cbnz	r0, 80093ee <xQueueReceive+0x1e>
	__asm volatile
 80093dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80093e0:	f383 8811 	msr	BASEPRI, r3
 80093e4:	f3bf 8f6f 	isb	sy
 80093e8:	f3bf 8f4f 	dsb	sy
 80093ec:	e7fe      	b.n	80093ec <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80093ee:	b951      	cbnz	r1, 8009406 <xQueueReceive+0x36>
 80093f0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80093f2:	b143      	cbz	r3, 8009406 <xQueueReceive+0x36>
 80093f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80093f8:	f383 8811 	msr	BASEPRI, r3
 80093fc:	f3bf 8f6f 	isb	sy
 8009400:	f3bf 8f4f 	dsb	sy
 8009404:	e7fe      	b.n	8009404 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009406:	f000 feb9 	bl	800a17c <xTaskGetSchedulerState>
 800940a:	4605      	mov	r5, r0
 800940c:	b318      	cbz	r0, 8009456 <xQueueReceive+0x86>
 800940e:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8009410:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8009414:	f7ff fbbe 	bl	8008b94 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009418:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800941a:	b347      	cbz	r7, 800946e <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800941c:	4631      	mov	r1, r6
 800941e:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009420:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009422:	f7ff fd35 	bl	8008e90 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009426:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009428:	6923      	ldr	r3, [r4, #16]
 800942a:	b173      	cbz	r3, 800944a <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800942c:	f104 0010 	add.w	r0, r4, #16
 8009430:	f000 fe16 	bl	800a060 <xTaskRemoveFromEventList>
 8009434:	b148      	cbz	r0, 800944a <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 8009436:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800943a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800943e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009442:	f3bf 8f4f 	dsb	sy
 8009446:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800944a:	f7ff fbc3 	bl	8008bd4 <vPortExitCritical>
				return pdPASS;
 800944e:	2001      	movs	r0, #1
}
 8009450:	b004      	add	sp, #16
 8009452:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009456:	9b01      	ldr	r3, [sp, #4]
 8009458:	2b00      	cmp	r3, #0
 800945a:	d0d9      	beq.n	8009410 <xQueueReceive+0x40>
 800945c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009460:	f383 8811 	msr	BASEPRI, r3
 8009464:	f3bf 8f6f 	isb	sy
 8009468:	f3bf 8f4f 	dsb	sy
 800946c:	e7fe      	b.n	800946c <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800946e:	9b01      	ldr	r3, [sp, #4]
 8009470:	b91b      	cbnz	r3, 800947a <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 8009472:	f7ff fbaf 	bl	8008bd4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009476:	2000      	movs	r0, #0
 8009478:	e7ea      	b.n	8009450 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 800947a:	b915      	cbnz	r5, 8009482 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800947c:	a802      	add	r0, sp, #8
 800947e:	f000 fe2f 	bl	800a0e0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009482:	f7ff fba7 	bl	8008bd4 <vPortExitCritical>
		vTaskSuspendAll();
 8009486:	f000 fc35 	bl	8009cf4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800948a:	f7ff fb83 	bl	8008b94 <vPortEnterCritical>
 800948e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009492:	2bff      	cmp	r3, #255	@ 0xff
 8009494:	bf08      	it	eq
 8009496:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800949a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800949e:	2bff      	cmp	r3, #255	@ 0xff
 80094a0:	bf08      	it	eq
 80094a2:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80094a6:	f7ff fb95 	bl	8008bd4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80094aa:	a901      	add	r1, sp, #4
 80094ac:	a802      	add	r0, sp, #8
 80094ae:	f000 fe23 	bl	800a0f8 <xTaskCheckForTimeOut>
 80094b2:	bb00      	cbnz	r0, 80094f6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80094b4:	4620      	mov	r0, r4
 80094b6:	f7ff fcad 	bl	8008e14 <prvIsQueueEmpty>
 80094ba:	b1b0      	cbz	r0, 80094ea <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80094bc:	9901      	ldr	r1, [sp, #4]
 80094be:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80094c2:	f000 fd95 	bl	8009ff0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80094c6:	4620      	mov	r0, r4
 80094c8:	f7ff fcf8 	bl	8008ebc <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80094cc:	f000 fcbe 	bl	8009e4c <xTaskResumeAll>
 80094d0:	b948      	cbnz	r0, 80094e6 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 80094d2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80094d6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80094da:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80094de:	f3bf 8f4f 	dsb	sy
 80094e2:	f3bf 8f6f 	isb	sy
 80094e6:	2501      	movs	r5, #1
 80094e8:	e794      	b.n	8009414 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 80094ea:	4620      	mov	r0, r4
 80094ec:	f7ff fce6 	bl	8008ebc <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80094f0:	f000 fcac 	bl	8009e4c <xTaskResumeAll>
 80094f4:	e7f7      	b.n	80094e6 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 80094f6:	4620      	mov	r0, r4
 80094f8:	f7ff fce0 	bl	8008ebc <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80094fc:	f000 fca6 	bl	8009e4c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009500:	4620      	mov	r0, r4
 8009502:	f7ff fc87 	bl	8008e14 <prvIsQueueEmpty>
 8009506:	2800      	cmp	r0, #0
 8009508:	d0ed      	beq.n	80094e6 <xQueueReceive+0x116>
 800950a:	e7b4      	b.n	8009476 <xQueueReceive+0xa6>

0800950c <xQueueSemaphoreTake>:
{
 800950c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800950e:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009510:	4604      	mov	r4, r0
{
 8009512:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009514:	b940      	cbnz	r0, 8009528 <xQueueSemaphoreTake+0x1c>
 8009516:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800951a:	f383 8811 	msr	BASEPRI, r3
 800951e:	f3bf 8f6f 	isb	sy
 8009522:	f3bf 8f4f 	dsb	sy
 8009526:	e7fe      	b.n	8009526 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009528:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800952a:	b145      	cbz	r5, 800953e <xQueueSemaphoreTake+0x32>
 800952c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009530:	f383 8811 	msr	BASEPRI, r3
 8009534:	f3bf 8f6f 	isb	sy
 8009538:	f3bf 8f4f 	dsb	sy
 800953c:	e7fe      	b.n	800953c <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800953e:	f000 fe1d 	bl	800a17c <xTaskGetSchedulerState>
 8009542:	4606      	mov	r6, r0
 8009544:	b320      	cbz	r0, 8009590 <xQueueSemaphoreTake+0x84>
 8009546:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009548:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800954a:	f7ff fb23 	bl	8008b94 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800954e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009550:	b353      	cbz	r3, 80095a8 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009552:	3b01      	subs	r3, #1
 8009554:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009556:	6823      	ldr	r3, [r4, #0]
 8009558:	b913      	cbnz	r3, 8009560 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800955a:	f000 feed 	bl	800a338 <pvTaskIncrementMutexHeldCount>
 800955e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009560:	6923      	ldr	r3, [r4, #16]
 8009562:	b173      	cbz	r3, 8009582 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009564:	f104 0010 	add.w	r0, r4, #16
 8009568:	f000 fd7a 	bl	800a060 <xTaskRemoveFromEventList>
 800956c:	b148      	cbz	r0, 8009582 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 800956e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009572:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009576:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800957a:	f3bf 8f4f 	dsb	sy
 800957e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009582:	f7ff fb27 	bl	8008bd4 <vPortExitCritical>
				return pdPASS;
 8009586:	2001      	movs	r0, #1
}
 8009588:	b005      	add	sp, #20
 800958a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800958c:	4635      	mov	r5, r6
 800958e:	e7db      	b.n	8009548 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009590:	9b01      	ldr	r3, [sp, #4]
 8009592:	2b00      	cmp	r3, #0
 8009594:	d0fa      	beq.n	800958c <xQueueSemaphoreTake+0x80>
 8009596:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800959a:	f383 8811 	msr	BASEPRI, r3
 800959e:	f3bf 8f6f 	isb	sy
 80095a2:	f3bf 8f4f 	dsb	sy
 80095a6:	e7fe      	b.n	80095a6 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 80095a8:	9b01      	ldr	r3, [sp, #4]
 80095aa:	b953      	cbnz	r3, 80095c2 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80095ac:	2d00      	cmp	r5, #0
 80095ae:	d066      	beq.n	800967e <xQueueSemaphoreTake+0x172>
 80095b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80095b4:	f383 8811 	msr	BASEPRI, r3
 80095b8:	f3bf 8f6f 	isb	sy
 80095bc:	f3bf 8f4f 	dsb	sy
 80095c0:	e7fe      	b.n	80095c0 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 80095c2:	b916      	cbnz	r6, 80095ca <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80095c4:	a802      	add	r0, sp, #8
 80095c6:	f000 fd8b 	bl	800a0e0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80095ca:	f7ff fb03 	bl	8008bd4 <vPortExitCritical>
		vTaskSuspendAll();
 80095ce:	f000 fb91 	bl	8009cf4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80095d2:	f7ff fadf 	bl	8008b94 <vPortEnterCritical>
 80095d6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80095da:	2bff      	cmp	r3, #255	@ 0xff
 80095dc:	bf08      	it	eq
 80095de:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 80095e2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80095e6:	2bff      	cmp	r3, #255	@ 0xff
 80095e8:	bf08      	it	eq
 80095ea:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 80095ee:	f7ff faf1 	bl	8008bd4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80095f2:	a901      	add	r1, sp, #4
 80095f4:	a802      	add	r0, sp, #8
 80095f6:	f000 fd7f 	bl	800a0f8 <xTaskCheckForTimeOut>
 80095fa:	bb50      	cbnz	r0, 8009652 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80095fc:	4620      	mov	r0, r4
 80095fe:	f7ff fc09 	bl	8008e14 <prvIsQueueEmpty>
 8009602:	b300      	cbz	r0, 8009646 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009604:	6823      	ldr	r3, [r4, #0]
 8009606:	b93b      	cbnz	r3, 8009618 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 8009608:	f7ff fac4 	bl	8008b94 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800960c:	68a0      	ldr	r0, [r4, #8]
 800960e:	f000 fdc5 	bl	800a19c <xTaskPriorityInherit>
 8009612:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8009614:	f7ff fade 	bl	8008bd4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009618:	9901      	ldr	r1, [sp, #4]
 800961a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800961e:	f000 fce7 	bl	8009ff0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009622:	4620      	mov	r0, r4
 8009624:	f7ff fc4a 	bl	8008ebc <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009628:	f000 fc10 	bl	8009e4c <xTaskResumeAll>
 800962c:	b948      	cbnz	r0, 8009642 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 800962e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009632:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009636:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800963a:	f3bf 8f4f 	dsb	sy
 800963e:	f3bf 8f6f 	isb	sy
 8009642:	2601      	movs	r6, #1
 8009644:	e781      	b.n	800954a <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 8009646:	4620      	mov	r0, r4
 8009648:	f7ff fc38 	bl	8008ebc <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800964c:	f000 fbfe 	bl	8009e4c <xTaskResumeAll>
 8009650:	e7f7      	b.n	8009642 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 8009652:	4620      	mov	r0, r4
 8009654:	f7ff fc32 	bl	8008ebc <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009658:	f000 fbf8 	bl	8009e4c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800965c:	4620      	mov	r0, r4
 800965e:	f7ff fbd9 	bl	8008e14 <prvIsQueueEmpty>
 8009662:	2800      	cmp	r0, #0
 8009664:	d0ed      	beq.n	8009642 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 8009666:	b165      	cbz	r5, 8009682 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 8009668:	f7ff fa94 	bl	8008b94 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800966c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800966e:	b119      	cbz	r1, 8009678 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8009670:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009672:	6819      	ldr	r1, [r3, #0]
 8009674:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009678:	68a0      	ldr	r0, [r4, #8]
 800967a:	f000 fe0f 	bl	800a29c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800967e:	f7ff faa9 	bl	8008bd4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009682:	2000      	movs	r0, #0
 8009684:	e780      	b.n	8009588 <xQueueSemaphoreTake+0x7c>

08009686 <xQueueReceiveFromISR>:
{
 8009686:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800968a:	4689      	mov	r9, r1
 800968c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800968e:	4604      	mov	r4, r0
 8009690:	b940      	cbnz	r0, 80096a4 <xQueueReceiveFromISR+0x1e>
 8009692:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009696:	f383 8811 	msr	BASEPRI, r3
 800969a:	f3bf 8f6f 	isb	sy
 800969e:	f3bf 8f4f 	dsb	sy
 80096a2:	e7fe      	b.n	80096a2 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80096a4:	b951      	cbnz	r1, 80096bc <xQueueReceiveFromISR+0x36>
 80096a6:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80096a8:	b143      	cbz	r3, 80096bc <xQueueReceiveFromISR+0x36>
 80096aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80096ae:	f383 8811 	msr	BASEPRI, r3
 80096b2:	f3bf 8f6f 	isb	sy
 80096b6:	f3bf 8f4f 	dsb	sy
 80096ba:	e7fe      	b.n	80096ba <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80096bc:	f7ff fb7c 	bl	8008db8 <vPortValidateInterruptPriority>
	__asm volatile
 80096c0:	f3ef 8711 	mrs	r7, BASEPRI
 80096c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80096c8:	f383 8811 	msr	BASEPRI, r3
 80096cc:	f3bf 8f6f 	isb	sy
 80096d0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80096d4:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80096d6:	b30d      	cbz	r5, 800971c <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 80096d8:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80096dc:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80096de:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80096e0:	4620      	mov	r0, r4
 80096e2:	f7ff fbd5 	bl	8008e90 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80096e6:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 80096e8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80096ea:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 80096ec:	d111      	bne.n	8009712 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80096ee:	6923      	ldr	r3, [r4, #16]
 80096f0:	b153      	cbz	r3, 8009708 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80096f2:	f104 0010 	add.w	r0, r4, #16
 80096f6:	f000 fcb3 	bl	800a060 <xTaskRemoveFromEventList>
 80096fa:	b128      	cbz	r0, 8009708 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 80096fc:	f1b8 0f00 	cmp.w	r8, #0
 8009700:	d002      	beq.n	8009708 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009702:	2301      	movs	r3, #1
 8009704:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 8009708:	2001      	movs	r0, #1
	__asm volatile
 800970a:	f387 8811 	msr	BASEPRI, r7
}
 800970e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009712:	3601      	adds	r6, #1
 8009714:	b276      	sxtb	r6, r6
 8009716:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 800971a:	e7f5      	b.n	8009708 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 800971c:	4628      	mov	r0, r5
 800971e:	e7f4      	b.n	800970a <xQueueReceiveFromISR+0x84>

08009720 <uxQueueMessagesWaiting>:
{
 8009720:	b510      	push	{r4, lr}
	configASSERT( xQueue );
 8009722:	4604      	mov	r4, r0
 8009724:	b940      	cbnz	r0, 8009738 <uxQueueMessagesWaiting+0x18>
	__asm volatile
 8009726:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800972a:	f383 8811 	msr	BASEPRI, r3
 800972e:	f3bf 8f6f 	isb	sy
 8009732:	f3bf 8f4f 	dsb	sy
 8009736:	e7fe      	b.n	8009736 <uxQueueMessagesWaiting+0x16>
	taskENTER_CRITICAL();
 8009738:	f7ff fa2c 	bl	8008b94 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800973c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
	taskEXIT_CRITICAL();
 800973e:	f7ff fa49 	bl	8008bd4 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8009742:	4620      	mov	r0, r4
 8009744:	bd10      	pop	{r4, pc}

08009746 <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 8009746:	b940      	cbnz	r0, 800975a <uxQueueMessagesWaitingFromISR+0x14>
 8009748:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800974c:	f383 8811 	msr	BASEPRI, r3
 8009750:	f3bf 8f6f 	isb	sy
 8009754:	f3bf 8f4f 	dsb	sy
 8009758:	e7fe      	b.n	8009758 <uxQueueMessagesWaitingFromISR+0x12>
	uxReturn = pxQueue->uxMessagesWaiting;
 800975a:	6b80      	ldr	r0, [r0, #56]	@ 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800975c:	4770      	bx	lr
	...

08009760 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009760:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009762:	4a07      	ldr	r2, [pc, #28]	@ (8009780 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009764:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009766:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800976a:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800976e:	b91d      	cbnz	r5, 8009778 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009770:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009774:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8009776:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009778:	3301      	adds	r3, #1
 800977a:	2b08      	cmp	r3, #8
 800977c:	d1f3      	bne.n	8009766 <vQueueAddToRegistry+0x6>
 800977e:	e7fa      	b.n	8009776 <vQueueAddToRegistry+0x16>
 8009780:	2001514c 	.word	0x2001514c

08009784 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009784:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009786:	4a09      	ldr	r2, [pc, #36]	@ (80097ac <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009788:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800978a:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800978e:	4281      	cmp	r1, r0
 8009790:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8009794:	d106      	bne.n	80097a4 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009796:	4a06      	ldr	r2, [pc, #24]	@ (80097b0 <vQueueUnregisterQueue+0x2c>)
 8009798:	2100      	movs	r1, #0
 800979a:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800979e:	4422      	add	r2, r4
 80097a0:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80097a2:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80097a4:	3301      	adds	r3, #1
 80097a6:	2b08      	cmp	r3, #8
 80097a8:	d1ef      	bne.n	800978a <vQueueUnregisterQueue+0x6>
 80097aa:	e7fa      	b.n	80097a2 <vQueueUnregisterQueue+0x1e>
 80097ac:	20015150 	.word	0x20015150
 80097b0:	2001514c 	.word	0x2001514c

080097b4 <vQueueDelete>:
{
 80097b4:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 80097b6:	b940      	cbnz	r0, 80097ca <vQueueDelete+0x16>
 80097b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097bc:	f383 8811 	msr	BASEPRI, r3
 80097c0:	f3bf 8f6f 	isb	sy
 80097c4:	f3bf 8f4f 	dsb	sy
 80097c8:	e7fe      	b.n	80097c8 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 80097ca:	f7ff ffdb 	bl	8009784 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80097ce:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 80097d2:	b91b      	cbnz	r3, 80097dc <vQueueDelete+0x28>
}
 80097d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 80097d8:	f7ff b8f2 	b.w	80089c0 <vPortFree>
}
 80097dc:	bd10      	pop	{r4, pc}

080097de <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80097de:	b570      	push	{r4, r5, r6, lr}
 80097e0:	4604      	mov	r4, r0
 80097e2:	460d      	mov	r5, r1
 80097e4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80097e6:	f7ff f9d5 	bl	8008b94 <vPortEnterCritical>
 80097ea:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80097ee:	2bff      	cmp	r3, #255	@ 0xff
 80097f0:	bf04      	itt	eq
 80097f2:	2300      	moveq	r3, #0
 80097f4:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 80097f8:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80097fc:	2bff      	cmp	r3, #255	@ 0xff
 80097fe:	bf04      	itt	eq
 8009800:	2300      	moveq	r3, #0
 8009802:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 8009806:	f7ff f9e5 	bl	8008bd4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800980a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800980c:	b92b      	cbnz	r3, 800981a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800980e:	4632      	mov	r2, r6
 8009810:	4629      	mov	r1, r5
 8009812:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009816:	f000 fc05 	bl	800a024 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800981a:	4620      	mov	r0, r4
	}
 800981c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009820:	f7ff bb4c 	b.w	8008ebc <prvUnlockQueue>

08009824 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009824:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009828:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800982a:	f7ff f9b3 	bl	8008b94 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800982e:	4b30      	ldr	r3, [pc, #192]	@ (80098f0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8009830:	4e30      	ldr	r6, [pc, #192]	@ (80098f4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8009832:	681a      	ldr	r2, [r3, #0]
 8009834:	4f30      	ldr	r7, [pc, #192]	@ (80098f8 <prvAddNewTaskToReadyList+0xd4>)
 8009836:	3201      	adds	r2, #1
 8009838:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800983a:	6835      	ldr	r5, [r6, #0]
 800983c:	2d00      	cmp	r5, #0
 800983e:	d14b      	bne.n	80098d8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009840:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009842:	681b      	ldr	r3, [r3, #0]
 8009844:	2b01      	cmp	r3, #1
 8009846:	d11f      	bne.n	8009888 <prvAddNewTaskToReadyList+0x64>
 8009848:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800984a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800984c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800984e:	f7ff f8f5 	bl	8008a3c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009852:	2d38      	cmp	r5, #56	@ 0x38
 8009854:	f108 0814 	add.w	r8, r8, #20
 8009858:	d1f7      	bne.n	800984a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800985a:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8009920 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800985e:	4d27      	ldr	r5, [pc, #156]	@ (80098fc <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8009860:	4640      	mov	r0, r8
 8009862:	f7ff f8eb 	bl	8008a3c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009866:	4628      	mov	r0, r5
 8009868:	f7ff f8e8 	bl	8008a3c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800986c:	4824      	ldr	r0, [pc, #144]	@ (8009900 <prvAddNewTaskToReadyList+0xdc>)
 800986e:	f7ff f8e5 	bl	8008a3c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009872:	4824      	ldr	r0, [pc, #144]	@ (8009904 <prvAddNewTaskToReadyList+0xe0>)
 8009874:	f7ff f8e2 	bl	8008a3c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009878:	4823      	ldr	r0, [pc, #140]	@ (8009908 <prvAddNewTaskToReadyList+0xe4>)
 800987a:	f7ff f8df 	bl	8008a3c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800987e:	4b23      	ldr	r3, [pc, #140]	@ (800990c <prvAddNewTaskToReadyList+0xe8>)
 8009880:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009884:	4b22      	ldr	r3, [pc, #136]	@ (8009910 <prvAddNewTaskToReadyList+0xec>)
 8009886:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009888:	4a22      	ldr	r2, [pc, #136]	@ (8009914 <prvAddNewTaskToReadyList+0xf0>)
 800988a:	6813      	ldr	r3, [r2, #0]
 800988c:	3301      	adds	r3, #1
 800988e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009890:	4a21      	ldr	r2, [pc, #132]	@ (8009918 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009892:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009894:	6811      	ldr	r1, [r2, #0]
 8009896:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009898:	2014      	movs	r0, #20
 800989a:	428b      	cmp	r3, r1
 800989c:	fb00 7003 	mla	r0, r0, r3, r7
 80098a0:	f104 0104 	add.w	r1, r4, #4
 80098a4:	bf88      	it	hi
 80098a6:	6013      	strhi	r3, [r2, #0]
 80098a8:	f7ff f8d6 	bl	8008a58 <vListInsertEnd>
	taskEXIT_CRITICAL();
 80098ac:	f7ff f992 	bl	8008bd4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80098b0:	4b1a      	ldr	r3, [pc, #104]	@ (800991c <prvAddNewTaskToReadyList+0xf8>)
 80098b2:	681b      	ldr	r3, [r3, #0]
 80098b4:	b173      	cbz	r3, 80098d4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80098b6:	6833      	ldr	r3, [r6, #0]
 80098b8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80098ba:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80098bc:	429a      	cmp	r2, r3
 80098be:	d209      	bcs.n	80098d4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 80098c0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80098c4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80098c8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80098cc:	f3bf 8f4f 	dsb	sy
 80098d0:	f3bf 8f6f 	isb	sy
}
 80098d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 80098d8:	4b10      	ldr	r3, [pc, #64]	@ (800991c <prvAddNewTaskToReadyList+0xf8>)
 80098da:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80098dc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 80098de:	2a00      	cmp	r2, #0
 80098e0:	d1d2      	bne.n	8009888 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80098e2:	6832      	ldr	r2, [r6, #0]
 80098e4:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80098e6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 80098e8:	bf98      	it	ls
 80098ea:	6034      	strls	r4, [r6, #0]
 80098ec:	e7cc      	b.n	8009888 <prvAddNewTaskToReadyList+0x64>
 80098ee:	bf00      	nop
 80098f0:	200151b0 	.word	0x200151b0
 80098f4:	20015684 	.word	0x20015684
 80098f8:	20015224 	.word	0x20015224
 80098fc:	200151fc 	.word	0x200151fc
 8009900:	200151e0 	.word	0x200151e0
 8009904:	200151cc 	.word	0x200151cc
 8009908:	200151b4 	.word	0x200151b4
 800990c:	200151f8 	.word	0x200151f8
 8009910:	200151f4 	.word	0x200151f4
 8009914:	20015194 	.word	0x20015194
 8009918:	200151a8 	.word	0x200151a8
 800991c:	200151a4 	.word	0x200151a4
 8009920:	20015210 	.word	0x20015210

08009924 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009924:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009926:	4b15      	ldr	r3, [pc, #84]	@ (800997c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009928:	4d15      	ldr	r5, [pc, #84]	@ (8009980 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800992a:	681c      	ldr	r4, [r3, #0]
{
 800992c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800992e:	6828      	ldr	r0, [r5, #0]
 8009930:	3004      	adds	r0, #4
{
 8009932:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009934:	f7ff f8b2 	bl	8008a9c <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009938:	1c73      	adds	r3, r6, #1
 800993a:	d107      	bne.n	800994c <prvAddCurrentTaskToDelayedList+0x28>
 800993c:	b137      	cbz	r7, 800994c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800993e:	6829      	ldr	r1, [r5, #0]
 8009940:	4810      	ldr	r0, [pc, #64]	@ (8009984 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009942:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009946:	3104      	adds	r1, #4
 8009948:	f7ff b886 	b.w	8008a58 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800994c:	682b      	ldr	r3, [r5, #0]
 800994e:	19a4      	adds	r4, r4, r6
 8009950:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009952:	d307      	bcc.n	8009964 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009954:	4b0c      	ldr	r3, [pc, #48]	@ (8009988 <prvAddCurrentTaskToDelayedList+0x64>)
 8009956:	6818      	ldr	r0, [r3, #0]
 8009958:	6829      	ldr	r1, [r5, #0]
}
 800995a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800995e:	3104      	adds	r1, #4
 8009960:	f7ff b885 	b.w	8008a6e <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009964:	4b09      	ldr	r3, [pc, #36]	@ (800998c <prvAddCurrentTaskToDelayedList+0x68>)
 8009966:	6818      	ldr	r0, [r3, #0]
 8009968:	6829      	ldr	r1, [r5, #0]
 800996a:	3104      	adds	r1, #4
 800996c:	f7ff f87f 	bl	8008a6e <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009970:	4b07      	ldr	r3, [pc, #28]	@ (8009990 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009972:	681a      	ldr	r2, [r3, #0]
 8009974:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009976:	bf88      	it	hi
 8009978:	601c      	strhi	r4, [r3, #0]
}
 800997a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800997c:	200151ac 	.word	0x200151ac
 8009980:	20015684 	.word	0x20015684
 8009984:	200151b4 	.word	0x200151b4
 8009988:	200151f4 	.word	0x200151f4
 800998c:	200151f8 	.word	0x200151f8
 8009990:	20015190 	.word	0x20015190

08009994 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009994:	4a06      	ldr	r2, [pc, #24]	@ (80099b0 <prvResetNextTaskUnblockTime+0x1c>)
 8009996:	6813      	ldr	r3, [r2, #0]
 8009998:	6819      	ldr	r1, [r3, #0]
 800999a:	4b06      	ldr	r3, [pc, #24]	@ (80099b4 <prvResetNextTaskUnblockTime+0x20>)
 800999c:	b919      	cbnz	r1, 80099a6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800999e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80099a2:	601a      	str	r2, [r3, #0]
}
 80099a4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80099a6:	6812      	ldr	r2, [r2, #0]
 80099a8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80099aa:	68d2      	ldr	r2, [r2, #12]
 80099ac:	6852      	ldr	r2, [r2, #4]
 80099ae:	e7f8      	b.n	80099a2 <prvResetNextTaskUnblockTime+0xe>
 80099b0:	200151f8 	.word	0x200151f8
 80099b4:	20015190 	.word	0x20015190

080099b8 <prvDeleteTCB>:
	{
 80099b8:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80099ba:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 80099be:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80099c0:	b93b      	cbnz	r3, 80099d2 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 80099c2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 80099c4:	f7fe fffc 	bl	80089c0 <vPortFree>
				vPortFree( pxTCB );
 80099c8:	4620      	mov	r0, r4
	}
 80099ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80099ce:	f7fe bff7 	b.w	80089c0 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80099d2:	2b01      	cmp	r3, #1
 80099d4:	d0f9      	beq.n	80099ca <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80099d6:	2b02      	cmp	r3, #2
 80099d8:	d008      	beq.n	80099ec <prvDeleteTCB+0x34>
 80099da:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80099de:	f383 8811 	msr	BASEPRI, r3
 80099e2:	f3bf 8f6f 	isb	sy
 80099e6:	f3bf 8f4f 	dsb	sy
 80099ea:	e7fe      	b.n	80099ea <prvDeleteTCB+0x32>
	}
 80099ec:	bd10      	pop	{r4, pc}
	...

080099f0 <prvIdleTask>:
{
 80099f0:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80099f2:	4c13      	ldr	r4, [pc, #76]	@ (8009a40 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80099f4:	4f13      	ldr	r7, [pc, #76]	@ (8009a44 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 80099f6:	4d14      	ldr	r5, [pc, #80]	@ (8009a48 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80099f8:	6823      	ldr	r3, [r4, #0]
 80099fa:	b973      	cbnz	r3, 8009a1a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80099fc:	4b13      	ldr	r3, [pc, #76]	@ (8009a4c <prvIdleTask+0x5c>)
 80099fe:	681b      	ldr	r3, [r3, #0]
 8009a00:	2b01      	cmp	r3, #1
 8009a02:	d9f8      	bls.n	80099f6 <prvIdleTask+0x6>
				taskYIELD();
 8009a04:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009a08:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009a0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009a10:	f3bf 8f4f 	dsb	sy
 8009a14:	f3bf 8f6f 	isb	sy
 8009a18:	e7ed      	b.n	80099f6 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009a1a:	f7ff f8bb 	bl	8008b94 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a1e:	68fb      	ldr	r3, [r7, #12]
 8009a20:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009a22:	1d30      	adds	r0, r6, #4
 8009a24:	f7ff f83a 	bl	8008a9c <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009a28:	682b      	ldr	r3, [r5, #0]
 8009a2a:	3b01      	subs	r3, #1
 8009a2c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009a2e:	6823      	ldr	r3, [r4, #0]
 8009a30:	3b01      	subs	r3, #1
 8009a32:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009a34:	f7ff f8ce 	bl	8008bd4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009a38:	4630      	mov	r0, r6
 8009a3a:	f7ff ffbd 	bl	80099b8 <prvDeleteTCB>
 8009a3e:	e7db      	b.n	80099f8 <prvIdleTask+0x8>
 8009a40:	200151c8 	.word	0x200151c8
 8009a44:	200151cc 	.word	0x200151cc
 8009a48:	200151b0 	.word	0x200151b0
 8009a4c:	20015224 	.word	0x20015224

08009a50 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009a50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009a54:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009a58:	0096      	lsls	r6, r2, #2
 8009a5a:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009a5c:	4607      	mov	r7, r0
 8009a5e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009a60:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8009a62:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009a64:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009a66:	f01a ffbc 	bl	80249e2 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009a6a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009a6c:	3e04      	subs	r6, #4
 8009a6e:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009a70:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 8009a74:	b3b5      	cbz	r5, 8009ae4 <prvInitialiseNewTask.constprop.0+0x94>
 8009a76:	1e6b      	subs	r3, r5, #1
 8009a78:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8009a7c:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009a7e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009a82:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 8009a86:	b109      	cbz	r1, 8009a8c <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009a88:	42ab      	cmp	r3, r5
 8009a8a:	d1f8      	bne.n	8009a7e <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009a8c:	2300      	movs	r3, #0
 8009a8e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009a92:	9d08      	ldr	r5, [sp, #32]
 8009a94:	2d37      	cmp	r5, #55	@ 0x37
 8009a96:	bf28      	it	cs
 8009a98:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009a9a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009a9e:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009aa0:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009aa2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8009aa4:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009aa8:	f7fe ffd3 	bl	8008a52 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009aac:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009ab0:	f104 0018 	add.w	r0, r4, #24
 8009ab4:	f7fe ffcd 	bl	8008a52 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009ab8:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009abc:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009abe:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009ac0:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009ac2:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009ac6:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009aca:	4642      	mov	r2, r8
 8009acc:	4639      	mov	r1, r7
 8009ace:	4630      	mov	r0, r6
 8009ad0:	f7ff f832 	bl	8008b38 <pxPortInitialiseStack>
 8009ad4:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009ad6:	f1b9 0f00 	cmp.w	r9, #0
 8009ada:	d001      	beq.n	8009ae0 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009adc:	f8c9 4000 	str.w	r4, [r9]
}
 8009ae0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009ae4:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8009ae8:	e7d3      	b.n	8009a92 <prvInitialiseNewTask.constprop.0+0x42>

08009aea <xTaskCreateStatic>:
	{
 8009aea:	b570      	push	{r4, r5, r6, lr}
 8009aec:	b086      	sub	sp, #24
 8009aee:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009af2:	b945      	cbnz	r5, 8009b06 <xTaskCreateStatic+0x1c>
 8009af4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009af8:	f383 8811 	msr	BASEPRI, r3
 8009afc:	f3bf 8f6f 	isb	sy
 8009b00:	f3bf 8f4f 	dsb	sy
 8009b04:	e7fe      	b.n	8009b04 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009b06:	b944      	cbnz	r4, 8009b1a <xTaskCreateStatic+0x30>
 8009b08:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009b0c:	f383 8811 	msr	BASEPRI, r3
 8009b10:	f3bf 8f6f 	isb	sy
 8009b14:	f3bf 8f4f 	dsb	sy
 8009b18:	e7fe      	b.n	8009b18 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009b1a:	2660      	movs	r6, #96	@ 0x60
 8009b1c:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009b1e:	9e05      	ldr	r6, [sp, #20]
 8009b20:	2e60      	cmp	r6, #96	@ 0x60
 8009b22:	d008      	beq.n	8009b36 <xTaskCreateStatic+0x4c>
 8009b24:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009b28:	f383 8811 	msr	BASEPRI, r3
 8009b2c:	f3bf 8f6f 	isb	sy
 8009b30:	f3bf 8f4f 	dsb	sy
 8009b34:	e7fe      	b.n	8009b34 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009b36:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009b38:	2502      	movs	r5, #2
 8009b3a:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009b3e:	ad04      	add	r5, sp, #16
 8009b40:	9501      	str	r5, [sp, #4]
 8009b42:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8009b44:	9402      	str	r4, [sp, #8]
 8009b46:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009b48:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009b4a:	f7ff ff81 	bl	8009a50 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009b4e:	4620      	mov	r0, r4
 8009b50:	f7ff fe68 	bl	8009824 <prvAddNewTaskToReadyList>
	}
 8009b54:	9804      	ldr	r0, [sp, #16]
 8009b56:	b006      	add	sp, #24
 8009b58:	bd70      	pop	{r4, r5, r6, pc}

08009b5a <xTaskCreate>:
	{
 8009b5a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009b5e:	4607      	mov	r7, r0
 8009b60:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009b62:	0090      	lsls	r0, r2, #2
	{
 8009b64:	4688      	mov	r8, r1
 8009b66:	4616      	mov	r6, r2
 8009b68:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009b6a:	f7fe fe91 	bl	8008890 <pvPortMalloc>
			if( pxStack != NULL )
 8009b6e:	4605      	mov	r5, r0
 8009b70:	b920      	cbnz	r0, 8009b7c <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009b72:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8009b76:	b005      	add	sp, #20
 8009b78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009b7c:	2060      	movs	r0, #96	@ 0x60
 8009b7e:	f7fe fe87 	bl	8008890 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009b82:	4604      	mov	r4, r0
 8009b84:	b198      	cbz	r0, 8009bae <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009b86:	2300      	movs	r3, #0
 8009b88:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009b8c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 8009b8e:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009b90:	9301      	str	r3, [sp, #4]
 8009b92:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009b94:	9002      	str	r0, [sp, #8]
 8009b96:	9300      	str	r3, [sp, #0]
 8009b98:	4632      	mov	r2, r6
 8009b9a:	464b      	mov	r3, r9
 8009b9c:	4641      	mov	r1, r8
 8009b9e:	4638      	mov	r0, r7
 8009ba0:	f7ff ff56 	bl	8009a50 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009ba4:	4620      	mov	r0, r4
 8009ba6:	f7ff fe3d 	bl	8009824 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009baa:	2001      	movs	r0, #1
 8009bac:	e7e3      	b.n	8009b76 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 8009bae:	4628      	mov	r0, r5
 8009bb0:	f7fe ff06 	bl	80089c0 <vPortFree>
		if( pxNewTCB != NULL )
 8009bb4:	e7dd      	b.n	8009b72 <xTaskCreate+0x18>
	...

08009bb8 <vTaskDelete>:
	{
 8009bb8:	b570      	push	{r4, r5, r6, lr}
 8009bba:	4604      	mov	r4, r0
 8009bbc:	4d23      	ldr	r5, [pc, #140]	@ (8009c4c <vTaskDelete+0x94>)
		taskENTER_CRITICAL();
 8009bbe:	f7fe ffe9 	bl	8008b94 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
 8009bc2:	b904      	cbnz	r4, 8009bc6 <vTaskDelete+0xe>
 8009bc4:	682c      	ldr	r4, [r5, #0]
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009bc6:	1d26      	adds	r6, r4, #4
 8009bc8:	4630      	mov	r0, r6
 8009bca:	f7fe ff67 	bl	8008a9c <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009bce:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8009bd0:	b11b      	cbz	r3, 8009bda <vTaskDelete+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009bd2:	f104 0018 	add.w	r0, r4, #24
 8009bd6:	f7fe ff61 	bl	8008a9c <uxListRemove>
			uxTaskNumber++;
 8009bda:	4a1d      	ldr	r2, [pc, #116]	@ (8009c50 <vTaskDelete+0x98>)
 8009bdc:	6813      	ldr	r3, [r2, #0]
 8009bde:	3301      	adds	r3, #1
 8009be0:	6013      	str	r3, [r2, #0]
			if( pxTCB == pxCurrentTCB )
 8009be2:	682b      	ldr	r3, [r5, #0]
 8009be4:	42a3      	cmp	r3, r4
 8009be6:	d11b      	bne.n	8009c20 <vTaskDelete+0x68>
				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
 8009be8:	481a      	ldr	r0, [pc, #104]	@ (8009c54 <vTaskDelete+0x9c>)
 8009bea:	4631      	mov	r1, r6
 8009bec:	f7fe ff34 	bl	8008a58 <vListInsertEnd>
				++uxDeletedTasksWaitingCleanUp;
 8009bf0:	4a19      	ldr	r2, [pc, #100]	@ (8009c58 <vTaskDelete+0xa0>)
 8009bf2:	6813      	ldr	r3, [r2, #0]
 8009bf4:	3301      	adds	r3, #1
 8009bf6:	6013      	str	r3, [r2, #0]
		taskEXIT_CRITICAL();
 8009bf8:	f7fe ffec 	bl	8008bd4 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
 8009bfc:	4b17      	ldr	r3, [pc, #92]	@ (8009c5c <vTaskDelete+0xa4>)
 8009bfe:	681b      	ldr	r3, [r3, #0]
 8009c00:	b313      	cbz	r3, 8009c48 <vTaskDelete+0x90>
			if( pxTCB == pxCurrentTCB )
 8009c02:	682b      	ldr	r3, [r5, #0]
 8009c04:	42a3      	cmp	r3, r4
 8009c06:	d11f      	bne.n	8009c48 <vTaskDelete+0x90>
				configASSERT( uxSchedulerSuspended == 0 );
 8009c08:	4b15      	ldr	r3, [pc, #84]	@ (8009c60 <vTaskDelete+0xa8>)
 8009c0a:	681b      	ldr	r3, [r3, #0]
 8009c0c:	b193      	cbz	r3, 8009c34 <vTaskDelete+0x7c>
 8009c0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009c12:	f383 8811 	msr	BASEPRI, r3
 8009c16:	f3bf 8f6f 	isb	sy
 8009c1a:	f3bf 8f4f 	dsb	sy
 8009c1e:	e7fe      	b.n	8009c1e <vTaskDelete+0x66>
				--uxCurrentNumberOfTasks;
 8009c20:	4a10      	ldr	r2, [pc, #64]	@ (8009c64 <vTaskDelete+0xac>)
 8009c22:	6813      	ldr	r3, [r2, #0]
				prvDeleteTCB( pxTCB );
 8009c24:	4620      	mov	r0, r4
				--uxCurrentNumberOfTasks;
 8009c26:	3b01      	subs	r3, #1
 8009c28:	6013      	str	r3, [r2, #0]
				prvDeleteTCB( pxTCB );
 8009c2a:	f7ff fec5 	bl	80099b8 <prvDeleteTCB>
				prvResetNextTaskUnblockTime();
 8009c2e:	f7ff feb1 	bl	8009994 <prvResetNextTaskUnblockTime>
 8009c32:	e7e1      	b.n	8009bf8 <vTaskDelete+0x40>
				portYIELD_WITHIN_API();
 8009c34:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009c38:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009c3c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009c40:	f3bf 8f4f 	dsb	sy
 8009c44:	f3bf 8f6f 	isb	sy
	}
 8009c48:	bd70      	pop	{r4, r5, r6, pc}
 8009c4a:	bf00      	nop
 8009c4c:	20015684 	.word	0x20015684
 8009c50:	20015194 	.word	0x20015194
 8009c54:	200151cc 	.word	0x200151cc
 8009c58:	200151c8 	.word	0x200151c8
 8009c5c:	200151a4 	.word	0x200151a4
 8009c60:	2001518c 	.word	0x2001518c
 8009c64:	200151b0 	.word	0x200151b0

08009c68 <vTaskStartScheduler>:
{
 8009c68:	b510      	push	{r4, lr}
 8009c6a:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009c6c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009c6e:	aa07      	add	r2, sp, #28
 8009c70:	a906      	add	r1, sp, #24
 8009c72:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009c74:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009c78:	f7fe fdcc 	bl	8008814 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009c7c:	9b05      	ldr	r3, [sp, #20]
 8009c7e:	9302      	str	r3, [sp, #8]
 8009c80:	9b06      	ldr	r3, [sp, #24]
 8009c82:	9a07      	ldr	r2, [sp, #28]
 8009c84:	4916      	ldr	r1, [pc, #88]	@ (8009ce0 <vTaskStartScheduler+0x78>)
 8009c86:	4817      	ldr	r0, [pc, #92]	@ (8009ce4 <vTaskStartScheduler+0x7c>)
 8009c88:	e9cd 4300 	strd	r4, r3, [sp]
 8009c8c:	4623      	mov	r3, r4
 8009c8e:	f7ff ff2c 	bl	8009aea <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009c92:	b318      	cbz	r0, 8009cdc <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 8009c94:	f000 fcf0 	bl	800a678 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009c98:	2801      	cmp	r0, #1
 8009c9a:	d114      	bne.n	8009cc6 <vTaskStartScheduler+0x5e>
 8009c9c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ca0:	f383 8811 	msr	BASEPRI, r3
 8009ca4:	f3bf 8f6f 	isb	sy
 8009ca8:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8009cac:	4b0e      	ldr	r3, [pc, #56]	@ (8009ce8 <vTaskStartScheduler+0x80>)
 8009cae:	f04f 32ff 	mov.w	r2, #4294967295
 8009cb2:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009cb4:	4b0d      	ldr	r3, [pc, #52]	@ (8009cec <vTaskStartScheduler+0x84>)
 8009cb6:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009cb8:	4b0d      	ldr	r3, [pc, #52]	@ (8009cf0 <vTaskStartScheduler+0x88>)
 8009cba:	601c      	str	r4, [r3, #0]
}
 8009cbc:	b008      	add	sp, #32
 8009cbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009cc2:	f7fe bff7 	b.w	8008cb4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009cc6:	3001      	adds	r0, #1
 8009cc8:	d108      	bne.n	8009cdc <vTaskStartScheduler+0x74>
 8009cca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009cce:	f383 8811 	msr	BASEPRI, r3
 8009cd2:	f3bf 8f6f 	isb	sy
 8009cd6:	f3bf 8f4f 	dsb	sy
 8009cda:	e7fe      	b.n	8009cda <vTaskStartScheduler+0x72>
}
 8009cdc:	b008      	add	sp, #32
 8009cde:	bd10      	pop	{r4, pc}
 8009ce0:	08026715 	.word	0x08026715
 8009ce4:	080099f1 	.word	0x080099f1
 8009ce8:	20015190 	.word	0x20015190
 8009cec:	200151a4 	.word	0x200151a4
 8009cf0:	200151ac 	.word	0x200151ac

08009cf4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009cf4:	4a02      	ldr	r2, [pc, #8]	@ (8009d00 <vTaskSuspendAll+0xc>)
 8009cf6:	6813      	ldr	r3, [r2, #0]
 8009cf8:	3301      	adds	r3, #1
 8009cfa:	6013      	str	r3, [r2, #0]
}
 8009cfc:	4770      	bx	lr
 8009cfe:	bf00      	nop
 8009d00:	2001518c 	.word	0x2001518c

08009d04 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009d04:	4b01      	ldr	r3, [pc, #4]	@ (8009d0c <xTaskGetTickCount+0x8>)
 8009d06:	6818      	ldr	r0, [r3, #0]
}
 8009d08:	4770      	bx	lr
 8009d0a:	bf00      	nop
 8009d0c:	200151ac 	.word	0x200151ac

08009d10 <xTaskGetTickCountFromISR>:
{
 8009d10:	b508      	push	{r3, lr}
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009d12:	f7ff f851 	bl	8008db8 <vPortValidateInterruptPriority>
		xReturn = xTickCount;
 8009d16:	4b01      	ldr	r3, [pc, #4]	@ (8009d1c <xTaskGetTickCountFromISR+0xc>)
 8009d18:	6818      	ldr	r0, [r3, #0]
}
 8009d1a:	bd08      	pop	{r3, pc}
 8009d1c:	200151ac 	.word	0x200151ac

08009d20 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d20:	4b3f      	ldr	r3, [pc, #252]	@ (8009e20 <xTaskIncrementTick+0x100>)
 8009d22:	681b      	ldr	r3, [r3, #0]
{
 8009d24:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d28:	2b00      	cmp	r3, #0
 8009d2a:	d172      	bne.n	8009e12 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009d2c:	4b3d      	ldr	r3, [pc, #244]	@ (8009e24 <xTaskIncrementTick+0x104>)
 8009d2e:	681c      	ldr	r4, [r3, #0]
 8009d30:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8009d32:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009d34:	b9bc      	cbnz	r4, 8009d66 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009d36:	4b3c      	ldr	r3, [pc, #240]	@ (8009e28 <xTaskIncrementTick+0x108>)
 8009d38:	681a      	ldr	r2, [r3, #0]
 8009d3a:	6812      	ldr	r2, [r2, #0]
 8009d3c:	b142      	cbz	r2, 8009d50 <xTaskIncrementTick+0x30>
 8009d3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d42:	f383 8811 	msr	BASEPRI, r3
 8009d46:	f3bf 8f6f 	isb	sy
 8009d4a:	f3bf 8f4f 	dsb	sy
 8009d4e:	e7fe      	b.n	8009d4e <xTaskIncrementTick+0x2e>
 8009d50:	4a36      	ldr	r2, [pc, #216]	@ (8009e2c <xTaskIncrementTick+0x10c>)
 8009d52:	6819      	ldr	r1, [r3, #0]
 8009d54:	6810      	ldr	r0, [r2, #0]
 8009d56:	6018      	str	r0, [r3, #0]
 8009d58:	6011      	str	r1, [r2, #0]
 8009d5a:	4a35      	ldr	r2, [pc, #212]	@ (8009e30 <xTaskIncrementTick+0x110>)
 8009d5c:	6813      	ldr	r3, [r2, #0]
 8009d5e:	3301      	adds	r3, #1
 8009d60:	6013      	str	r3, [r2, #0]
 8009d62:	f7ff fe17 	bl	8009994 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009d66:	4d33      	ldr	r5, [pc, #204]	@ (8009e34 <xTaskIncrementTick+0x114>)
 8009d68:	4e33      	ldr	r6, [pc, #204]	@ (8009e38 <xTaskIncrementTick+0x118>)
 8009d6a:	682b      	ldr	r3, [r5, #0]
 8009d6c:	4f33      	ldr	r7, [pc, #204]	@ (8009e3c <xTaskIncrementTick+0x11c>)
 8009d6e:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 8009d70:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009d74:	d212      	bcs.n	8009d9c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009d76:	683a      	ldr	r2, [r7, #0]
 8009d78:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009d7a:	2114      	movs	r1, #20
 8009d7c:	434a      	muls	r2, r1
 8009d7e:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8009d80:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 8009d82:	4a2f      	ldr	r2, [pc, #188]	@ (8009e40 <xTaskIncrementTick+0x120>)
 8009d84:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 8009d86:	bf28      	it	cs
 8009d88:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 8009d8c:	2a00      	cmp	r2, #0
 8009d8e:	bf18      	it	ne
 8009d90:	f04f 0b01 	movne.w	fp, #1
}
 8009d94:	4658      	mov	r0, fp
 8009d96:	b003      	add	sp, #12
 8009d98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009d9c:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8009e28 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009da0:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 8009e48 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009da4:	f8d9 2000 	ldr.w	r2, [r9]
 8009da8:	6812      	ldr	r2, [r2, #0]
 8009daa:	b91a      	cbnz	r2, 8009db4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009dac:	f04f 32ff 	mov.w	r2, #4294967295
 8009db0:	602a      	str	r2, [r5, #0]
					break;
 8009db2:	e7e0      	b.n	8009d76 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009db4:	f8d9 2000 	ldr.w	r2, [r9]
 8009db8:	68d2      	ldr	r2, [r2, #12]
 8009dba:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009dbe:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8009dc2:	428c      	cmp	r4, r1
 8009dc4:	d201      	bcs.n	8009dca <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009dc6:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009dc8:	e7d5      	b.n	8009d76 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009dca:	f108 0304 	add.w	r3, r8, #4
 8009dce:	4618      	mov	r0, r3
 8009dd0:	9301      	str	r3, [sp, #4]
 8009dd2:	f7fe fe63 	bl	8008a9c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009dd6:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8009dda:	b119      	cbz	r1, 8009de4 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009ddc:	f108 0018 	add.w	r0, r8, #24
 8009de0:	f7fe fe5c 	bl	8008a9c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009de4:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8009de8:	f8da 1000 	ldr.w	r1, [sl]
 8009dec:	2314      	movs	r3, #20
 8009dee:	4288      	cmp	r0, r1
 8009df0:	bf88      	it	hi
 8009df2:	f8ca 0000 	strhi.w	r0, [sl]
 8009df6:	9901      	ldr	r1, [sp, #4]
 8009df8:	fb03 6000 	mla	r0, r3, r0, r6
 8009dfc:	f7fe fe2c 	bl	8008a58 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009e00:	6838      	ldr	r0, [r7, #0]
 8009e02:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8009e06:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8009e08:	4291      	cmp	r1, r2
 8009e0a:	bf28      	it	cs
 8009e0c:	f04f 0b01 	movcs.w	fp, #1
 8009e10:	e7c8      	b.n	8009da4 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8009e12:	4a0c      	ldr	r2, [pc, #48]	@ (8009e44 <xTaskIncrementTick+0x124>)
 8009e14:	6813      	ldr	r3, [r2, #0]
 8009e16:	3301      	adds	r3, #1
 8009e18:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009e1a:	f04f 0b00 	mov.w	fp, #0
 8009e1e:	e7b9      	b.n	8009d94 <xTaskIncrementTick+0x74>
 8009e20:	2001518c 	.word	0x2001518c
 8009e24:	200151ac 	.word	0x200151ac
 8009e28:	200151f8 	.word	0x200151f8
 8009e2c:	200151f4 	.word	0x200151f4
 8009e30:	20015198 	.word	0x20015198
 8009e34:	20015190 	.word	0x20015190
 8009e38:	20015224 	.word	0x20015224
 8009e3c:	20015684 	.word	0x20015684
 8009e40:	2001519c 	.word	0x2001519c
 8009e44:	200151a0 	.word	0x200151a0
 8009e48:	200151a8 	.word	0x200151a8

08009e4c <xTaskResumeAll>:
{
 8009e4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8009e50:	4c30      	ldr	r4, [pc, #192]	@ (8009f14 <xTaskResumeAll+0xc8>)
 8009e52:	6823      	ldr	r3, [r4, #0]
 8009e54:	b943      	cbnz	r3, 8009e68 <xTaskResumeAll+0x1c>
 8009e56:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009e5a:	f383 8811 	msr	BASEPRI, r3
 8009e5e:	f3bf 8f6f 	isb	sy
 8009e62:	f3bf 8f4f 	dsb	sy
 8009e66:	e7fe      	b.n	8009e66 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8009e68:	f7fe fe94 	bl	8008b94 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009e6c:	6823      	ldr	r3, [r4, #0]
 8009e6e:	3b01      	subs	r3, #1
 8009e70:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009e72:	6824      	ldr	r4, [r4, #0]
 8009e74:	b12c      	cbz	r4, 8009e82 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 8009e76:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009e78:	f7fe feac 	bl	8008bd4 <vPortExitCritical>
}
 8009e7c:	4620      	mov	r0, r4
 8009e7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009e82:	4b25      	ldr	r3, [pc, #148]	@ (8009f18 <xTaskResumeAll+0xcc>)
 8009e84:	681b      	ldr	r3, [r3, #0]
 8009e86:	2b00      	cmp	r3, #0
 8009e88:	d0f5      	beq.n	8009e76 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009e8a:	4d24      	ldr	r5, [pc, #144]	@ (8009f1c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009e8c:	4e24      	ldr	r6, [pc, #144]	@ (8009f20 <xTaskResumeAll+0xd4>)
 8009e8e:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 8009f30 <xTaskResumeAll+0xe4>
 8009e92:	e01d      	b.n	8009ed0 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009e94:	68eb      	ldr	r3, [r5, #12]
 8009e96:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009e98:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009e9a:	f104 0018 	add.w	r0, r4, #24
 8009e9e:	f7fe fdfd 	bl	8008a9c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009ea2:	4638      	mov	r0, r7
 8009ea4:	f7fe fdfa 	bl	8008a9c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009ea8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009eaa:	6832      	ldr	r2, [r6, #0]
 8009eac:	2014      	movs	r0, #20
 8009eae:	4293      	cmp	r3, r2
 8009eb0:	fb00 8003 	mla	r0, r0, r3, r8
 8009eb4:	4639      	mov	r1, r7
 8009eb6:	bf88      	it	hi
 8009eb8:	6033      	strhi	r3, [r6, #0]
 8009eba:	f7fe fdcd 	bl	8008a58 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009ebe:	4b19      	ldr	r3, [pc, #100]	@ (8009f24 <xTaskResumeAll+0xd8>)
 8009ec0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8009ec2:	681b      	ldr	r3, [r3, #0]
 8009ec4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009ec6:	429a      	cmp	r2, r3
 8009ec8:	d302      	bcc.n	8009ed0 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8009eca:	4b17      	ldr	r3, [pc, #92]	@ (8009f28 <xTaskResumeAll+0xdc>)
 8009ecc:	2201      	movs	r2, #1
 8009ece:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009ed0:	682b      	ldr	r3, [r5, #0]
 8009ed2:	2b00      	cmp	r3, #0
 8009ed4:	d1de      	bne.n	8009e94 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8009ed6:	b10c      	cbz	r4, 8009edc <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8009ed8:	f7ff fd5c 	bl	8009994 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8009edc:	4d13      	ldr	r5, [pc, #76]	@ (8009f2c <xTaskResumeAll+0xe0>)
 8009ede:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8009ee0:	b144      	cbz	r4, 8009ef4 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8009ee2:	4e11      	ldr	r6, [pc, #68]	@ (8009f28 <xTaskResumeAll+0xdc>)
 8009ee4:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009ee6:	f7ff ff1b 	bl	8009d20 <xTaskIncrementTick>
 8009eea:	b100      	cbz	r0, 8009eee <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8009eec:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8009eee:	3c01      	subs	r4, #1
 8009ef0:	d1f9      	bne.n	8009ee6 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 8009ef2:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009ef4:	4b0c      	ldr	r3, [pc, #48]	@ (8009f28 <xTaskResumeAll+0xdc>)
 8009ef6:	681b      	ldr	r3, [r3, #0]
 8009ef8:	2b00      	cmp	r3, #0
 8009efa:	d0bc      	beq.n	8009e76 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8009efc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009f00:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009f04:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009f08:	f3bf 8f4f 	dsb	sy
 8009f0c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009f10:	2401      	movs	r4, #1
 8009f12:	e7b1      	b.n	8009e78 <xTaskResumeAll+0x2c>
 8009f14:	2001518c 	.word	0x2001518c
 8009f18:	200151b0 	.word	0x200151b0
 8009f1c:	200151e0 	.word	0x200151e0
 8009f20:	200151a8 	.word	0x200151a8
 8009f24:	20015684 	.word	0x20015684
 8009f28:	2001519c 	.word	0x2001519c
 8009f2c:	200151a0 	.word	0x200151a0
 8009f30:	20015224 	.word	0x20015224

08009f34 <vTaskDelay>:
	{
 8009f34:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009f36:	b950      	cbnz	r0, 8009f4e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009f38:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009f3c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009f40:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009f44:	f3bf 8f4f 	dsb	sy
 8009f48:	f3bf 8f6f 	isb	sy
	}
 8009f4c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009f4e:	4b0a      	ldr	r3, [pc, #40]	@ (8009f78 <vTaskDelay+0x44>)
 8009f50:	6819      	ldr	r1, [r3, #0]
 8009f52:	b141      	cbz	r1, 8009f66 <vTaskDelay+0x32>
 8009f54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009f58:	f383 8811 	msr	BASEPRI, r3
 8009f5c:	f3bf 8f6f 	isb	sy
 8009f60:	f3bf 8f4f 	dsb	sy
 8009f64:	e7fe      	b.n	8009f64 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8009f66:	f7ff fec5 	bl	8009cf4 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009f6a:	f7ff fcdb 	bl	8009924 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009f6e:	f7ff ff6d 	bl	8009e4c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009f72:	2800      	cmp	r0, #0
 8009f74:	d0e0      	beq.n	8009f38 <vTaskDelay+0x4>
 8009f76:	e7e9      	b.n	8009f4c <vTaskDelay+0x18>
 8009f78:	2001518c 	.word	0x2001518c

08009f7c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009f7c:	4b17      	ldr	r3, [pc, #92]	@ (8009fdc <vTaskSwitchContext+0x60>)
 8009f7e:	681a      	ldr	r2, [r3, #0]
 8009f80:	4b17      	ldr	r3, [pc, #92]	@ (8009fe0 <vTaskSwitchContext+0x64>)
{
 8009f82:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009f84:	b112      	cbz	r2, 8009f8c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009f86:	2201      	movs	r2, #1
 8009f88:	601a      	str	r2, [r3, #0]
}
 8009f8a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f8c:	4d15      	ldr	r5, [pc, #84]	@ (8009fe4 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 8009f8e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f90:	682a      	ldr	r2, [r5, #0]
 8009f92:	4915      	ldr	r1, [pc, #84]	@ (8009fe8 <vTaskSwitchContext+0x6c>)
 8009f94:	2614      	movs	r6, #20
 8009f96:	fb06 f302 	mul.w	r3, r6, r2
 8009f9a:	18c8      	adds	r0, r1, r3
 8009f9c:	58cc      	ldr	r4, [r1, r3]
 8009f9e:	b18c      	cbz	r4, 8009fc4 <vTaskSwitchContext+0x48>
 8009fa0:	6844      	ldr	r4, [r0, #4]
 8009fa2:	3308      	adds	r3, #8
 8009fa4:	6864      	ldr	r4, [r4, #4]
 8009fa6:	6044      	str	r4, [r0, #4]
 8009fa8:	440b      	add	r3, r1
 8009faa:	429c      	cmp	r4, r3
 8009fac:	bf04      	itt	eq
 8009fae:	6863      	ldreq	r3, [r4, #4]
 8009fb0:	6043      	streq	r3, [r0, #4]
 8009fb2:	2314      	movs	r3, #20
 8009fb4:	fb03 1102 	mla	r1, r3, r2, r1
 8009fb8:	684b      	ldr	r3, [r1, #4]
 8009fba:	68d9      	ldr	r1, [r3, #12]
 8009fbc:	4b0b      	ldr	r3, [pc, #44]	@ (8009fec <vTaskSwitchContext+0x70>)
 8009fbe:	6019      	str	r1, [r3, #0]
 8009fc0:	602a      	str	r2, [r5, #0]
}
 8009fc2:	e7e2      	b.n	8009f8a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fc4:	b942      	cbnz	r2, 8009fd8 <vTaskSwitchContext+0x5c>
 8009fc6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009fca:	f383 8811 	msr	BASEPRI, r3
 8009fce:	f3bf 8f6f 	isb	sy
 8009fd2:	f3bf 8f4f 	dsb	sy
 8009fd6:	e7fe      	b.n	8009fd6 <vTaskSwitchContext+0x5a>
 8009fd8:	3a01      	subs	r2, #1
 8009fda:	e7dc      	b.n	8009f96 <vTaskSwitchContext+0x1a>
 8009fdc:	2001518c 	.word	0x2001518c
 8009fe0:	2001519c 	.word	0x2001519c
 8009fe4:	200151a8 	.word	0x200151a8
 8009fe8:	20015224 	.word	0x20015224
 8009fec:	20015684 	.word	0x20015684

08009ff0 <vTaskPlaceOnEventList>:
{
 8009ff0:	b510      	push	{r4, lr}
 8009ff2:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009ff4:	b940      	cbnz	r0, 800a008 <vTaskPlaceOnEventList+0x18>
 8009ff6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ffa:	f383 8811 	msr	BASEPRI, r3
 8009ffe:	f3bf 8f6f 	isb	sy
 800a002:	f3bf 8f4f 	dsb	sy
 800a006:	e7fe      	b.n	800a006 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a008:	4b05      	ldr	r3, [pc, #20]	@ (800a020 <vTaskPlaceOnEventList+0x30>)
 800a00a:	6819      	ldr	r1, [r3, #0]
 800a00c:	3118      	adds	r1, #24
 800a00e:	f7fe fd2e 	bl	8008a6e <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a012:	4620      	mov	r0, r4
 800a014:	2101      	movs	r1, #1
}
 800a016:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a01a:	f7ff bc83 	b.w	8009924 <prvAddCurrentTaskToDelayedList>
 800a01e:	bf00      	nop
 800a020:	20015684 	.word	0x20015684

0800a024 <vTaskPlaceOnEventListRestricted>:
	{
 800a024:	b538      	push	{r3, r4, r5, lr}
 800a026:	460d      	mov	r5, r1
 800a028:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a02a:	b940      	cbnz	r0, 800a03e <vTaskPlaceOnEventListRestricted+0x1a>
 800a02c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a030:	f383 8811 	msr	BASEPRI, r3
 800a034:	f3bf 8f6f 	isb	sy
 800a038:	f3bf 8f4f 	dsb	sy
 800a03c:	e7fe      	b.n	800a03c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a03e:	4b07      	ldr	r3, [pc, #28]	@ (800a05c <vTaskPlaceOnEventListRestricted+0x38>)
 800a040:	6819      	ldr	r1, [r3, #0]
 800a042:	3118      	adds	r1, #24
 800a044:	f7fe fd08 	bl	8008a58 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a048:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a04a:	4621      	mov	r1, r4
 800a04c:	bf0c      	ite	eq
 800a04e:	4628      	moveq	r0, r5
 800a050:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a054:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a058:	f7ff bc64 	b.w	8009924 <prvAddCurrentTaskToDelayedList>
 800a05c:	20015684 	.word	0x20015684

0800a060 <xTaskRemoveFromEventList>:
{
 800a060:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a062:	68c3      	ldr	r3, [r0, #12]
 800a064:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a066:	b944      	cbnz	r4, 800a07a <xTaskRemoveFromEventList+0x1a>
 800a068:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a06c:	f383 8811 	msr	BASEPRI, r3
 800a070:	f3bf 8f6f 	isb	sy
 800a074:	f3bf 8f4f 	dsb	sy
 800a078:	e7fe      	b.n	800a078 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a07a:	f104 0518 	add.w	r5, r4, #24
 800a07e:	4628      	mov	r0, r5
 800a080:	f7fe fd0c 	bl	8008a9c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a084:	4b10      	ldr	r3, [pc, #64]	@ (800a0c8 <xTaskRemoveFromEventList+0x68>)
 800a086:	681b      	ldr	r3, [r3, #0]
 800a088:	b9db      	cbnz	r3, 800a0c2 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a08a:	1d25      	adds	r5, r4, #4
 800a08c:	4628      	mov	r0, r5
 800a08e:	f7fe fd05 	bl	8008a9c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a092:	4a0e      	ldr	r2, [pc, #56]	@ (800a0cc <xTaskRemoveFromEventList+0x6c>)
 800a094:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a096:	6811      	ldr	r1, [r2, #0]
 800a098:	428b      	cmp	r3, r1
 800a09a:	bf88      	it	hi
 800a09c:	6013      	strhi	r3, [r2, #0]
 800a09e:	4a0c      	ldr	r2, [pc, #48]	@ (800a0d0 <xTaskRemoveFromEventList+0x70>)
 800a0a0:	2014      	movs	r0, #20
 800a0a2:	4629      	mov	r1, r5
 800a0a4:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a0a8:	f7fe fcd6 	bl	8008a58 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a0ac:	4b09      	ldr	r3, [pc, #36]	@ (800a0d4 <xTaskRemoveFromEventList+0x74>)
 800a0ae:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800a0b0:	681b      	ldr	r3, [r3, #0]
 800a0b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a0b4:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a0b6:	bf83      	ittte	hi
 800a0b8:	4b07      	ldrhi	r3, [pc, #28]	@ (800a0d8 <xTaskRemoveFromEventList+0x78>)
 800a0ba:	2001      	movhi	r0, #1
 800a0bc:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 800a0be:	2000      	movls	r0, #0
}
 800a0c0:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a0c2:	4806      	ldr	r0, [pc, #24]	@ (800a0dc <xTaskRemoveFromEventList+0x7c>)
 800a0c4:	4629      	mov	r1, r5
 800a0c6:	e7ef      	b.n	800a0a8 <xTaskRemoveFromEventList+0x48>
 800a0c8:	2001518c 	.word	0x2001518c
 800a0cc:	200151a8 	.word	0x200151a8
 800a0d0:	20015224 	.word	0x20015224
 800a0d4:	20015684 	.word	0x20015684
 800a0d8:	2001519c 	.word	0x2001519c
 800a0dc:	200151e0 	.word	0x200151e0

0800a0e0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a0e0:	4b03      	ldr	r3, [pc, #12]	@ (800a0f0 <vTaskInternalSetTimeOutState+0x10>)
 800a0e2:	681b      	ldr	r3, [r3, #0]
 800a0e4:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a0e6:	4b03      	ldr	r3, [pc, #12]	@ (800a0f4 <vTaskInternalSetTimeOutState+0x14>)
 800a0e8:	681b      	ldr	r3, [r3, #0]
 800a0ea:	6043      	str	r3, [r0, #4]
}
 800a0ec:	4770      	bx	lr
 800a0ee:	bf00      	nop
 800a0f0:	20015198 	.word	0x20015198
 800a0f4:	200151ac 	.word	0x200151ac

0800a0f8 <xTaskCheckForTimeOut>:
{
 800a0f8:	b570      	push	{r4, r5, r6, lr}
 800a0fa:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a0fc:	4605      	mov	r5, r0
 800a0fe:	b940      	cbnz	r0, 800a112 <xTaskCheckForTimeOut+0x1a>
 800a100:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a104:	f383 8811 	msr	BASEPRI, r3
 800a108:	f3bf 8f6f 	isb	sy
 800a10c:	f3bf 8f4f 	dsb	sy
 800a110:	e7fe      	b.n	800a110 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a112:	b941      	cbnz	r1, 800a126 <xTaskCheckForTimeOut+0x2e>
 800a114:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a118:	f383 8811 	msr	BASEPRI, r3
 800a11c:	f3bf 8f6f 	isb	sy
 800a120:	f3bf 8f4f 	dsb	sy
 800a124:	e7fe      	b.n	800a124 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a126:	f7fe fd35 	bl	8008b94 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a12a:	4b0f      	ldr	r3, [pc, #60]	@ (800a168 <xTaskCheckForTimeOut+0x70>)
 800a12c:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a12e:	6823      	ldr	r3, [r4, #0]
 800a130:	1c5a      	adds	r2, r3, #1
 800a132:	d010      	beq.n	800a156 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a134:	480d      	ldr	r0, [pc, #52]	@ (800a16c <xTaskCheckForTimeOut+0x74>)
 800a136:	682e      	ldr	r6, [r5, #0]
 800a138:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a13a:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a13c:	4286      	cmp	r6, r0
 800a13e:	d001      	beq.n	800a144 <xTaskCheckForTimeOut+0x4c>
 800a140:	428a      	cmp	r2, r1
 800a142:	d90f      	bls.n	800a164 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a144:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a146:	4283      	cmp	r3, r0
 800a148:	d90a      	bls.n	800a160 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a14a:	1a5b      	subs	r3, r3, r1
 800a14c:	4413      	add	r3, r2
 800a14e:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a150:	4628      	mov	r0, r5
 800a152:	f7ff ffc5 	bl	800a0e0 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a156:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a158:	f7fe fd3c 	bl	8008bd4 <vPortExitCritical>
}
 800a15c:	4620      	mov	r0, r4
 800a15e:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a160:	2300      	movs	r3, #0
 800a162:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a164:	2401      	movs	r4, #1
 800a166:	e7f7      	b.n	800a158 <xTaskCheckForTimeOut+0x60>
 800a168:	200151ac 	.word	0x200151ac
 800a16c:	20015198 	.word	0x20015198

0800a170 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a170:	4b01      	ldr	r3, [pc, #4]	@ (800a178 <vTaskMissedYield+0x8>)
 800a172:	2201      	movs	r2, #1
 800a174:	601a      	str	r2, [r3, #0]
}
 800a176:	4770      	bx	lr
 800a178:	2001519c 	.word	0x2001519c

0800a17c <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a17c:	4b05      	ldr	r3, [pc, #20]	@ (800a194 <xTaskGetSchedulerState+0x18>)
 800a17e:	681b      	ldr	r3, [r3, #0]
 800a180:	b133      	cbz	r3, 800a190 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a182:	4b05      	ldr	r3, [pc, #20]	@ (800a198 <xTaskGetSchedulerState+0x1c>)
 800a184:	6818      	ldr	r0, [r3, #0]
 800a186:	fab0 f080 	clz	r0, r0
 800a18a:	0940      	lsrs	r0, r0, #5
 800a18c:	0040      	lsls	r0, r0, #1
 800a18e:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a190:	2001      	movs	r0, #1
	}
 800a192:	4770      	bx	lr
 800a194:	200151a4 	.word	0x200151a4
 800a198:	2001518c 	.word	0x2001518c

0800a19c <xTaskPriorityInherit>:
	{
 800a19c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 800a19e:	4604      	mov	r4, r0
 800a1a0:	b338      	cbz	r0, 800a1f2 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a1a2:	4d1a      	ldr	r5, [pc, #104]	@ (800a20c <xTaskPriorityInherit+0x70>)
 800a1a4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a1a6:	682a      	ldr	r2, [r5, #0]
 800a1a8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800a1aa:	4293      	cmp	r3, r2
 800a1ac:	d226      	bcs.n	800a1fc <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a1ae:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a1b0:	4e17      	ldr	r6, [pc, #92]	@ (800a210 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a1b2:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a1b4:	bfa1      	itttt	ge
 800a1b6:	682a      	ldrge	r2, [r5, #0]
 800a1b8:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800a1ba:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800a1be:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a1c0:	2214      	movs	r2, #20
 800a1c2:	fb02 6303 	mla	r3, r2, r3, r6
 800a1c6:	6942      	ldr	r2, [r0, #20]
 800a1c8:	429a      	cmp	r2, r3
 800a1ca:	d113      	bne.n	800a1f4 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a1cc:	1d07      	adds	r7, r0, #4
 800a1ce:	4638      	mov	r0, r7
 800a1d0:	f7fe fc64 	bl	8008a9c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a1d4:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a1d6:	4a0f      	ldr	r2, [pc, #60]	@ (800a214 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a1d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a1da:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a1dc:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a1de:	2014      	movs	r0, #20
 800a1e0:	428b      	cmp	r3, r1
 800a1e2:	fb00 6003 	mla	r0, r0, r3, r6
 800a1e6:	4639      	mov	r1, r7
 800a1e8:	bf88      	it	hi
 800a1ea:	6013      	strhi	r3, [r2, #0]
 800a1ec:	f7fe fc34 	bl	8008a58 <vListInsertEnd>
				xReturn = pdTRUE;
 800a1f0:	2001      	movs	r0, #1
	}
 800a1f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a1f4:	682b      	ldr	r3, [r5, #0]
 800a1f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a1f8:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800a1fa:	e7f9      	b.n	800a1f0 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a1fc:	682b      	ldr	r3, [r5, #0]
 800a1fe:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800a200:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a202:	4298      	cmp	r0, r3
 800a204:	bf2c      	ite	cs
 800a206:	2000      	movcs	r0, #0
 800a208:	2001      	movcc	r0, #1
 800a20a:	e7f2      	b.n	800a1f2 <xTaskPriorityInherit+0x56>
 800a20c:	20015684 	.word	0x20015684
 800a210:	20015224 	.word	0x20015224
 800a214:	200151a8 	.word	0x200151a8

0800a218 <xTaskPriorityDisinherit>:
	{
 800a218:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a21a:	b908      	cbnz	r0, 800a220 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 800a21c:	2000      	movs	r0, #0
	}
 800a21e:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a220:	4b1b      	ldr	r3, [pc, #108]	@ (800a290 <xTaskPriorityDisinherit+0x78>)
 800a222:	681c      	ldr	r4, [r3, #0]
 800a224:	4284      	cmp	r4, r0
 800a226:	d008      	beq.n	800a23a <xTaskPriorityDisinherit+0x22>
 800a228:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a22c:	f383 8811 	msr	BASEPRI, r3
 800a230:	f3bf 8f6f 	isb	sy
 800a234:	f3bf 8f4f 	dsb	sy
 800a238:	e7fe      	b.n	800a238 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 800a23a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800a23c:	b943      	cbnz	r3, 800a250 <xTaskPriorityDisinherit+0x38>
 800a23e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a242:	f383 8811 	msr	BASEPRI, r3
 800a246:	f3bf 8f6f 	isb	sy
 800a24a:	f3bf 8f4f 	dsb	sy
 800a24e:	e7fe      	b.n	800a24e <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a250:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800a252:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a254:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a256:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a258:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a25a:	d0df      	beq.n	800a21c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a25c:	2b00      	cmp	r3, #0
 800a25e:	d1dd      	bne.n	800a21c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a260:	1d25      	adds	r5, r4, #4
 800a262:	4628      	mov	r0, r5
 800a264:	f7fe fc1a 	bl	8008a9c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a268:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800a26a:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a26c:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800a270:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a272:	4a08      	ldr	r2, [pc, #32]	@ (800a294 <xTaskPriorityDisinherit+0x7c>)
 800a274:	6811      	ldr	r1, [r2, #0]
 800a276:	428b      	cmp	r3, r1
 800a278:	bf88      	it	hi
 800a27a:	6013      	strhi	r3, [r2, #0]
 800a27c:	4a06      	ldr	r2, [pc, #24]	@ (800a298 <xTaskPriorityDisinherit+0x80>)
 800a27e:	2014      	movs	r0, #20
 800a280:	fb00 2003 	mla	r0, r0, r3, r2
 800a284:	4629      	mov	r1, r5
 800a286:	f7fe fbe7 	bl	8008a58 <vListInsertEnd>
					xReturn = pdTRUE;
 800a28a:	2001      	movs	r0, #1
		return xReturn;
 800a28c:	e7c7      	b.n	800a21e <xTaskPriorityDisinherit+0x6>
 800a28e:	bf00      	nop
 800a290:	20015684 	.word	0x20015684
 800a294:	200151a8 	.word	0x200151a8
 800a298:	20015224 	.word	0x20015224

0800a29c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a29c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a29e:	4604      	mov	r4, r0
 800a2a0:	2800      	cmp	r0, #0
 800a2a2:	d041      	beq.n	800a328 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 800a2a4:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800a2a6:	b942      	cbnz	r2, 800a2ba <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a2a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a2ac:	f383 8811 	msr	BASEPRI, r3
 800a2b0:	f3bf 8f6f 	isb	sy
 800a2b4:	f3bf 8f4f 	dsb	sy
 800a2b8:	e7fe      	b.n	800a2b8 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a2ba:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800a2bc:	4299      	cmp	r1, r3
 800a2be:	bf38      	it	cc
 800a2c0:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a2c2:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a2c4:	428b      	cmp	r3, r1
 800a2c6:	d02f      	beq.n	800a328 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a2c8:	2a01      	cmp	r2, #1
 800a2ca:	d12d      	bne.n	800a328 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 800a2cc:	4a17      	ldr	r2, [pc, #92]	@ (800a32c <vTaskPriorityDisinheritAfterTimeout+0x90>)
 800a2ce:	6812      	ldr	r2, [r2, #0]
 800a2d0:	4282      	cmp	r2, r0
 800a2d2:	d108      	bne.n	800a2e6 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a2d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a2d8:	f383 8811 	msr	BASEPRI, r3
 800a2dc:	f3bf 8f6f 	isb	sy
 800a2e0:	f3bf 8f4f 	dsb	sy
 800a2e4:	e7fe      	b.n	800a2e4 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a2e6:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a2e8:	4d11      	ldr	r5, [pc, #68]	@ (800a330 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a2ea:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a2ec:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a2ee:	f04f 0214 	mov.w	r2, #20
 800a2f2:	fb02 5303 	mla	r3, r2, r3, r5
 800a2f6:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2f8:	bfa4      	itt	ge
 800a2fa:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 800a2fe:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a300:	429a      	cmp	r2, r3
 800a302:	d111      	bne.n	800a328 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a304:	1d06      	adds	r6, r0, #4
 800a306:	4630      	mov	r0, r6
 800a308:	f7fe fbc8 	bl	8008a9c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a30c:	4a09      	ldr	r2, [pc, #36]	@ (800a334 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a30e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a310:	6811      	ldr	r1, [r2, #0]
 800a312:	2014      	movs	r0, #20
 800a314:	428b      	cmp	r3, r1
 800a316:	fb00 5003 	mla	r0, r0, r3, r5
 800a31a:	4631      	mov	r1, r6
	}
 800a31c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 800a320:	bf88      	it	hi
 800a322:	6013      	strhi	r3, [r2, #0]
 800a324:	f7fe bb98 	b.w	8008a58 <vListInsertEnd>
	}
 800a328:	bd70      	pop	{r4, r5, r6, pc}
 800a32a:	bf00      	nop
 800a32c:	20015684 	.word	0x20015684
 800a330:	20015224 	.word	0x20015224
 800a334:	200151a8 	.word	0x200151a8

0800a338 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a338:	4b04      	ldr	r3, [pc, #16]	@ (800a34c <pvTaskIncrementMutexHeldCount+0x14>)
 800a33a:	681a      	ldr	r2, [r3, #0]
 800a33c:	b11a      	cbz	r2, 800a346 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a33e:	6819      	ldr	r1, [r3, #0]
 800a340:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800a342:	3201      	adds	r2, #1
 800a344:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800a346:	6818      	ldr	r0, [r3, #0]
	}
 800a348:	4770      	bx	lr
 800a34a:	bf00      	nop
 800a34c:	20015684 	.word	0x20015684

0800a350 <xTaskNotifyWait>:
	{
 800a350:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
 800a354:	4c20      	ldr	r4, [pc, #128]	@ (800a3d8 <xTaskNotifyWait+0x88>)
	{
 800a356:	461e      	mov	r6, r3
 800a358:	4680      	mov	r8, r0
 800a35a:	460f      	mov	r7, r1
 800a35c:	4615      	mov	r5, r2
		taskENTER_CRITICAL();
 800a35e:	f7fe fc19 	bl	8008b94 <vPortEnterCritical>
			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
 800a362:	6823      	ldr	r3, [r4, #0]
 800a364:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 800a368:	2b02      	cmp	r3, #2
 800a36a:	d016      	beq.n	800a39a <xTaskNotifyWait+0x4a>
				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
 800a36c:	6822      	ldr	r2, [r4, #0]
 800a36e:	6d93      	ldr	r3, [r2, #88]	@ 0x58
 800a370:	ea23 0308 	bic.w	r3, r3, r8
 800a374:	6593      	str	r3, [r2, #88]	@ 0x58
				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
 800a376:	6823      	ldr	r3, [r4, #0]
 800a378:	2101      	movs	r1, #1
 800a37a:	f883 105c 	strb.w	r1, [r3, #92]	@ 0x5c
				if( xTicksToWait > ( TickType_t ) 0 )
 800a37e:	b166      	cbz	r6, 800a39a <xTaskNotifyWait+0x4a>
					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a380:	4630      	mov	r0, r6
 800a382:	f7ff facf 	bl	8009924 <prvAddCurrentTaskToDelayedList>
					portYIELD_WITHIN_API();
 800a386:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a38a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a38e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a392:	f3bf 8f4f 	dsb	sy
 800a396:	f3bf 8f6f 	isb	sy
		taskEXIT_CRITICAL();
 800a39a:	f7fe fc1b 	bl	8008bd4 <vPortExitCritical>
		taskENTER_CRITICAL();
 800a39e:	f7fe fbf9 	bl	8008b94 <vPortEnterCritical>
			if( pulNotificationValue != NULL )
 800a3a2:	b115      	cbz	r5, 800a3aa <xTaskNotifyWait+0x5a>
				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
 800a3a4:	6823      	ldr	r3, [r4, #0]
 800a3a6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a3a8:	602b      	str	r3, [r5, #0]
			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
 800a3aa:	6823      	ldr	r3, [r4, #0]
 800a3ac:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 800a3b0:	2b02      	cmp	r3, #2
				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
 800a3b2:	bf01      	itttt	eq
 800a3b4:	6822      	ldreq	r2, [r4, #0]
 800a3b6:	6d93      	ldreq	r3, [r2, #88]	@ 0x58
 800a3b8:	43bb      	biceq	r3, r7
 800a3ba:	6593      	streq	r3, [r2, #88]	@ 0x58
			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800a3bc:	6823      	ldr	r3, [r4, #0]
 800a3be:	f04f 0200 	mov.w	r2, #0
				xReturn = pdTRUE;
 800a3c2:	bf0c      	ite	eq
 800a3c4:	2501      	moveq	r5, #1
				xReturn = pdFALSE;
 800a3c6:	2500      	movne	r5, #0
			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800a3c8:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
		taskEXIT_CRITICAL();
 800a3cc:	f7fe fc02 	bl	8008bd4 <vPortExitCritical>
	}
 800a3d0:	4628      	mov	r0, r5
 800a3d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a3d6:	bf00      	nop
 800a3d8:	20015684 	.word	0x20015684

0800a3dc <xTaskGenericNotify>:
	{
 800a3dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a3de:	460d      	mov	r5, r1
 800a3e0:	4616      	mov	r6, r2
 800a3e2:	461f      	mov	r7, r3
		configASSERT( xTaskToNotify );
 800a3e4:	4604      	mov	r4, r0
 800a3e6:	b940      	cbnz	r0, 800a3fa <xTaskGenericNotify+0x1e>
 800a3e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a3ec:	f383 8811 	msr	BASEPRI, r3
 800a3f0:	f3bf 8f6f 	isb	sy
 800a3f4:	f3bf 8f4f 	dsb	sy
 800a3f8:	e7fe      	b.n	800a3f8 <xTaskGenericNotify+0x1c>
		taskENTER_CRITICAL();
 800a3fa:	f7fe fbcb 	bl	8008b94 <vPortEnterCritical>
			if( pulPreviousNotificationValue != NULL )
 800a3fe:	b10f      	cbz	r7, 800a404 <xTaskGenericNotify+0x28>
				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
 800a400:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800a402:	603b      	str	r3, [r7, #0]
			ucOriginalNotifyState = pxTCB->ucNotifyState;
 800a404:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 800a408:	2202      	movs	r2, #2
			ucOriginalNotifyState = pxTCB->ucNotifyState;
 800a40a:	b2db      	uxtb	r3, r3
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 800a40c:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
			switch( eAction )
 800a410:	2e04      	cmp	r6, #4
 800a412:	d82c      	bhi.n	800a46e <xTaskGenericNotify+0x92>
 800a414:	e8df f006 	tbb	[pc, r6]
 800a418:	29240306 	.word	0x29240306
 800a41c:	27          	.byte	0x27
 800a41d:	00          	.byte	0x00
					pxTCB->ulNotifiedValue |= ulValue;
 800a41e:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 800a420:	432a      	orrs	r2, r5
					( pxTCB->ulNotifiedValue )++;
 800a422:	65a2      	str	r2, [r4, #88]	@ 0x58
			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 800a424:	2b01      	cmp	r3, #1
 800a426:	d13e      	bne.n	800a4a6 <xTaskGenericNotify+0xca>
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a428:	1d25      	adds	r5, r4, #4
 800a42a:	4628      	mov	r0, r5
 800a42c:	f7fe fb36 	bl	8008a9c <uxListRemove>
				prvAddTaskToReadyList( pxTCB );
 800a430:	4a20      	ldr	r2, [pc, #128]	@ (800a4b4 <xTaskGenericNotify+0xd8>)
 800a432:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a434:	6811      	ldr	r1, [r2, #0]
 800a436:	428b      	cmp	r3, r1
 800a438:	bf88      	it	hi
 800a43a:	6013      	strhi	r3, [r2, #0]
 800a43c:	4a1e      	ldr	r2, [pc, #120]	@ (800a4b8 <xTaskGenericNotify+0xdc>)
 800a43e:	2014      	movs	r0, #20
 800a440:	fb00 2003 	mla	r0, r0, r3, r2
 800a444:	4629      	mov	r1, r5
 800a446:	f7fe fb07 	bl	8008a58 <vListInsertEnd>
				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 800a44a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800a44c:	b1db      	cbz	r3, 800a486 <xTaskGenericNotify+0xaa>
 800a44e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a452:	f383 8811 	msr	BASEPRI, r3
 800a456:	f3bf 8f6f 	isb	sy
 800a45a:	f3bf 8f4f 	dsb	sy
 800a45e:	e7fe      	b.n	800a45e <xTaskGenericNotify+0x82>
					( pxTCB->ulNotifiedValue )++;
 800a460:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 800a462:	3201      	adds	r2, #1
 800a464:	e7dd      	b.n	800a422 <xTaskGenericNotify+0x46>
					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
 800a466:	2b02      	cmp	r3, #2
 800a468:	d022      	beq.n	800a4b0 <xTaskGenericNotify+0xd4>
						pxTCB->ulNotifiedValue = ulValue;
 800a46a:	65a5      	str	r5, [r4, #88]	@ 0x58
 800a46c:	e7da      	b.n	800a424 <xTaskGenericNotify+0x48>
					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
 800a46e:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 800a470:	3201      	adds	r2, #1
 800a472:	d0d7      	beq.n	800a424 <xTaskGenericNotify+0x48>
 800a474:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a478:	f383 8811 	msr	BASEPRI, r3
 800a47c:	f3bf 8f6f 	isb	sy
 800a480:	f3bf 8f4f 	dsb	sy
 800a484:	e7fe      	b.n	800a484 <xTaskGenericNotify+0xa8>
				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a486:	4b0d      	ldr	r3, [pc, #52]	@ (800a4bc <xTaskGenericNotify+0xe0>)
 800a488:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800a48a:	681b      	ldr	r3, [r3, #0]
 800a48c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a48e:	429a      	cmp	r2, r3
 800a490:	d909      	bls.n	800a4a6 <xTaskGenericNotify+0xca>
					taskYIELD_IF_USING_PREEMPTION();
 800a492:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a496:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a49a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a49e:	f3bf 8f4f 	dsb	sy
 800a4a2:	f3bf 8f6f 	isb	sy
	{
 800a4a6:	2401      	movs	r4, #1
		taskEXIT_CRITICAL();
 800a4a8:	f7fe fb94 	bl	8008bd4 <vPortExitCritical>
	}
 800a4ac:	4620      	mov	r0, r4
 800a4ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
						xReturn = pdFAIL;
 800a4b0:	2400      	movs	r4, #0
 800a4b2:	e7f9      	b.n	800a4a8 <xTaskGenericNotify+0xcc>
 800a4b4:	200151a8 	.word	0x200151a8
 800a4b8:	20015224 	.word	0x20015224
 800a4bc:	20015684 	.word	0x20015684

0800a4c0 <xTaskGenericNotifyFromISR>:
	{
 800a4c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a4c4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800a4c8:	460d      	mov	r5, r1
 800a4ca:	4616      	mov	r6, r2
 800a4cc:	461f      	mov	r7, r3
		configASSERT( xTaskToNotify );
 800a4ce:	4604      	mov	r4, r0
 800a4d0:	b940      	cbnz	r0, 800a4e4 <xTaskGenericNotifyFromISR+0x24>
 800a4d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a4d6:	f383 8811 	msr	BASEPRI, r3
 800a4da:	f3bf 8f6f 	isb	sy
 800a4de:	f3bf 8f4f 	dsb	sy
 800a4e2:	e7fe      	b.n	800a4e2 <xTaskGenericNotifyFromISR+0x22>
		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a4e4:	f7fe fc68 	bl	8008db8 <vPortValidateInterruptPriority>
	__asm volatile
 800a4e8:	f3ef 8911 	mrs	r9, BASEPRI
 800a4ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a4f0:	f383 8811 	msr	BASEPRI, r3
 800a4f4:	f3bf 8f6f 	isb	sy
 800a4f8:	f3bf 8f4f 	dsb	sy
			if( pulPreviousNotificationValue != NULL )
 800a4fc:	b10f      	cbz	r7, 800a502 <xTaskGenericNotifyFromISR+0x42>
				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
 800a4fe:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800a500:	603b      	str	r3, [r7, #0]
			ucOriginalNotifyState = pxTCB->ucNotifyState;
 800a502:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 800a506:	2202      	movs	r2, #2
			ucOriginalNotifyState = pxTCB->ucNotifyState;
 800a508:	b2db      	uxtb	r3, r3
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 800a50a:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
			switch( eAction )
 800a50e:	2e04      	cmp	r6, #4
 800a510:	d81b      	bhi.n	800a54a <xTaskGenericNotifyFromISR+0x8a>
 800a512:	e8df f006 	tbb	[pc, r6]
 800a516:	0306      	.short	0x0306
 800a518:	1813      	.short	0x1813
 800a51a:	16          	.byte	0x16
 800a51b:	00          	.byte	0x00
					pxTCB->ulNotifiedValue |= ulValue;
 800a51c:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 800a51e:	432a      	orrs	r2, r5
					( pxTCB->ulNotifiedValue )++;
 800a520:	65a2      	str	r2, [r4, #88]	@ 0x58
			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 800a522:	2b01      	cmp	r3, #1
 800a524:	d13f      	bne.n	800a5a6 <xTaskGenericNotifyFromISR+0xe6>
				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 800a526:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800a528:	b1db      	cbz	r3, 800a562 <xTaskGenericNotifyFromISR+0xa2>
	__asm volatile
 800a52a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a52e:	f383 8811 	msr	BASEPRI, r3
 800a532:	f3bf 8f6f 	isb	sy
 800a536:	f3bf 8f4f 	dsb	sy
 800a53a:	e7fe      	b.n	800a53a <xTaskGenericNotifyFromISR+0x7a>
					( pxTCB->ulNotifiedValue )++;
 800a53c:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 800a53e:	3201      	adds	r2, #1
 800a540:	e7ee      	b.n	800a520 <xTaskGenericNotifyFromISR+0x60>
					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
 800a542:	2b02      	cmp	r3, #2
 800a544:	d038      	beq.n	800a5b8 <xTaskGenericNotifyFromISR+0xf8>
						pxTCB->ulNotifiedValue = ulValue;
 800a546:	65a5      	str	r5, [r4, #88]	@ 0x58
 800a548:	e7eb      	b.n	800a522 <xTaskGenericNotifyFromISR+0x62>
					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
 800a54a:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 800a54c:	3201      	adds	r2, #1
 800a54e:	d0e8      	beq.n	800a522 <xTaskGenericNotifyFromISR+0x62>
 800a550:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a554:	f383 8811 	msr	BASEPRI, r3
 800a558:	f3bf 8f6f 	isb	sy
 800a55c:	f3bf 8f4f 	dsb	sy
 800a560:	e7fe      	b.n	800a560 <xTaskGenericNotifyFromISR+0xa0>
				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a562:	4b16      	ldr	r3, [pc, #88]	@ (800a5bc <xTaskGenericNotifyFromISR+0xfc>)
 800a564:	681b      	ldr	r3, [r3, #0]
 800a566:	bb1b      	cbnz	r3, 800a5b0 <xTaskGenericNotifyFromISR+0xf0>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a568:	1d25      	adds	r5, r4, #4
 800a56a:	4628      	mov	r0, r5
 800a56c:	f7fe fa96 	bl	8008a9c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800a570:	4a13      	ldr	r2, [pc, #76]	@ (800a5c0 <xTaskGenericNotifyFromISR+0x100>)
 800a572:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a574:	6811      	ldr	r1, [r2, #0]
 800a576:	428b      	cmp	r3, r1
 800a578:	bf88      	it	hi
 800a57a:	6013      	strhi	r3, [r2, #0]
 800a57c:	4a11      	ldr	r2, [pc, #68]	@ (800a5c4 <xTaskGenericNotifyFromISR+0x104>)
 800a57e:	2014      	movs	r0, #20
 800a580:	4629      	mov	r1, r5
 800a582:	fb00 2003 	mla	r0, r0, r3, r2
					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 800a586:	f7fe fa67 	bl	8008a58 <vListInsertEnd>
				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a58a:	4b0f      	ldr	r3, [pc, #60]	@ (800a5c8 <xTaskGenericNotifyFromISR+0x108>)
 800a58c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800a58e:	681b      	ldr	r3, [r3, #0]
 800a590:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a592:	429a      	cmp	r2, r3
 800a594:	d907      	bls.n	800a5a6 <xTaskGenericNotifyFromISR+0xe6>
					if( pxHigherPriorityTaskWoken != NULL )
 800a596:	2301      	movs	r3, #1
 800a598:	f1b8 0f00 	cmp.w	r8, #0
 800a59c:	d001      	beq.n	800a5a2 <xTaskGenericNotifyFromISR+0xe2>
						*pxHigherPriorityTaskWoken = pdTRUE;
 800a59e:	f8c8 3000 	str.w	r3, [r8]
					xYieldPending = pdTRUE;
 800a5a2:	4a0a      	ldr	r2, [pc, #40]	@ (800a5cc <xTaskGenericNotifyFromISR+0x10c>)
 800a5a4:	6013      	str	r3, [r2, #0]
	{
 800a5a6:	2001      	movs	r0, #1
	__asm volatile
 800a5a8:	f389 8811 	msr	BASEPRI, r9
	}
 800a5ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 800a5b0:	4807      	ldr	r0, [pc, #28]	@ (800a5d0 <xTaskGenericNotifyFromISR+0x110>)
 800a5b2:	f104 0118 	add.w	r1, r4, #24
 800a5b6:	e7e6      	b.n	800a586 <xTaskGenericNotifyFromISR+0xc6>
						xReturn = pdFAIL;
 800a5b8:	2000      	movs	r0, #0
 800a5ba:	e7f5      	b.n	800a5a8 <xTaskGenericNotifyFromISR+0xe8>
 800a5bc:	2001518c 	.word	0x2001518c
 800a5c0:	200151a8 	.word	0x200151a8
 800a5c4:	20015224 	.word	0x20015224
 800a5c8:	20015684 	.word	0x20015684
 800a5cc:	2001519c 	.word	0x2001519c
 800a5d0:	200151e0 	.word	0x200151e0

0800a5d4 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 800a5d4:	4291      	cmp	r1, r2
{
 800a5d6:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a5d8:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a5da:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a5dc:	d80a      	bhi.n	800a5f4 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a5de:	1ad2      	subs	r2, r2, r3
 800a5e0:	6983      	ldr	r3, [r0, #24]
 800a5e2:	429a      	cmp	r2, r3
 800a5e4:	d20d      	bcs.n	800a602 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a5e6:	4b08      	ldr	r3, [pc, #32]	@ (800a608 <prvInsertTimerInActiveList+0x34>)
 800a5e8:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a5ea:	6818      	ldr	r0, [r3, #0]
 800a5ec:	f7fe fa3f 	bl	8008a6e <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a5f0:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 800a5f2:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a5f4:	429a      	cmp	r2, r3
 800a5f6:	d201      	bcs.n	800a5fc <prvInsertTimerInActiveList+0x28>
 800a5f8:	4299      	cmp	r1, r3
 800a5fa:	d202      	bcs.n	800a602 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a5fc:	4b03      	ldr	r3, [pc, #12]	@ (800a60c <prvInsertTimerInActiveList+0x38>)
 800a5fe:	1d01      	adds	r1, r0, #4
 800a600:	e7f3      	b.n	800a5ea <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a602:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a604:	e7f5      	b.n	800a5f2 <prvInsertTimerInActiveList+0x1e>
 800a606:	bf00      	nop
 800a608:	20015784 	.word	0x20015784
 800a60c:	20015788 	.word	0x20015788

0800a610 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a610:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a612:	4c11      	ldr	r4, [pc, #68]	@ (800a658 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a614:	f7fe fabe 	bl	8008b94 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a618:	6825      	ldr	r5, [r4, #0]
 800a61a:	b9bd      	cbnz	r5, 800a64c <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a61c:	4f0f      	ldr	r7, [pc, #60]	@ (800a65c <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a61e:	4e10      	ldr	r6, [pc, #64]	@ (800a660 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a620:	4638      	mov	r0, r7
 800a622:	f7fe fa0b 	bl	8008a3c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a626:	4630      	mov	r0, r6
 800a628:	f7fe fa08 	bl	8008a3c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a62c:	4b0d      	ldr	r3, [pc, #52]	@ (800a664 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a62e:	4a0e      	ldr	r2, [pc, #56]	@ (800a668 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a630:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a632:	4b0e      	ldr	r3, [pc, #56]	@ (800a66c <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a634:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a636:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a638:	200a      	movs	r0, #10
 800a63a:	4b0d      	ldr	r3, [pc, #52]	@ (800a670 <prvCheckForValidListAndQueue+0x60>)
 800a63c:	9500      	str	r5, [sp, #0]
 800a63e:	f7fe fcb2 	bl	8008fa6 <xQueueGenericCreateStatic>
 800a642:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a644:	b110      	cbz	r0, 800a64c <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a646:	490b      	ldr	r1, [pc, #44]	@ (800a674 <prvCheckForValidListAndQueue+0x64>)
 800a648:	f7ff f88a 	bl	8009760 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a64c:	b003      	add	sp, #12
 800a64e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a652:	f7fe babf 	b.w	8008bd4 <vPortExitCritical>
 800a656:	bf00      	nop
 800a658:	20015780 	.word	0x20015780
 800a65c:	200157a0 	.word	0x200157a0
 800a660:	2001578c 	.word	0x2001578c
 800a664:	20015788 	.word	0x20015788
 800a668:	200156d8 	.word	0x200156d8
 800a66c:	20015784 	.word	0x20015784
 800a670:	20015688 	.word	0x20015688
 800a674:	0802671a 	.word	0x0802671a

0800a678 <xTimerCreateTimerTask>:
{
 800a678:	b510      	push	{r4, lr}
 800a67a:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a67c:	f7ff ffc8 	bl	800a610 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a680:	4b12      	ldr	r3, [pc, #72]	@ (800a6cc <xTimerCreateTimerTask+0x54>)
 800a682:	681b      	ldr	r3, [r3, #0]
 800a684:	b1b3      	cbz	r3, 800a6b4 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a686:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a688:	aa07      	add	r2, sp, #28
 800a68a:	a906      	add	r1, sp, #24
 800a68c:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a68e:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a692:	f7fe f8cb 	bl	800882c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a696:	9b05      	ldr	r3, [sp, #20]
 800a698:	9302      	str	r3, [sp, #8]
 800a69a:	9b06      	ldr	r3, [sp, #24]
 800a69c:	9301      	str	r3, [sp, #4]
 800a69e:	2302      	movs	r3, #2
 800a6a0:	9300      	str	r3, [sp, #0]
 800a6a2:	9a07      	ldr	r2, [sp, #28]
 800a6a4:	490a      	ldr	r1, [pc, #40]	@ (800a6d0 <xTimerCreateTimerTask+0x58>)
 800a6a6:	480b      	ldr	r0, [pc, #44]	@ (800a6d4 <xTimerCreateTimerTask+0x5c>)
 800a6a8:	4623      	mov	r3, r4
 800a6aa:	f7ff fa1e 	bl	8009aea <xTaskCreateStatic>
 800a6ae:	4b0a      	ldr	r3, [pc, #40]	@ (800a6d8 <xTimerCreateTimerTask+0x60>)
 800a6b0:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a6b2:	b940      	cbnz	r0, 800a6c6 <xTimerCreateTimerTask+0x4e>
	__asm volatile
 800a6b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a6b8:	f383 8811 	msr	BASEPRI, r3
 800a6bc:	f3bf 8f6f 	isb	sy
 800a6c0:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a6c4:	e7fe      	b.n	800a6c4 <xTimerCreateTimerTask+0x4c>
}
 800a6c6:	2001      	movs	r0, #1
 800a6c8:	b008      	add	sp, #32
 800a6ca:	bd10      	pop	{r4, pc}
 800a6cc:	20015780 	.word	0x20015780
 800a6d0:	0802671f 	.word	0x0802671f
 800a6d4:	0800a7d9 	.word	0x0800a7d9
 800a6d8:	2001577c 	.word	0x2001577c

0800a6dc <xTimerGenericCommand>:
{
 800a6dc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a6de:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a6e0:	4604      	mov	r4, r0
{
 800a6e2:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a6e4:	b940      	cbnz	r0, 800a6f8 <xTimerGenericCommand+0x1c>
 800a6e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a6ea:	f383 8811 	msr	BASEPRI, r3
 800a6ee:	f3bf 8f6f 	isb	sy
 800a6f2:	f3bf 8f4f 	dsb	sy
 800a6f6:	e7fe      	b.n	800a6f6 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a6f8:	4d0d      	ldr	r5, [pc, #52]	@ (800a730 <xTimerGenericCommand+0x54>)
 800a6fa:	6828      	ldr	r0, [r5, #0]
 800a6fc:	b180      	cbz	r0, 800a720 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a6fe:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a700:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a704:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a706:	dc0d      	bgt.n	800a724 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a708:	f7ff fd38 	bl	800a17c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a70c:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a70e:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a710:	bf08      	it	eq
 800a712:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a714:	6828      	ldr	r0, [r5, #0]
 800a716:	bf18      	it	ne
 800a718:	461a      	movne	r2, r3
 800a71a:	4669      	mov	r1, sp
 800a71c:	f7fe fcf8 	bl	8009110 <xQueueGenericSend>
}
 800a720:	b004      	add	sp, #16
 800a722:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a724:	2300      	movs	r3, #0
 800a726:	4669      	mov	r1, sp
 800a728:	f7fe fda4 	bl	8009274 <xQueueGenericSendFromISR>
 800a72c:	e7f8      	b.n	800a720 <xTimerGenericCommand+0x44>
 800a72e:	bf00      	nop
 800a730:	20015780 	.word	0x20015780

0800a734 <prvSampleTimeNow>:
{
 800a734:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a738:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 800a7d4 <prvSampleTimeNow+0xa0>
{
 800a73c:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a73e:	f7ff fae1 	bl	8009d04 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a742:	f8d8 3000 	ldr.w	r3, [r8]
 800a746:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800a748:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a74a:	d909      	bls.n	800a760 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a74c:	4f1f      	ldr	r7, [pc, #124]	@ (800a7cc <prvSampleTimeNow+0x98>)
 800a74e:	683b      	ldr	r3, [r7, #0]
 800a750:	681a      	ldr	r2, [r3, #0]
 800a752:	b96a      	cbnz	r2, 800a770 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a754:	4a1e      	ldr	r2, [pc, #120]	@ (800a7d0 <prvSampleTimeNow+0x9c>)
 800a756:	6811      	ldr	r1, [r2, #0]
 800a758:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800a75a:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a75c:	2301      	movs	r3, #1
 800a75e:	e000      	b.n	800a762 <prvSampleTimeNow+0x2e>
 800a760:	2300      	movs	r3, #0
}
 800a762:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800a764:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a766:	f8c8 5000 	str.w	r5, [r8]
}
 800a76a:	b002      	add	sp, #8
 800a76c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a770:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a772:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a774:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a778:	f104 0a04 	add.w	sl, r4, #4
 800a77c:	4650      	mov	r0, sl
 800a77e:	f7fe f98d 	bl	8008a9c <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a782:	6a23      	ldr	r3, [r4, #32]
 800a784:	4620      	mov	r0, r4
 800a786:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a788:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a78c:	075b      	lsls	r3, r3, #29
 800a78e:	d5de      	bpl.n	800a74e <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a790:	69a3      	ldr	r3, [r4, #24]
 800a792:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 800a794:	4599      	cmp	r9, r3
 800a796:	d206      	bcs.n	800a7a6 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a798:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a79a:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a79c:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a79e:	4651      	mov	r1, sl
 800a7a0:	f7fe f965 	bl	8008a6e <vListInsert>
 800a7a4:	e7d3      	b.n	800a74e <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a7a6:	2300      	movs	r3, #0
 800a7a8:	9300      	str	r3, [sp, #0]
 800a7aa:	464a      	mov	r2, r9
 800a7ac:	4619      	mov	r1, r3
 800a7ae:	4620      	mov	r0, r4
 800a7b0:	f7ff ff94 	bl	800a6dc <xTimerGenericCommand>
				configASSERT( xResult );
 800a7b4:	2800      	cmp	r0, #0
 800a7b6:	d1ca      	bne.n	800a74e <prvSampleTimeNow+0x1a>
 800a7b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a7bc:	f383 8811 	msr	BASEPRI, r3
 800a7c0:	f3bf 8f6f 	isb	sy
 800a7c4:	f3bf 8f4f 	dsb	sy
 800a7c8:	e7fe      	b.n	800a7c8 <prvSampleTimeNow+0x94>
 800a7ca:	bf00      	nop
 800a7cc:	20015788 	.word	0x20015788
 800a7d0:	20015784 	.word	0x20015784
 800a7d4:	20015778 	.word	0x20015778

0800a7d8 <prvTimerTask>:
{
 800a7d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a7dc:	4d6e      	ldr	r5, [pc, #440]	@ (800a998 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a7de:	4e6f      	ldr	r6, [pc, #444]	@ (800a99c <prvTimerTask+0x1c4>)
{
 800a7e0:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a7e2:	682b      	ldr	r3, [r5, #0]
 800a7e4:	f8d3 8000 	ldr.w	r8, [r3]
 800a7e8:	f1b8 0f00 	cmp.w	r8, #0
 800a7ec:	d035      	beq.n	800a85a <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a7ee:	68db      	ldr	r3, [r3, #12]
 800a7f0:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a7f4:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a7f6:	f7ff fa7d 	bl	8009cf4 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a7fa:	a804      	add	r0, sp, #16
 800a7fc:	f7ff ff9a 	bl	800a734 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a800:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a802:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a804:	2b00      	cmp	r3, #0
 800a806:	d169      	bne.n	800a8dc <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a808:	2c00      	cmp	r4, #0
 800a80a:	d14c      	bne.n	800a8a6 <prvTimerTask+0xce>
 800a80c:	4540      	cmp	r0, r8
 800a80e:	d350      	bcc.n	800a8b2 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a810:	f7ff fb1c 	bl	8009e4c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a814:	682b      	ldr	r3, [r5, #0]
 800a816:	68db      	ldr	r3, [r3, #12]
 800a818:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a81a:	1d38      	adds	r0, r7, #4
 800a81c:	f7fe f93e 	bl	8008a9c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a820:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800a824:	0758      	lsls	r0, r3, #29
 800a826:	d51a      	bpl.n	800a85e <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a828:	69b9      	ldr	r1, [r7, #24]
 800a82a:	4643      	mov	r3, r8
 800a82c:	464a      	mov	r2, r9
 800a82e:	4441      	add	r1, r8
 800a830:	4638      	mov	r0, r7
 800a832:	f7ff fecf 	bl	800a5d4 <prvInsertTimerInActiveList>
 800a836:	b1b0      	cbz	r0, 800a866 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a838:	9400      	str	r4, [sp, #0]
 800a83a:	4623      	mov	r3, r4
 800a83c:	4642      	mov	r2, r8
 800a83e:	4621      	mov	r1, r4
 800a840:	4638      	mov	r0, r7
 800a842:	f7ff ff4b 	bl	800a6dc <xTimerGenericCommand>
			configASSERT( xResult );
 800a846:	b970      	cbnz	r0, 800a866 <prvTimerTask+0x8e>
 800a848:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a84c:	f383 8811 	msr	BASEPRI, r3
 800a850:	f3bf 8f6f 	isb	sy
 800a854:	f3bf 8f4f 	dsb	sy
 800a858:	e7fe      	b.n	800a858 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a85a:	2401      	movs	r4, #1
 800a85c:	e7cb      	b.n	800a7f6 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a85e:	f023 0301 	bic.w	r3, r3, #1
 800a862:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a866:	6a3b      	ldr	r3, [r7, #32]
 800a868:	4638      	mov	r0, r7
 800a86a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a86c:	6830      	ldr	r0, [r6, #0]
 800a86e:	2200      	movs	r2, #0
 800a870:	a904      	add	r1, sp, #16
 800a872:	f7fe fdad 	bl	80093d0 <xQueueReceive>
 800a876:	2800      	cmp	r0, #0
 800a878:	d0b3      	beq.n	800a7e2 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a87a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a87c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a87e:	2b00      	cmp	r3, #0
 800a880:	db2f      	blt.n	800a8e2 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a882:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a884:	6963      	ldr	r3, [r4, #20]
 800a886:	2b00      	cmp	r3, #0
 800a888:	d132      	bne.n	800a8f0 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a88a:	a803      	add	r0, sp, #12
 800a88c:	f7ff ff52 	bl	800a734 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a890:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a892:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a894:	2b09      	cmp	r3, #9
 800a896:	d8e9      	bhi.n	800a86c <prvTimerTask+0x94>
 800a898:	e8df f003 	tbb	[pc, r3]
 800a89c:	572e2e2e 	.word	0x572e2e2e
 800a8a0:	2e2e765e 	.word	0x2e2e765e
 800a8a4:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a8a6:	4b3e      	ldr	r3, [pc, #248]	@ (800a9a0 <prvTimerTask+0x1c8>)
 800a8a8:	681b      	ldr	r3, [r3, #0]
 800a8aa:	681c      	ldr	r4, [r3, #0]
 800a8ac:	fab4 f484 	clz	r4, r4
 800a8b0:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a8b2:	6830      	ldr	r0, [r6, #0]
 800a8b4:	4622      	mov	r2, r4
 800a8b6:	eba8 0109 	sub.w	r1, r8, r9
 800a8ba:	f7fe ff90 	bl	80097de <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a8be:	f7ff fac5 	bl	8009e4c <xTaskResumeAll>
 800a8c2:	2800      	cmp	r0, #0
 800a8c4:	d1d2      	bne.n	800a86c <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a8c6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a8ca:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a8ce:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a8d2:	f3bf 8f4f 	dsb	sy
 800a8d6:	f3bf 8f6f 	isb	sy
 800a8da:	e7c7      	b.n	800a86c <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a8dc:	f7ff fab6 	bl	8009e4c <xTaskResumeAll>
}
 800a8e0:	e7c4      	b.n	800a86c <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a8e2:	9b05      	ldr	r3, [sp, #20]
 800a8e4:	9907      	ldr	r1, [sp, #28]
 800a8e6:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a8e8:	9b04      	ldr	r3, [sp, #16]
 800a8ea:	2b00      	cmp	r3, #0
 800a8ec:	dbbe      	blt.n	800a86c <prvTimerTask+0x94>
 800a8ee:	e7c8      	b.n	800a882 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a8f0:	1d20      	adds	r0, r4, #4
 800a8f2:	f7fe f8d3 	bl	8008a9c <uxListRemove>
 800a8f6:	e7c8      	b.n	800a88a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a8f8:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a8fc:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a8fe:	f043 0301 	orr.w	r3, r3, #1
 800a902:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a906:	9b05      	ldr	r3, [sp, #20]
 800a908:	4620      	mov	r0, r4
 800a90a:	4419      	add	r1, r3
 800a90c:	f7ff fe62 	bl	800a5d4 <prvInsertTimerInActiveList>
 800a910:	2800      	cmp	r0, #0
 800a912:	d0ab      	beq.n	800a86c <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a914:	6a23      	ldr	r3, [r4, #32]
 800a916:	4620      	mov	r0, r4
 800a918:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a91a:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a91e:	0759      	lsls	r1, r3, #29
 800a920:	d5a4      	bpl.n	800a86c <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a922:	69a2      	ldr	r2, [r4, #24]
 800a924:	9905      	ldr	r1, [sp, #20]
 800a926:	2300      	movs	r3, #0
 800a928:	440a      	add	r2, r1
 800a92a:	9300      	str	r3, [sp, #0]
 800a92c:	4619      	mov	r1, r3
 800a92e:	4620      	mov	r0, r4
 800a930:	f7ff fed4 	bl	800a6dc <xTimerGenericCommand>
							configASSERT( xResult );
 800a934:	2800      	cmp	r0, #0
 800a936:	d199      	bne.n	800a86c <prvTimerTask+0x94>
 800a938:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a93c:	f383 8811 	msr	BASEPRI, r3
 800a940:	f3bf 8f6f 	isb	sy
 800a944:	f3bf 8f4f 	dsb	sy
 800a948:	e7fe      	b.n	800a948 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a94a:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a94e:	f023 0301 	bic.w	r3, r3, #1
 800a952:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a956:	e789      	b.n	800a86c <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a958:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a95c:	f043 0301 	orr.w	r3, r3, #1
 800a960:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a964:	9905      	ldr	r1, [sp, #20]
 800a966:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a968:	b941      	cbnz	r1, 800a97c <prvTimerTask+0x1a4>
 800a96a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a96e:	f383 8811 	msr	BASEPRI, r3
 800a972:	f3bf 8f6f 	isb	sy
 800a976:	f3bf 8f4f 	dsb	sy
 800a97a:	e7fe      	b.n	800a97a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a97c:	4603      	mov	r3, r0
 800a97e:	4401      	add	r1, r0
 800a980:	4620      	mov	r0, r4
 800a982:	f7ff fe27 	bl	800a5d4 <prvInsertTimerInActiveList>
					break;
 800a986:	e771      	b.n	800a86c <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a988:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a98c:	079a      	lsls	r2, r3, #30
 800a98e:	d4de      	bmi.n	800a94e <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a990:	4620      	mov	r0, r4
 800a992:	f7fe f815 	bl	80089c0 <vPortFree>
 800a996:	e769      	b.n	800a86c <prvTimerTask+0x94>
 800a998:	20015788 	.word	0x20015788
 800a99c:	20015780 	.word	0x20015780
 800a9a0:	20015784 	.word	0x20015784

0800a9a4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a9a4:	8880      	ldrh	r0, [r0, #4]
 800a9a6:	4770      	bx	lr

0800a9a8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a9a8:	b570      	push	{r4, r5, r6, lr}
 800a9aa:	6803      	ldr	r3, [r0, #0]
 800a9ac:	4605      	mov	r5, r0
 800a9ae:	460c      	mov	r4, r1
 800a9b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a9b2:	2100      	movs	r1, #0
 800a9b4:	4798      	blx	r3
 800a9b6:	682b      	ldr	r3, [r5, #0]
 800a9b8:	4606      	mov	r6, r0
 800a9ba:	6a1b      	ldr	r3, [r3, #32]
 800a9bc:	4628      	mov	r0, r5
 800a9be:	4798      	blx	r3
 800a9c0:	1ba4      	subs	r4, r4, r6
 800a9c2:	b2a4      	uxth	r4, r4
 800a9c4:	fbb4 f0f0 	udiv	r0, r4, r0
 800a9c8:	bd70      	pop	{r4, r5, r6, pc}

0800a9ca <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a9ca:	2300      	movs	r3, #0
 800a9cc:	8083      	strh	r3, [r0, #4]
 800a9ce:	4770      	bx	lr

0800a9d0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a9d0:	b510      	push	{r4, lr}
 800a9d2:	6803      	ldr	r3, [r0, #0]
 800a9d4:	8881      	ldrh	r1, [r0, #4]
 800a9d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a9d8:	4604      	mov	r4, r0
 800a9da:	4798      	blx	r3
 800a9dc:	88a3      	ldrh	r3, [r4, #4]
 800a9de:	3301      	adds	r3, #1
 800a9e0:	80a3      	strh	r3, [r4, #4]
 800a9e2:	bd10      	pop	{r4, pc}

0800a9e4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a9e4:	6803      	ldr	r3, [r0, #0]
 800a9e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a9e8:	4718      	bx	r3

0800a9ea <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a9ea:	4770      	bx	lr

0800a9ec <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a9ec:	4a02      	ldr	r2, [pc, #8]	@ (800a9f8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a9ee:	6002      	str	r2, [r0, #0]
 800a9f0:	2200      	movs	r2, #0
 800a9f2:	8082      	strh	r2, [r0, #4]
 800a9f4:	4770      	bx	lr
 800a9f6:	bf00      	nop
 800a9f8:	0802757c 	.word	0x0802757c

0800a9fc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a9fc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a9fe:	2000      	movs	r0, #0
 800aa00:	b12b      	cbz	r3, 800aa0e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aa02:	b920      	cbnz	r0, 800aa0e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aa04:	1a5a      	subs	r2, r3, r1
 800aa06:	4250      	negs	r0, r2
 800aa08:	4150      	adcs	r0, r2
 800aa0a:	699b      	ldr	r3, [r3, #24]
 800aa0c:	e7f8      	b.n	800aa00 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800aa0e:	4770      	bx	lr

0800aa10 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800aa10:	2300      	movs	r3, #0
 800aa12:	6148      	str	r0, [r1, #20]
 800aa14:	618b      	str	r3, [r1, #24]
 800aa16:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aa18:	b913      	cbnz	r3, 800aa20 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800aa1a:	6281      	str	r1, [r0, #40]	@ 0x28
 800aa1c:	4770      	bx	lr
 800aa1e:	4613      	mov	r3, r2
 800aa20:	699a      	ldr	r2, [r3, #24]
 800aa22:	2a00      	cmp	r2, #0
 800aa24:	d1fb      	bne.n	800aa1e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800aa26:	6199      	str	r1, [r3, #24]
 800aa28:	4770      	bx	lr

0800aa2a <_ZN8touchgfx9Container9removeAllEv>:
 800aa2a:	2200      	movs	r2, #0
 800aa2c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aa2e:	b123      	cbz	r3, 800aa3a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800aa30:	6999      	ldr	r1, [r3, #24]
 800aa32:	6281      	str	r1, [r0, #40]	@ 0x28
 800aa34:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800aa38:	e7f8      	b.n	800aa2c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800aa3a:	4770      	bx	lr

0800aa3c <_ZN8touchgfx9Container6unlinkEv>:
 800aa3c:	2300      	movs	r3, #0
 800aa3e:	6283      	str	r3, [r0, #40]	@ 0x28
 800aa40:	4770      	bx	lr

0800aa42 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800aa42:	2200      	movs	r2, #0
 800aa44:	8002      	strh	r2, [r0, #0]
 800aa46:	8042      	strh	r2, [r0, #2]
 800aa48:	8082      	strh	r2, [r0, #4]
 800aa4a:	80c2      	strh	r2, [r0, #6]
 800aa4c:	4770      	bx	lr

0800aa4e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800aa4e:	b570      	push	{r4, r5, r6, lr}
 800aa50:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aa52:	460d      	mov	r5, r1
 800aa54:	4616      	mov	r6, r2
 800aa56:	b13c      	cbz	r4, 800aa68 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800aa58:	6823      	ldr	r3, [r4, #0]
 800aa5a:	4620      	mov	r0, r4
 800aa5c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800aa5e:	4632      	mov	r2, r6
 800aa60:	4629      	mov	r1, r5
 800aa62:	4798      	blx	r3
 800aa64:	69a4      	ldr	r4, [r4, #24]
 800aa66:	e7f6      	b.n	800aa56 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800aa68:	bd70      	pop	{r4, r5, r6, pc}

0800aa6a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800aa6a:	b538      	push	{r3, r4, r5, lr}
 800aa6c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aa6e:	460d      	mov	r5, r1
 800aa70:	b134      	cbz	r4, 800aa80 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800aa72:	682b      	ldr	r3, [r5, #0]
 800aa74:	4621      	mov	r1, r4
 800aa76:	689b      	ldr	r3, [r3, #8]
 800aa78:	4628      	mov	r0, r5
 800aa7a:	4798      	blx	r3
 800aa7c:	69a4      	ldr	r4, [r4, #24]
 800aa7e:	e7f7      	b.n	800aa70 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800aa80:	bd38      	pop	{r3, r4, r5, pc}

0800aa82 <_ZN8touchgfx9ContainerD1Ev>:
 800aa82:	4770      	bx	lr

0800aa84 <_ZN8touchgfx9ContainerD0Ev>:
 800aa84:	b510      	push	{r4, lr}
 800aa86:	212c      	movs	r1, #44	@ 0x2c
 800aa88:	4604      	mov	r4, r0
 800aa8a:	f018 fe67 	bl	802375c <_ZdlPvj>
 800aa8e:	4620      	mov	r0, r4
 800aa90:	bd10      	pop	{r4, pc}

0800aa92 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800aa92:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aa94:	b19b      	cbz	r3, 800aabe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aa96:	428b      	cmp	r3, r1
 800aa98:	d109      	bne.n	800aaae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800aa9a:	699a      	ldr	r2, [r3, #24]
 800aa9c:	2100      	movs	r1, #0
 800aa9e:	6159      	str	r1, [r3, #20]
 800aaa0:	6282      	str	r2, [r0, #40]	@ 0x28
 800aaa2:	b902      	cbnz	r2, 800aaa6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800aaa4:	4770      	bx	lr
 800aaa6:	6199      	str	r1, [r3, #24]
 800aaa8:	4770      	bx	lr
 800aaaa:	4613      	mov	r3, r2
 800aaac:	b13a      	cbz	r2, 800aabe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aaae:	699a      	ldr	r2, [r3, #24]
 800aab0:	428a      	cmp	r2, r1
 800aab2:	d1fa      	bne.n	800aaaa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800aab4:	698a      	ldr	r2, [r1, #24]
 800aab6:	619a      	str	r2, [r3, #24]
 800aab8:	2300      	movs	r3, #0
 800aaba:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800aabe:	4770      	bx	lr

0800aac0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800aac0:	b410      	push	{r4}
 800aac2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aac4:	4604      	mov	r4, r0
 800aac6:	b92b      	cbnz	r3, 800aad4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800aac8:	6803      	ldr	r3, [r0, #0]
 800aaca:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aace:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800aad0:	4611      	mov	r1, r2
 800aad2:	4718      	bx	r3
 800aad4:	b941      	cbnz	r1, 800aae8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800aad6:	6193      	str	r3, [r2, #24]
 800aad8:	6282      	str	r2, [r0, #40]	@ 0x28
 800aada:	6154      	str	r4, [r2, #20]
 800aadc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aae0:	4770      	bx	lr
 800aae2:	4603      	mov	r3, r0
 800aae4:	2800      	cmp	r0, #0
 800aae6:	d0f9      	beq.n	800aadc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800aae8:	4299      	cmp	r1, r3
 800aaea:	6998      	ldr	r0, [r3, #24]
 800aaec:	d1f9      	bne.n	800aae2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800aaee:	6190      	str	r0, [r2, #24]
 800aaf0:	618a      	str	r2, [r1, #24]
 800aaf2:	e7f2      	b.n	800aada <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800aaf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800aaf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aaf8:	461f      	mov	r7, r3
 800aafa:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800aafe:	460d      	mov	r5, r1
 800ab00:	4616      	mov	r6, r2
 800ab02:	b103      	cbz	r3, 800ab06 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800ab04:	6038      	str	r0, [r7, #0]
 800ab06:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ab08:	b314      	cbz	r4, 800ab50 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800ab0a:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800ab0e:	b1eb      	cbz	r3, 800ab4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab10:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ab14:	428d      	cmp	r5, r1
 800ab16:	db19      	blt.n	800ab4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab18:	8923      	ldrh	r3, [r4, #8]
 800ab1a:	b289      	uxth	r1, r1
 800ab1c:	440b      	add	r3, r1
 800ab1e:	b21b      	sxth	r3, r3
 800ab20:	429d      	cmp	r5, r3
 800ab22:	da13      	bge.n	800ab4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab24:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ab28:	4296      	cmp	r6, r2
 800ab2a:	db0f      	blt.n	800ab4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab2c:	8963      	ldrh	r3, [r4, #10]
 800ab2e:	b292      	uxth	r2, r2
 800ab30:	4413      	add	r3, r2
 800ab32:	b21b      	sxth	r3, r3
 800ab34:	429e      	cmp	r6, r3
 800ab36:	da09      	bge.n	800ab4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab38:	6823      	ldr	r3, [r4, #0]
 800ab3a:	1ab2      	subs	r2, r6, r2
 800ab3c:	1a69      	subs	r1, r5, r1
 800ab3e:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800ab42:	b212      	sxth	r2, r2
 800ab44:	463b      	mov	r3, r7
 800ab46:	b209      	sxth	r1, r1
 800ab48:	4620      	mov	r0, r4
 800ab4a:	47c0      	blx	r8
 800ab4c:	69a4      	ldr	r4, [r4, #24]
 800ab4e:	e7db      	b.n	800ab08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800ab50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ab54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800ab54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab58:	4c6e      	ldr	r4, [pc, #440]	@ (800ad14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800ab5a:	b0a1      	sub	sp, #132	@ 0x84
 800ab5c:	6824      	ldr	r4, [r4, #0]
 800ab5e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800ab60:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800ab64:	9303      	str	r3, [sp, #12]
 800ab66:	2400      	movs	r4, #0
 800ab68:	802c      	strh	r4, [r5, #0]
 800ab6a:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800ab6c:	802c      	strh	r4, [r5, #0]
 800ab6e:	601c      	str	r4, [r3, #0]
 800ab70:	4606      	mov	r6, r0
 800ab72:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800ab76:	f7ff ffbd 	bl	800aaf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ab7a:	f1b9 0f03 	cmp.w	r9, #3
 800ab7e:	f340 80c2 	ble.w	800ad06 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800ab82:	4631      	mov	r1, r6
 800ab84:	a80c      	add	r0, sp, #48	@ 0x30
 800ab86:	f007 f9fb 	bl	8011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ab8a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800ab8e:	9306      	str	r3, [sp, #24]
 800ab90:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800ab94:	9307      	str	r3, [sp, #28]
 800ab96:	9b03      	ldr	r3, [sp, #12]
 800ab98:	f8d3 a000 	ldr.w	sl, [r3]
 800ab9c:	f1ba 0f00 	cmp.w	sl, #0
 800aba0:	f000 80b4 	beq.w	800ad0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800aba4:	4651      	mov	r1, sl
 800aba6:	a810      	add	r0, sp, #64	@ 0x40
 800aba8:	f007 f9ea 	bl	8011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800abac:	9b01      	ldr	r3, [sp, #4]
 800abae:	9a06      	ldr	r2, [sp, #24]
 800abb0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800abb4:	189d      	adds	r5, r3, r2
 800abb6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800abba:	9a07      	ldr	r2, [sp, #28]
 800abbc:	2002      	movs	r0, #2
 800abbe:	fb91 f1f0 	sdiv	r1, r1, r0
 800abc2:	4419      	add	r1, r3
 800abc4:	1a6d      	subs	r5, r5, r1
 800abc6:	9b02      	ldr	r3, [sp, #8]
 800abc8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800abcc:	4413      	add	r3, r2
 800abce:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800abd2:	fb92 f2f0 	sdiv	r2, r2, r0
 800abd6:	440a      	add	r2, r1
 800abd8:	1a9b      	subs	r3, r3, r2
 800abda:	435b      	muls	r3, r3
 800abdc:	fb05 3505 	mla	r5, r5, r5, r3
 800abe0:	4f4d      	ldr	r7, [pc, #308]	@ (800ad18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800abe2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800abe4:	ac10      	add	r4, sp, #64	@ 0x40
 800abe6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800abe8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800abea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800abec:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800abee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800abf0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800abf4:	f1b9 0f0c 	cmp.w	r9, #12
 800abf8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800abfc:	f04f 0303 	mov.w	r3, #3
 800ac00:	bfc8      	it	gt
 800ac02:	4698      	movgt	r8, r3
 800ac04:	f8cd 9000 	str.w	r9, [sp]
 800ac08:	f04f 0400 	mov.w	r4, #0
 800ac0c:	bfdc      	itt	le
 800ac0e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ac12:	fb92 f8f3 	sdivle	r8, r2, r3
 800ac16:	1c63      	adds	r3, r4, #1
 800ac18:	aa10      	add	r2, sp, #64	@ 0x40
 800ac1a:	f004 0401 	and.w	r4, r4, #1
 800ac1e:	9308      	str	r3, [sp, #32]
 800ac20:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ac24:	9b00      	ldr	r3, [sp, #0]
 800ac26:	fb93 f3f8 	sdiv	r3, r3, r8
 800ac2a:	b29b      	uxth	r3, r3
 800ac2c:	3404      	adds	r4, #4
 800ac2e:	f04f 0b00 	mov.w	fp, #0
 800ac32:	9304      	str	r3, [sp, #16]
 800ac34:	9a04      	ldr	r2, [sp, #16]
 800ac36:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ac3a:	fb13 f302 	smulbb	r3, r3, r2
 800ac3e:	9a01      	ldr	r2, [sp, #4]
 800ac40:	b29b      	uxth	r3, r3
 800ac42:	1899      	adds	r1, r3, r2
 800ac44:	9305      	str	r3, [sp, #20]
 800ac46:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ac4a:	b209      	sxth	r1, r1
 800ac4c:	4299      	cmp	r1, r3
 800ac4e:	db4d      	blt.n	800acec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac50:	8932      	ldrh	r2, [r6, #8]
 800ac52:	4413      	add	r3, r2
 800ac54:	b21b      	sxth	r3, r3
 800ac56:	4299      	cmp	r1, r3
 800ac58:	da48      	bge.n	800acec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac5a:	9b04      	ldr	r3, [sp, #16]
 800ac5c:	6827      	ldr	r7, [r4, #0]
 800ac5e:	fb17 f703 	smulbb	r7, r7, r3
 800ac62:	9b02      	ldr	r3, [sp, #8]
 800ac64:	b2bf      	uxth	r7, r7
 800ac66:	18fa      	adds	r2, r7, r3
 800ac68:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ac6c:	b212      	sxth	r2, r2
 800ac6e:	429a      	cmp	r2, r3
 800ac70:	db3c      	blt.n	800acec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac72:	8970      	ldrh	r0, [r6, #10]
 800ac74:	4403      	add	r3, r0
 800ac76:	b21b      	sxth	r3, r3
 800ac78:	429a      	cmp	r2, r3
 800ac7a:	da37      	bge.n	800acec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac7c:	2300      	movs	r3, #0
 800ac7e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800ac80:	4630      	mov	r0, r6
 800ac82:	ab0b      	add	r3, sp, #44	@ 0x2c
 800ac84:	f7ff ff36 	bl	800aaf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ac88:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ac8a:	b37a      	cbz	r2, 800acec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac8c:	4552      	cmp	r2, sl
 800ac8e:	d02d      	beq.n	800acec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac90:	4611      	mov	r1, r2
 800ac92:	a80e      	add	r0, sp, #56	@ 0x38
 800ac94:	9209      	str	r2, [sp, #36]	@ 0x24
 800ac96:	f007 f973 	bl	8011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ac9a:	9a06      	ldr	r2, [sp, #24]
 800ac9c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800aca0:	9b01      	ldr	r3, [sp, #4]
 800aca2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800aca6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800acaa:	4413      	add	r3, r2
 800acac:	f04f 0e02 	mov.w	lr, #2
 800acb0:	fb91 f1fe 	sdiv	r1, r1, lr
 800acb4:	4401      	add	r1, r0
 800acb6:	1a58      	subs	r0, r3, r1
 800acb8:	9a07      	ldr	r2, [sp, #28]
 800acba:	9b02      	ldr	r3, [sp, #8]
 800acbc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800acc0:	fb9c fcfe 	sdiv	ip, ip, lr
 800acc4:	4413      	add	r3, r2
 800acc6:	448c      	add	ip, r1
 800acc8:	eba3 030c 	sub.w	r3, r3, ip
 800accc:	435b      	muls	r3, r3
 800acce:	fb00 3300 	mla	r3, r0, r0, r3
 800acd2:	42ab      	cmp	r3, r5
 800acd4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800acd6:	d208      	bcs.n	800acea <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800acd8:	9803      	ldr	r0, [sp, #12]
 800acda:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800acdc:	6001      	str	r1, [r0, #0]
 800acde:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800ace0:	9805      	ldr	r0, [sp, #20]
 800ace2:	8008      	strh	r0, [r1, #0]
 800ace4:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800ace6:	461d      	mov	r5, r3
 800ace8:	800f      	strh	r7, [r1, #0]
 800acea:	4692      	mov	sl, r2
 800acec:	f10b 0b01 	add.w	fp, fp, #1
 800acf0:	f1bb 0f04 	cmp.w	fp, #4
 800acf4:	f104 0408 	add.w	r4, r4, #8
 800acf8:	d19c      	bne.n	800ac34 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800acfa:	9b00      	ldr	r3, [sp, #0]
 800acfc:	9c08      	ldr	r4, [sp, #32]
 800acfe:	444b      	add	r3, r9
 800ad00:	4544      	cmp	r4, r8
 800ad02:	9300      	str	r3, [sp, #0]
 800ad04:	d187      	bne.n	800ac16 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800ad06:	b021      	add	sp, #132	@ 0x84
 800ad08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad0c:	f04f 35ff 	mov.w	r5, #4294967295
 800ad10:	e766      	b.n	800abe0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ad12:	bf00      	nop
 800ad14:	200157c0 	.word	0x200157c0
 800ad18:	08025628 	.word	0x08025628

0800ad1c <_ZN8touchgfx4RectaNERKS0_>:
 800ad1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ad20:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ad24:	888c      	ldrh	r4, [r1, #4]
 800ad26:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ad2a:	443c      	add	r4, r7
 800ad2c:	b2a4      	uxth	r4, r4
 800ad2e:	fa0f f884 	sxth.w	r8, r4
 800ad32:	45c1      	cmp	r9, r8
 800ad34:	da2f      	bge.n	800ad96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad36:	8882      	ldrh	r2, [r0, #4]
 800ad38:	444a      	add	r2, r9
 800ad3a:	b292      	uxth	r2, r2
 800ad3c:	fa0f fe82 	sxth.w	lr, r2
 800ad40:	4577      	cmp	r7, lr
 800ad42:	da28      	bge.n	800ad96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad44:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ad48:	88cb      	ldrh	r3, [r1, #6]
 800ad4a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ad4e:	442b      	add	r3, r5
 800ad50:	b21b      	sxth	r3, r3
 800ad52:	429e      	cmp	r6, r3
 800ad54:	da1f      	bge.n	800ad96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad56:	88c3      	ldrh	r3, [r0, #6]
 800ad58:	4433      	add	r3, r6
 800ad5a:	b29b      	uxth	r3, r3
 800ad5c:	fa0f fc83 	sxth.w	ip, r3
 800ad60:	4565      	cmp	r5, ip
 800ad62:	da18      	bge.n	800ad96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad64:	454f      	cmp	r7, r9
 800ad66:	bfb8      	it	lt
 800ad68:	464f      	movlt	r7, r9
 800ad6a:	42b5      	cmp	r5, r6
 800ad6c:	bfb8      	it	lt
 800ad6e:	4635      	movlt	r5, r6
 800ad70:	45f0      	cmp	r8, lr
 800ad72:	bfd8      	it	le
 800ad74:	4622      	movle	r2, r4
 800ad76:	1bd2      	subs	r2, r2, r7
 800ad78:	8082      	strh	r2, [r0, #4]
 800ad7a:	884a      	ldrh	r2, [r1, #2]
 800ad7c:	88c9      	ldrh	r1, [r1, #6]
 800ad7e:	8007      	strh	r7, [r0, #0]
 800ad80:	440a      	add	r2, r1
 800ad82:	b292      	uxth	r2, r2
 800ad84:	b211      	sxth	r1, r2
 800ad86:	458c      	cmp	ip, r1
 800ad88:	bfa8      	it	ge
 800ad8a:	4613      	movge	r3, r2
 800ad8c:	1b5b      	subs	r3, r3, r5
 800ad8e:	80c3      	strh	r3, [r0, #6]
 800ad90:	8045      	strh	r5, [r0, #2]
 800ad92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ad96:	2300      	movs	r3, #0
 800ad98:	8003      	strh	r3, [r0, #0]
 800ad9a:	8043      	strh	r3, [r0, #2]
 800ad9c:	8083      	strh	r3, [r0, #4]
 800ad9e:	80c3      	strh	r3, [r0, #6]
 800ada0:	e7f7      	b.n	800ad92 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ada2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ada6:	2b00      	cmp	r3, #0
 800ada8:	dd06      	ble.n	800adb8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800adaa:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800adae:	2800      	cmp	r0, #0
 800adb0:	bfcc      	ite	gt
 800adb2:	2000      	movgt	r0, #0
 800adb4:	2001      	movle	r0, #1
 800adb6:	4770      	bx	lr
 800adb8:	2001      	movs	r0, #1
 800adba:	4770      	bx	lr

0800adbc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800adbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800adc0:	2300      	movs	r3, #0
 800adc2:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800adc4:	8003      	strh	r3, [r0, #0]
 800adc6:	4604      	mov	r4, r0
 800adc8:	8043      	strh	r3, [r0, #2]
 800adca:	8083      	strh	r3, [r0, #4]
 800adcc:	80c3      	strh	r3, [r0, #6]
 800adce:	2d00      	cmp	r5, #0
 800add0:	d040      	beq.n	800ae54 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800add2:	1d28      	adds	r0, r5, #4
 800add4:	f7ff ffe5 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800add8:	b988      	cbnz	r0, 800adfe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800adda:	4620      	mov	r0, r4
 800addc:	f7ff ffe1 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ade0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ade4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ade8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800adec:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800adf0:	b138      	cbz	r0, 800ae02 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800adf2:	8022      	strh	r2, [r4, #0]
 800adf4:	8063      	strh	r3, [r4, #2]
 800adf6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800adfa:	f8a4 c006 	strh.w	ip, [r4, #6]
 800adfe:	69ad      	ldr	r5, [r5, #24]
 800ae00:	e7e5      	b.n	800adce <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ae02:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ae06:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ae0a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ae0e:	4290      	cmp	r0, r2
 800ae10:	4607      	mov	r7, r0
 800ae12:	bfa8      	it	ge
 800ae14:	4617      	movge	r7, r2
 800ae16:	4472      	add	r2, lr
 800ae18:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ae1c:	8027      	strh	r7, [r4, #0]
 800ae1e:	4299      	cmp	r1, r3
 800ae20:	460e      	mov	r6, r1
 800ae22:	4440      	add	r0, r8
 800ae24:	bfa8      	it	ge
 800ae26:	461e      	movge	r6, r3
 800ae28:	4471      	add	r1, lr
 800ae2a:	4463      	add	r3, ip
 800ae2c:	b200      	sxth	r0, r0
 800ae2e:	b212      	sxth	r2, r2
 800ae30:	b209      	sxth	r1, r1
 800ae32:	b21b      	sxth	r3, r3
 800ae34:	4290      	cmp	r0, r2
 800ae36:	bfac      	ite	ge
 800ae38:	ebc7 0200 	rsbge	r2, r7, r0
 800ae3c:	ebc7 0202 	rsblt	r2, r7, r2
 800ae40:	4299      	cmp	r1, r3
 800ae42:	bfac      	ite	ge
 800ae44:	ebc6 0301 	rsbge	r3, r6, r1
 800ae48:	ebc6 0303 	rsblt	r3, r6, r3
 800ae4c:	8066      	strh	r6, [r4, #2]
 800ae4e:	80a2      	strh	r2, [r4, #4]
 800ae50:	80e3      	strh	r3, [r4, #6]
 800ae52:	e7d4      	b.n	800adfe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ae54:	4620      	mov	r0, r4
 800ae56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ae5a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ae5a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ae5e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800ae62:	b383      	cbz	r3, 800aec6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ae64:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ae66:	b374      	cbz	r4, 800aec6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ae68:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ae6c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ae70:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ae74:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ae78:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800ae7c:	b303      	cbz	r3, 800aec0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ae7e:	4668      	mov	r0, sp
 800ae80:	1d21      	adds	r1, r4, #4
 800ae82:	f8ad 5000 	strh.w	r5, [sp]
 800ae86:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ae8a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ae8e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ae92:	f7ff ff43 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 800ae96:	4668      	mov	r0, sp
 800ae98:	f7ff ff83 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ae9c:	b980      	cbnz	r0, 800aec0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ae9e:	f8bd 3000 	ldrh.w	r3, [sp]
 800aea2:	88a2      	ldrh	r2, [r4, #4]
 800aea4:	1a9b      	subs	r3, r3, r2
 800aea6:	f8ad 3000 	strh.w	r3, [sp]
 800aeaa:	88e2      	ldrh	r2, [r4, #6]
 800aeac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800aeb0:	1a9b      	subs	r3, r3, r2
 800aeb2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800aeb6:	6823      	ldr	r3, [r4, #0]
 800aeb8:	4669      	mov	r1, sp
 800aeba:	689b      	ldr	r3, [r3, #8]
 800aebc:	4620      	mov	r0, r4
 800aebe:	4798      	blx	r3
 800aec0:	69a4      	ldr	r4, [r4, #24]
 800aec2:	2c00      	cmp	r4, #0
 800aec4:	d1d8      	bne.n	800ae78 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800aec6:	b002      	add	sp, #8
 800aec8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aecc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800aecc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aece:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800aed2:	460d      	mov	r5, r1
 800aed4:	4616      	mov	r6, r2
 800aed6:	b323      	cbz	r3, 800af22 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800aed8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aeda:	b314      	cbz	r4, 800af22 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800aedc:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800aee0:	b1eb      	cbz	r3, 800af1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800aee2:	6828      	ldr	r0, [r5, #0]
 800aee4:	6869      	ldr	r1, [r5, #4]
 800aee6:	466b      	mov	r3, sp
 800aee8:	c303      	stmia	r3!, {r0, r1}
 800aeea:	4668      	mov	r0, sp
 800aeec:	1d21      	adds	r1, r4, #4
 800aeee:	f7ff ff15 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 800aef2:	4668      	mov	r0, sp
 800aef4:	f7ff ff55 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aef8:	b988      	cbnz	r0, 800af1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800aefa:	f8bd 3000 	ldrh.w	r3, [sp]
 800aefe:	88a2      	ldrh	r2, [r4, #4]
 800af00:	1a9b      	subs	r3, r3, r2
 800af02:	f8ad 3000 	strh.w	r3, [sp]
 800af06:	88e2      	ldrh	r2, [r4, #6]
 800af08:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800af0c:	1a9b      	subs	r3, r3, r2
 800af0e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800af12:	6823      	ldr	r3, [r4, #0]
 800af14:	4632      	mov	r2, r6
 800af16:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800af18:	4669      	mov	r1, sp
 800af1a:	4620      	mov	r0, r4
 800af1c:	4798      	blx	r3
 800af1e:	69a4      	ldr	r4, [r4, #24]
 800af20:	e7db      	b.n	800aeda <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800af22:	b002      	add	sp, #8
 800af24:	bd70      	pop	{r4, r5, r6, pc}

0800af26 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800af26:	b513      	push	{r0, r1, r4, lr}
 800af28:	6803      	ldr	r3, [r0, #0]
 800af2a:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 800af2e:	2300      	movs	r3, #0
 800af30:	e9cd 3300 	strd	r3, r3, [sp]
 800af34:	466b      	mov	r3, sp
 800af36:	47a0      	blx	r4
 800af38:	b002      	add	sp, #8
 800af3a:	bd10      	pop	{r4, pc}

0800af3c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800af3c:	2301      	movs	r3, #1
 800af3e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800af42:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800af46:	4770      	bx	lr

0800af48 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800af48:	2301      	movs	r3, #1
 800af4a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800af4e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800af52:	4770      	bx	lr

0800af54 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800af54:	6843      	ldr	r3, [r0, #4]
 800af56:	2201      	movs	r2, #1
 800af58:	725a      	strb	r2, [r3, #9]
 800af5a:	6840      	ldr	r0, [r0, #4]
 800af5c:	6803      	ldr	r3, [r0, #0]
 800af5e:	691b      	ldr	r3, [r3, #16]
 800af60:	4718      	bx	r3

0800af62 <_ZN8touchgfx3HAL8flushDMAEv>:
 800af62:	6840      	ldr	r0, [r0, #4]
 800af64:	6803      	ldr	r3, [r0, #0]
 800af66:	689b      	ldr	r3, [r3, #8]
 800af68:	4718      	bx	r3

0800af6a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800af6a:	b530      	push	{r4, r5, lr}
 800af6c:	b08b      	sub	sp, #44	@ 0x2c
 800af6e:	6804      	ldr	r4, [r0, #0]
 800af70:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800af74:	9509      	str	r5, [sp, #36]	@ 0x24
 800af76:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800af7a:	9508      	str	r5, [sp, #32]
 800af7c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800af80:	9507      	str	r5, [sp, #28]
 800af82:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800af86:	9506      	str	r5, [sp, #24]
 800af88:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800af8c:	9505      	str	r5, [sp, #20]
 800af8e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800af92:	9504      	str	r5, [sp, #16]
 800af94:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800af98:	9503      	str	r5, [sp, #12]
 800af9a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800af9e:	9502      	str	r5, [sp, #8]
 800afa0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800afa4:	e9cd 3500 	strd	r3, r5, [sp]
 800afa8:	4613      	mov	r3, r2
 800afaa:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 800afac:	2200      	movs	r2, #0
 800afae:	47a0      	blx	r4
 800afb0:	b00b      	add	sp, #44	@ 0x2c
 800afb2:	bd30      	pop	{r4, r5, pc}

0800afb4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800afb4:	4b04      	ldr	r3, [pc, #16]	@ (800afc8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800afb6:	781b      	ldrb	r3, [r3, #0]
 800afb8:	b123      	cbz	r3, 800afc4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800afba:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800afbe:	f080 0001 	eor.w	r0, r0, #1
 800afc2:	4770      	bx	lr
 800afc4:	2001      	movs	r0, #1
 800afc6:	4770      	bx	lr
 800afc8:	200157be 	.word	0x200157be

0800afcc <_ZN8touchgfx3HAL8endFrameEv>:
 800afcc:	b510      	push	{r4, lr}
 800afce:	4604      	mov	r4, r0
 800afd0:	6840      	ldr	r0, [r0, #4]
 800afd2:	6803      	ldr	r3, [r0, #0]
 800afd4:	689b      	ldr	r3, [r3, #8]
 800afd6:	4798      	blx	r3
 800afd8:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800afdc:	b113      	cbz	r3, 800afe4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800afde:	2301      	movs	r3, #1
 800afe0:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800afe4:	bd10      	pop	{r4, pc}

0800afe6 <_ZN8touchgfx3HAL10initializeEv>:
 800afe6:	b510      	push	{r4, lr}
 800afe8:	4604      	mov	r4, r0
 800afea:	f7f7 f91f 	bl	800222c <_ZN8touchgfx10OSWrappers10initializeEv>
 800afee:	f7f7 f827 	bl	8002040 <_ZN8touchgfx4GPIO4initEv>
 800aff2:	6860      	ldr	r0, [r4, #4]
 800aff4:	6803      	ldr	r3, [r0, #0]
 800aff6:	68db      	ldr	r3, [r3, #12]
 800aff8:	4798      	blx	r3
 800affa:	68e0      	ldr	r0, [r4, #12]
 800affc:	6803      	ldr	r3, [r0, #0]
 800affe:	689b      	ldr	r3, [r3, #8]
 800b000:	4798      	blx	r3
 800b002:	6823      	ldr	r3, [r4, #0]
 800b004:	4620      	mov	r0, r4
 800b006:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800b008:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b00c:	4718      	bx	r3
	...

0800b010 <_ZN8touchgfx3HAL4tickEv>:
 800b010:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b012:	6803      	ldr	r3, [r0, #0]
 800b014:	4d62      	ldr	r5, [pc, #392]	@ (800b1a0 <_ZN8touchgfx3HAL4tickEv+0x190>)
 800b016:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800b01a:	4604      	mov	r4, r0
 800b01c:	4798      	blx	r3
 800b01e:	2800      	cmp	r0, #0
 800b020:	f000 809e 	beq.w	800b160 <_ZN8touchgfx3HAL4tickEv+0x150>
 800b024:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800b028:	2b02      	cmp	r3, #2
 800b02a:	d002      	beq.n	800b032 <_ZN8touchgfx3HAL4tickEv+0x22>
 800b02c:	2001      	movs	r0, #1
 800b02e:	f7f6 ff85 	bl	8001f3c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b032:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800b036:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800b03a:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800b03e:	2600      	movs	r6, #0
 800b040:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800b044:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800b048:	b133      	cbz	r3, 800b058 <_ZN8touchgfx3HAL4tickEv+0x48>
 800b04a:	6823      	ldr	r3, [r4, #0]
 800b04c:	4620      	mov	r0, r4
 800b04e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800b052:	4798      	blx	r3
 800b054:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800b058:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800b05c:	6862      	ldr	r2, [r4, #4]
 800b05e:	f083 0301 	eor.w	r3, r3, #1
 800b062:	7253      	strb	r3, [r2, #9]
 800b064:	2601      	movs	r6, #1
 800b066:	702e      	strb	r6, [r5, #0]
 800b068:	f005 fd14 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 800b06c:	6803      	ldr	r3, [r0, #0]
 800b06e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b070:	4798      	blx	r3
 800b072:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800b076:	b90b      	cbnz	r3, 800b07c <_ZN8touchgfx3HAL4tickEv+0x6c>
 800b078:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800b07c:	f005 fd0a 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 800b080:	6803      	ldr	r3, [r0, #0]
 800b082:	695b      	ldr	r3, [r3, #20]
 800b084:	4798      	blx	r3
 800b086:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800b088:	6803      	ldr	r3, [r0, #0]
 800b08a:	691b      	ldr	r3, [r3, #16]
 800b08c:	4798      	blx	r3
 800b08e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800b092:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800b096:	3b01      	subs	r3, #1
 800b098:	b2db      	uxtb	r3, r3
 800b09a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800b09e:	b10a      	cbz	r2, 800b0a4 <_ZN8touchgfx3HAL4tickEv+0x94>
 800b0a0:	2b00      	cmp	r3, #0
 800b0a2:	d1eb      	bne.n	800b07c <_ZN8touchgfx3HAL4tickEv+0x6c>
 800b0a4:	4a3f      	ldr	r2, [pc, #252]	@ (800b1a4 <_ZN8touchgfx3HAL4tickEv+0x194>)
 800b0a6:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800b0aa:	7813      	ldrb	r3, [r2, #0]
 800b0ac:	3301      	adds	r3, #1
 800b0ae:	b25b      	sxtb	r3, r3
 800b0b0:	4299      	cmp	r1, r3
 800b0b2:	7013      	strb	r3, [r2, #0]
 800b0b4:	dc10      	bgt.n	800b0d8 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800b0b6:	68e0      	ldr	r0, [r4, #12]
 800b0b8:	2300      	movs	r3, #0
 800b0ba:	7013      	strb	r3, [r2, #0]
 800b0bc:	6803      	ldr	r3, [r0, #0]
 800b0be:	aa03      	add	r2, sp, #12
 800b0c0:	68db      	ldr	r3, [r3, #12]
 800b0c2:	a902      	add	r1, sp, #8
 800b0c4:	4798      	blx	r3
 800b0c6:	6823      	ldr	r3, [r4, #0]
 800b0c8:	2800      	cmp	r0, #0
 800b0ca:	d059      	beq.n	800b180 <_ZN8touchgfx3HAL4tickEv+0x170>
 800b0cc:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800b0d0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b0d4:	4620      	mov	r0, r4
 800b0d6:	4798      	blx	r3
 800b0d8:	6960      	ldr	r0, [r4, #20]
 800b0da:	2300      	movs	r3, #0
 800b0dc:	f88d 3007 	strb.w	r3, [sp, #7]
 800b0e0:	b158      	cbz	r0, 800b0fa <_ZN8touchgfx3HAL4tickEv+0xea>
 800b0e2:	6803      	ldr	r3, [r0, #0]
 800b0e4:	f10d 0107 	add.w	r1, sp, #7
 800b0e8:	68db      	ldr	r3, [r3, #12]
 800b0ea:	4798      	blx	r3
 800b0ec:	b128      	cbz	r0, 800b0fa <_ZN8touchgfx3HAL4tickEv+0xea>
 800b0ee:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800b0f0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b0f4:	6803      	ldr	r3, [r0, #0]
 800b0f6:	68db      	ldr	r3, [r3, #12]
 800b0f8:	4798      	blx	r3
 800b0fa:	f104 001c 	add.w	r0, r4, #28
 800b0fe:	f017 fd0d 	bl	8022b1c <_ZN8touchgfx8Gestures4tickEv>
 800b102:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800b106:	b30b      	cbz	r3, 800b14c <_ZN8touchgfx3HAL4tickEv+0x13c>
 800b108:	6920      	ldr	r0, [r4, #16]
 800b10a:	6803      	ldr	r3, [r0, #0]
 800b10c:	691b      	ldr	r3, [r3, #16]
 800b10e:	4798      	blx	r3
 800b110:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b112:	4606      	mov	r6, r0
 800b114:	b903      	cbnz	r3, 800b118 <_ZN8touchgfx3HAL4tickEv+0x108>
 800b116:	6760      	str	r0, [r4, #116]	@ 0x74
 800b118:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b11a:	4a23      	ldr	r2, [pc, #140]	@ (800b1a8 <_ZN8touchgfx3HAL4tickEv+0x198>)
 800b11c:	1af3      	subs	r3, r6, r3
 800b11e:	4293      	cmp	r3, r2
 800b120:	d914      	bls.n	800b14c <_ZN8touchgfx3HAL4tickEv+0x13c>
 800b122:	6920      	ldr	r0, [r4, #16]
 800b124:	6803      	ldr	r3, [r0, #0]
 800b126:	699b      	ldr	r3, [r3, #24]
 800b128:	4798      	blx	r3
 800b12a:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b12c:	2264      	movs	r2, #100	@ 0x64
 800b12e:	1af3      	subs	r3, r6, r3
 800b130:	fbb3 f3f2 	udiv	r3, r3, r2
 800b134:	fbb0 f0f3 	udiv	r0, r0, r3
 800b138:	2800      	cmp	r0, #0
 800b13a:	dc26      	bgt.n	800b18a <_ZN8touchgfx3HAL4tickEv+0x17a>
 800b13c:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800b140:	6920      	ldr	r0, [r4, #16]
 800b142:	6803      	ldr	r3, [r0, #0]
 800b144:	2100      	movs	r1, #0
 800b146:	69db      	ldr	r3, [r3, #28]
 800b148:	4798      	blx	r3
 800b14a:	6766      	str	r6, [r4, #116]	@ 0x74
 800b14c:	6823      	ldr	r3, [r4, #0]
 800b14e:	4620      	mov	r0, r4
 800b150:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800b154:	4798      	blx	r3
 800b156:	f005 fc9d 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 800b15a:	6803      	ldr	r3, [r0, #0]
 800b15c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b15e:	4798      	blx	r3
 800b160:	6823      	ldr	r3, [r4, #0]
 800b162:	4620      	mov	r0, r4
 800b164:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800b168:	4798      	blx	r3
 800b16a:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800b16e:	2b02      	cmp	r3, #2
 800b170:	d002      	beq.n	800b178 <_ZN8touchgfx3HAL4tickEv+0x168>
 800b172:	2001      	movs	r0, #1
 800b174:	f7f6 ff0c 	bl	8001f90 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b178:	2300      	movs	r3, #0
 800b17a:	702b      	strb	r3, [r5, #0]
 800b17c:	b004      	add	sp, #16
 800b17e:	bd70      	pop	{r4, r5, r6, pc}
 800b180:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800b184:	4620      	mov	r0, r4
 800b186:	4798      	blx	r3
 800b188:	e7a6      	b.n	800b0d8 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800b18a:	2863      	cmp	r0, #99	@ 0x63
 800b18c:	bfcb      	itete	gt
 800b18e:	2300      	movgt	r3, #0
 800b190:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800b194:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800b198:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800b19c:	e7d0      	b.n	800b140 <_ZN8touchgfx3HAL4tickEv+0x130>
 800b19e:	bf00      	nop
 800b1a0:	200157c4 	.word	0x200157c4
 800b1a4:	200157c5 	.word	0x200157c5
 800b1a8:	05f5e100 	.word	0x05f5e100

0800b1ac <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b1ac:	b510      	push	{r4, lr}
 800b1ae:	4604      	mov	r4, r0
 800b1b0:	f7f7 f86c 	bl	800228c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800b1b4:	6863      	ldr	r3, [r4, #4]
 800b1b6:	2200      	movs	r2, #0
 800b1b8:	729a      	strb	r2, [r3, #10]
 800b1ba:	bd10      	pop	{r4, pc}

0800b1bc <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b1bc:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800b1be:	301c      	adds	r0, #28
 800b1c0:	f017 bcaa 	b.w	8022b18 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b1c4 <_ZN8touchgfx3HAL5touchEll>:
 800b1c4:	b530      	push	{r4, r5, lr}
 800b1c6:	b087      	sub	sp, #28
 800b1c8:	4604      	mov	r4, r0
 800b1ca:	a804      	add	r0, sp, #16
 800b1cc:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b1d0:	f005 fa48 	bl	8010664 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b1d4:	9b04      	ldr	r3, [sp, #16]
 800b1d6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b1da:	a906      	add	r1, sp, #24
 800b1dc:	9b05      	ldr	r3, [sp, #20]
 800b1de:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b1e2:	a803      	add	r0, sp, #12
 800b1e4:	f005 fa90 	bl	8010708 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b1e8:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800b1ec:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b1f0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b1f4:	f104 001c 	add.w	r0, r4, #28
 800b1f8:	b189      	cbz	r1, 800b21e <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b1fa:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800b1fe:	9300      	str	r3, [sp, #0]
 800b200:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800b204:	4613      	mov	r3, r2
 800b206:	462a      	mov	r2, r5
 800b208:	f017 fc96 	bl	8022b38 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b20c:	b128      	cbz	r0, 800b21a <_ZN8touchgfx3HAL5touchEll+0x56>
 800b20e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b212:	6623      	str	r3, [r4, #96]	@ 0x60
 800b214:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b218:	6663      	str	r3, [r4, #100]	@ 0x64
 800b21a:	b007      	add	sp, #28
 800b21c:	bd30      	pop	{r4, r5, pc}
 800b21e:	f017 fccb 	bl	8022bb8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b222:	2301      	movs	r3, #1
 800b224:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b228:	e7f1      	b.n	800b20e <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b22a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b22a:	b510      	push	{r4, lr}
 800b22c:	2b00      	cmp	r3, #0
 800b22e:	d046      	beq.n	800b2be <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b230:	ea81 0002 	eor.w	r0, r1, r2
 800b234:	07c4      	lsls	r4, r0, #31
 800b236:	d508      	bpl.n	800b24a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b238:	440b      	add	r3, r1
 800b23a:	3a01      	subs	r2, #1
 800b23c:	428b      	cmp	r3, r1
 800b23e:	d93e      	bls.n	800b2be <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b240:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b244:	f801 0b01 	strb.w	r0, [r1], #1
 800b248:	e7f8      	b.n	800b23c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b24a:	07d0      	lsls	r0, r2, #31
 800b24c:	bf42      	ittt	mi
 800b24e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b252:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b256:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b25a:	2b01      	cmp	r3, #1
 800b25c:	d911      	bls.n	800b282 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b25e:	ea81 0402 	eor.w	r4, r1, r2
 800b262:	07a4      	lsls	r4, r4, #30
 800b264:	4610      	mov	r0, r2
 800b266:	d022      	beq.n	800b2ae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b268:	f023 0401 	bic.w	r4, r3, #1
 800b26c:	440c      	add	r4, r1
 800b26e:	428c      	cmp	r4, r1
 800b270:	4602      	mov	r2, r0
 800b272:	d904      	bls.n	800b27e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b274:	8812      	ldrh	r2, [r2, #0]
 800b276:	f821 2b02 	strh.w	r2, [r1], #2
 800b27a:	3002      	adds	r0, #2
 800b27c:	e7f7      	b.n	800b26e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b27e:	f003 0301 	and.w	r3, r3, #1
 800b282:	f023 0003 	bic.w	r0, r3, #3
 800b286:	4408      	add	r0, r1
 800b288:	4288      	cmp	r0, r1
 800b28a:	4614      	mov	r4, r2
 800b28c:	d904      	bls.n	800b298 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b28e:	6824      	ldr	r4, [r4, #0]
 800b290:	f841 4b04 	str.w	r4, [r1], #4
 800b294:	3204      	adds	r2, #4
 800b296:	e7f7      	b.n	800b288 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b298:	f003 0303 	and.w	r3, r3, #3
 800b29c:	440b      	add	r3, r1
 800b29e:	3a01      	subs	r2, #1
 800b2a0:	428b      	cmp	r3, r1
 800b2a2:	d90c      	bls.n	800b2be <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b2a4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b2a8:	f801 0b01 	strb.w	r0, [r1], #1
 800b2ac:	e7f8      	b.n	800b2a0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b2ae:	0790      	lsls	r0, r2, #30
 800b2b0:	d0e7      	beq.n	800b282 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b2b2:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b2b6:	f821 0b02 	strh.w	r0, [r1], #2
 800b2ba:	3b02      	subs	r3, #2
 800b2bc:	e7e1      	b.n	800b282 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b2be:	2001      	movs	r0, #1
 800b2c0:	bd10      	pop	{r4, pc}

0800b2c2 <_ZN8touchgfx3HAL7noTouchEv>:
 800b2c2:	b510      	push	{r4, lr}
 800b2c4:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800b2c8:	4604      	mov	r4, r0
 800b2ca:	b153      	cbz	r3, 800b2e2 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b2cc:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800b2d0:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800b2d4:	2101      	movs	r1, #1
 800b2d6:	301c      	adds	r0, #28
 800b2d8:	f017 fc6e 	bl	8022bb8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b2dc:	2300      	movs	r3, #0
 800b2de:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b2e2:	bd10      	pop	{r4, pc}

0800b2e4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b2e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b2e8:	b085      	sub	sp, #20
 800b2ea:	ad04      	add	r5, sp, #16
 800b2ec:	4604      	mov	r4, r0
 800b2ee:	2000      	movs	r0, #0
 800b2f0:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b2f4:	69a0      	ldr	r0, [r4, #24]
 800b2f6:	6806      	ldr	r6, [r0, #0]
 800b2f8:	9501      	str	r5, [sp, #4]
 800b2fa:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800b2fe:	9500      	str	r5, [sp, #0]
 800b300:	6835      	ldr	r5, [r6, #0]
 800b302:	4699      	mov	r9, r3
 800b304:	460f      	mov	r7, r1
 800b306:	4690      	mov	r8, r2
 800b308:	47a8      	blx	r5
 800b30a:	4d10      	ldr	r5, [pc, #64]	@ (800b34c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b30c:	4606      	mov	r6, r0
 800b30e:	f8a5 9000 	strh.w	r9, [r5]
 800b312:	f7f7 fed1 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 800b316:	6803      	ldr	r3, [r0, #0]
 800b318:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b31a:	4798      	blx	r3
 800b31c:	b128      	cbz	r0, 800b32a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b31e:	2801      	cmp	r0, #1
 800b320:	d00b      	beq.n	800b33a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b322:	4630      	mov	r0, r6
 800b324:	b005      	add	sp, #20
 800b326:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b32a:	882b      	ldrh	r3, [r5, #0]
 800b32c:	fb08 7203 	mla	r2, r8, r3, r7
 800b330:	9b03      	ldr	r3, [sp, #12]
 800b332:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b336:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800b338:	e7f3      	b.n	800b322 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b33a:	882a      	ldrh	r2, [r5, #0]
 800b33c:	9b03      	ldr	r3, [sp, #12]
 800b33e:	fb08 7202 	mla	r2, r8, r2, r7
 800b342:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b346:	1a9a      	subs	r2, r3, r2
 800b348:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800b34a:	e7ea      	b.n	800b322 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b34c:	200157ba 	.word	0x200157ba

0800b350 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 800b350:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b352:	4b15      	ldr	r3, [pc, #84]	@ (800b3a8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 800b354:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 800b358:	881b      	ldrh	r3, [r3, #0]
 800b35a:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800b35c:	fb93 f4f4 	sdiv	r4, r3, r4
 800b360:	460f      	mov	r7, r1
 800b362:	4606      	mov	r6, r0
 800b364:	f7f7 fea8 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 800b368:	6803      	ldr	r3, [r0, #0]
 800b36a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b36c:	4798      	blx	r3
 800b36e:	2801      	cmp	r0, #1
 800b370:	d00b      	beq.n	800b38a <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 800b372:	d303      	bcc.n	800b37c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 800b374:	2802      	cmp	r0, #2
 800b376:	d010      	beq.n	800b39a <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 800b378:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800b37a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b37c:	4b0b      	ldr	r3, [pc, #44]	@ (800b3ac <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800b37e:	8819      	ldrh	r1, [r3, #0]
 800b380:	437c      	muls	r4, r7
 800b382:	434c      	muls	r4, r1
 800b384:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800b388:	e7f6      	b.n	800b378 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800b38a:	4b08      	ldr	r3, [pc, #32]	@ (800b3ac <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800b38c:	8819      	ldrh	r1, [r3, #0]
 800b38e:	437c      	muls	r4, r7
 800b390:	434c      	muls	r4, r1
 800b392:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800b396:	1b2d      	subs	r5, r5, r4
 800b398:	e7ee      	b.n	800b378 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800b39a:	4b04      	ldr	r3, [pc, #16]	@ (800b3ac <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800b39c:	8819      	ldrh	r1, [r3, #0]
 800b39e:	437c      	muls	r4, r7
 800b3a0:	434c      	muls	r4, r1
 800b3a2:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 800b3a6:	e7e7      	b.n	800b378 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800b3a8:	200157bc 	.word	0x200157bc
 800b3ac:	200157ba 	.word	0x200157ba

0800b3b0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b3b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b3b2:	b08b      	sub	sp, #44	@ 0x2c
 800b3b4:	4617      	mov	r7, r2
 800b3b6:	4604      	mov	r4, r0
 800b3b8:	460e      	mov	r6, r1
 800b3ba:	461d      	mov	r5, r3
 800b3bc:	f7f7 fe7c 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 800b3c0:	6803      	ldr	r3, [r0, #0]
 800b3c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b3c4:	4798      	blx	r3
 800b3c6:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b3ca:	9007      	str	r0, [sp, #28]
 800b3cc:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b3d0:	4b0d      	ldr	r3, [pc, #52]	@ (800b408 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b3d2:	6822      	ldr	r2, [r4, #0]
 800b3d4:	881b      	ldrh	r3, [r3, #0]
 800b3d6:	9306      	str	r3, [sp, #24]
 800b3d8:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b3dc:	9305      	str	r3, [sp, #20]
 800b3de:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800b3e2:	9304      	str	r3, [sp, #16]
 800b3e4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b3e8:	9303      	str	r3, [sp, #12]
 800b3ea:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b3ee:	9302      	str	r3, [sp, #8]
 800b3f0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b3f4:	e9cd 5300 	strd	r5, r3, [sp]
 800b3f8:	4631      	mov	r1, r6
 800b3fa:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 800b3fc:	463b      	mov	r3, r7
 800b3fe:	2200      	movs	r2, #0
 800b400:	4620      	mov	r0, r4
 800b402:	47a8      	blx	r5
 800b404:	b00b      	add	sp, #44	@ 0x2c
 800b406:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b408:	200157ba 	.word	0x200157ba

0800b40c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b40c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b410:	4698      	mov	r8, r3
 800b412:	6803      	ldr	r3, [r0, #0]
 800b414:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 800b416:	4b15      	ldr	r3, [pc, #84]	@ (800b46c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b418:	b08b      	sub	sp, #44	@ 0x2c
 800b41a:	4617      	mov	r7, r2
 800b41c:	f8b3 9000 	ldrh.w	r9, [r3]
 800b420:	460e      	mov	r6, r1
 800b422:	4604      	mov	r4, r0
 800b424:	f7f7 fe48 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 800b428:	6803      	ldr	r3, [r0, #0]
 800b42a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b42c:	4798      	blx	r3
 800b42e:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b432:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b436:	2302      	movs	r3, #2
 800b438:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b43c:	2301      	movs	r3, #1
 800b43e:	9305      	str	r3, [sp, #20]
 800b440:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b444:	9304      	str	r3, [sp, #16]
 800b446:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b44a:	9303      	str	r3, [sp, #12]
 800b44c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b450:	9302      	str	r3, [sp, #8]
 800b452:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b456:	2200      	movs	r2, #0
 800b458:	e9cd 8300 	strd	r8, r3, [sp]
 800b45c:	4631      	mov	r1, r6
 800b45e:	463b      	mov	r3, r7
 800b460:	4620      	mov	r0, r4
 800b462:	47a8      	blx	r5
 800b464:	b00b      	add	sp, #44	@ 0x2c
 800b466:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b46a:	bf00      	nop
 800b46c:	200157ba 	.word	0x200157ba

0800b470 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b470:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b474:	4698      	mov	r8, r3
 800b476:	6803      	ldr	r3, [r0, #0]
 800b478:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 800b47a:	4b11      	ldr	r3, [pc, #68]	@ (800b4c0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b47c:	b087      	sub	sp, #28
 800b47e:	f8b3 9000 	ldrh.w	r9, [r3]
 800b482:	460e      	mov	r6, r1
 800b484:	4617      	mov	r7, r2
 800b486:	4604      	mov	r4, r0
 800b488:	f7f7 fe16 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 800b48c:	6803      	ldr	r3, [r0, #0]
 800b48e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b490:	4798      	blx	r3
 800b492:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800b496:	f8cd 900c 	str.w	r9, [sp, #12]
 800b49a:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b49e:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800b4a2:	9302      	str	r3, [sp, #8]
 800b4a4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800b4a8:	9301      	str	r3, [sp, #4]
 800b4aa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800b4ae:	9300      	str	r3, [sp, #0]
 800b4b0:	463a      	mov	r2, r7
 800b4b2:	4643      	mov	r3, r8
 800b4b4:	4631      	mov	r1, r6
 800b4b6:	4620      	mov	r0, r4
 800b4b8:	47a8      	blx	r5
 800b4ba:	b007      	add	sp, #28
 800b4bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b4c0:	200157ba 	.word	0x200157ba

0800b4c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b4c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b4c8:	4604      	mov	r4, r0
 800b4ca:	b08f      	sub	sp, #60	@ 0x3c
 800b4cc:	4610      	mov	r0, r2
 800b4ce:	460d      	mov	r5, r1
 800b4d0:	4691      	mov	r9, r2
 800b4d2:	461e      	mov	r6, r3
 800b4d4:	f009 f810 	bl	80144f8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b4d8:	2800      	cmp	r0, #0
 800b4da:	f000 809d 	beq.w	800b618 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b4de:	6823      	ldr	r3, [r4, #0]
 800b4e0:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800b67c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b4e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b4e6:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800b680 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b4ea:	4f61      	ldr	r7, [pc, #388]	@ (800b670 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b4ec:	4620      	mov	r0, r4
 800b4ee:	4798      	blx	r3
 800b4f0:	6823      	ldr	r3, [r4, #0]
 800b4f2:	4620      	mov	r0, r4
 800b4f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b4f6:	4798      	blx	r3
 800b4f8:	f8bb 3000 	ldrh.w	r3, [fp]
 800b4fc:	9301      	str	r3, [sp, #4]
 800b4fe:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800b502:	f8ba 3000 	ldrh.w	r3, [sl]
 800b506:	9302      	str	r3, [sp, #8]
 800b508:	883b      	ldrh	r3, [r7, #0]
 800b50a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b50e:	9303      	str	r3, [sp, #12]
 800b510:	4b58      	ldr	r3, [pc, #352]	@ (800b674 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b512:	9305      	str	r3, [sp, #20]
 800b514:	881a      	ldrh	r2, [r3, #0]
 800b516:	9204      	str	r2, [sp, #16]
 800b518:	4640      	mov	r0, r8
 800b51a:	f009 f881 	bl	8014620 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b51e:	8038      	strh	r0, [r7, #0]
 800b520:	4640      	mov	r0, r8
 800b522:	f009 f8b1 	bl	8014688 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b526:	9b05      	ldr	r3, [sp, #20]
 800b528:	b280      	uxth	r0, r0
 800b52a:	8018      	strh	r0, [r3, #0]
 800b52c:	4b52      	ldr	r3, [pc, #328]	@ (800b678 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b52e:	781b      	ldrb	r3, [r3, #0]
 800b530:	2b00      	cmp	r3, #0
 800b532:	d174      	bne.n	800b61e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b534:	883b      	ldrh	r3, [r7, #0]
 800b536:	f8ab 3000 	strh.w	r3, [fp]
 800b53a:	f8aa 0000 	strh.w	r0, [sl]
 800b53e:	4648      	mov	r0, r9
 800b540:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800b544:	f008 ffd8 	bl	80144f8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b548:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800b54c:	2200      	movs	r2, #0
 800b54e:	4611      	mov	r1, r2
 800b550:	4628      	mov	r0, r5
 800b552:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b556:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b55a:	f7f8 fad4 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
 800b55e:	2301      	movs	r3, #1
 800b560:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800b564:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800b568:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b56c:	2b00      	cmp	r3, #0
 800b56e:	dd5c      	ble.n	800b62a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b570:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b574:	2b00      	cmp	r3, #0
 800b576:	dd58      	ble.n	800b62a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b578:	462a      	mov	r2, r5
 800b57a:	ab0a      	add	r3, sp, #40	@ 0x28
 800b57c:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b580:	6851      	ldr	r1, [r2, #4]
 800b582:	c303      	stmia	r3!, {r0, r1}
 800b584:	4631      	mov	r1, r6
 800b586:	a80a      	add	r0, sp, #40	@ 0x28
 800b588:	f7ff fbc8 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 800b58c:	4b38      	ldr	r3, [pc, #224]	@ (800b670 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b58e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b592:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800b596:	2100      	movs	r1, #0
 800b598:	aa0a      	add	r2, sp, #40	@ 0x28
 800b59a:	4b36      	ldr	r3, [pc, #216]	@ (800b674 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b59c:	910c      	str	r1, [sp, #48]	@ 0x30
 800b59e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b5a2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b5a6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800b5aa:	ab08      	add	r3, sp, #32
 800b5ac:	e883 0003 	stmia.w	r3, {r0, r1}
 800b5b0:	4618      	mov	r0, r3
 800b5b2:	a90c      	add	r1, sp, #48	@ 0x30
 800b5b4:	f7ff fbb2 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 800b5b8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800b5ba:	2b00      	cmp	r3, #0
 800b5bc:	d13c      	bne.n	800b638 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b5be:	2000      	movs	r0, #0
 800b5c0:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800b5c4:	2600      	movs	r6, #0
 800b5c6:	682a      	ldr	r2, [r5, #0]
 800b5c8:	696b      	ldr	r3, [r5, #20]
 800b5ca:	616e      	str	r6, [r5, #20]
 800b5cc:	9305      	str	r3, [sp, #20]
 800b5ce:	6892      	ldr	r2, [r2, #8]
 800b5d0:	a908      	add	r1, sp, #32
 800b5d2:	4628      	mov	r0, r5
 800b5d4:	4790      	blx	r2
 800b5d6:	9b05      	ldr	r3, [sp, #20]
 800b5d8:	616b      	str	r3, [r5, #20]
 800b5da:	4652      	mov	r2, sl
 800b5dc:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800b5e0:	4649      	mov	r1, r9
 800b5e2:	4628      	mov	r0, r5
 800b5e4:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800b5e8:	f7f8 fa8d 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
 800b5ec:	4b23      	ldr	r3, [pc, #140]	@ (800b67c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b5ee:	9a01      	ldr	r2, [sp, #4]
 800b5f0:	801a      	strh	r2, [r3, #0]
 800b5f2:	4b23      	ldr	r3, [pc, #140]	@ (800b680 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b5f4:	9a02      	ldr	r2, [sp, #8]
 800b5f6:	801a      	strh	r2, [r3, #0]
 800b5f8:	4b1d      	ldr	r3, [pc, #116]	@ (800b670 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b5fa:	9a03      	ldr	r2, [sp, #12]
 800b5fc:	801a      	strh	r2, [r3, #0]
 800b5fe:	4b1d      	ldr	r3, [pc, #116]	@ (800b674 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b600:	9a04      	ldr	r2, [sp, #16]
 800b602:	801a      	strh	r2, [r3, #0]
 800b604:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800b608:	6823      	ldr	r3, [r4, #0]
 800b60a:	4620      	mov	r0, r4
 800b60c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b60e:	4798      	blx	r3
 800b610:	6823      	ldr	r3, [r4, #0]
 800b612:	4620      	mov	r0, r4
 800b614:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b616:	4798      	blx	r3
 800b618:	b00f      	add	sp, #60	@ 0x3c
 800b61a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b61e:	883b      	ldrh	r3, [r7, #0]
 800b620:	f8ab 0000 	strh.w	r0, [fp]
 800b624:	f8aa 3000 	strh.w	r3, [sl]
 800b628:	e789      	b.n	800b53e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b62a:	462a      	mov	r2, r5
 800b62c:	ab0a      	add	r3, sp, #40	@ 0x28
 800b62e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b632:	6851      	ldr	r1, [r2, #4]
 800b634:	c303      	stmia	r3!, {r0, r1}
 800b636:	e7a9      	b.n	800b58c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b638:	a807      	add	r0, sp, #28
 800b63a:	f009 f967 	bl	801490c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b63e:	4606      	mov	r6, r0
 800b640:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800b642:	6803      	ldr	r3, [r0, #0]
 800b644:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b646:	4798      	blx	r3
 800b648:	4286      	cmp	r6, r0
 800b64a:	d1b8      	bne.n	800b5be <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b64c:	f7f7 fd34 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 800b650:	6803      	ldr	r3, [r0, #0]
 800b652:	4606      	mov	r6, r0
 800b654:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b656:	9305      	str	r3, [sp, #20]
 800b658:	a807      	add	r0, sp, #28
 800b65a:	f009 f957 	bl	801490c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b65e:	9b05      	ldr	r3, [sp, #20]
 800b660:	4601      	mov	r1, r0
 800b662:	4630      	mov	r0, r6
 800b664:	4798      	blx	r3
 800b666:	f080 0001 	eor.w	r0, r0, #1
 800b66a:	b2c0      	uxtb	r0, r0
 800b66c:	e7a8      	b.n	800b5c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b66e:	bf00      	nop
 800b670:	200157b4 	.word	0x200157b4
 800b674:	200157b6 	.word	0x200157b6
 800b678:	200157b8 	.word	0x200157b8
 800b67c:	200157ba 	.word	0x200157ba
 800b680:	200157bc 	.word	0x200157bc

0800b684 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b684:	b510      	push	{r4, lr}
 800b686:	4b07      	ldr	r3, [pc, #28]	@ (800b6a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b688:	781b      	ldrb	r3, [r3, #0]
 800b68a:	4604      	mov	r4, r0
 800b68c:	b13b      	cbz	r3, 800b69e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b68e:	6803      	ldr	r3, [r0, #0]
 800b690:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b692:	4798      	blx	r3
 800b694:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b696:	4283      	cmp	r3, r0
 800b698:	d101      	bne.n	800b69e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b69a:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800b69c:	bd10      	pop	{r4, pc}
 800b69e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800b6a0:	e7fc      	b.n	800b69c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b6a2:	bf00      	nop
 800b6a4:	200157be 	.word	0x200157be

0800b6a8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b6a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b6ac:	b08a      	sub	sp, #40	@ 0x28
 800b6ae:	461d      	mov	r5, r3
 800b6b0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b6b4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b6b8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b6bc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b6c0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b6c4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b6c8:	2400      	movs	r4, #0
 800b6ca:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b6ce:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800b6d2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b6d6:	4690      	mov	r8, r2
 800b6d8:	4607      	mov	r7, r0
 800b6da:	9404      	str	r4, [sp, #16]
 800b6dc:	f88d 4020 	strb.w	r4, [sp, #32]
 800b6e0:	f7ff ffd0 	bl	800b684 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b6e4:	fb06 8505 	mla	r5, r6, r5, r8
 800b6e8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b6ec:	6878      	ldr	r0, [r7, #4]
 800b6ee:	9505      	str	r5, [sp, #20]
 800b6f0:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b6f4:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b6f8:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800b6fc:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b700:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b704:	6803      	ldr	r3, [r0, #0]
 800b706:	a901      	add	r1, sp, #4
 800b708:	685b      	ldr	r3, [r3, #4]
 800b70a:	4798      	blx	r3
 800b70c:	b00a      	add	sp, #40	@ 0x28
 800b70e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b712 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b712:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b716:	b08b      	sub	sp, #44	@ 0x2c
 800b718:	2400      	movs	r4, #0
 800b71a:	461d      	mov	r5, r3
 800b71c:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800b720:	4688      	mov	r8, r1
 800b722:	4691      	mov	r9, r2
 800b724:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800b728:	9404      	str	r4, [sp, #16]
 800b72a:	4607      	mov	r7, r0
 800b72c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b730:	f7ff ffa8 	bl	800b684 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b734:	fb06 9505 	mla	r5, r6, r5, r9
 800b738:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b73c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b740:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b744:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b748:	6878      	ldr	r0, [r7, #4]
 800b74a:	9505      	str	r5, [sp, #20]
 800b74c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b750:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b754:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b758:	f8cd 8010 	str.w	r8, [sp, #16]
 800b75c:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b760:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b764:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b768:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b76c:	6803      	ldr	r3, [r0, #0]
 800b76e:	a901      	add	r1, sp, #4
 800b770:	685b      	ldr	r3, [r3, #4]
 800b772:	4798      	blx	r3
 800b774:	b00b      	add	sp, #44	@ 0x2c
 800b776:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b77c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b77c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b780:	b08a      	sub	sp, #40	@ 0x28
 800b782:	4698      	mov	r8, r3
 800b784:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800b788:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800b78c:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800b790:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800b794:	2300      	movs	r3, #0
 800b796:	2d0b      	cmp	r5, #11
 800b798:	4606      	mov	r6, r0
 800b79a:	9304      	str	r3, [sp, #16]
 800b79c:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800b7a0:	d138      	bne.n	800b814 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800b7a2:	2380      	movs	r3, #128	@ 0x80
 800b7a4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b7a8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b7ac:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b7b0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b7b4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b7b8:	f88d 0020 	strb.w	r0, [sp, #32]
 800b7bc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b7c0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b7c4:	4630      	mov	r0, r6
 800b7c6:	9203      	str	r2, [sp, #12]
 800b7c8:	f7ff ff5c 	bl	800b684 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b7cc:	2c0b      	cmp	r4, #11
 800b7ce:	bf98      	it	ls
 800b7d0:	4b1b      	ldrls	r3, [pc, #108]	@ (800b840 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b7d2:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800b7d6:	bf98      	it	ls
 800b7d8:	5d19      	ldrbls	r1, [r3, r4]
 800b7da:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b7de:	bf88      	it	hi
 800b7e0:	2100      	movhi	r1, #0
 800b7e2:	fb02 8307 	mla	r3, r2, r7, r8
 800b7e6:	10c9      	asrs	r1, r1, #3
 800b7e8:	fb01 0003 	mla	r0, r1, r3, r0
 800b7ec:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800b7f0:	9005      	str	r0, [sp, #20]
 800b7f2:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b7f6:	6870      	ldr	r0, [r6, #4]
 800b7f8:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800b7fc:	2300      	movs	r3, #0
 800b7fe:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b802:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b806:	6803      	ldr	r3, [r0, #0]
 800b808:	a901      	add	r1, sp, #4
 800b80a:	685b      	ldr	r3, [r3, #4]
 800b80c:	4798      	blx	r3
 800b80e:	b00a      	add	sp, #40	@ 0x28
 800b810:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b814:	2d02      	cmp	r5, #2
 800b816:	d109      	bne.n	800b82c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800b818:	28ff      	cmp	r0, #255	@ 0xff
 800b81a:	d105      	bne.n	800b828 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800b81c:	f1bc 0f00 	cmp.w	ip, #0
 800b820:	bf14      	ite	ne
 800b822:	2340      	movne	r3, #64	@ 0x40
 800b824:	2320      	moveq	r3, #32
 800b826:	e7bd      	b.n	800b7a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b828:	2340      	movs	r3, #64	@ 0x40
 800b82a:	e7bb      	b.n	800b7a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b82c:	28ff      	cmp	r0, #255	@ 0xff
 800b82e:	d105      	bne.n	800b83c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800b830:	f1bc 0f00 	cmp.w	ip, #0
 800b834:	bf14      	ite	ne
 800b836:	2304      	movne	r3, #4
 800b838:	2301      	moveq	r3, #1
 800b83a:	e7b3      	b.n	800b7a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b83c:	2304      	movs	r3, #4
 800b83e:	e7b1      	b.n	800b7a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b840:	08027638 	.word	0x08027638

0800b844 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b848:	b08b      	sub	sp, #44	@ 0x2c
 800b84a:	461d      	mov	r5, r3
 800b84c:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800b850:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800b854:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800b858:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800b85c:	bf14      	ite	ne
 800b85e:	2308      	movne	r3, #8
 800b860:	2302      	moveq	r3, #2
 800b862:	2400      	movs	r4, #0
 800b864:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b868:	4688      	mov	r8, r1
 800b86a:	4693      	mov	fp, r2
 800b86c:	9404      	str	r4, [sp, #16]
 800b86e:	4607      	mov	r7, r0
 800b870:	f7ff ff08 	bl	800b684 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b874:	2e0b      	cmp	r6, #11
 800b876:	bf98      	it	ls
 800b878:	4b15      	ldrls	r3, [pc, #84]	@ (800b8d0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b87a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800b87e:	bf98      	it	ls
 800b880:	5d9c      	ldrbls	r4, [r3, r6]
 800b882:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b886:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b88a:	fb05 b50a 	mla	r5, r5, sl, fp
 800b88e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b892:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b896:	10e4      	asrs	r4, r4, #3
 800b898:	fb04 0405 	mla	r4, r4, r5, r0
 800b89c:	2300      	movs	r3, #0
 800b89e:	6878      	ldr	r0, [r7, #4]
 800b8a0:	9405      	str	r4, [sp, #20]
 800b8a2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b8a6:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b8aa:	f8cd 8010 	str.w	r8, [sp, #16]
 800b8ae:	f88d 9020 	strb.w	r9, [sp, #32]
 800b8b2:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800b8b6:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b8ba:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800b8be:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800b8c2:	6803      	ldr	r3, [r0, #0]
 800b8c4:	a901      	add	r1, sp, #4
 800b8c6:	685b      	ldr	r3, [r3, #4]
 800b8c8:	4798      	blx	r3
 800b8ca:	b00b      	add	sp, #44	@ 0x2c
 800b8cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b8d0:	08027638 	.word	0x08027638

0800b8d4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b8d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b8d8:	461e      	mov	r6, r3
 800b8da:	4b0a      	ldr	r3, [pc, #40]	@ (800b904 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b8dc:	460f      	mov	r7, r1
 800b8de:	881d      	ldrh	r5, [r3, #0]
 800b8e0:	4690      	mov	r8, r2
 800b8e2:	f7f7 fbe9 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 800b8e6:	6803      	ldr	r3, [r0, #0]
 800b8e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b8ea:	4798      	blx	r3
 800b8ec:	280b      	cmp	r0, #11
 800b8ee:	bf9a      	itte	ls
 800b8f0:	4b05      	ldrls	r3, [pc, #20]	@ (800b908 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b8f2:	5c1c      	ldrbls	r4, [r3, r0]
 800b8f4:	2400      	movhi	r4, #0
 800b8f6:	fb08 7005 	mla	r0, r8, r5, r7
 800b8fa:	10e4      	asrs	r4, r4, #3
 800b8fc:	fb04 6000 	mla	r0, r4, r0, r6
 800b900:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b904:	200157ba 	.word	0x200157ba
 800b908:	08027638 	.word	0x08027638

0800b90c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b90c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b90e:	b08b      	sub	sp, #44	@ 0x2c
 800b910:	461f      	mov	r7, r3
 800b912:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b916:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b91a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b91e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b922:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b926:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b92a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b92e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b932:	2500      	movs	r5, #0
 800b934:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b938:	f88d 3020 	strb.w	r3, [sp, #32]
 800b93c:	4604      	mov	r4, r0
 800b93e:	4616      	mov	r6, r2
 800b940:	9504      	str	r5, [sp, #16]
 800b942:	f7ff fe9f 	bl	800b684 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b946:	463a      	mov	r2, r7
 800b948:	4631      	mov	r1, r6
 800b94a:	4603      	mov	r3, r0
 800b94c:	4620      	mov	r0, r4
 800b94e:	f7ff ffc1 	bl	800b8d4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b952:	4b0e      	ldr	r3, [pc, #56]	@ (800b98c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b954:	9005      	str	r0, [sp, #20]
 800b956:	881b      	ldrh	r3, [r3, #0]
 800b958:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b95c:	f7f7 fbac 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 800b960:	6803      	ldr	r3, [r0, #0]
 800b962:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b964:	4798      	blx	r3
 800b966:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800b968:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800b96c:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800b970:	9304      	str	r3, [sp, #16]
 800b972:	6860      	ldr	r0, [r4, #4]
 800b974:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b978:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b97c:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800b980:	6803      	ldr	r3, [r0, #0]
 800b982:	a901      	add	r1, sp, #4
 800b984:	685b      	ldr	r3, [r3, #4]
 800b986:	4798      	blx	r3
 800b988:	b00b      	add	sp, #44	@ 0x2c
 800b98a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b98c:	200157ba 	.word	0x200157ba

0800b990 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b990:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b992:	b08d      	sub	sp, #52	@ 0x34
 800b994:	466b      	mov	r3, sp
 800b996:	e883 0006 	stmia.w	r3, {r1, r2}
 800b99a:	2300      	movs	r3, #0
 800b99c:	9306      	str	r3, [sp, #24]
 800b99e:	6803      	ldr	r3, [r0, #0]
 800b9a0:	f8bd 6000 	ldrh.w	r6, [sp]
 800b9a4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b9a6:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b9aa:	2501      	movs	r5, #1
 800b9ac:	9503      	str	r5, [sp, #12]
 800b9ae:	4604      	mov	r4, r0
 800b9b0:	4798      	blx	r3
 800b9b2:	463a      	mov	r2, r7
 800b9b4:	4631      	mov	r1, r6
 800b9b6:	4603      	mov	r3, r0
 800b9b8:	4620      	mov	r0, r4
 800b9ba:	f7ff ff8b 	bl	800b8d4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b9be:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800b9c0:	9307      	str	r3, [sp, #28]
 800b9c2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b9c6:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b9ca:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b9ce:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b9d2:	4b0f      	ldr	r3, [pc, #60]	@ (800ba10 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b9d4:	9004      	str	r0, [sp, #16]
 800b9d6:	881b      	ldrh	r3, [r3, #0]
 800b9d8:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b9dc:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b9e0:	f7f7 fb6a 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 800b9e4:	6803      	ldr	r3, [r0, #0]
 800b9e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b9e8:	4798      	blx	r3
 800b9ea:	23ff      	movs	r3, #255	@ 0xff
 800b9ec:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b9f0:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b9f4:	6860      	ldr	r0, [r4, #4]
 800b9f6:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b9fa:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b9fe:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800ba02:	6803      	ldr	r3, [r0, #0]
 800ba04:	a903      	add	r1, sp, #12
 800ba06:	685b      	ldr	r3, [r3, #4]
 800ba08:	4798      	blx	r3
 800ba0a:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800ba0c:	b00d      	add	sp, #52	@ 0x34
 800ba0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba10:	200157ba 	.word	0x200157ba

0800ba14 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800ba14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba18:	b08c      	sub	sp, #48	@ 0x30
 800ba1a:	461e      	mov	r6, r3
 800ba1c:	466d      	mov	r5, sp
 800ba1e:	2300      	movs	r3, #0
 800ba20:	e885 0006 	stmia.w	r5, {r1, r2}
 800ba24:	9306      	str	r3, [sp, #24]
 800ba26:	6803      	ldr	r3, [r0, #0]
 800ba28:	f8bd 7000 	ldrh.w	r7, [sp]
 800ba2c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ba2e:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800ba32:	2501      	movs	r5, #1
 800ba34:	9503      	str	r5, [sp, #12]
 800ba36:	4604      	mov	r4, r0
 800ba38:	4798      	blx	r3
 800ba3a:	4642      	mov	r2, r8
 800ba3c:	4639      	mov	r1, r7
 800ba3e:	4603      	mov	r3, r0
 800ba40:	4620      	mov	r0, r4
 800ba42:	f7ff ff47 	bl	800b8d4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ba46:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ba4a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ba4e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ba52:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800ba56:	4b11      	ldr	r3, [pc, #68]	@ (800ba9c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800ba58:	9004      	str	r0, [sp, #16]
 800ba5a:	881b      	ldrh	r3, [r3, #0]
 800ba5c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800ba60:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800ba62:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800ba66:	9607      	str	r6, [sp, #28]
 800ba68:	f7f7 fb26 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 800ba6c:	6803      	ldr	r3, [r0, #0]
 800ba6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ba70:	4798      	blx	r3
 800ba72:	23ff      	movs	r3, #255	@ 0xff
 800ba74:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800ba78:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800ba7c:	6860      	ldr	r0, [r4, #4]
 800ba7e:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800ba82:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800ba86:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800ba8a:	6803      	ldr	r3, [r0, #0]
 800ba8c:	a903      	add	r1, sp, #12
 800ba8e:	685b      	ldr	r3, [r3, #4]
 800ba90:	4798      	blx	r3
 800ba92:	4630      	mov	r0, r6
 800ba94:	b00c      	add	sp, #48	@ 0x30
 800ba96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ba9a:	bf00      	nop
 800ba9c:	200157ba 	.word	0x200157ba

0800baa0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800baa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800baa2:	b085      	sub	sp, #20
 800baa4:	ac02      	add	r4, sp, #8
 800baa6:	e884 0006 	stmia.w	r4, {r1, r2}
 800baaa:	4605      	mov	r5, r0
 800baac:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800bab0:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800bab4:	f7ff fde6 	bl	800b684 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bab8:	463a      	mov	r2, r7
 800baba:	4603      	mov	r3, r0
 800babc:	4631      	mov	r1, r6
 800babe:	4628      	mov	r0, r5
 800bac0:	f7ff ff08 	bl	800b8d4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bac4:	4a05      	ldr	r2, [pc, #20]	@ (800badc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800bac6:	682b      	ldr	r3, [r5, #0]
 800bac8:	8812      	ldrh	r2, [r2, #0]
 800baca:	9200      	str	r2, [sp, #0]
 800bacc:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 800bace:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bad2:	4603      	mov	r3, r0
 800bad4:	4628      	mov	r0, r5
 800bad6:	47b0      	blx	r6
 800bad8:	b005      	add	sp, #20
 800bada:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800badc:	200157ba 	.word	0x200157ba

0800bae0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800bae0:	b570      	push	{r4, r5, r6, lr}
 800bae2:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800bae6:	4604      	mov	r4, r0
 800bae8:	b19b      	cbz	r3, 800bb12 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800baea:	2002      	movs	r0, #2
 800baec:	f7f6 fa7a 	bl	8001fe4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800baf0:	2300      	movs	r3, #0
 800baf2:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800baf6:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800bafa:	6823      	ldr	r3, [r4, #0]
 800bafc:	4620      	mov	r0, r4
 800bafe:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 800bb02:	f7ff fdbf 	bl	800b684 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb06:	462b      	mov	r3, r5
 800bb08:	4601      	mov	r1, r0
 800bb0a:	4620      	mov	r0, r4
 800bb0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb10:	4718      	bx	r3
 800bb12:	bd70      	pop	{r4, r5, r6, pc}

0800bb14 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800bb14:	b538      	push	{r3, r4, r5, lr}
 800bb16:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800bb1a:	428b      	cmp	r3, r1
 800bb1c:	4604      	mov	r4, r0
 800bb1e:	460d      	mov	r5, r1
 800bb20:	d006      	beq.n	800bb30 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800bb22:	6803      	ldr	r3, [r0, #0]
 800bb24:	b929      	cbnz	r1, 800bb32 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800bb26:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800bb2a:	4798      	blx	r3
 800bb2c:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800bb30:	bd38      	pop	{r3, r4, r5, pc}
 800bb32:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800bb36:	e7f8      	b.n	800bb2a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bb38 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bb38:	b510      	push	{r4, lr}
 800bb3a:	4b0c      	ldr	r3, [pc, #48]	@ (800bb6c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 800bb3c:	781b      	ldrb	r3, [r3, #0]
 800bb3e:	4604      	mov	r4, r0
 800bb40:	b953      	cbnz	r3, 800bb58 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800bb42:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800bb46:	b93b      	cbnz	r3, 800bb58 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800bb48:	6840      	ldr	r0, [r0, #4]
 800bb4a:	f000 f92b 	bl	800bda4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bb4e:	b118      	cbz	r0, 800bb58 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800bb50:	6862      	ldr	r2, [r4, #4]
 800bb52:	7a53      	ldrb	r3, [r2, #9]
 800bb54:	2b00      	cmp	r3, #0
 800bb56:	d0fc      	beq.n	800bb52 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 800bb58:	f7f6 fb90 	bl	800227c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bb5c:	4620      	mov	r0, r4
 800bb5e:	2100      	movs	r1, #0
 800bb60:	f7ff ffd8 	bl	800bb14 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bb64:	4620      	mov	r0, r4
 800bb66:	f7ff fd8d 	bl	800b684 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb6a:	bd10      	pop	{r4, pc}
 800bb6c:	200157be 	.word	0x200157be

0800bb70 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800bb70:	b570      	push	{r4, r5, r6, lr}
 800bb72:	4604      	mov	r4, r0
 800bb74:	6803      	ldr	r3, [r0, #0]
 800bb76:	b919      	cbnz	r1, 800bb80 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800bb78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bb7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb7e:	4718      	bx	r3
 800bb80:	2200      	movs	r2, #0
 800bb82:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800bb86:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800bb8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bb8c:	4798      	blx	r3
 800bb8e:	6863      	ldr	r3, [r4, #4]
 800bb90:	2101      	movs	r1, #1
 800bb92:	4605      	mov	r5, r0
 800bb94:	7299      	strb	r1, [r3, #10]
 800bb96:	4620      	mov	r0, r4
 800bb98:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800bb9c:	f7ff ffba 	bl	800bb14 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bba0:	4628      	mov	r0, r5
 800bba2:	bd70      	pop	{r4, r5, r6, pc}

0800bba4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bba4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bba8:	1a13      	subs	r3, r2, r0
 800bbaa:	4258      	negs	r0, r3
 800bbac:	4158      	adcs	r0, r3
 800bbae:	4770      	bx	lr

0800bbb0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bbb0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bbb4:	1a9b      	subs	r3, r3, r2
 800bbb6:	2b00      	cmp	r3, #0
 800bbb8:	bfdc      	itt	le
 800bbba:	6882      	ldrle	r2, [r0, #8]
 800bbbc:	189b      	addle	r3, r3, r2
 800bbbe:	2b01      	cmp	r3, #1
 800bbc0:	bfcc      	ite	gt
 800bbc2:	2000      	movgt	r0, #0
 800bbc4:	2001      	movle	r0, #1
 800bbc6:	4770      	bx	lr

0800bbc8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bbc8:	6902      	ldr	r2, [r0, #16]
 800bbca:	6843      	ldr	r3, [r0, #4]
 800bbcc:	2024      	movs	r0, #36	@ 0x24
 800bbce:	fb00 3002 	mla	r0, r0, r2, r3
 800bbd2:	4770      	bx	lr

0800bbd4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bbd4:	6803      	ldr	r3, [r0, #0]
 800bbd6:	691b      	ldr	r3, [r3, #16]
 800bbd8:	4718      	bx	r3

0800bbda <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bbda:	b570      	push	{r4, r5, r6, lr}
 800bbdc:	2301      	movs	r3, #1
 800bbde:	7203      	strb	r3, [r0, #8]
 800bbe0:	4604      	mov	r4, r0
 800bbe2:	6840      	ldr	r0, [r0, #4]
 800bbe4:	6803      	ldr	r3, [r0, #0]
 800bbe6:	699b      	ldr	r3, [r3, #24]
 800bbe8:	4798      	blx	r3
 800bbea:	6803      	ldr	r3, [r0, #0]
 800bbec:	2b40      	cmp	r3, #64	@ 0x40
 800bbee:	4605      	mov	r5, r0
 800bbf0:	d00c      	beq.n	800bc0c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bbf2:	d810      	bhi.n	800bc16 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bbf4:	2b04      	cmp	r3, #4
 800bbf6:	d01d      	beq.n	800bc34 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bbf8:	d804      	bhi.n	800bc04 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bbfa:	2b01      	cmp	r3, #1
 800bbfc:	d006      	beq.n	800bc0c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bbfe:	2b02      	cmp	r3, #2
 800bc00:	d02c      	beq.n	800bc5c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bc02:	bd70      	pop	{r4, r5, r6, pc}
 800bc04:	2b08      	cmp	r3, #8
 800bc06:	d01d      	beq.n	800bc44 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bc08:	2b20      	cmp	r3, #32
 800bc0a:	d1fa      	bne.n	800bc02 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bc0c:	6823      	ldr	r3, [r4, #0]
 800bc0e:	4620      	mov	r0, r4
 800bc10:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bc12:	4798      	blx	r3
 800bc14:	e013      	b.n	800bc3e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bc16:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800bc1a:	d0f7      	beq.n	800bc0c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc1c:	d804      	bhi.n	800bc28 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bc1e:	2b80      	cmp	r3, #128	@ 0x80
 800bc20:	d0f4      	beq.n	800bc0c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc22:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800bc26:	e7f0      	b.n	800bc0a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bc28:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800bc2c:	d0ee      	beq.n	800bc0c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc2e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800bc32:	e7e5      	b.n	800bc00 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bc34:	6823      	ldr	r3, [r4, #0]
 800bc36:	7f01      	ldrb	r1, [r0, #28]
 800bc38:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bc3a:	4620      	mov	r0, r4
 800bc3c:	4798      	blx	r3
 800bc3e:	6823      	ldr	r3, [r4, #0]
 800bc40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bc42:	e006      	b.n	800bc52 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bc44:	6823      	ldr	r3, [r4, #0]
 800bc46:	7f01      	ldrb	r1, [r0, #28]
 800bc48:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bc4a:	4620      	mov	r0, r4
 800bc4c:	4798      	blx	r3
 800bc4e:	6823      	ldr	r3, [r4, #0]
 800bc50:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bc52:	4629      	mov	r1, r5
 800bc54:	4620      	mov	r0, r4
 800bc56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc5a:	4718      	bx	r3
 800bc5c:	6823      	ldr	r3, [r4, #0]
 800bc5e:	4620      	mov	r0, r4
 800bc60:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bc62:	4798      	blx	r3
 800bc64:	e7f3      	b.n	800bc4e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bc66 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bc66:	4770      	bx	lr

0800bc68 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bc68:	4770      	bx	lr

0800bc6a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bc6a:	4770      	bx	lr

0800bc6c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bc6c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bc70:	1ad2      	subs	r2, r2, r3
 800bc72:	2a00      	cmp	r2, #0
 800bc74:	b510      	push	{r4, lr}
 800bc76:	bfdc      	itt	le
 800bc78:	6884      	ldrle	r4, [r0, #8]
 800bc7a:	1912      	addle	r2, r2, r4
 800bc7c:	2a01      	cmp	r2, #1
 800bc7e:	dd16      	ble.n	800bcae <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bc80:	6842      	ldr	r2, [r0, #4]
 800bc82:	2424      	movs	r4, #36	@ 0x24
 800bc84:	fb04 2303 	mla	r3, r4, r3, r2
 800bc88:	f101 0220 	add.w	r2, r1, #32
 800bc8c:	f851 4b04 	ldr.w	r4, [r1], #4
 800bc90:	f843 4b04 	str.w	r4, [r3], #4
 800bc94:	4291      	cmp	r1, r2
 800bc96:	d1f9      	bne.n	800bc8c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bc98:	780a      	ldrb	r2, [r1, #0]
 800bc9a:	701a      	strb	r2, [r3, #0]
 800bc9c:	68c3      	ldr	r3, [r0, #12]
 800bc9e:	6882      	ldr	r2, [r0, #8]
 800bca0:	f3bf 8f5b 	dmb	ish
 800bca4:	3301      	adds	r3, #1
 800bca6:	429a      	cmp	r2, r3
 800bca8:	bfd8      	it	le
 800bcaa:	1a9b      	suble	r3, r3, r2
 800bcac:	60c3      	str	r3, [r0, #12]
 800bcae:	bd10      	pop	{r4, pc}

0800bcb0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bcb0:	6903      	ldr	r3, [r0, #16]
 800bcb2:	6882      	ldr	r2, [r0, #8]
 800bcb4:	f3bf 8f5b 	dmb	ish
 800bcb8:	3301      	adds	r3, #1
 800bcba:	429a      	cmp	r2, r3
 800bcbc:	bfd8      	it	le
 800bcbe:	1a9b      	suble	r3, r3, r2
 800bcc0:	6103      	str	r3, [r0, #16]
 800bcc2:	4770      	bx	lr

0800bcc4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bcc4:	b570      	push	{r4, r5, r6, lr}
 800bcc6:	4604      	mov	r4, r0
 800bcc8:	460e      	mov	r6, r1
 800bcca:	6860      	ldr	r0, [r4, #4]
 800bccc:	6803      	ldr	r3, [r0, #0]
 800bcce:	685b      	ldr	r3, [r3, #4]
 800bcd0:	4798      	blx	r3
 800bcd2:	2800      	cmp	r0, #0
 800bcd4:	d1f9      	bne.n	800bcca <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bcd6:	4d0d      	ldr	r5, [pc, #52]	@ (800bd0c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bcd8:	6828      	ldr	r0, [r5, #0]
 800bcda:	6803      	ldr	r3, [r0, #0]
 800bcdc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800bce0:	4798      	blx	r3
 800bce2:	f7f6 fad9 	bl	8002298 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bce6:	6828      	ldr	r0, [r5, #0]
 800bce8:	2101      	movs	r1, #1
 800bcea:	f7ff ff13 	bl	800bb14 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bcee:	6860      	ldr	r0, [r4, #4]
 800bcf0:	6803      	ldr	r3, [r0, #0]
 800bcf2:	4631      	mov	r1, r6
 800bcf4:	689b      	ldr	r3, [r3, #8]
 800bcf6:	4798      	blx	r3
 800bcf8:	6823      	ldr	r3, [r4, #0]
 800bcfa:	4620      	mov	r0, r4
 800bcfc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bcfe:	4798      	blx	r3
 800bd00:	6828      	ldr	r0, [r5, #0]
 800bd02:	6803      	ldr	r3, [r0, #0]
 800bd04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd08:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bd0a:	4718      	bx	r3
 800bd0c:	200157c0 	.word	0x200157c0

0800bd10 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bd10:	b508      	push	{r3, lr}
 800bd12:	f7f6 fab3 	bl	800227c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bd16:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bd1a:	f7f6 bab7 	b.w	800228c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bd1e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bd1e:	b510      	push	{r4, lr}
 800bd20:	2114      	movs	r1, #20
 800bd22:	4604      	mov	r4, r0
 800bd24:	f017 fd1a 	bl	802375c <_ZdlPvj>
 800bd28:	4620      	mov	r0, r4
 800bd2a:	bd10      	pop	{r4, pc}

0800bd2c <_ZN8touchgfx13DMA_Interface5startEv>:
 800bd2c:	b510      	push	{r4, lr}
 800bd2e:	4604      	mov	r4, r0
 800bd30:	6840      	ldr	r0, [r0, #4]
 800bd32:	6803      	ldr	r3, [r0, #0]
 800bd34:	681b      	ldr	r3, [r3, #0]
 800bd36:	4798      	blx	r3
 800bd38:	b948      	cbnz	r0, 800bd4e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd3a:	7a63      	ldrb	r3, [r4, #9]
 800bd3c:	b13b      	cbz	r3, 800bd4e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd3e:	7a23      	ldrb	r3, [r4, #8]
 800bd40:	b92b      	cbnz	r3, 800bd4e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd42:	6823      	ldr	r3, [r4, #0]
 800bd44:	4620      	mov	r0, r4
 800bd46:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bd48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd4c:	4718      	bx	r3
 800bd4e:	bd10      	pop	{r4, pc}

0800bd50 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bd50:	b570      	push	{r4, r5, r6, lr}
 800bd52:	4604      	mov	r4, r0
 800bd54:	6840      	ldr	r0, [r0, #4]
 800bd56:	6803      	ldr	r3, [r0, #0]
 800bd58:	681b      	ldr	r3, [r3, #0]
 800bd5a:	4798      	blx	r3
 800bd5c:	4605      	mov	r5, r0
 800bd5e:	b930      	cbnz	r0, 800bd6e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bd60:	7a23      	ldrb	r3, [r4, #8]
 800bd62:	b123      	cbz	r3, 800bd6e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bd64:	6860      	ldr	r0, [r4, #4]
 800bd66:	6803      	ldr	r3, [r0, #0]
 800bd68:	695b      	ldr	r3, [r3, #20]
 800bd6a:	4798      	blx	r3
 800bd6c:	7225      	strb	r5, [r4, #8]
 800bd6e:	6860      	ldr	r0, [r4, #4]
 800bd70:	6803      	ldr	r3, [r0, #0]
 800bd72:	681b      	ldr	r3, [r3, #0]
 800bd74:	4798      	blx	r3
 800bd76:	b928      	cbnz	r0, 800bd84 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bd78:	6823      	ldr	r3, [r4, #0]
 800bd7a:	4620      	mov	r0, r4
 800bd7c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bd7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd82:	4718      	bx	r3
 800bd84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd88:	f7f6 ba8e 	b.w	80022a8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bd8c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bd8c:	b510      	push	{r4, lr}
 800bd8e:	4c04      	ldr	r4, [pc, #16]	@ (800bda0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bd90:	6082      	str	r2, [r0, #8]
 800bd92:	2200      	movs	r2, #0
 800bd94:	e9c0 4100 	strd	r4, r1, [r0]
 800bd98:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bd9c:	bd10      	pop	{r4, pc}
 800bd9e:	bf00      	nop
 800bda0:	0802764c 	.word	0x0802764c

0800bda4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bda4:	6840      	ldr	r0, [r0, #4]
 800bda6:	6803      	ldr	r3, [r0, #0]
 800bda8:	681b      	ldr	r3, [r3, #0]
 800bdaa:	4718      	bx	r3
 800bdac:	0000      	movs	r0, r0
	...

0800bdb0 <_ZN8touchgfxL10applyNoiseEiihhh>:
 800bdb0:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800bdb4:	4f20      	ldr	r7, [pc, #128]	@ (800be38 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 800bdb6:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800bdba:	fb80 0101 	smull	r0, r1, r0, r1
 800bdbe:	fba0 bc07 	umull	fp, ip, r0, r7
 800bdc2:	fb07 cc01 	mla	ip, r7, r1, ip
 800bdc6:	fb0b f70c 	mul.w	r7, fp, ip
 800bdca:	fbab 010b 	umull	r0, r1, fp, fp
 800bdce:	461c      	mov	r4, r3
 800bdd0:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 800bdd4:	fb00 f30c 	mul.w	r3, r0, ip
 800bdd8:	fb0b 3301 	mla	r3, fp, r1, r3
 800bddc:	fba0 010b 	umull	r0, r1, r0, fp
 800bde0:	4616      	mov	r6, r2
 800bde2:	4419      	add	r1, r3
 800bde4:	a312      	add	r3, pc, #72	@ (adr r3, 800be30 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 800bde6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bdea:	f7f4 fa51 	bl	8000290 <__aeabi_ldivmod>
 800bdee:	2ef7      	cmp	r6, #247	@ 0xf7
 800bdf0:	b290      	uxth	r0, r2
 800bdf2:	bf9e      	ittt	ls
 800bdf4:	f002 0207 	andls.w	r2, r2, #7
 800bdf8:	18b6      	addls	r6, r6, r2
 800bdfa:	b2f6      	uxtbls	r6, r6
 800bdfc:	2cfb      	cmp	r4, #251	@ 0xfb
 800bdfe:	bf9e      	ittt	ls
 800be00:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 800be04:	18e4      	addls	r4, r4, r3
 800be06:	b2e4      	uxtbls	r4, r4
 800be08:	2df7      	cmp	r5, #247	@ 0xf7
 800be0a:	bf9c      	itt	ls
 800be0c:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 800be10:	182d      	addls	r5, r5, r0
 800be12:	480a      	ldr	r0, [pc, #40]	@ (800be3c <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 800be14:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800be18:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 800be1c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 800be20:	bf98      	it	ls
 800be22:	b2ed      	uxtbls	r5, r5
 800be24:	4304      	orrs	r4, r0
 800be26:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 800be2a:	b280      	uxth	r0, r0
 800be2c:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800be30:	797a8d77 	.word	0x797a8d77
 800be34:	00000000 	.word	0x00000000
 800be38:	00ec4ba7 	.word	0x00ec4ba7
 800be3c:	fffff800 	.word	0xfffff800

0800be40 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 800be40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be44:	ed2d 8b02 	vpush	{d8}
 800be48:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800be4c:	b087      	sub	sp, #28
 800be4e:	7c41      	ldrb	r1, [r0, #17]
 800be50:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 800be54:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 800be58:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 800be5c:	4605      	mov	r5, r0
 800be5e:	2900      	cmp	r1, #0
 800be60:	f000 809a 	beq.w	800bf98 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 800be64:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800be68:	ed90 7a08 	vldr	s14, [r0, #32]
 800be6c:	68c0      	ldr	r0, [r0, #12]
 800be6e:	454a      	cmp	r2, r9
 800be70:	db25      	blt.n	800bebe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 800be72:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800be76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800be7a:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800be7e:	bfc8      	it	gt
 800be80:	2200      	movgt	r2, #0
 800be82:	5882      	ldr	r2, [r0, r2]
 800be84:	2100      	movs	r1, #0
 800be86:	7c2d      	ldrb	r5, [r5, #16]
 800be88:	ea4f 2812 	mov.w	r8, r2, lsr #8
 800be8c:	0950      	lsrs	r0, r2, #5
 800be8e:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 800be92:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800be96:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 800be9a:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 800be9e:	2d00      	cmp	r5, #0
 800bea0:	d044      	beq.n	800bf2c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800bea2:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800bea6:	d141      	bne.n	800bf2c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800bea8:	bb61      	cbnz	r1, 800bf04 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 800beaa:	ea4e 0000 	orr.w	r0, lr, r0
 800beae:	ea4c 0500 	orr.w	r5, ip, r0
 800beb2:	42bc      	cmp	r4, r7
 800beb4:	f080 8217 	bcs.w	800c2e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800beb8:	f824 5b02 	strh.w	r5, [r4], #2
 800bebc:	e7f9      	b.n	800beb2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 800bebe:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800bec2:	454f      	cmp	r7, r9
 800bec4:	dc08      	bgt.n	800bed8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 800bec6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800beca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bece:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800bed2:	bfd8      	it	le
 800bed4:	2200      	movle	r2, #0
 800bed6:	e7d4      	b.n	800be82 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 800bed8:	eba9 0202 	sub.w	r2, r9, r2
 800bedc:	ee07 2a90 	vmov	s15, r2
 800bee0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bee4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800bee8:	ee67 7a87 	vmul.f32	s15, s15, s14
 800beec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bef0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bef4:	ee17 2a90 	vmov	r2, s15
 800bef8:	bfd8      	it	le
 800befa:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 800befe:	0092      	lsls	r2, r2, #2
 800bf00:	5882      	ldr	r2, [r0, r2]
 800bf02:	e7c0      	b.n	800be86 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 800bf04:	b2d5      	uxtb	r5, r2
 800bf06:	fa5f f888 	uxtb.w	r8, r8
 800bf0a:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 800bf0e:	461e      	mov	r6, r3
 800bf10:	42bc      	cmp	r4, r7
 800bf12:	f080 81e8 	bcs.w	800c2e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800bf16:	4630      	mov	r0, r6
 800bf18:	9500      	str	r5, [sp, #0]
 800bf1a:	4643      	mov	r3, r8
 800bf1c:	4652      	mov	r2, sl
 800bf1e:	4649      	mov	r1, r9
 800bf20:	f7ff ff46 	bl	800bdb0 <_ZN8touchgfxL10applyNoiseEiihhh>
 800bf24:	3601      	adds	r6, #1
 800bf26:	f824 0b02 	strh.w	r0, [r4], #2
 800bf2a:	e7f1      	b.n	800bf10 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 800bf2c:	0e12      	lsrs	r2, r2, #24
 800bf2e:	fb02 f20a 	mul.w	r2, r2, sl
 800bf32:	1c53      	adds	r3, r2, #1
 800bf34:	eb03 2222 	add.w	r2, r3, r2, asr #8
 800bf38:	1212      	asrs	r2, r2, #8
 800bf3a:	fb02 f50c 	mul.w	r5, r2, ip
 800bf3e:	fb02 f10e 	mul.w	r1, r2, lr
 800bf42:	4350      	muls	r0, r2
 800bf44:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 800c2f8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800bf48:	43d2      	mvns	r2, r2
 800bf4a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800bf4e:	26ff      	movs	r6, #255	@ 0xff
 800bf50:	42bc      	cmp	r4, r7
 800bf52:	f080 81c8 	bcs.w	800c2e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800bf56:	f8b4 e000 	ldrh.w	lr, [r4]
 800bf5a:	ea0e 030c 	and.w	r3, lr, ip
 800bf5e:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800bf62:	fb02 1303 	mla	r3, r2, r3, r1
 800bf66:	fb02 0808 	mla	r8, r2, r8, r0
 800bf6a:	fb93 f3f6 	sdiv	r3, r3, r6
 800bf6e:	fb98 f8f6 	sdiv	r8, r8, r6
 800bf72:	ea03 030c 	and.w	r3, r3, ip
 800bf76:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800bf7a:	f00e 0e1f 	and.w	lr, lr, #31
 800bf7e:	ea43 0308 	orr.w	r3, r3, r8
 800bf82:	fb02 5e0e 	mla	lr, r2, lr, r5
 800bf86:	fb9e fef6 	sdiv	lr, lr, r6
 800bf8a:	f00e 0e1f 	and.w	lr, lr, #31
 800bf8e:	ea43 030e 	orr.w	r3, r3, lr
 800bf92:	f824 3b02 	strh.w	r3, [r4], #2
 800bf96:	e7db      	b.n	800bf50 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 800bf98:	7c82      	ldrb	r2, [r0, #18]
 800bf9a:	2a00      	cmp	r2, #0
 800bf9c:	d04f      	beq.n	800c03e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 800bf9e:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800bfa2:	ee07 2a90 	vmov	s15, r2
 800bfa6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bfaa:	ee07 3a10 	vmov	s14, r3
 800bfae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800bfb2:	461f      	mov	r7, r3
 800bfb4:	eef4 6ae7 	vcmpe.f32	s13, s15
 800bfb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bfbc:	f200 8095 	bhi.w	800c0ea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 800bfc0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800bfc4:	ee37 7a87 	vadd.f32	s14, s15, s14
 800bfc8:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800bfcc:	ee37 7a66 	vsub.f32	s14, s14, s13
 800bfd0:	ee06 6a90 	vmov	s13, r6
 800bfd4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800bfd8:	68ea      	ldr	r2, [r5, #12]
 800bfda:	f895 c010 	ldrb.w	ip, [r5, #16]
 800bfde:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800bfe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bfe6:	bf4a      	itet	mi
 800bfe8:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 800bfec:	9602      	strpl	r6, [sp, #8]
 800bfee:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 800bff2:	ed95 7a08 	vldr	s14, [r5, #32]
 800bff6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800bffa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bffe:	bfc8      	it	gt
 800c000:	2100      	movgt	r1, #0
 800c002:	5852      	ldr	r2, [r2, r1]
 800c004:	9902      	ldr	r1, [sp, #8]
 800c006:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 800c00a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800c00e:	0950      	lsrs	r0, r2, #5
 800c010:	9103      	str	r1, [sp, #12]
 800c012:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 800c016:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800c01a:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800c01e:	f1bc 0f00 	cmp.w	ip, #0
 800c022:	d024      	beq.n	800c06e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800c024:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c028:	d121      	bne.n	800c06e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800c02a:	ea4b 0b00 	orr.w	fp, fp, r0
 800c02e:	ea41 010b 	orr.w	r1, r1, fp
 800c032:	9a03      	ldr	r2, [sp, #12]
 800c034:	4294      	cmp	r4, r2
 800c036:	d255      	bcs.n	800c0e4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800c038:	f824 1b02 	strh.w	r1, [r4], #2
 800c03c:	e7f9      	b.n	800c032 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 800c03e:	ee07 9a10 	vmov	s14, r9
 800c042:	edd0 7a06 	vldr	s15, [r0, #24]
 800c046:	edd0 6a05 	vldr	s13, [r0, #20]
 800c04a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c04e:	ee37 7a67 	vsub.f32	s14, s14, s15
 800c052:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800c056:	ed90 7a08 	vldr	s14, [r0, #32]
 800c05a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c05e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c062:	bf44      	itt	mi
 800c064:	ed90 7a07 	vldrmi	s14, [r0, #28]
 800c068:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 800c06c:	e79d      	b.n	800bfaa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 800c06e:	0e12      	lsrs	r2, r2, #24
 800c070:	fb02 f20a 	mul.w	r2, r2, sl
 800c074:	f102 0c01 	add.w	ip, r2, #1
 800c078:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 800c07c:	1212      	asrs	r2, r2, #8
 800c07e:	4350      	muls	r0, r2
 800c080:	4351      	muls	r1, r2
 800c082:	fb02 fb0b 	mul.w	fp, r2, fp
 800c086:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 800c2f8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800c08a:	9004      	str	r0, [sp, #16]
 800c08c:	43d2      	mvns	r2, r2
 800c08e:	9105      	str	r1, [sp, #20]
 800c090:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800c094:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 800c098:	9903      	ldr	r1, [sp, #12]
 800c09a:	428c      	cmp	r4, r1
 800c09c:	d222      	bcs.n	800c0e4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800c09e:	8820      	ldrh	r0, [r4, #0]
 800c0a0:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 800c0a4:	460f      	mov	r7, r1
 800c0a6:	9904      	ldr	r1, [sp, #16]
 800c0a8:	ea00 0c08 	and.w	ip, r0, r8
 800c0ac:	fb02 bc0c 	mla	ip, r2, ip, fp
 800c0b0:	fb02 1107 	mla	r1, r2, r7, r1
 800c0b4:	fb9c fcfe 	sdiv	ip, ip, lr
 800c0b8:	fb91 f1fe 	sdiv	r1, r1, lr
 800c0bc:	ea0c 0c08 	and.w	ip, ip, r8
 800c0c0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 800c0c4:	ea4c 0101 	orr.w	r1, ip, r1
 800c0c8:	f000 0c1f 	and.w	ip, r0, #31
 800c0cc:	9805      	ldr	r0, [sp, #20]
 800c0ce:	fb02 0c0c 	mla	ip, r2, ip, r0
 800c0d2:	fb9c fcfe 	sdiv	ip, ip, lr
 800c0d6:	f00c 0c1f 	and.w	ip, ip, #31
 800c0da:	ea41 010c 	orr.w	r1, r1, ip
 800c0de:	f824 1b02 	strh.w	r1, [r4], #2
 800c0e2:	e7d9      	b.n	800c098 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 800c0e4:	9a02      	ldr	r2, [sp, #8]
 800c0e6:	441a      	add	r2, r3
 800c0e8:	4617      	mov	r7, r2
 800c0ea:	441e      	add	r6, r3
 800c0ec:	b236      	sxth	r6, r6
 800c0ee:	42be      	cmp	r6, r7
 800c0f0:	f340 80f9 	ble.w	800c2e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c0f4:	ed95 7a07 	vldr	s14, [r5, #28]
 800c0f8:	ee06 7a90 	vmov	s13, r7
 800c0fc:	ee37 7a87 	vadd.f32	s14, s15, s14
 800c100:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800c104:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800c108:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c10c:	f340 80b5 	ble.w	800c27a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 800c110:	ee06 6a10 	vmov	s12, r6
 800c114:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800c118:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 800c2f0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 800c11c:	7c2b      	ldrb	r3, [r5, #16]
 800c11e:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800c122:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c126:	bfd8      	it	le
 800c128:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 800c12c:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 800c2f4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 800c130:	bfd8      	it	le
 800c132:	ee17 8a10 	vmovle	r8, s14
 800c136:	ed95 7a08 	vldr	s14, [r5, #32]
 800c13a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c13e:	bfc8      	it	gt
 800c140:	46b0      	movgt	r8, r6
 800c142:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800c146:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c14a:	eba8 0707 	sub.w	r7, r8, r7
 800c14e:	bfd8      	it	le
 800c150:	eeb0 8a46 	vmovle.f32	s16, s12
 800c154:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 800c158:	eea7 8a27 	vfma.f32	s16, s14, s15
 800c15c:	b1db      	cbz	r3, 800c196 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800c15e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c162:	d118      	bne.n	800c196 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800c164:	42bc      	cmp	r4, r7
 800c166:	d262      	bcs.n	800c22e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800c168:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c16c:	68eb      	ldr	r3, [r5, #12]
 800c16e:	ee17 0a90 	vmov	r0, s15
 800c172:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800c176:	b2d3      	uxtb	r3, r2
 800c178:	9300      	str	r3, [sp, #0]
 800c17a:	4649      	mov	r1, r9
 800c17c:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800c180:	f3c2 4207 	ubfx	r2, r2, #16, #8
 800c184:	f7ff fe14 	bl	800bdb0 <_ZN8touchgfxL10applyNoiseEiihhh>
 800c188:	f824 0b02 	strh.w	r0, [r4], #2
 800c18c:	edd5 7a08 	vldr	s15, [r5, #32]
 800c190:	ee38 8a27 	vadd.f32	s16, s16, s15
 800c194:	e7e6      	b.n	800c164 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 800c196:	f8df b160 	ldr.w	fp, [pc, #352]	@ 800c2f8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800c19a:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 800c19e:	42bc      	cmp	r4, r7
 800c1a0:	d245      	bcs.n	800c22e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800c1a2:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c1a6:	68eb      	ldr	r3, [r5, #12]
 800c1a8:	f8b4 e000 	ldrh.w	lr, [r4]
 800c1ac:	ee17 2a90 	vmov	r2, s15
 800c1b0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800c1b4:	0e13      	lsrs	r3, r2, #24
 800c1b6:	fb03 f30a 	mul.w	r3, r3, sl
 800c1ba:	1c58      	adds	r0, r3, #1
 800c1bc:	eb00 2023 	add.w	r0, r0, r3, asr #8
 800c1c0:	1200      	asrs	r0, r0, #8
 800c1c2:	ea6f 0c00 	mvn.w	ip, r0
 800c1c6:	fa5f fc8c 	uxtb.w	ip, ip
 800c1ca:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 800c1ce:	ea0e 030b 	and.w	r3, lr, fp
 800c1d2:	fb0c f303 	mul.w	r3, ip, r3
 800c1d6:	b289      	uxth	r1, r1
 800c1d8:	fb00 3101 	mla	r1, r0, r1, r3
 800c1dc:	fb91 f1f9 	sdiv	r1, r1, r9
 800c1e0:	ea01 030b 	and.w	r3, r1, fp
 800c1e4:	9302      	str	r3, [sp, #8]
 800c1e6:	0953      	lsrs	r3, r2, #5
 800c1e8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c1ec:	4619      	mov	r1, r3
 800c1ee:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 800c1f2:	fb0c f303 	mul.w	r3, ip, r3
 800c1f6:	fb00 3301 	mla	r3, r0, r1, r3
 800c1fa:	f00e 0e1f 	and.w	lr, lr, #31
 800c1fe:	9902      	ldr	r1, [sp, #8]
 800c200:	fb93 f3f9 	sdiv	r3, r3, r9
 800c204:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800c208:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c20c:	fb0c fc0e 	mul.w	ip, ip, lr
 800c210:	4319      	orrs	r1, r3
 800c212:	fb00 c002 	mla	r0, r0, r2, ip
 800c216:	fb90 f0f9 	sdiv	r0, r0, r9
 800c21a:	f000 001f 	and.w	r0, r0, #31
 800c21e:	4301      	orrs	r1, r0
 800c220:	f824 1b02 	strh.w	r1, [r4], #2
 800c224:	edd5 7a08 	vldr	s15, [r5, #32]
 800c228:	ee38 8a27 	vadd.f32	s16, s16, s15
 800c22c:	e7b7      	b.n	800c19e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 800c22e:	4546      	cmp	r6, r8
 800c230:	dd59      	ble.n	800c2e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c232:	edd5 7a08 	vldr	s15, [r5, #32]
 800c236:	68ea      	ldr	r2, [r5, #12]
 800c238:	7c29      	ldrb	r1, [r5, #16]
 800c23a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c23e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c242:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800c246:	bfd8      	it	le
 800c248:	2300      	movle	r3, #0
 800c24a:	eba6 0608 	sub.w	r6, r6, r8
 800c24e:	58d2      	ldr	r2, [r2, r3]
 800c250:	0a10      	lsrs	r0, r2, #8
 800c252:	0953      	lsrs	r3, r2, #5
 800c254:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 800c258:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 800c25c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c260:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 800c264:	b159      	cbz	r1, 800c27e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800c266:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c26a:	d108      	bne.n	800c27e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800c26c:	4318      	orrs	r0, r3
 800c26e:	4338      	orrs	r0, r7
 800c270:	42b4      	cmp	r4, r6
 800c272:	d238      	bcs.n	800c2e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c274:	f824 0b02 	strh.w	r0, [r4], #2
 800c278:	e7fa      	b.n	800c270 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 800c27a:	46b8      	mov	r8, r7
 800c27c:	e7d9      	b.n	800c232 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 800c27e:	0e12      	lsrs	r2, r2, #24
 800c280:	fb02 f10a 	mul.w	r1, r2, sl
 800c284:	1c4a      	adds	r2, r1, #1
 800c286:	eb02 2221 	add.w	r2, r2, r1, asr #8
 800c28a:	1212      	asrs	r2, r2, #8
 800c28c:	fb02 f507 	mul.w	r5, r2, r7
 800c290:	4350      	muls	r0, r2
 800c292:	4353      	muls	r3, r2
 800c294:	f8df c060 	ldr.w	ip, [pc, #96]	@ 800c2f8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800c298:	43d2      	mvns	r2, r2
 800c29a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800c29e:	27ff      	movs	r7, #255	@ 0xff
 800c2a0:	42b4      	cmp	r4, r6
 800c2a2:	d220      	bcs.n	800c2e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c2a4:	f8b4 e000 	ldrh.w	lr, [r4]
 800c2a8:	ea0e 010c 	and.w	r1, lr, ip
 800c2ac:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800c2b0:	fb02 0101 	mla	r1, r2, r1, r0
 800c2b4:	fb02 3808 	mla	r8, r2, r8, r3
 800c2b8:	fb91 f1f7 	sdiv	r1, r1, r7
 800c2bc:	fb98 f8f7 	sdiv	r8, r8, r7
 800c2c0:	ea01 010c 	and.w	r1, r1, ip
 800c2c4:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800c2c8:	f00e 0e1f 	and.w	lr, lr, #31
 800c2cc:	ea41 0108 	orr.w	r1, r1, r8
 800c2d0:	fb02 5e0e 	mla	lr, r2, lr, r5
 800c2d4:	fb9e fef7 	sdiv	lr, lr, r7
 800c2d8:	f00e 0e1f 	and.w	lr, lr, #31
 800c2dc:	ea41 010e 	orr.w	r1, r1, lr
 800c2e0:	f824 1b02 	strh.w	r1, [r4], #2
 800c2e4:	e7dc      	b.n	800c2a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 800c2e6:	b007      	add	sp, #28
 800c2e8:	ecbd 8b02 	vpop	{d8}
 800c2ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c2f0:	00000000 	.word	0x00000000
 800c2f4:	447ffffe 	.word	0x447ffffe
 800c2f8:	fffff800 	.word	0xfffff800

0800c2fc <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 800c2fc:	4770      	bx	lr

0800c2fe <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 800c2fe:	4770      	bx	lr

0800c300 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 800c300:	b510      	push	{r4, lr}
 800c302:	2124      	movs	r1, #36	@ 0x24
 800c304:	4604      	mov	r4, r0
 800c306:	f017 fa29 	bl	802375c <_ZdlPvj>
 800c30a:	4620      	mov	r0, r4
 800c30c:	bd10      	pop	{r4, pc}
	...

0800c310 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800c310:	4b06      	ldr	r3, [pc, #24]	@ (800c32c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800c312:	60c1      	str	r1, [r0, #12]
 800c314:	094a      	lsrs	r2, r1, #5
 800c316:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800c31a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800c31e:	4313      	orrs	r3, r2
 800c320:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800c324:	4319      	orrs	r1, r3
 800c326:	8201      	strh	r1, [r0, #16]
 800c328:	4770      	bx	lr
 800c32a:	bf00      	nop
 800c32c:	fffff800 	.word	0xfffff800

0800c330 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800c330:	f1a0 0008 	sub.w	r0, r0, #8
 800c334:	e7ec      	b.n	800c310 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800c336:	bf00      	nop

0800c338 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800c338:	b508      	push	{r3, lr}
 800c33a:	4b05      	ldr	r3, [pc, #20]	@ (800c350 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800c33c:	6818      	ldr	r0, [r3, #0]
 800c33e:	6803      	ldr	r3, [r0, #0]
 800c340:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c344:	4798      	blx	r3
 800c346:	1e43      	subs	r3, r0, #1
 800c348:	4258      	negs	r0, r3
 800c34a:	4158      	adcs	r0, r3
 800c34c:	bd08      	pop	{r3, pc}
 800c34e:	bf00      	nop
 800c350:	200157c0 	.word	0x200157c0

0800c354 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800c354:	4770      	bx	lr

0800c356 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800c356:	3808      	subs	r0, #8
 800c358:	4770      	bx	lr

0800c35a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800c35a:	b430      	push	{r4, r5}
 800c35c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800c360:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800c364:	8a02      	ldrh	r2, [r0, #16]
 800c366:	9202      	str	r2, [sp, #8]
 800c368:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800c36c:	68c2      	ldr	r2, [r0, #12]
 800c36e:	4629      	mov	r1, r5
 800c370:	4620      	mov	r0, r4
 800c372:	bc30      	pop	{r4, r5}
 800c374:	f7f6 b960 	b.w	8002638 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800c378 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800c378:	f7f6 b952 	b.w	8002620 <_ZN8touchgfx5paint8tearDownEv>

0800c37c <_ZN8touchgfx13PainterRGB565D0Ev>:
 800c37c:	b510      	push	{r4, lr}
 800c37e:	2114      	movs	r1, #20
 800c380:	4604      	mov	r4, r0
 800c382:	f017 f9eb 	bl	802375c <_ZdlPvj>
 800c386:	4620      	mov	r0, r4
 800c388:	bd10      	pop	{r4, pc}

0800c38a <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800c38a:	f1a0 0008 	sub.w	r0, r0, #8
 800c38e:	e7f5      	b.n	800c37c <_ZN8touchgfx13PainterRGB565D0Ev>

0800c390 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 800c390:	2300      	movs	r3, #0
 800c392:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800c394:	8503      	strh	r3, [r0, #40]	@ 0x28
 800c396:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800c398:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800c39a:	6980      	ldr	r0, [r0, #24]
 800c39c:	b110      	cbz	r0, 800c3a4 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 800c39e:	6803      	ldr	r3, [r0, #0]
 800c3a0:	691b      	ldr	r3, [r3, #16]
 800c3a2:	4718      	bx	r3
 800c3a4:	4770      	bx	lr

0800c3a6 <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 800c3a6:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 800c3aa:	4770      	bx	lr

0800c3ac <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 800c3ac:	b538      	push	{r3, r4, r5, lr}
 800c3ae:	0e0b      	lsrs	r3, r1, #24
 800c3b0:	7783      	strb	r3, [r0, #30]
 800c3b2:	6803      	ldr	r3, [r0, #0]
 800c3b4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c3b6:	4604      	mov	r4, r0
 800c3b8:	460d      	mov	r5, r1
 800c3ba:	4798      	blx	r3
 800c3bc:	6803      	ldr	r3, [r0, #0]
 800c3be:	4629      	mov	r1, r5
 800c3c0:	689b      	ldr	r3, [r3, #8]
 800c3c2:	4798      	blx	r3
 800c3c4:	6823      	ldr	r3, [r4, #0]
 800c3c6:	4620      	mov	r0, r4
 800c3c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c3ca:	4798      	blx	r3
 800c3cc:	61a0      	str	r0, [r4, #24]
 800c3ce:	bd38      	pop	{r3, r4, r5, pc}

0800c3d0 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 800c3d0:	7741      	strb	r1, [r0, #29]
 800c3d2:	4770      	bx	lr

0800c3d4 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 800c3d4:	b530      	push	{r4, r5, lr}
 800c3d6:	460d      	mov	r5, r1
 800c3d8:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 800c3dc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c3de:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c3e0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c3e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c3e4:	682b      	ldr	r3, [r5, #0]
 800c3e6:	6023      	str	r3, [r4, #0]
 800c3e8:	bd30      	pop	{r4, r5, pc}

0800c3ea <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 800c3ea:	b538      	push	{r3, r4, r5, lr}
 800c3ec:	4604      	mov	r4, r0
 800c3ee:	1d03      	adds	r3, r0, #4
 800c3f0:	6808      	ldr	r0, [r1, #0]
 800c3f2:	6849      	ldr	r1, [r1, #4]
 800c3f4:	c303      	stmia	r3!, {r0, r1}
 800c3f6:	6813      	ldr	r3, [r2, #0]
 800c3f8:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800c3fc:	6853      	ldr	r3, [r2, #4]
 800c3fe:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 800c402:	2500      	movs	r5, #0
 800c404:	61a5      	str	r5, [r4, #24]
 800c406:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800c40a:	f006 f8ab 	bl	8012564 <_ZN8touchgfx9Matrix3x35resetEv>
 800c40e:	23ff      	movs	r3, #255	@ 0xff
 800c410:	7763      	strb	r3, [r4, #29]
 800c412:	77a3      	strb	r3, [r4, #30]
 800c414:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800c418:	6323      	str	r3, [r4, #48]	@ 0x30
 800c41a:	2301      	movs	r3, #1
 800c41c:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800c420:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 800c424:	bd38      	pop	{r3, r4, r5, pc}
	...

0800c428 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 800c428:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c42c:	ed2d 8b0a 	vpush	{d8-d12}
 800c430:	ee70 7a41 	vsub.f32	s15, s0, s2
 800c434:	b087      	sub	sp, #28
 800c436:	eef5 7a40 	vcmp.f32	s15, #0.0
 800c43a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c43e:	4605      	mov	r5, r0
 800c440:	eef0 9a40 	vmov.f32	s19, s0
 800c444:	eeb0 aa60 	vmov.f32	s20, s1
 800c448:	eeb0 9a41 	vmov.f32	s18, s2
 800c44c:	eef0 8a61 	vmov.f32	s17, s3
 800c450:	eeb0 ca42 	vmov.f32	s24, s4
 800c454:	eef0 ca62 	vmov.f32	s25, s5
 800c458:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800c45c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 800c45e:	6802      	ldr	r2, [r0, #0]
 800c460:	d112      	bne.n	800c488 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800c462:	ee70 7ae1 	vsub.f32	s15, s1, s3
 800c466:	eef5 7a40 	vcmp.f32	s15, #0.0
 800c46a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c46e:	d10b      	bne.n	800c488 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800c470:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800c474:	3901      	subs	r1, #1
 800c476:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800c478:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800c47c:	b007      	add	sp, #28
 800c47e:	ecbd 8b0a 	vpop	{d8-d12}
 800c482:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c486:	4710      	bx	r2
 800c488:	23ff      	movs	r3, #255	@ 0xff
 800c48a:	77ab      	strb	r3, [r5, #30]
 800c48c:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800c48e:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 800c754 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 800c492:	4628      	mov	r0, r5
 800c494:	4798      	blx	r3
 800c496:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 800c49a:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800c49e:	80c3      	strh	r3, [r0, #6]
 800c4a0:	eef0 0a4a 	vmov.f32	s1, s20
 800c4a4:	eeb0 0a69 	vmov.f32	s0, s19
 800c4a8:	4604      	mov	r4, r0
 800c4aa:	4640      	mov	r0, r8
 800c4ac:	f006 f909 	bl	80126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c4b0:	4640      	mov	r0, r8
 800c4b2:	eeb0 ba40 	vmov.f32	s22, s0
 800c4b6:	eef0 ba60 	vmov.f32	s23, s1
 800c4ba:	ed8d 0a00 	vstr	s0, [sp]
 800c4be:	edcd 0a01 	vstr	s1, [sp, #4]
 800c4c2:	eeb0 0a49 	vmov.f32	s0, s18
 800c4c6:	eef0 0a68 	vmov.f32	s1, s17
 800c4ca:	f006 f8fa 	bl	80126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c4ce:	eeb4 ba40 	vcmp.f32	s22, s0
 800c4d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c4d6:	eef4 ba60 	vcmp.f32	s23, s1
 800c4da:	bf0c      	ite	eq
 800c4dc:	2301      	moveq	r3, #1
 800c4de:	2300      	movne	r3, #0
 800c4e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c4e4:	eeb4 ba40 	vcmp.f32	s22, s0
 800c4e8:	7463      	strb	r3, [r4, #17]
 800c4ea:	bf0c      	ite	eq
 800c4ec:	2301      	moveq	r3, #1
 800c4ee:	2300      	movne	r3, #0
 800c4f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c4f4:	eeb0 8a40 	vmov.f32	s16, s0
 800c4f8:	eef0 aa60 	vmov.f32	s21, s1
 800c4fc:	ed8d 0a02 	vstr	s0, [sp, #8]
 800c500:	edcd 0a03 	vstr	s1, [sp, #12]
 800c504:	74a3      	strb	r3, [r4, #18]
 800c506:	d030      	beq.n	800c56a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800c508:	eef4 ba60 	vcmp.f32	s23, s1
 800c50c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c510:	d02b      	beq.n	800c56a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800c512:	ee39 9a69 	vsub.f32	s18, s18, s19
 800c516:	ee78 8aca 	vsub.f32	s17, s17, s20
 800c51a:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 800c51e:	4640      	mov	r0, r8
 800c520:	eec8 7aac 	vdiv.f32	s15, s17, s25
 800c524:	eef0 0a4a 	vmov.f32	s1, s20
 800c528:	eeb0 0a69 	vmov.f32	s0, s19
 800c52c:	eea7 0acc 	vfms.f32	s0, s15, s24
 800c530:	eeec 0a87 	vfma.f32	s1, s25, s14
 800c534:	f006 f8c5 	bl	80126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c538:	f899 3000 	ldrb.w	r3, [r9]
 800c53c:	edcd 0a05 	vstr	s1, [sp, #20]
 800c540:	ee70 0aeb 	vsub.f32	s1, s1, s23
 800c544:	2b01      	cmp	r3, #1
 800c546:	ed8d 0a04 	vstr	s0, [sp, #16]
 800c54a:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800c54e:	bf02      	ittt	eq
 800c550:	eef1 7a60 	vnegeq.f32	s15, s1
 800c554:	eef0 0a40 	vmoveq.f32	s1, s0
 800c558:	eeb0 0a67 	vmoveq.f32	s0, s15
 800c55c:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800c560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c564:	d134      	bne.n	800c5d0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 800c566:	2301      	movs	r3, #1
 800c568:	74a3      	strb	r3, [r4, #18]
 800c56a:	f899 2000 	ldrb.w	r2, [r9]
 800c56e:	7c63      	ldrb	r3, [r4, #17]
 800c570:	2a01      	cmp	r2, #1
 800c572:	f040 80a3 	bne.w	800c6bc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 800c576:	2b00      	cmp	r3, #0
 800c578:	d072      	beq.n	800c660 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 800c57a:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800c57e:	eddf 6a73 	vldr	s13, [pc, #460]	@ 800c74c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c582:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c586:	eef4 baea 	vcmpe.f32	s23, s21
 800c58a:	edc4 7a08 	vstr	s15, [r4, #32]
 800c58e:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800c592:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c596:	ee17 3a90 	vmov	r3, s15
 800c59a:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800c59e:	b21a      	sxth	r2, r3
 800c5a0:	ee17 3a90 	vmov	r3, s15
 800c5a4:	b21b      	sxth	r3, r3
 800c5a6:	bf47      	ittee	mi
 800c5a8:	8123      	strhmi	r3, [r4, #8]
 800c5aa:	8162      	strhmi	r2, [r4, #10]
 800c5ac:	8122      	strhpl	r2, [r4, #8]
 800c5ae:	8163      	strhpl	r3, [r4, #10]
 800c5b0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c5b4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c5b8:	1a9b      	subs	r3, r3, r2
 800c5ba:	ee07 3a90 	vmov	s15, r3
 800c5be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c5c2:	2300      	movs	r3, #0
 800c5c4:	7463      	strb	r3, [r4, #17]
 800c5c6:	edc4 7a07 	vstr	s15, [r4, #28]
 800c5ca:	2301      	movs	r3, #1
 800c5cc:	74a3      	strb	r3, [r4, #18]
 800c5ce:	e03f      	b.n	800c650 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c5d0:	ee80 7a80 	vdiv.f32	s14, s1, s0
 800c5d4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800c5d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c5dc:	ed84 7a05 	vstr	s14, [r4, #20]
 800c5e0:	d102      	bne.n	800c5e8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 800c5e2:	2301      	movs	r3, #1
 800c5e4:	7463      	strb	r3, [r4, #17]
 800c5e6:	e7c0      	b.n	800c56a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800c5e8:	2b01      	cmp	r3, #1
 800c5ea:	bf03      	ittte	eq
 800c5ec:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 800c5f0:	ee07 2a90 	vmoveq	s15, r2
 800c5f4:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 800c5f8:	eef0 7a6b 	vmovne.f32	s15, s23
 800c5fc:	bf0a      	itet	eq
 800c5fe:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 800c602:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 800c606:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 800c60a:	2b01      	cmp	r3, #1
 800c60c:	ee38 8a4b 	vsub.f32	s16, s16, s22
 800c610:	ee7a aaeb 	vsub.f32	s21, s21, s23
 800c614:	edc4 7a06 	vstr	s15, [r4, #24]
 800c618:	bf02      	ittt	eq
 800c61a:	eef1 7a48 	vnegeq.f32	s15, s16
 800c61e:	eeb0 8a6a 	vmoveq.f32	s16, s21
 800c622:	eef0 aa67 	vmoveq.f32	s21, s15
 800c626:	eeca 7a87 	vdiv.f32	s15, s21, s14
 800c62a:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 800c750 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 800c62e:	ee38 8a67 	vsub.f32	s16, s16, s15
 800c632:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800c636:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800c63a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c63e:	ed84 8a07 	vstr	s16, [r4, #28]
 800c642:	edc4 7a08 	vstr	s15, [r4, #32]
 800c646:	d503      	bpl.n	800c650 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c648:	eeb1 8a48 	vneg.f32	s16, s16
 800c64c:	ed84 8a07 	vstr	s16, [r4, #28]
 800c650:	60e7      	str	r7, [r4, #12]
 800c652:	7426      	strb	r6, [r4, #16]
 800c654:	61ac      	str	r4, [r5, #24]
 800c656:	b007      	add	sp, #28
 800c658:	ecbd 8b0a 	vpop	{d8-d12}
 800c65c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c660:	7ca3      	ldrb	r3, [r4, #18]
 800c662:	2b00      	cmp	r3, #0
 800c664:	d0f4      	beq.n	800c650 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c666:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800c66a:	eddf 6a38 	vldr	s13, [pc, #224]	@ 800c74c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c66e:	ee00 3a10 	vmov	s0, r3
 800c672:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800c676:	ee30 8a48 	vsub.f32	s16, s0, s16
 800c67a:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800c67e:	ee38 7a40 	vsub.f32	s14, s16, s0
 800c682:	eeb4 8ac0 	vcmpe.f32	s16, s0
 800c686:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c68a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c68e:	edc4 7a08 	vstr	s15, [r4, #32]
 800c692:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c696:	ee17 3a90 	vmov	r3, s15
 800c69a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800c69e:	b21a      	sxth	r2, r3
 800c6a0:	ee17 3a90 	vmov	r3, s15
 800c6a4:	b21b      	sxth	r3, r3
 800c6a6:	bfcc      	ite	gt
 800c6a8:	8123      	strhgt	r3, [r4, #8]
 800c6aa:	8163      	strhle	r3, [r4, #10]
 800c6ac:	f04f 0301 	mov.w	r3, #1
 800c6b0:	7463      	strb	r3, [r4, #17]
 800c6b2:	bfcc      	ite	gt
 800c6b4:	8162      	strhgt	r2, [r4, #10]
 800c6b6:	8122      	strhle	r2, [r4, #8]
 800c6b8:	2300      	movs	r3, #0
 800c6ba:	e787      	b.n	800c5cc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 800c6bc:	b1db      	cbz	r3, 800c6f6 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 800c6be:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800c6c2:	eddf 6a22 	vldr	s13, [pc, #136]	@ 800c74c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c6c6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c6ca:	eef4 baea 	vcmpe.f32	s23, s21
 800c6ce:	edc4 7a08 	vstr	s15, [r4, #32]
 800c6d2:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800c6d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c6da:	ee17 3a90 	vmov	r3, s15
 800c6de:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800c6e2:	b21a      	sxth	r2, r3
 800c6e4:	ee17 3a90 	vmov	r3, s15
 800c6e8:	b21b      	sxth	r3, r3
 800c6ea:	bf47      	ittee	mi
 800c6ec:	8123      	strhmi	r3, [r4, #8]
 800c6ee:	8162      	strhmi	r2, [r4, #10]
 800c6f0:	8122      	strhpl	r2, [r4, #8]
 800c6f2:	8163      	strhpl	r3, [r4, #10]
 800c6f4:	e7ac      	b.n	800c650 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c6f6:	7ca3      	ldrb	r3, [r4, #18]
 800c6f8:	2b00      	cmp	r3, #0
 800c6fa:	d0a9      	beq.n	800c650 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c6fc:	ee38 7a4b 	vsub.f32	s14, s16, s22
 800c700:	eddf 6a12 	vldr	s13, [pc, #72]	@ 800c74c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c704:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c708:	eeb4 bac8 	vcmpe.f32	s22, s16
 800c70c:	edc4 7a08 	vstr	s15, [r4, #32]
 800c710:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c714:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c718:	ee17 3a90 	vmov	r3, s15
 800c71c:	eefd 7acb 	vcvt.s32.f32	s15, s22
 800c720:	b21a      	sxth	r2, r3
 800c722:	ee17 3a90 	vmov	r3, s15
 800c726:	b21b      	sxth	r3, r3
 800c728:	bf47      	ittee	mi
 800c72a:	8123      	strhmi	r3, [r4, #8]
 800c72c:	8162      	strhmi	r2, [r4, #10]
 800c72e:	8122      	strhpl	r2, [r4, #8]
 800c730:	8163      	strhpl	r3, [r4, #10]
 800c732:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c736:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c73a:	1a9b      	subs	r3, r3, r2
 800c73c:	ee07 3a90 	vmov	s15, r3
 800c740:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c744:	edc4 7a07 	vstr	s15, [r4, #28]
 800c748:	e782      	b.n	800c650 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c74a:	bf00      	nop
 800c74c:	447ffffe 	.word	0x447ffffe
 800c750:	44800000 	.word	0x44800000
 800c754:	200157b8 	.word	0x200157b8

0800c758 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 800c758:	b510      	push	{r4, lr}
 800c75a:	2100      	movs	r1, #0
 800c75c:	ed2d 8b02 	vpush	{d8}
 800c760:	eef0 8a62 	vmov.f32	s17, s5
 800c764:	4604      	mov	r4, r0
 800c766:	eeb0 8a42 	vmov.f32	s16, s4
 800c76a:	f016 fd67 	bl	802323c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 800c76e:	eef0 7a68 	vmov.f32	s15, s17
 800c772:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c776:	6823      	ldr	r3, [r4, #0]
 800c778:	ee17 2a90 	vmov	r2, s15
 800c77c:	eef0 7a48 	vmov.f32	s15, s16
 800c780:	ecbd 8b02 	vpop	{d8}
 800c784:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c788:	4620      	mov	r0, r4
 800c78a:	689b      	ldr	r3, [r3, #8]
 800c78c:	ee17 1a90 	vmov	r1, s15
 800c790:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c794:	4718      	bx	r3

0800c796 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 800c796:	b510      	push	{r4, lr}
 800c798:	2100      	movs	r1, #0
 800c79a:	ed2d 8b02 	vpush	{d8}
 800c79e:	eef0 8a63 	vmov.f32	s17, s7
 800c7a2:	4604      	mov	r4, r0
 800c7a4:	eeb0 8a43 	vmov.f32	s16, s6
 800c7a8:	f016 fe0a 	bl	80233c0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 800c7ac:	eef0 7a68 	vmov.f32	s15, s17
 800c7b0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c7b4:	6823      	ldr	r3, [r4, #0]
 800c7b6:	ee17 2a90 	vmov	r2, s15
 800c7ba:	eef0 7a48 	vmov.f32	s15, s16
 800c7be:	ecbd 8b02 	vpop	{d8}
 800c7c2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c7c6:	4620      	mov	r0, r4
 800c7c8:	689b      	ldr	r3, [r3, #8]
 800c7ca:	ee17 1a90 	vmov	r1, s15
 800c7ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c7d2:	4718      	bx	r3

0800c7d4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 800c7d4:	b513      	push	{r0, r1, r4, lr}
 800c7d6:	4604      	mov	r4, r0
 800c7d8:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800c7da:	f005 ff72 	bl	80126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c7de:	eef0 7a60 	vmov.f32	s15, s1
 800c7e2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c7e6:	4620      	mov	r0, r4
 800c7e8:	ee17 2a90 	vmov	r2, s15
 800c7ec:	eef0 7a40 	vmov.f32	s15, s0
 800c7f0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c7f4:	ee17 1a90 	vmov	r1, s15
 800c7f8:	b002      	add	sp, #8
 800c7fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c7fe:	f016 bc77 	b.w	80230f0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 800c802:	b513      	push	{r0, r1, r4, lr}
 800c804:	4604      	mov	r4, r0
 800c806:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800c808:	f005 ff5b 	bl	80126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c80c:	eef0 7a60 	vmov.f32	s15, s1
 800c810:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c814:	4620      	mov	r0, r4
 800c816:	ee17 2a90 	vmov	r2, s15
 800c81a:	eef0 7a40 	vmov.f32	s15, s0
 800c81e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c822:	ee17 1a90 	vmov	r1, s15
 800c826:	b002      	add	sp, #8
 800c828:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c82c:	f016 bcad 	b.w	802318a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

0800c830 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 800c830:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c832:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 800c836:	2400      	movs	r4, #0
 800c838:	9f07      	ldr	r7, [sp, #28]
 800c83a:	4463      	add	r3, ip
 800c83c:	4626      	mov	r6, r4
 800c83e:	f04f 0e01 	mov.w	lr, #1
 800c842:	4563      	cmp	r3, ip
 800c844:	d02d      	beq.n	800c8a2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 800c846:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 800c84a:	2d06      	cmp	r5, #6
 800c84c:	d8f9      	bhi.n	800c842 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800c84e:	fa0e f505 	lsl.w	r5, lr, r5
 800c852:	f015 0f66 	tst.w	r5, #102	@ 0x66
 800c856:	d10d      	bne.n	800c874 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 800c858:	f015 0f10 	tst.w	r5, #16
 800c85c:	d117      	bne.n	800c88e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 800c85e:	072d      	lsls	r5, r5, #28
 800c860:	d5ef      	bpl.n	800c842 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800c862:	3801      	subs	r0, #1
 800c864:	b91e      	cbnz	r6, 800c86e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 800c866:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 800c86a:	682d      	ldr	r5, [r5, #0]
 800c86c:	600d      	str	r5, [r1, #0]
 800c86e:	b96c      	cbnz	r4, 800c88c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c870:	2601      	movs	r6, #1
 800c872:	e7e6      	b.n	800c842 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800c874:	b926      	cbnz	r6, 800c880 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 800c876:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 800c87a:	f853 3c08 	ldr.w	r3, [r3, #-8]
 800c87e:	600b      	str	r3, [r1, #0]
 800c880:	b924      	cbnz	r4, 800c88c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c882:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800c886:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800c88a:	6013      	str	r3, [r2, #0]
 800c88c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c88e:	3801      	subs	r0, #1
 800c890:	b91c      	cbnz	r4, 800c89a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 800c892:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 800c896:	6824      	ldr	r4, [r4, #0]
 800c898:	6014      	str	r4, [r2, #0]
 800c89a:	2e00      	cmp	r6, #0
 800c89c:	d1f6      	bne.n	800c88c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c89e:	2401      	movs	r4, #1
 800c8a0:	e7cf      	b.n	800c842 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800c8a2:	b90e      	cbnz	r6, 800c8a8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 800c8a4:	2300      	movs	r3, #0
 800c8a6:	600b      	str	r3, [r1, #0]
 800c8a8:	2c00      	cmp	r4, #0
 800c8aa:	d1ef      	bne.n	800c88c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c8ac:	2300      	movs	r3, #0
 800c8ae:	e7ec      	b.n	800c88a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

0800c8b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 800c8b0:	b538      	push	{r3, r4, r5, lr}
 800c8b2:	4604      	mov	r4, r0
 800c8b4:	ed2d 8b0a 	vpush	{d8-d12}
 800c8b8:	460d      	mov	r5, r1
 800c8ba:	eef0 ba40 	vmov.f32	s23, s0
 800c8be:	eeb0 ca60 	vmov.f32	s24, s1
 800c8c2:	eef0 aa41 	vmov.f32	s21, s2
 800c8c6:	eeb0 ba61 	vmov.f32	s22, s3
 800c8ca:	eeb0 9a42 	vmov.f32	s18, s4
 800c8ce:	eef0 9a62 	vmov.f32	s19, s5
 800c8d2:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 800c8d6:	ee7b 8a29 	vadd.f32	s17, s22, s19
 800c8da:	ee3a 8a89 	vadd.f32	s16, s21, s18
 800c8de:	ee68 8a8a 	vmul.f32	s17, s17, s20
 800c8e2:	ee28 8a0a 	vmul.f32	s16, s16, s20
 800c8e6:	ee3c 0a68 	vsub.f32	s0, s24, s17
 800c8ea:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 800c8ee:	ee20 0a00 	vmul.f32	s0, s0, s0
 800c8f2:	eea7 0aa7 	vfma.f32	s0, s15, s15
 800c8f6:	f016 ff5b 	bl	80237b0 <sqrtf>
 800c8fa:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800c8fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c902:	d12e      	bne.n	800c962 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 800c904:	ee79 7a6a 	vsub.f32	s15, s18, s21
 800c908:	ee39 7acb 	vsub.f32	s14, s19, s22
 800c90c:	eeb0 8a6a 	vmov.f32	s16, s21
 800c910:	eef0 8a4b 	vmov.f32	s17, s22
 800c914:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800c918:	eee7 8a0a 	vfma.f32	s17, s14, s20
 800c91c:	eea7 8a0a 	vfma.f32	s16, s14, s20
 800c920:	eee7 8aca 	vfms.f32	s17, s15, s20
 800c924:	2d02      	cmp	r5, #2
 800c926:	dc2f      	bgt.n	800c988 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 800c928:	3501      	adds	r5, #1
 800c92a:	eef0 1a4b 	vmov.f32	s3, s22
 800c92e:	eeb0 1a6a 	vmov.f32	s2, s21
 800c932:	4629      	mov	r1, r5
 800c934:	eef0 2a68 	vmov.f32	s5, s17
 800c938:	eeb0 2a48 	vmov.f32	s4, s16
 800c93c:	eef0 0a4c 	vmov.f32	s1, s24
 800c940:	eeb0 0a6b 	vmov.f32	s0, s23
 800c944:	4620      	mov	r0, r4
 800c946:	f7ff ffb3 	bl	800c8b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800c94a:	eef0 0a68 	vmov.f32	s1, s17
 800c94e:	eeb0 0a48 	vmov.f32	s0, s16
 800c952:	4620      	mov	r0, r4
 800c954:	f7ff ff55 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c958:	eeb0 ba68 	vmov.f32	s22, s17
 800c95c:	eef0 aa48 	vmov.f32	s21, s16
 800c960:	e7b9      	b.n	800c8d6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 800c962:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800c966:	ee38 8a6b 	vsub.f32	s16, s16, s23
 800c96a:	ee78 8acc 	vsub.f32	s17, s17, s24
 800c96e:	ee28 7a27 	vmul.f32	s14, s16, s15
 800c972:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800c976:	ee87 8a00 	vdiv.f32	s16, s14, s0
 800c97a:	eec7 8a80 	vdiv.f32	s17, s15, s0
 800c97e:	ee3b 8a88 	vadd.f32	s16, s23, s16
 800c982:	ee7c 8a28 	vadd.f32	s17, s24, s17
 800c986:	e7cd      	b.n	800c924 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 800c988:	eef0 0a68 	vmov.f32	s1, s17
 800c98c:	eeb0 0a48 	vmov.f32	s0, s16
 800c990:	4620      	mov	r0, r4
 800c992:	f7ff ff36 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c996:	ecbd 8b0a 	vpop	{d8-d12}
 800c99a:	bd38      	pop	{r3, r4, r5, pc}

0800c99c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 800c99c:	b510      	push	{r4, lr}
 800c99e:	ed2d 8b0a 	vpush	{d8-d12}
 800c9a2:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800c9a6:	2b02      	cmp	r3, #2
 800c9a8:	4604      	mov	r4, r0
 800c9aa:	eeb0 ca40 	vmov.f32	s24, s0
 800c9ae:	eeb0 9a60 	vmov.f32	s18, s1
 800c9b2:	eef0 9a41 	vmov.f32	s19, s2
 800c9b6:	eef0 8a61 	vmov.f32	s17, s3
 800c9ba:	eeb0 ba42 	vmov.f32	s22, s4
 800c9be:	eef0 ba62 	vmov.f32	s23, s5
 800c9c2:	eeb0 aa43 	vmov.f32	s20, s6
 800c9c6:	eef0 aa63 	vmov.f32	s21, s7
 800c9ca:	eeb0 8a44 	vmov.f32	s16, s8
 800c9ce:	eef0 ca64 	vmov.f32	s25, s9
 800c9d2:	d12c      	bne.n	800ca2e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 800c9d4:	eef0 0a62 	vmov.f32	s1, s5
 800c9d8:	eeb0 0a42 	vmov.f32	s0, s4
 800c9dc:	f7ff ff11 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c9e0:	ee79 9acb 	vsub.f32	s19, s19, s22
 800c9e4:	ee7a caec 	vsub.f32	s25, s21, s25
 800c9e8:	ee78 8aeb 	vsub.f32	s17, s17, s23
 800c9ec:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800c9f0:	ee69 9aac 	vmul.f32	s19, s19, s25
 800c9f4:	ee28 8a88 	vmul.f32	s16, s17, s16
 800c9f8:	eef4 9ac8 	vcmpe.f32	s19, s16
 800c9fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ca00:	db0f      	blt.n	800ca22 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 800ca02:	2101      	movs	r1, #1
 800ca04:	eef0 2a6a 	vmov.f32	s5, s21
 800ca08:	eeb0 2a4a 	vmov.f32	s4, s20
 800ca0c:	eef0 1a6b 	vmov.f32	s3, s23
 800ca10:	eeb0 1a4b 	vmov.f32	s2, s22
 800ca14:	eef0 0a49 	vmov.f32	s1, s18
 800ca18:	eeb0 0a4c 	vmov.f32	s0, s24
 800ca1c:	4620      	mov	r0, r4
 800ca1e:	f7ff ff47 	bl	800c8b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800ca22:	eef0 0a6a 	vmov.f32	s1, s21
 800ca26:	eeb0 0a4a 	vmov.f32	s0, s20
 800ca2a:	4620      	mov	r0, r4
 800ca2c:	e035      	b.n	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 800ca2e:	2b01      	cmp	r3, #1
 800ca30:	d138      	bne.n	800caa4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800ca32:	ee31 4ae2 	vsub.f32	s8, s3, s5
 800ca36:	ee33 6a48 	vsub.f32	s12, s6, s16
 800ca3a:	ee71 7a42 	vsub.f32	s15, s2, s4
 800ca3e:	ee73 6ae4 	vsub.f32	s13, s7, s9
 800ca42:	ee26 7a44 	vnmul.f32	s14, s12, s8
 800ca46:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800ca4a:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800ca4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ca52:	d027      	beq.n	800caa4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800ca54:	ee28 8a63 	vnmul.f32	s16, s16, s7
 800ca58:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 800ca5c:	eea4 8a83 	vfma.f32	s16, s9, s6
 800ca60:	eee1 8a22 	vfma.f32	s17, s2, s5
 800ca64:	ee68 7a67 	vnmul.f32	s15, s16, s15
 800ca68:	ee28 8a44 	vnmul.f32	s16, s16, s8
 800ca6c:	eee6 7a28 	vfma.f32	s15, s12, s17
 800ca70:	eea6 8aa8 	vfma.f32	s16, s13, s17
 800ca74:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800ca78:	eec8 0a07 	vdiv.f32	s1, s16, s14
 800ca7c:	ee3c ca40 	vsub.f32	s24, s24, s0
 800ca80:	ee39 9a60 	vsub.f32	s18, s18, s1
 800ca84:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 800ca88:	ee29 9a09 	vmul.f32	s18, s18, s18
 800ca8c:	eeac 9a0c 	vfma.f32	s18, s24, s24
 800ca90:	eef4 7ac9 	vcmpe.f32	s15, s18
 800ca94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ca98:	db04      	blt.n	800caa4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800ca9a:	f7ff feb2 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ca9e:	ecbd 8b0a 	vpop	{d8-d12}
 800caa2:	bd10      	pop	{r4, pc}
 800caa4:	eef0 0a6b 	vmov.f32	s1, s23
 800caa8:	eeb0 0a4b 	vmov.f32	s0, s22
 800caac:	4620      	mov	r0, r4
 800caae:	f7ff fea8 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cab2:	e7b6      	b.n	800ca22 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0800cab4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 800cab4:	b510      	push	{r4, lr}
 800cab6:	ed2d 8b0c 	vpush	{d8-d13}
 800caba:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800cabe:	4604      	mov	r4, r0
 800cac0:	eeb0 9a40 	vmov.f32	s18, s0
 800cac4:	eef0 9a60 	vmov.f32	s19, s1
 800cac8:	eef0 aa41 	vmov.f32	s21, s2
 800cacc:	eeb0 ba61 	vmov.f32	s22, s3
 800cad0:	b933      	cbnz	r3, 800cae0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 800cad2:	f7ff fe96 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cad6:	eef0 0a4b 	vmov.f32	s1, s22
 800cada:	eeb0 0a6a 	vmov.f32	s0, s21
 800cade:	e015      	b.n	800cb0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 800cae0:	ee71 8a40 	vsub.f32	s17, s2, s0
 800cae4:	ee31 8ae0 	vsub.f32	s16, s3, s1
 800cae8:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800caec:	2b02      	cmp	r3, #2
 800caee:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800caf2:	ee28 8a27 	vmul.f32	s16, s16, s15
 800caf6:	d10f      	bne.n	800cb18 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 800caf8:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800cafc:	ee30 0a08 	vadd.f32	s0, s0, s16
 800cb00:	f7ff fe7f 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb04:	ee7b 0a68 	vsub.f32	s1, s22, s17
 800cb08:	ee3a 0a88 	vadd.f32	s0, s21, s16
 800cb0c:	4620      	mov	r0, r4
 800cb0e:	f7ff fe78 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb12:	ecbd 8b0c 	vpop	{d8-d13}
 800cb16:	bd10      	pop	{r4, pc}
 800cb18:	f7ff fe73 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb1c:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800cc54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 800cb20:	eddf ba4d 	vldr	s23, [pc, #308]	@ 800cc58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 800cb24:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 800cc5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 800cb28:	eddf ca4d 	vldr	s25, [pc, #308]	@ 800cc60 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 800cb2c:	ed9f da4d 	vldr	s26, [pc, #308]	@ 800cc64 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 800cb30:	eef0 0a69 	vmov.f32	s1, s19
 800cb34:	eeb0 0a49 	vmov.f32	s0, s18
 800cb38:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cb3c:	4620      	mov	r0, r4
 800cb3e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cb42:	eeb1 aa68 	vneg.f32	s20, s17
 800cb46:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800cb4a:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800cb4e:	f7ff fe58 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb52:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800cc68 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 800cb56:	eef0 0a69 	vmov.f32	s1, s19
 800cb5a:	eeb0 0a49 	vmov.f32	s0, s18
 800cb5e:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cb62:	4620      	mov	r0, r4
 800cb64:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cb68:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800cb6c:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800cb70:	f7ff fe47 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb74:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 800cc6c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 800cb78:	eef0 0a69 	vmov.f32	s1, s19
 800cb7c:	eeb0 0a49 	vmov.f32	s0, s18
 800cb80:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cb84:	4620      	mov	r0, r4
 800cb86:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cb8a:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800cb8e:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800cb92:	f7ff fe36 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb96:	eddf 7a36 	vldr	s15, [pc, #216]	@ 800cc70 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 800cb9a:	eef0 0a69 	vmov.f32	s1, s19
 800cb9e:	eeb0 0a49 	vmov.f32	s0, s18
 800cba2:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cba6:	4620      	mov	r0, r4
 800cba8:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cbac:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800cbb0:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800cbb4:	f7ff fe25 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cbb8:	ee79 0a88 	vadd.f32	s1, s19, s16
 800cbbc:	ee39 0a28 	vadd.f32	s0, s18, s17
 800cbc0:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800cbc4:	ee30 0a08 	vadd.f32	s0, s0, s16
 800cbc8:	4620      	mov	r0, r4
 800cbca:	f7ff fe1a 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cbce:	eddf 7a29 	vldr	s15, [pc, #164]	@ 800cc74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 800cbd2:	eef0 0a69 	vmov.f32	s1, s19
 800cbd6:	eeb0 0a49 	vmov.f32	s0, s18
 800cbda:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cbde:	4620      	mov	r0, r4
 800cbe0:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cbe4:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800cbe8:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800cbec:	f7ff fe09 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cbf0:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800cc78 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 800cbf4:	eef0 0a69 	vmov.f32	s1, s19
 800cbf8:	eeb0 0a49 	vmov.f32	s0, s18
 800cbfc:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cc00:	4620      	mov	r0, r4
 800cc02:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cc06:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800cc0a:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800cc0e:	f7ff fdf8 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cc12:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 800cc7c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 800cc16:	eef0 0a69 	vmov.f32	s1, s19
 800cc1a:	eeb0 0a49 	vmov.f32	s0, s18
 800cc1e:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cc22:	4620      	mov	r0, r4
 800cc24:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cc28:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800cc2c:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800cc30:	f7ff fde7 	bl	800c802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cc34:	eddf 7a12 	vldr	s15, [pc, #72]	@ 800cc80 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 800cc38:	eef0 0a69 	vmov.f32	s1, s19
 800cc3c:	eeb0 0a49 	vmov.f32	s0, s18
 800cc40:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cc44:	4620      	mov	r0, r4
 800cc46:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cc4a:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800cc4e:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800cc52:	e73e      	b.n	800cad2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 800cc54:	3d23d70a 	.word	0x3d23d70a
 800cc58:	3e8f5c29 	.word	0x3e8f5c29
 800cc5c:	3f19999a 	.word	0x3f19999a
 800cc60:	3f4ccccd 	.word	0x3f4ccccd
 800cc64:	3f75c28f 	.word	0x3f75c28f
 800cc68:	3e4ccccd 	.word	0x3e4ccccd
 800cc6c:	3ecccccd 	.word	0x3ecccccd
 800cc70:	3f3851ec 	.word	0x3f3851ec
 800cc74:	3fa3d70a 	.word	0x3fa3d70a
 800cc78:	3fcccccd 	.word	0x3fcccccd
 800cc7c:	3fe66666 	.word	0x3fe66666
 800cc80:	3ffae148 	.word	0x3ffae148

0800cc84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 800cc84:	b570      	push	{r4, r5, r6, lr}
 800cc86:	ed2d 8b06 	vpush	{d8-d10}
 800cc8a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800cc8e:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 800cc92:	ee30 8ac8 	vsub.f32	s16, s1, s16
 800cc96:	ee30 9a49 	vsub.f32	s18, s0, s18
 800cc9a:	eef0 aa40 	vmov.f32	s21, s0
 800cc9e:	ee28 0a08 	vmul.f32	s0, s16, s16
 800cca2:	4604      	mov	r4, r0
 800cca4:	eea9 0a09 	vfma.f32	s0, s18, s18
 800cca8:	eeb0 aa60 	vmov.f32	s20, s1
 800ccac:	f016 fd80 	bl	80237b0 <sqrtf>
 800ccb0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800ccb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ccb8:	dd36      	ble.n	800cd28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 800ccba:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800ccbe:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 800ccc2:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 800ccc6:	eec0 6a27 	vdiv.f32	s13, s0, s15
 800ccca:	2600      	movs	r6, #0
 800cccc:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800ccd0:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 800ccd4:	eec8 8a26 	vdiv.f32	s17, s16, s13
 800ccd8:	ee89 8a26 	vdiv.f32	s16, s18, s13
 800ccdc:	ee70 9a28 	vadd.f32	s19, s0, s17
 800cce0:	ee30 9ac8 	vsub.f32	s18, s1, s16
 800cce4:	ee78 8aaa 	vadd.f32	s17, s17, s21
 800cce8:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800ccec:	b1fd      	cbz	r5, 800cd2e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 800ccee:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 800ccf2:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 800ccf6:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800ccfa:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 800ccfe:	eef0 0a49 	vmov.f32	s1, s18
 800cd02:	eeb0 0a69 	vmov.f32	s0, s19
 800cd06:	4620      	mov	r0, r4
 800cd08:	f7ff fd64 	bl	800c7d4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800cd0c:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 800cd10:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 800cd14:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 800cd18:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 800cd1c:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 800cd20:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 800cd24:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 800cd28:	ecbd 8b06 	vpop	{d8-d10}
 800cd2c:	bd70      	pop	{r4, r5, r6, pc}
 800cd2e:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 800cd32:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800cd36:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800cd3a:	b16b      	cbz	r3, 800cd58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 800cd3c:	eef0 1a49 	vmov.f32	s3, s18
 800cd40:	eeb0 1a69 	vmov.f32	s2, s19
 800cd44:	eef0 0a62 	vmov.f32	s1, s5
 800cd48:	eeb0 0a42 	vmov.f32	s0, s4
 800cd4c:	4620      	mov	r0, r4
 800cd4e:	f7ff feb1 	bl	800cab4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800cd52:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 800cd56:	e7db      	b.n	800cd10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 800cd58:	eef0 4a48 	vmov.f32	s9, s16
 800cd5c:	eeb0 4a68 	vmov.f32	s8, s17
 800cd60:	eef0 3a49 	vmov.f32	s7, s18
 800cd64:	eeb0 3a69 	vmov.f32	s6, s19
 800cd68:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800cd6c:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800cd70:	4620      	mov	r0, r4
 800cd72:	f7ff fe13 	bl	800c99c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800cd76:	e7cb      	b.n	800cd10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

0800cd78 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 800cd78:	ee07 2a90 	vmov	s15, r2
 800cd7c:	ee07 1a10 	vmov	s14, r1
 800cd80:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800cd84:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800cd88:	eddf 7a03 	vldr	s15, [pc, #12]	@ 800cd98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 800cd8c:	ee60 0aa7 	vmul.f32	s1, s1, s15
 800cd90:	ee20 0a27 	vmul.f32	s0, s0, s15
 800cd94:	f7ff bf76 	b.w	800cc84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800cd98:	3d000000 	.word	0x3d000000

0800cd9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 800cd9c:	b538      	push	{r3, r4, r5, lr}
 800cd9e:	ed2d 8b02 	vpush	{d8}
 800cda2:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 800cda6:	4604      	mov	r4, r0
 800cda8:	b31d      	cbz	r5, 800cdf2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 800cdaa:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 800cdae:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800cdb2:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 800cdb6:	ee78 8a67 	vsub.f32	s17, s16, s15
 800cdba:	ee38 8a27 	vadd.f32	s16, s16, s15
 800cdbe:	eef0 0a68 	vmov.f32	s1, s17
 800cdc2:	f7ff fd07 	bl	800c7d4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800cdc6:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800cdca:	eef0 1a48 	vmov.f32	s3, s16
 800cdce:	eeb0 0a41 	vmov.f32	s0, s2
 800cdd2:	eef0 0a68 	vmov.f32	s1, s17
 800cdd6:	4620      	mov	r0, r4
 800cdd8:	f7ff fe6c 	bl	800cab4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800cddc:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800cde0:	eef0 1a68 	vmov.f32	s3, s17
 800cde4:	eef0 0a48 	vmov.f32	s1, s16
 800cde8:	eeb0 0a41 	vmov.f32	s0, s2
 800cdec:	4620      	mov	r0, r4
 800cdee:	f7ff fe61 	bl	800cab4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800cdf2:	ecbd 8b02 	vpop	{d8}
 800cdf6:	4628      	mov	r0, r5
 800cdf8:	bd38      	pop	{r3, r4, r5, pc}

0800cdfa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 800cdfa:	b510      	push	{r4, lr}
 800cdfc:	ed2d 8b02 	vpush	{d8}
 800ce00:	4604      	mov	r4, r0
 800ce02:	eeb0 8a40 	vmov.f32	s16, s0
 800ce06:	eef0 8a60 	vmov.f32	s17, s1
 800ce0a:	f7ff ffc7 	bl	800cd9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800ce0e:	b9d0      	cbnz	r0, 800ce46 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 800ce10:	4620      	mov	r0, r4
 800ce12:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 800ce16:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 800ce1a:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 800ce1e:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 800ce22:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800ce26:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800ce2a:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800ce2e:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800ce32:	eef0 0a68 	vmov.f32	s1, s17
 800ce36:	eeb0 0a48 	vmov.f32	s0, s16
 800ce3a:	f7ff fdaf 	bl	800c99c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800ce3e:	2001      	movs	r0, #1
 800ce40:	ecbd 8b02 	vpop	{d8}
 800ce44:	bd10      	pop	{r4, pc}
 800ce46:	2000      	movs	r0, #0
 800ce48:	e7fa      	b.n	800ce40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

0800ce4a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 800ce4a:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 800ce4e:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 800ce52:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 800ce56:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 800ce5a:	f7ff be2b 	b.w	800cab4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0800ce60 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 800ce60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce64:	b089      	sub	sp, #36	@ 0x24
 800ce66:	461c      	mov	r4, r3
 800ce68:	f10d 0820 	add.w	r8, sp, #32
 800ce6c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800ce70:	9304      	str	r3, [sp, #16]
 800ce72:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800ce74:	9105      	str	r1, [sp, #20]
 800ce76:	2300      	movs	r3, #0
 800ce78:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 800ce7c:	9306      	str	r3, [sp, #24]
 800ce7e:	f848 3d04 	str.w	r3, [r8, #-4]!
 800ce82:	9b04      	ldr	r3, [sp, #16]
 800ce84:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 800ce88:	4682      	mov	sl, r0
 800ce8a:	4615      	mov	r5, r2
 800ce8c:	9b05      	ldr	r3, [sp, #20]
 800ce8e:	429d      	cmp	r5, r3
 800ce90:	d96d      	bls.n	800cf6e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 800ce92:	3d01      	subs	r5, #1
 800ce94:	f819 3005 	ldrb.w	r3, [r9, r5]
 800ce98:	2b06      	cmp	r3, #6
 800ce9a:	d8f7      	bhi.n	800ce8c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800ce9c:	a201      	add	r2, pc, #4	@ (adr r2, 800cea4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 800ce9e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cea2:	bf00      	nop
 800cea4:	0800cec3 	.word	0x0800cec3
 800cea8:	0800ce8d 	.word	0x0800ce8d
 800ceac:	0800cec1 	.word	0x0800cec1
 800ceb0:	0800cee5 	.word	0x0800cee5
 800ceb4:	0800cee5 	.word	0x0800cee5
 800ceb8:	0800cee9 	.word	0x0800cee9
 800cebc:	0800cf29 	.word	0x0800cf29
 800cec0:	3c02      	subs	r4, #2
 800cec2:	4650      	mov	r0, sl
 800cec4:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800cec8:	9400      	str	r4, [sp, #0]
 800ceca:	462b      	mov	r3, r5
 800cecc:	4642      	mov	r2, r8
 800cece:	a906      	add	r1, sp, #24
 800ced0:	f7ff fcae 	bl	800c830 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800ced4:	eddd 0a07 	vldr	s1, [sp, #28]
 800ced8:	ed9d 0a06 	vldr	s0, [sp, #24]
 800cedc:	4630      	mov	r0, r6
 800cede:	f7ff fed1 	bl	800cc84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800cee2:	e7d3      	b.n	800ce8c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800cee4:	3c01      	subs	r4, #1
 800cee6:	e7ec      	b.n	800cec2 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 800cee8:	f1a4 0b04 	sub.w	fp, r4, #4
 800ceec:	3c02      	subs	r4, #2
 800ceee:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800cef2:	4650      	mov	r0, sl
 800cef4:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800cef8:	f8cd b000 	str.w	fp, [sp]
 800cefc:	462b      	mov	r3, r5
 800cefe:	4642      	mov	r2, r8
 800cf00:	a906      	add	r1, sp, #24
 800cf02:	f7ff fc95 	bl	800c830 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800cf06:	eddd 2a07 	vldr	s5, [sp, #28]
 800cf0a:	ed9d 2a06 	vldr	s4, [sp, #24]
 800cf0e:	ed54 1a01 	vldr	s3, [r4, #-4]
 800cf12:	ed14 1a02 	vldr	s2, [r4, #-8]
 800cf16:	edd4 0a01 	vldr	s1, [r4, #4]
 800cf1a:	ed94 0a00 	vldr	s0, [r4]
 800cf1e:	4630      	mov	r0, r6
 800cf20:	f7ff fc1a 	bl	800c758 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800cf24:	465c      	mov	r4, fp
 800cf26:	e7b1      	b.n	800ce8c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800cf28:	f1a4 0b06 	sub.w	fp, r4, #6
 800cf2c:	3c02      	subs	r4, #2
 800cf2e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800cf32:	4650      	mov	r0, sl
 800cf34:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800cf38:	f8cd b000 	str.w	fp, [sp]
 800cf3c:	462b      	mov	r3, r5
 800cf3e:	4642      	mov	r2, r8
 800cf40:	a906      	add	r1, sp, #24
 800cf42:	f7ff fc75 	bl	800c830 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800cf46:	eddd 3a07 	vldr	s7, [sp, #28]
 800cf4a:	ed9d 3a06 	vldr	s6, [sp, #24]
 800cf4e:	ed54 2a03 	vldr	s5, [r4, #-12]
 800cf52:	ed14 2a04 	vldr	s4, [r4, #-16]
 800cf56:	ed54 1a01 	vldr	s3, [r4, #-4]
 800cf5a:	ed14 1a02 	vldr	s2, [r4, #-8]
 800cf5e:	edd4 0a01 	vldr	s1, [r4, #4]
 800cf62:	ed94 0a00 	vldr	s0, [r4]
 800cf66:	4630      	mov	r0, r6
 800cf68:	f7ff fc15 	bl	800c796 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800cf6c:	e7da      	b.n	800cf24 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 800cf6e:	9b04      	ldr	r3, [sp, #16]
 800cf70:	b113      	cbz	r3, 800cf78 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 800cf72:	4630      	mov	r0, r6
 800cf74:	f7ff ff69 	bl	800ce4a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 800cf78:	b009      	add	sp, #36	@ 0x24
 800cf7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf7e:	bf00      	nop

0800cf80 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 800cf80:	eef0 7a60 	vmov.f32	s15, s1
 800cf84:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800cf88:	6803      	ldr	r3, [r0, #0]
 800cf8a:	ee17 2a90 	vmov	r2, s15
 800cf8e:	eef0 7a40 	vmov.f32	s15, s0
 800cf92:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800cf96:	689b      	ldr	r3, [r3, #8]
 800cf98:	ee17 1a90 	vmov	r1, s15
 800cf9c:	4718      	bx	r3
	...

0800cfa0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 800cfa0:	b510      	push	{r4, lr}
 800cfa2:	4b04      	ldr	r3, [pc, #16]	@ (800cfb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 800cfa4:	4604      	mov	r4, r0
 800cfa6:	f840 3b14 	str.w	r3, [r0], #20
 800cfaa:	f001 f9f5 	bl	800e398 <_ZN8touchgfx7OutlineD1Ev>
 800cfae:	4620      	mov	r0, r4
 800cfb0:	bd10      	pop	{r4, pc}
 800cfb2:	bf00      	nop
 800cfb4:	08027e24 	.word	0x08027e24

0800cfb8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 800cfb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cfbc:	ed2d 8b04 	vpush	{d8-d9}
 800cfc0:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800cfc4:	b0b5      	sub	sp, #212	@ 0xd4
 800cfc6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800cfca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cfce:	4605      	mov	r5, r0
 800cfd0:	468b      	mov	fp, r1
 800cfd2:	9206      	str	r2, [sp, #24]
 800cfd4:	461e      	mov	r6, r3
 800cfd6:	f04f 0400 	mov.w	r4, #0
 800cfda:	f240 814e 	bls.w	800d27a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 800cfde:	23ff      	movs	r3, #255	@ 0xff
 800cfe0:	9300      	str	r3, [sp, #0]
 800cfe2:	1d02      	adds	r2, r0, #4
 800cfe4:	6981      	ldr	r1, [r0, #24]
 800cfe6:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 800cfe8:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 800d280 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 800cfec:	a808      	add	r0, sp, #32
 800cfee:	f015 ff33 	bl	8022e58 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800cff2:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 800cff6:	4ba3      	ldr	r3, [pc, #652]	@ (800d284 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 800cff8:	edd5 6a08 	vldr	s13, [r5, #32]
 800cffc:	9308      	str	r3, [sp, #32]
 800cffe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d002:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d006:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800d00a:	bf48      	it	mi
 800d00c:	eef1 7a67 	vnegmi.f32	s15, s15
 800d010:	ee67 7a87 	vmul.f32	s15, s15, s14
 800d014:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 800d018:	2201      	movs	r2, #1
 800d01a:	9325      	str	r3, [sp, #148]	@ 0x94
 800d01c:	2300      	movs	r3, #0
 800d01e:	ee26 7aa7 	vmul.f32	s14, s13, s15
 800d022:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 800d026:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 800d02a:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 800d02e:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 800d032:	7f6a      	ldrb	r2, [r5, #29]
 800d034:	7fab      	ldrb	r3, [r5, #30]
 800d036:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 800d03a:	435a      	muls	r2, r3
 800d03c:	ee27 7a26 	vmul.f32	s14, s14, s13
 800d040:	1c53      	adds	r3, r2, #1
 800d042:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 800d046:	ee67 7a27 	vmul.f32	s15, s14, s15
 800d04a:	f04f 0800 	mov.w	r8, #0
 800d04e:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 800d052:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 800d056:	942a      	str	r4, [sp, #168]	@ 0xa8
 800d058:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800d05c:	942b      	str	r4, [sp, #172]	@ 0xac
 800d05e:	942c      	str	r4, [sp, #176]	@ 0xb0
 800d060:	942d      	str	r4, [sp, #180]	@ 0xb4
 800d062:	942e      	str	r4, [sp, #184]	@ 0xb8
 800d064:	942f      	str	r4, [sp, #188]	@ 0xbc
 800d066:	9430      	str	r4, [sp, #192]	@ 0xc0
 800d068:	9431      	str	r4, [sp, #196]	@ 0xc4
 800d06a:	9432      	str	r4, [sp, #200]	@ 0xc8
 800d06c:	9433      	str	r4, [sp, #204]	@ 0xcc
 800d06e:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 800d072:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 800d076:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 800d07a:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 800d07e:	eef0 9a49 	vmov.f32	s19, s18
 800d082:	eeb0 8a49 	vmov.f32	s16, s18
 800d086:	eef0 8a49 	vmov.f32	s17, s18
 800d08a:	4644      	mov	r4, r8
 800d08c:	46c1      	mov	r9, r8
 800d08e:	af08      	add	r7, sp, #32
 800d090:	f04f 0a01 	mov.w	sl, #1
 800d094:	9b06      	ldr	r3, [sp, #24]
 800d096:	454b      	cmp	r3, r9
 800d098:	f000 80cc 	beq.w	800d234 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 800d09c:	f109 0301 	add.w	r3, r9, #1
 800d0a0:	9305      	str	r3, [sp, #20]
 800d0a2:	f81b 3009 	ldrb.w	r3, [fp, r9]
 800d0a6:	2b06      	cmp	r3, #6
 800d0a8:	d839      	bhi.n	800d11e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d0aa:	e8df f003 	tbb	[pc, r3]
 800d0ae:	3b04      	.short	0x3b04
 800d0b0:	817c6f60 	.word	0x817c6f60
 800d0b4:	a0          	.byte	0xa0
 800d0b5:	00          	.byte	0x00
 800d0b6:	45c1      	cmp	r9, r8
 800d0b8:	d92b      	bls.n	800d112 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800d0ba:	eef0 0a49 	vmov.f32	s1, s18
 800d0be:	eeb0 0a69 	vmov.f32	s0, s19
 800d0c2:	4638      	mov	r0, r7
 800d0c4:	f7ff fdde 	bl	800cc84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d0c8:	4638      	mov	r0, r7
 800d0ca:	f7ff fe67 	bl	800cd9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800d0ce:	4681      	mov	r9, r0
 800d0d0:	b9f8      	cbnz	r0, 800d112 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800d0d2:	eef0 0a49 	vmov.f32	s1, s18
 800d0d6:	eeb0 0a69 	vmov.f32	s0, s19
 800d0da:	4638      	mov	r0, r7
 800d0dc:	f7ff fe8d 	bl	800cdfa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800d0e0:	4628      	mov	r0, r5
 800d0e2:	e9cd 9702 	strd	r9, r7, [sp, #8]
 800d0e6:	e9cd b600 	strd	fp, r6, [sp]
 800d0ea:	4623      	mov	r3, r4
 800d0ec:	9a05      	ldr	r2, [sp, #20]
 800d0ee:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 800d0f2:	4641      	mov	r1, r8
 800d0f4:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 800d0f8:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800d0fc:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800d100:	f7ff feae 	bl	800ce60 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800d104:	eef0 0a49 	vmov.f32	s1, s18
 800d108:	eeb0 0a69 	vmov.f32	s0, s19
 800d10c:	4638      	mov	r0, r7
 800d10e:	f7ff fe74 	bl	800cdfa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800d112:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800d116:	eeb0 8a49 	vmov.f32	s16, s18
 800d11a:	eef0 8a69 	vmov.f32	s17, s19
 800d11e:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800d122:	e7b7      	b.n	800d094 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 800d124:	45c1      	cmp	r9, r8
 800d126:	d90d      	bls.n	800d144 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800d128:	4638      	mov	r0, r7
 800d12a:	f7ff fe37 	bl	800cd9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800d12e:	b948      	cbnz	r0, 800d144 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800d130:	e9cd a702 	strd	sl, r7, [sp, #8]
 800d134:	e9cd b600 	strd	fp, r6, [sp]
 800d138:	4623      	mov	r3, r4
 800d13a:	464a      	mov	r2, r9
 800d13c:	4641      	mov	r1, r8
 800d13e:	4628      	mov	r0, r5
 800d140:	f7ff fe8e 	bl	800ce60 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800d144:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d148:	edd3 8a00 	vldr	s17, [r3]
 800d14c:	ed93 8a01 	vldr	s16, [r3, #4]
 800d150:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 800d154:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 800d158:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800d15c:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800d160:	3402      	adds	r4, #2
 800d162:	46c8      	mov	r8, r9
 800d164:	eeb0 9a48 	vmov.f32	s18, s16
 800d168:	eef0 9a68 	vmov.f32	s19, s17
 800d16c:	e7d7      	b.n	800d11e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d16e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d172:	edd3 8a00 	vldr	s17, [r3]
 800d176:	ed93 8a01 	vldr	s16, [r3, #4]
 800d17a:	eeb0 0a68 	vmov.f32	s0, s17
 800d17e:	eef0 0a48 	vmov.f32	s1, s16
 800d182:	4638      	mov	r0, r7
 800d184:	f7ff fd7e 	bl	800cc84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d188:	3402      	adds	r4, #2
 800d18a:	e7c8      	b.n	800d11e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d18c:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d190:	edd3 8a00 	vldr	s17, [r3]
 800d194:	eef0 0a48 	vmov.f32	s1, s16
 800d198:	eeb0 0a68 	vmov.f32	s0, s17
 800d19c:	4638      	mov	r0, r7
 800d19e:	f7ff fd71 	bl	800cc84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d1a2:	3401      	adds	r4, #1
 800d1a4:	e7bb      	b.n	800d11e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d1a6:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d1aa:	ed93 8a00 	vldr	s16, [r3]
 800d1ae:	e7f1      	b.n	800d194 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 800d1b0:	00a3      	lsls	r3, r4, #2
 800d1b2:	f103 0208 	add.w	r2, r3, #8
 800d1b6:	f103 090c 	add.w	r9, r3, #12
 800d1ba:	4432      	add	r2, r6
 800d1bc:	4433      	add	r3, r6
 800d1be:	44b1      	add	r9, r6
 800d1c0:	ed92 2a00 	vldr	s4, [r2]
 800d1c4:	edd9 2a00 	vldr	s5, [r9]
 800d1c8:	edd3 1a01 	vldr	s3, [r3, #4]
 800d1cc:	ed93 1a00 	vldr	s2, [r3]
 800d1d0:	9207      	str	r2, [sp, #28]
 800d1d2:	eef0 0a48 	vmov.f32	s1, s16
 800d1d6:	eeb0 0a68 	vmov.f32	s0, s17
 800d1da:	4638      	mov	r0, r7
 800d1dc:	f7ff fabc 	bl	800c758 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800d1e0:	9a07      	ldr	r2, [sp, #28]
 800d1e2:	ed99 8a00 	vldr	s16, [r9]
 800d1e6:	edd2 8a00 	vldr	s17, [r2]
 800d1ea:	3404      	adds	r4, #4
 800d1ec:	e797      	b.n	800d11e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d1ee:	00a3      	lsls	r3, r4, #2
 800d1f0:	f103 0210 	add.w	r2, r3, #16
 800d1f4:	f103 0914 	add.w	r9, r3, #20
 800d1f8:	4432      	add	r2, r6
 800d1fa:	4433      	add	r3, r6
 800d1fc:	44b1      	add	r9, r6
 800d1fe:	ed92 3a00 	vldr	s6, [r2]
 800d202:	edd9 3a00 	vldr	s7, [r9]
 800d206:	edd3 2a03 	vldr	s5, [r3, #12]
 800d20a:	ed93 2a02 	vldr	s4, [r3, #8]
 800d20e:	edd3 1a01 	vldr	s3, [r3, #4]
 800d212:	ed93 1a00 	vldr	s2, [r3]
 800d216:	9207      	str	r2, [sp, #28]
 800d218:	eef0 0a48 	vmov.f32	s1, s16
 800d21c:	eeb0 0a68 	vmov.f32	s0, s17
 800d220:	4638      	mov	r0, r7
 800d222:	f7ff fab8 	bl	800c796 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800d226:	9a07      	ldr	r2, [sp, #28]
 800d228:	ed99 8a00 	vldr	s16, [r9]
 800d22c:	edd2 8a00 	vldr	s17, [r2]
 800d230:	3406      	adds	r4, #6
 800d232:	e774      	b.n	800d11e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d234:	9b06      	ldr	r3, [sp, #24]
 800d236:	4543      	cmp	r3, r8
 800d238:	af08      	add	r7, sp, #32
 800d23a:	d90f      	bls.n	800d25c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800d23c:	4638      	mov	r0, r7
 800d23e:	f7ff fdad 	bl	800cd9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800d242:	b958      	cbnz	r0, 800d25c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800d244:	2301      	movs	r3, #1
 800d246:	e9cd 6301 	strd	r6, r3, [sp, #4]
 800d24a:	9703      	str	r7, [sp, #12]
 800d24c:	f8cd b000 	str.w	fp, [sp]
 800d250:	4623      	mov	r3, r4
 800d252:	9a06      	ldr	r2, [sp, #24]
 800d254:	4641      	mov	r1, r8
 800d256:	4628      	mov	r0, r5
 800d258:	f7ff fe02 	bl	800ce60 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800d25c:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 800d260:	4638      	mov	r0, r7
 800d262:	f015 fe8d 	bl	8022f80 <_ZN8touchgfx6Canvas6renderEh>
 800d266:	4604      	mov	r4, r0
 800d268:	4638      	mov	r0, r7
 800d26a:	f7ff fe99 	bl	800cfa0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800d26e:	4620      	mov	r0, r4
 800d270:	b035      	add	sp, #212	@ 0xd4
 800d272:	ecbd 8b04 	vpop	{d8-d9}
 800d276:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d27a:	2401      	movs	r4, #1
 800d27c:	e7f7      	b.n	800d26e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 800d27e:	bf00      	nop
 800d280:	00000000 	.word	0x00000000
 800d284:	080276c8 	.word	0x080276c8

0800d288 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 800d288:	b510      	push	{r4, lr}
 800d28a:	4604      	mov	r4, r0
 800d28c:	f7ff fe88 	bl	800cfa0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800d290:	4620      	mov	r0, r4
 800d292:	21b0      	movs	r1, #176	@ 0xb0
 800d294:	f016 fa62 	bl	802375c <_ZdlPvj>
 800d298:	4620      	mov	r0, r4
 800d29a:	bd10      	pop	{r4, pc}

0800d29c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 800d29c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d2a0:	ed2d 8b06 	vpush	{d8-d10}
 800d2a4:	b0aa      	sub	sp, #168	@ 0xa8
 800d2a6:	4698      	mov	r8, r3
 800d2a8:	23ff      	movs	r3, #255	@ 0xff
 800d2aa:	4607      	mov	r7, r0
 800d2ac:	9300      	str	r3, [sp, #0]
 800d2ae:	4689      	mov	r9, r1
 800d2b0:	4692      	mov	sl, r2
 800d2b2:	6981      	ldr	r1, [r0, #24]
 800d2b4:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 800d2b6:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 800d4c0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800d2ba:	1d02      	adds	r2, r0, #4
 800d2bc:	a80d      	add	r0, sp, #52	@ 0x34
 800d2be:	f015 fdcb 	bl	8022e58 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800d2c2:	7f3b      	ldrb	r3, [r7, #28]
 800d2c4:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 800d4c0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800d2c8:	1e5a      	subs	r2, r3, #1
 800d2ca:	4253      	negs	r3, r2
 800d2cc:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 800d2d0:	4153      	adcs	r3, r2
 800d2d2:	eeb0 0a60 	vmov.f32	s0, s1
 800d2d6:	4628      	mov	r0, r5
 800d2d8:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 800d2dc:	f005 f9f1 	bl	80126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d2e0:	44ca      	add	sl, r9
 800d2e2:	eeb0 9a40 	vmov.f32	s18, s0
 800d2e6:	eef0 9a60 	vmov.f32	s19, s1
 800d2ea:	eef0 8a48 	vmov.f32	s17, s16
 800d2ee:	2400      	movs	r4, #0
 800d2f0:	45ca      	cmp	sl, r9
 800d2f2:	f000 80cd 	beq.w	800d490 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 800d2f6:	f819 3b01 	ldrb.w	r3, [r9], #1
 800d2fa:	2b06      	cmp	r3, #6
 800d2fc:	d8f8      	bhi.n	800d2f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d2fe:	e8df f003 	tbb	[pc, r3]
 800d302:	0804      	.short	0x0804
 800d304:	58533f2a 	.word	0x58533f2a
 800d308:	8a          	.byte	0x8a
 800d309:	00          	.byte	0x00
 800d30a:	a80d      	add	r0, sp, #52	@ 0x34
 800d30c:	f015 fe16 	bl	8022f3c <_ZN8touchgfx6Canvas5closeEv>
 800d310:	e7ee      	b.n	800d2f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d312:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d316:	edd3 8a00 	vldr	s17, [r3]
 800d31a:	ed93 8a01 	vldr	s16, [r3, #4]
 800d31e:	eeb0 0a68 	vmov.f32	s0, s17
 800d322:	eef0 0a48 	vmov.f32	s1, s16
 800d326:	4628      	mov	r0, r5
 800d328:	f005 f9cb 	bl	80126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d32c:	eef0 7a60 	vmov.f32	s15, s1
 800d330:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d334:	a80d      	add	r0, sp, #52	@ 0x34
 800d336:	ee17 2a90 	vmov	r2, s15
 800d33a:	eef0 7a40 	vmov.f32	s15, s0
 800d33e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d342:	eeb0 9a40 	vmov.f32	s18, s0
 800d346:	ee17 1a90 	vmov	r1, s15
 800d34a:	eef0 9a60 	vmov.f32	s19, s1
 800d34e:	f015 fecf 	bl	80230f0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800d352:	3402      	adds	r4, #2
 800d354:	e7cc      	b.n	800d2f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d356:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d35a:	edd3 8a00 	vldr	s17, [r3]
 800d35e:	ed93 8a01 	vldr	s16, [r3, #4]
 800d362:	eeb0 0a68 	vmov.f32	s0, s17
 800d366:	eef0 0a48 	vmov.f32	s1, s16
 800d36a:	4628      	mov	r0, r5
 800d36c:	f005 f9a9 	bl	80126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d370:	a80d      	add	r0, sp, #52	@ 0x34
 800d372:	eeb0 9a40 	vmov.f32	s18, s0
 800d376:	eef0 9a60 	vmov.f32	s19, s1
 800d37a:	f7ff fe01 	bl	800cf80 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800d37e:	e7e8      	b.n	800d352 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 800d380:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d384:	edd3 8a00 	vldr	s17, [r3]
 800d388:	eef0 0a48 	vmov.f32	s1, s16
 800d38c:	eeb0 0a68 	vmov.f32	s0, s17
 800d390:	4628      	mov	r0, r5
 800d392:	f005 f996 	bl	80126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d396:	a80d      	add	r0, sp, #52	@ 0x34
 800d398:	eeb0 9a40 	vmov.f32	s18, s0
 800d39c:	eef0 9a60 	vmov.f32	s19, s1
 800d3a0:	3401      	adds	r4, #1
 800d3a2:	f7ff fded 	bl	800cf80 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800d3a6:	e7a3      	b.n	800d2f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d3a8:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d3ac:	ed93 8a00 	vldr	s16, [r3]
 800d3b0:	e7ea      	b.n	800d388 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 800d3b2:	1ca3      	adds	r3, r4, #2
 800d3b4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 800d3b8:	ed53 0a01 	vldr	s1, [r3, #-4]
 800d3bc:	ed13 0a02 	vldr	s0, [r3, #-8]
 800d3c0:	edd3 8a00 	vldr	s17, [r3]
 800d3c4:	ed93 8a01 	vldr	s16, [r3, #4]
 800d3c8:	4628      	mov	r0, r5
 800d3ca:	f005 f97a 	bl	80126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d3ce:	4628      	mov	r0, r5
 800d3d0:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800d3d4:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800d3d8:	eeb0 0a68 	vmov.f32	s0, s17
 800d3dc:	eef0 0a48 	vmov.f32	s1, s16
 800d3e0:	f005 f96f 	bl	80126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d3e4:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 800d3e8:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 800d3ec:	eef0 2a60 	vmov.f32	s5, s1
 800d3f0:	eeb0 2a40 	vmov.f32	s4, s0
 800d3f4:	eeb0 aa40 	vmov.f32	s20, s0
 800d3f8:	eef0 aa60 	vmov.f32	s21, s1
 800d3fc:	eeb0 0a49 	vmov.f32	s0, s18
 800d400:	eef0 0a69 	vmov.f32	s1, s19
 800d404:	a80d      	add	r0, sp, #52	@ 0x34
 800d406:	f7ff f9a7 	bl	800c758 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800d40a:	3404      	adds	r4, #4
 800d40c:	eef0 9a6a 	vmov.f32	s19, s21
 800d410:	eeb0 9a4a 	vmov.f32	s18, s20
 800d414:	e76c      	b.n	800d2f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d416:	1d26      	adds	r6, r4, #4
 800d418:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800d41c:	ed56 0a03 	vldr	s1, [r6, #-12]
 800d420:	ed16 0a04 	vldr	s0, [r6, #-16]
 800d424:	edd6 8a00 	vldr	s17, [r6]
 800d428:	ed96 8a01 	vldr	s16, [r6, #4]
 800d42c:	4628      	mov	r0, r5
 800d42e:	f005 f948 	bl	80126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d432:	4628      	mov	r0, r5
 800d434:	ed8d 0a07 	vstr	s0, [sp, #28]
 800d438:	edcd 0a08 	vstr	s1, [sp, #32]
 800d43c:	ed16 0a02 	vldr	s0, [r6, #-8]
 800d440:	ed56 0a01 	vldr	s1, [r6, #-4]
 800d444:	f005 f93d 	bl	80126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d448:	4628      	mov	r0, r5
 800d44a:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800d44e:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800d452:	eeb0 0a68 	vmov.f32	s0, s17
 800d456:	eef0 0a48 	vmov.f32	s1, s16
 800d45a:	f005 f932 	bl	80126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d45e:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 800d462:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 800d466:	eddd 1a08 	vldr	s3, [sp, #32]
 800d46a:	ed9d 1a07 	vldr	s2, [sp, #28]
 800d46e:	eef0 3a60 	vmov.f32	s7, s1
 800d472:	eeb0 3a40 	vmov.f32	s6, s0
 800d476:	eeb0 aa40 	vmov.f32	s20, s0
 800d47a:	eef0 aa60 	vmov.f32	s21, s1
 800d47e:	eeb0 0a49 	vmov.f32	s0, s18
 800d482:	eef0 0a69 	vmov.f32	s1, s19
 800d486:	a80d      	add	r0, sp, #52	@ 0x34
 800d488:	f7ff f985 	bl	800c796 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800d48c:	3406      	adds	r4, #6
 800d48e:	e7bd      	b.n	800d40c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 800d490:	7f7b      	ldrb	r3, [r7, #29]
 800d492:	7fb9      	ldrb	r1, [r7, #30]
 800d494:	4359      	muls	r1, r3
 800d496:	1c4b      	adds	r3, r1, #1
 800d498:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 800d49c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 800d4a0:	a80d      	add	r0, sp, #52	@ 0x34
 800d4a2:	f015 fd6d 	bl	8022f80 <_ZN8touchgfx6Canvas6renderEh>
 800d4a6:	4b07      	ldr	r3, [pc, #28]	@ (800d4c4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 800d4a8:	930d      	str	r3, [sp, #52]	@ 0x34
 800d4aa:	4604      	mov	r4, r0
 800d4ac:	a812      	add	r0, sp, #72	@ 0x48
 800d4ae:	f000 ff73 	bl	800e398 <_ZN8touchgfx7OutlineD1Ev>
 800d4b2:	4620      	mov	r0, r4
 800d4b4:	b02a      	add	sp, #168	@ 0xa8
 800d4b6:	ecbd 8b06 	vpop	{d8-d10}
 800d4ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d4be:	bf00      	nop
 800d4c0:	00000000 	.word	0x00000000
 800d4c4:	08027e24 	.word	0x08027e24

0800d4c8 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 800d4c8:	b410      	push	{r4}
 800d4ca:	7f04      	ldrb	r4, [r0, #28]
 800d4cc:	b11c      	cbz	r4, 800d4d6 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 800d4ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d4d2:	f7ff bee3 	b.w	800d29c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 800d4d6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d4da:	f7ff bd6d 	b.w	800cfb8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

0800d4e0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 800d4e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4e4:	4691      	mov	r9, r2
 800d4e6:	4602      	mov	r2, r0
 800d4e8:	4605      	mov	r5, r0
 800d4ea:	f852 0f26 	ldr.w	r0, [r2, #38]!
 800d4ee:	b085      	sub	sp, #20
 800d4f0:	4688      	mov	r8, r1
 800d4f2:	6851      	ldr	r1, [r2, #4]
 800d4f4:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 800d4f8:	469a      	mov	sl, r3
 800d4fa:	ab02      	add	r3, sp, #8
 800d4fc:	c303      	stmia	r3!, {r0, r1}
 800d4fe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d502:	2b00      	cmp	r3, #0
 800d504:	af02      	add	r7, sp, #8
 800d506:	dd08      	ble.n	800d51a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d508:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 800d50c:	2c00      	cmp	r4, #0
 800d50e:	dd04      	ble.n	800d51a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d510:	4a2e      	ldr	r2, [pc, #184]	@ (800d5cc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 800d512:	7812      	ldrb	r2, [r2, #0]
 800d514:	b122      	cbz	r2, 800d520 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 800d516:	2a01      	cmp	r2, #1
 800d518:	d02d      	beq.n	800d576 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 800d51a:	b005      	add	sp, #20
 800d51c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d520:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d524:	441c      	add	r4, r3
 800d526:	b2a4      	uxth	r4, r4
 800d528:	b226      	sxth	r6, r4
 800d52a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800d52e:	42b3      	cmp	r3, r6
 800d530:	daf3      	bge.n	800d51a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d532:	e9cd b700 	strd	fp, r7, [sp]
 800d536:	4653      	mov	r3, sl
 800d538:	464a      	mov	r2, r9
 800d53a:	4641      	mov	r1, r8
 800d53c:	4628      	mov	r0, r5
 800d53e:	f7ff ffc3 	bl	800d4c8 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800d542:	b940      	cbnz	r0, 800d556 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800d544:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d548:	2b01      	cmp	r3, #1
 800d54a:	d004      	beq.n	800d556 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800d54c:	3301      	adds	r3, #1
 800d54e:	105b      	asrs	r3, r3, #1
 800d550:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d554:	e7ed      	b.n	800d532 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 800d556:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d55a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d55e:	4413      	add	r3, r2
 800d560:	b29b      	uxth	r3, r3
 800d562:	441a      	add	r2, r3
 800d564:	b212      	sxth	r2, r2
 800d566:	4296      	cmp	r6, r2
 800d568:	f8ad 300a 	strh.w	r3, [sp, #10]
 800d56c:	dadd      	bge.n	800d52a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800d56e:	1ae3      	subs	r3, r4, r3
 800d570:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d574:	e7d9      	b.n	800d52a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800d576:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 800d57a:	441c      	add	r4, r3
 800d57c:	b2a4      	uxth	r4, r4
 800d57e:	b226      	sxth	r6, r4
 800d580:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800d584:	42b3      	cmp	r3, r6
 800d586:	dac8      	bge.n	800d51a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d588:	e9cd b700 	strd	fp, r7, [sp]
 800d58c:	4653      	mov	r3, sl
 800d58e:	464a      	mov	r2, r9
 800d590:	4641      	mov	r1, r8
 800d592:	4628      	mov	r0, r5
 800d594:	f7ff ff98 	bl	800d4c8 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800d598:	b940      	cbnz	r0, 800d5ac <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800d59a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d59e:	2b01      	cmp	r3, #1
 800d5a0:	d004      	beq.n	800d5ac <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800d5a2:	3301      	adds	r3, #1
 800d5a4:	105b      	asrs	r3, r3, #1
 800d5a6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d5aa:	e7ed      	b.n	800d588 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 800d5ac:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800d5b0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d5b4:	4413      	add	r3, r2
 800d5b6:	b29b      	uxth	r3, r3
 800d5b8:	441a      	add	r2, r3
 800d5ba:	b212      	sxth	r2, r2
 800d5bc:	4296      	cmp	r6, r2
 800d5be:	f8ad 3008 	strh.w	r3, [sp, #8]
 800d5c2:	dadd      	bge.n	800d580 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800d5c4:	1ae3      	subs	r3, r4, r3
 800d5c6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d5ca:	e7d9      	b.n	800d580 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800d5cc:	200157b8 	.word	0x200157b8

0800d5d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800d5d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d5d2:	6803      	ldr	r3, [r0, #0]
 800d5d4:	460d      	mov	r5, r1
 800d5d6:	4604      	mov	r4, r0
 800d5d8:	4601      	mov	r1, r0
 800d5da:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800d5dc:	a802      	add	r0, sp, #8
 800d5de:	4798      	blx	r3
 800d5e0:	6828      	ldr	r0, [r5, #0]
 800d5e2:	6869      	ldr	r1, [r5, #4]
 800d5e4:	466b      	mov	r3, sp
 800d5e6:	c303      	stmia	r3!, {r0, r1}
 800d5e8:	4668      	mov	r0, sp
 800d5ea:	4619      	mov	r1, r3
 800d5ec:	f7fd fb96 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 800d5f0:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800d5f2:	b188      	cbz	r0, 800d618 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d5f4:	6803      	ldr	r3, [r0, #0]
 800d5f6:	1d21      	adds	r1, r4, #4
 800d5f8:	68db      	ldr	r3, [r3, #12]
 800d5fa:	4798      	blx	r3
 800d5fc:	b160      	cbz	r0, 800d618 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d5fe:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d602:	2b00      	cmp	r3, #0
 800d604:	dd08      	ble.n	800d618 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d606:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800d60a:	2d00      	cmp	r5, #0
 800d60c:	dd04      	ble.n	800d618 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d60e:	4a2b      	ldr	r2, [pc, #172]	@ (800d6bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800d610:	7812      	ldrb	r2, [r2, #0]
 800d612:	b11a      	cbz	r2, 800d61c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800d614:	2a01      	cmp	r2, #1
 800d616:	d029      	beq.n	800d66c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800d618:	b004      	add	sp, #16
 800d61a:	bd70      	pop	{r4, r5, r6, pc}
 800d61c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d620:	441d      	add	r5, r3
 800d622:	b2ad      	uxth	r5, r5
 800d624:	b22e      	sxth	r6, r5
 800d626:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800d62a:	42b3      	cmp	r3, r6
 800d62c:	daf4      	bge.n	800d618 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d62e:	6823      	ldr	r3, [r4, #0]
 800d630:	4669      	mov	r1, sp
 800d632:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d634:	4620      	mov	r0, r4
 800d636:	4798      	blx	r3
 800d638:	b940      	cbnz	r0, 800d64c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800d63a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800d63e:	2b01      	cmp	r3, #1
 800d640:	d004      	beq.n	800d64c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800d642:	3301      	adds	r3, #1
 800d644:	105b      	asrs	r3, r3, #1
 800d646:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d64a:	e7f0      	b.n	800d62e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800d64c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d650:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d654:	4413      	add	r3, r2
 800d656:	b29b      	uxth	r3, r3
 800d658:	441a      	add	r2, r3
 800d65a:	b212      	sxth	r2, r2
 800d65c:	4296      	cmp	r6, r2
 800d65e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d662:	dae0      	bge.n	800d626 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800d664:	1aeb      	subs	r3, r5, r3
 800d666:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d66a:	e7dc      	b.n	800d626 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800d66c:	f8bd 5000 	ldrh.w	r5, [sp]
 800d670:	441d      	add	r5, r3
 800d672:	b2ad      	uxth	r5, r5
 800d674:	b22e      	sxth	r6, r5
 800d676:	f9bd 3000 	ldrsh.w	r3, [sp]
 800d67a:	42b3      	cmp	r3, r6
 800d67c:	dacc      	bge.n	800d618 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d67e:	6823      	ldr	r3, [r4, #0]
 800d680:	4669      	mov	r1, sp
 800d682:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d684:	4620      	mov	r0, r4
 800d686:	4798      	blx	r3
 800d688:	b940      	cbnz	r0, 800d69c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800d68a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d68e:	2b01      	cmp	r3, #1
 800d690:	d004      	beq.n	800d69c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800d692:	3301      	adds	r3, #1
 800d694:	105b      	asrs	r3, r3, #1
 800d696:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d69a:	e7f0      	b.n	800d67e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800d69c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800d6a0:	f8bd 3000 	ldrh.w	r3, [sp]
 800d6a4:	4413      	add	r3, r2
 800d6a6:	b29b      	uxth	r3, r3
 800d6a8:	441a      	add	r2, r3
 800d6aa:	b212      	sxth	r2, r2
 800d6ac:	4296      	cmp	r6, r2
 800d6ae:	f8ad 3000 	strh.w	r3, [sp]
 800d6b2:	dae0      	bge.n	800d676 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800d6b4:	1aeb      	subs	r3, r5, r3
 800d6b6:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d6ba:	e7dc      	b.n	800d676 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800d6bc:	200157b8 	.word	0x200157b8

0800d6c0 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800d6c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d6c2:	6803      	ldr	r3, [r0, #0]
 800d6c4:	4604      	mov	r4, r0
 800d6c6:	4601      	mov	r1, r0
 800d6c8:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800d6ca:	4668      	mov	r0, sp
 800d6cc:	4798      	blx	r3
 800d6ce:	2100      	movs	r1, #0
 800d6d0:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800d6d4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d6d8:	9102      	str	r1, [sp, #8]
 800d6da:	4668      	mov	r0, sp
 800d6dc:	a902      	add	r1, sp, #8
 800d6de:	f8ad 200c 	strh.w	r2, [sp, #12]
 800d6e2:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d6e6:	f7fd fb19 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 800d6ea:	6823      	ldr	r3, [r4, #0]
 800d6ec:	4669      	mov	r1, sp
 800d6ee:	691b      	ldr	r3, [r3, #16]
 800d6f0:	4620      	mov	r0, r4
 800d6f2:	4798      	blx	r3
 800d6f4:	b004      	add	sp, #16
 800d6f6:	bd10      	pop	{r4, pc}

0800d6f8 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800d6f8:	2101      	movs	r1, #1
 800d6fa:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800d6fe:	490b      	ldr	r1, [pc, #44]	@ (800d72c <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800d700:	6001      	str	r1, [r0, #0]
 800d702:	2200      	movs	r2, #0
 800d704:	21ff      	movs	r1, #255	@ 0xff
 800d706:	8082      	strh	r2, [r0, #4]
 800d708:	80c2      	strh	r2, [r0, #6]
 800d70a:	8102      	strh	r2, [r0, #8]
 800d70c:	8142      	strh	r2, [r0, #10]
 800d70e:	8182      	strh	r2, [r0, #12]
 800d710:	81c2      	strh	r2, [r0, #14]
 800d712:	8202      	strh	r2, [r0, #16]
 800d714:	8242      	strh	r2, [r0, #18]
 800d716:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d71a:	61c2      	str	r2, [r0, #28]
 800d71c:	8402      	strh	r2, [r0, #32]
 800d71e:	8442      	strh	r2, [r0, #34]	@ 0x22
 800d720:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800d724:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800d728:	6282      	str	r2, [r0, #40]	@ 0x28
 800d72a:	4770      	bx	lr
 800d72c:	08027728 	.word	0x08027728

0800d730 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800d730:	2000      	movs	r0, #0
 800d732:	4770      	bx	lr

0800d734 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800d734:	4b07      	ldr	r3, [pc, #28]	@ (800d754 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800d736:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800d738:	881b      	ldrh	r3, [r3, #0]
 800d73a:	4293      	cmp	r3, r2
 800d73c:	bf81      	itttt	hi
 800d73e:	4b06      	ldrhi	r3, [pc, #24]	@ (800d758 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800d740:	681b      	ldrhi	r3, [r3, #0]
 800d742:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800d746:	7858      	ldrbhi	r0, [r3, #1]
 800d748:	bf8c      	ite	hi
 800d74a:	f000 0003 	andhi.w	r0, r0, #3
 800d74e:	2000      	movls	r0, #0
 800d750:	4770      	bx	lr
 800d752:	bf00      	nop
 800d754:	2001581c 	.word	0x2001581c
 800d758:	20015818 	.word	0x20015818

0800d75c <_ZN8touchgfx8TextAreaD1Ev>:
 800d75c:	4770      	bx	lr
	...

0800d760 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800d760:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d764:	4b10      	ldr	r3, [pc, #64]	@ (800d7a8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800d766:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800d768:	881b      	ldrh	r3, [r3, #0]
 800d76a:	428b      	cmp	r3, r1
 800d76c:	4604      	mov	r4, r0
 800d76e:	d918      	bls.n	800d7a2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800d770:	6803      	ldr	r3, [r0, #0]
 800d772:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800d774:	4b0d      	ldr	r3, [pc, #52]	@ (800d7ac <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800d776:	6818      	ldr	r0, [r3, #0]
 800d778:	f7f7 f8e6 	bl	8004948 <_ZNK8touchgfx5Texts7getTextEt>
 800d77c:	6823      	ldr	r3, [r4, #0]
 800d77e:	4606      	mov	r6, r0
 800d780:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d782:	4620      	mov	r0, r4
 800d784:	4798      	blx	r3
 800d786:	6823      	ldr	r3, [r4, #0]
 800d788:	4607      	mov	r7, r0
 800d78a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d78e:	4620      	mov	r0, r4
 800d790:	4798      	blx	r3
 800d792:	463a      	mov	r2, r7
 800d794:	4603      	mov	r3, r0
 800d796:	4631      	mov	r1, r6
 800d798:	4620      	mov	r0, r4
 800d79a:	46ac      	mov	ip, r5
 800d79c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d7a0:	4760      	bx	ip
 800d7a2:	2000      	movs	r0, #0
 800d7a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d7a8:	2001581c 	.word	0x2001581c
 800d7ac:	20015824 	.word	0x20015824

0800d7b0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800d7b0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d7b4:	4b17      	ldr	r3, [pc, #92]	@ (800d814 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800d7b6:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800d7b8:	881b      	ldrh	r3, [r3, #0]
 800d7ba:	428b      	cmp	r3, r1
 800d7bc:	4604      	mov	r4, r0
 800d7be:	d926      	bls.n	800d80e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800d7c0:	4b15      	ldr	r3, [pc, #84]	@ (800d818 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800d7c2:	681b      	ldr	r3, [r3, #0]
 800d7c4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800d7c8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800d7cc:	4b13      	ldr	r3, [pc, #76]	@ (800d81c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800d7ce:	7855      	ldrb	r5, [r2, #1]
 800d7d0:	681b      	ldr	r3, [r3, #0]
 800d7d2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800d7d6:	6833      	ldr	r3, [r6, #0]
 800d7d8:	69df      	ldr	r7, [r3, #28]
 800d7da:	4b11      	ldr	r3, [pc, #68]	@ (800d820 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800d7dc:	6818      	ldr	r0, [r3, #0]
 800d7de:	f7f7 f8b3 	bl	8004948 <_ZNK8touchgfx5Texts7getTextEt>
 800d7e2:	6823      	ldr	r3, [r4, #0]
 800d7e4:	4680      	mov	r8, r0
 800d7e6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d7e8:	4620      	mov	r0, r4
 800d7ea:	4798      	blx	r3
 800d7ec:	6823      	ldr	r3, [r4, #0]
 800d7ee:	4681      	mov	r9, r0
 800d7f0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d7f4:	4620      	mov	r0, r4
 800d7f6:	4798      	blx	r3
 800d7f8:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800d7fc:	9000      	str	r0, [sp, #0]
 800d7fe:	464b      	mov	r3, r9
 800d800:	4642      	mov	r2, r8
 800d802:	4629      	mov	r1, r5
 800d804:	4630      	mov	r0, r6
 800d806:	47b8      	blx	r7
 800d808:	b003      	add	sp, #12
 800d80a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d80e:	2000      	movs	r0, #0
 800d810:	e7fa      	b.n	800d808 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800d812:	bf00      	nop
 800d814:	2001581c 	.word	0x2001581c
 800d818:	20015818 	.word	0x20015818
 800d81c:	20015820 	.word	0x20015820
 800d820:	20015824 	.word	0x20015824

0800d824 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800d824:	b40e      	push	{r1, r2, r3}
 800d826:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d82a:	4b2f      	ldr	r3, [pc, #188]	@ (800d8e8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800d82c:	881a      	ldrh	r2, [r3, #0]
 800d82e:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800d830:	429a      	cmp	r2, r3
 800d832:	b09d      	sub	sp, #116	@ 0x74
 800d834:	4604      	mov	r4, r0
 800d836:	d954      	bls.n	800d8e2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800d838:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800d8ec <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800d83c:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800d8f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800d840:	aa26      	add	r2, sp, #152	@ 0x98
 800d842:	9202      	str	r2, [sp, #8]
 800d844:	f8d9 2000 	ldr.w	r2, [r9]
 800d848:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d84c:	f8d8 3000 	ldr.w	r3, [r8]
 800d850:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d854:	682b      	ldr	r3, [r5, #0]
 800d856:	4628      	mov	r0, r5
 800d858:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d85a:	4798      	blx	r3
 800d85c:	b207      	sxth	r7, r0
 800d85e:	4606      	mov	r6, r0
 800d860:	a803      	add	r0, sp, #12
 800d862:	f005 fb28 	bl	8012eb6 <_ZN8touchgfx12TextProviderC1Ev>
 800d866:	682b      	ldr	r3, [r5, #0]
 800d868:	4628      	mov	r0, r5
 800d86a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d86c:	4798      	blx	r3
 800d86e:	682b      	ldr	r3, [r5, #0]
 800d870:	4682      	mov	sl, r0
 800d872:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d874:	4628      	mov	r0, r5
 800d876:	4798      	blx	r3
 800d878:	4653      	mov	r3, sl
 800d87a:	9000      	str	r0, [sp, #0]
 800d87c:	9a02      	ldr	r2, [sp, #8]
 800d87e:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800d880:	a803      	add	r0, sp, #12
 800d882:	f005 fb73 	bl	8012f6c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d886:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800d888:	f8d9 3000 	ldr.w	r3, [r9]
 800d88c:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800d890:	8925      	ldrh	r5, [r4, #8]
 800d892:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800d896:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800d89a:	eba5 050c 	sub.w	r5, r5, ip
 800d89e:	784a      	ldrb	r2, [r1, #1]
 800d8a0:	f8d8 3000 	ldr.w	r3, [r8]
 800d8a4:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800d8a8:	b22d      	sxth	r5, r5
 800d8aa:	9500      	str	r5, [sp, #0]
 800d8ac:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800d8b0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d8b4:	a803      	add	r0, sp, #12
 800d8b6:	f002 fc5b 	bl	8010170 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800d8ba:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800d8be:	18b9      	adds	r1, r7, r2
 800d8c0:	2900      	cmp	r1, #0
 800d8c2:	b203      	sxth	r3, r0
 800d8c4:	dd0b      	ble.n	800d8de <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800d8c6:	3b01      	subs	r3, #1
 800d8c8:	fb13 f302 	smulbb	r3, r3, r2
 800d8cc:	fb16 3300 	smlabb	r3, r6, r0, r3
 800d8d0:	b21f      	sxth	r7, r3
 800d8d2:	4638      	mov	r0, r7
 800d8d4:	b01d      	add	sp, #116	@ 0x74
 800d8d6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d8da:	b003      	add	sp, #12
 800d8dc:	4770      	bx	lr
 800d8de:	2b00      	cmp	r3, #0
 800d8e0:	dcf7      	bgt.n	800d8d2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d8e2:	2700      	movs	r7, #0
 800d8e4:	e7f5      	b.n	800d8d2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d8e6:	bf00      	nop
 800d8e8:	2001581c 	.word	0x2001581c
 800d8ec:	20015818 	.word	0x20015818
 800d8f0:	20015820 	.word	0x20015820

0800d8f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800d8f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d8f8:	4bbc      	ldr	r3, [pc, #752]	@ (800dbec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800d8fa:	460c      	mov	r4, r1
 800d8fc:	881b      	ldrh	r3, [r3, #0]
 800d8fe:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 800d900:	428b      	cmp	r3, r1
 800d902:	b0a9      	sub	sp, #164	@ 0xa4
 800d904:	4680      	mov	r8, r0
 800d906:	d809      	bhi.n	800d91c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800d908:	2300      	movs	r3, #0
 800d90a:	f04f 32ff 	mov.w	r2, #4294967295
 800d90e:	e9c0 3200 	strd	r3, r2, [r0]
 800d912:	6083      	str	r3, [r0, #8]
 800d914:	4640      	mov	r0, r8
 800d916:	b029      	add	sp, #164	@ 0xa4
 800d918:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d91c:	4eb4      	ldr	r6, [pc, #720]	@ (800dbf0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800d91e:	6833      	ldr	r3, [r6, #0]
 800d920:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800d924:	4bb3      	ldr	r3, [pc, #716]	@ (800dbf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800d926:	681b      	ldr	r3, [r3, #0]
 800d928:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d92c:	4bb2      	ldr	r3, [pc, #712]	@ (800dbf8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800d92e:	6818      	ldr	r0, [r3, #0]
 800d930:	f7f7 f80a 	bl	8004948 <_ZNK8touchgfx5Texts7getTextEt>
 800d934:	682b      	ldr	r3, [r5, #0]
 800d936:	4681      	mov	r9, r0
 800d938:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d93a:	4628      	mov	r0, r5
 800d93c:	4798      	blx	r3
 800d93e:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 800d940:	b203      	sxth	r3, r0
 800d942:	4407      	add	r7, r0
 800d944:	9304      	str	r3, [sp, #16]
 800d946:	b2bb      	uxth	r3, r7
 800d948:	9303      	str	r3, [sp, #12]
 800d94a:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800d94e:	4682      	mov	sl, r0
 800d950:	a80f      	add	r0, sp, #60	@ 0x3c
 800d952:	2b00      	cmp	r3, #0
 800d954:	f040 80a6 	bne.w	800daa4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 800d958:	f005 faad 	bl	8012eb6 <_ZN8touchgfx12TextProviderC1Ev>
 800d95c:	682b      	ldr	r3, [r5, #0]
 800d95e:	4628      	mov	r0, r5
 800d960:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d962:	4798      	blx	r3
 800d964:	682b      	ldr	r3, [r5, #0]
 800d966:	4606      	mov	r6, r0
 800d968:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d96a:	4628      	mov	r0, r5
 800d96c:	4798      	blx	r3
 800d96e:	6823      	ldr	r3, [r4, #0]
 800d970:	4607      	mov	r7, r0
 800d972:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d974:	4620      	mov	r0, r4
 800d976:	4798      	blx	r3
 800d978:	6823      	ldr	r3, [r4, #0]
 800d97a:	4683      	mov	fp, r0
 800d97c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d980:	4620      	mov	r0, r4
 800d982:	4798      	blx	r3
 800d984:	463b      	mov	r3, r7
 800d986:	e9cd b000 	strd	fp, r0, [sp]
 800d98a:	4649      	mov	r1, r9
 800d98c:	4632      	mov	r2, r6
 800d98e:	a80f      	add	r0, sp, #60	@ 0x3c
 800d990:	f005 fb01 	bl	8012f96 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d994:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800d998:	f8df b254 	ldr.w	fp, [pc, #596]	@ 800dbf0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800d99c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d9a0:	f04f 0600 	mov.w	r6, #0
 800d9a4:	bf0c      	ite	eq
 800d9a6:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800d9aa:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800d9ae:	4637      	mov	r7, r6
 800d9b0:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800d9b2:	f8db 3000 	ldr.w	r3, [fp]
 800d9b6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d9ba:	4629      	mov	r1, r5
 800d9bc:	785b      	ldrb	r3, [r3, #1]
 800d9be:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800d9c2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d9c6:	a80f      	add	r0, sp, #60	@ 0x3c
 800d9c8:	f002 f8d9 	bl	800fb7e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d9cc:	9b03      	ldr	r3, [sp, #12]
 800d9ce:	4286      	cmp	r6, r0
 800d9d0:	bfb8      	it	lt
 800d9d2:	4606      	movlt	r6, r0
 800d9d4:	3701      	adds	r7, #1
 800d9d6:	eba9 0903 	sub.w	r9, r9, r3
 800d9da:	a80f      	add	r0, sp, #60	@ 0x3c
 800d9dc:	b236      	sxth	r6, r6
 800d9de:	b2bf      	uxth	r7, r7
 800d9e0:	fa0f f989 	sxth.w	r9, r9
 800d9e4:	f005 fa8e 	bl	8012f04 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800d9e8:	b918      	cbnz	r0, 800d9f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800d9ea:	7a2b      	ldrb	r3, [r5, #8]
 800d9ec:	444b      	add	r3, r9
 800d9ee:	2b00      	cmp	r3, #0
 800d9f0:	dcde      	bgt.n	800d9b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 800d9f2:	9b03      	ldr	r3, [sp, #12]
 800d9f4:	9a04      	ldr	r2, [sp, #16]
 800d9f6:	f895 9009 	ldrb.w	r9, [r5, #9]
 800d9fa:	fb13 f707 	smulbb	r7, r3, r7
 800d9fe:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800da00:	1aff      	subs	r7, r7, r3
 800da02:	b2bf      	uxth	r7, r7
 800da04:	b23b      	sxth	r3, r7
 800da06:	429a      	cmp	r2, r3
 800da08:	bfa8      	it	ge
 800da0a:	4657      	movge	r7, sl
 800da0c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800da10:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800da14:	6823      	ldr	r3, [r4, #0]
 800da16:	bf08      	it	eq
 800da18:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800da1c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800da1e:	bf18      	it	ne
 800da20:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800da24:	4620      	mov	r0, r4
 800da26:	4798      	blx	r3
 800da28:	444f      	add	r7, r9
 800da2a:	fa1f f987 	uxth.w	r9, r7
 800da2e:	2801      	cmp	r0, #1
 800da30:	fa0f f789 	sxth.w	r7, r9
 800da34:	b2b3      	uxth	r3, r6
 800da36:	f000 80e1 	beq.w	800dbfc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800da3a:	2802      	cmp	r0, #2
 800da3c:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 800da40:	f000 80e2 	beq.w	800dc08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800da44:	7aea      	ldrb	r2, [r5, #11]
 800da46:	7b2d      	ldrb	r5, [r5, #12]
 800da48:	b236      	sxth	r6, r6
 800da4a:	1ab6      	subs	r6, r6, r2
 800da4c:	442a      	add	r2, r5
 800da4e:	4413      	add	r3, r2
 800da50:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800da54:	fa1f fa86 	uxth.w	sl, r6
 800da58:	b29b      	uxth	r3, r3
 800da5a:	2a02      	cmp	r2, #2
 800da5c:	fa0f fb8a 	sxth.w	fp, sl
 800da60:	b21e      	sxth	r6, r3
 800da62:	f000 80d5 	beq.w	800dc10 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800da66:	2a03      	cmp	r2, #3
 800da68:	f000 80dd 	beq.w	800dc26 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800da6c:	2a01      	cmp	r2, #1
 800da6e:	f040 80e5 	bne.w	800dc3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800da72:	8925      	ldrh	r5, [r4, #8]
 800da74:	4633      	mov	r3, r6
 800da76:	eba5 0909 	sub.w	r9, r5, r9
 800da7a:	463e      	mov	r6, r7
 800da7c:	465d      	mov	r5, fp
 800da7e:	461f      	mov	r7, r3
 800da80:	fa0f fb89 	sxth.w	fp, r9
 800da84:	4b5c      	ldr	r3, [pc, #368]	@ (800dbf8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800da86:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800da88:	6818      	ldr	r0, [r3, #0]
 800da8a:	f7f6 ff5d 	bl	8004948 <_ZNK8touchgfx5Texts7getTextEt>
 800da8e:	f8a8 b000 	strh.w	fp, [r8]
 800da92:	f8a8 5002 	strh.w	r5, [r8, #2]
 800da96:	f8a8 6004 	strh.w	r6, [r8, #4]
 800da9a:	f8a8 7006 	strh.w	r7, [r8, #6]
 800da9e:	f8c8 0008 	str.w	r0, [r8, #8]
 800daa2:	e737      	b.n	800d914 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800daa4:	f005 fa07 	bl	8012eb6 <_ZN8touchgfx12TextProviderC1Ev>
 800daa8:	682b      	ldr	r3, [r5, #0]
 800daaa:	4628      	mov	r0, r5
 800daac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800daae:	4798      	blx	r3
 800dab0:	682b      	ldr	r3, [r5, #0]
 800dab2:	4607      	mov	r7, r0
 800dab4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800dab6:	4628      	mov	r0, r5
 800dab8:	4798      	blx	r3
 800daba:	6823      	ldr	r3, [r4, #0]
 800dabc:	4683      	mov	fp, r0
 800dabe:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800dac0:	4620      	mov	r0, r4
 800dac2:	4798      	blx	r3
 800dac4:	6822      	ldr	r2, [r4, #0]
 800dac6:	9005      	str	r0, [sp, #20]
 800dac8:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 800dacc:	4620      	mov	r0, r4
 800dace:	4790      	blx	r2
 800dad0:	9b05      	ldr	r3, [sp, #20]
 800dad2:	9001      	str	r0, [sp, #4]
 800dad4:	463a      	mov	r2, r7
 800dad6:	4649      	mov	r1, r9
 800dad8:	9300      	str	r3, [sp, #0]
 800dada:	a80f      	add	r0, sp, #60	@ 0x3c
 800dadc:	465b      	mov	r3, fp
 800dade:	f005 fa5a 	bl	8012f96 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800dae2:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800dae6:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800daea:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800daec:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 800daf0:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800daf4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800daf8:	bf0a      	itet	eq
 800dafa:	464a      	moveq	r2, r9
 800dafc:	461a      	movne	r2, r3
 800dafe:	4699      	moveq	r9, r3
 800db00:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800db04:	1ad2      	subs	r2, r2, r3
 800db06:	6833      	ldr	r3, [r6, #0]
 800db08:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 800db0c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800db10:	af0f      	add	r7, sp, #60	@ 0x3c
 800db12:	7859      	ldrb	r1, [r3, #1]
 800db14:	9707      	str	r7, [sp, #28]
 800db16:	2300      	movs	r3, #0
 800db18:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800db1c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800db20:	f88d 1020 	strb.w	r1, [sp, #32]
 800db24:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800db28:	9509      	str	r5, [sp, #36]	@ 0x24
 800db2a:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800db2e:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 800db32:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 800db36:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800db3a:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800db3e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800db42:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800db46:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800db4a:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800db4e:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800db52:	b350      	cbz	r0, 800dbaa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800db54:	682b      	ldr	r3, [r5, #0]
 800db56:	4628      	mov	r0, r5
 800db58:	695b      	ldr	r3, [r3, #20]
 800db5a:	4798      	blx	r3
 800db5c:	4607      	mov	r7, r0
 800db5e:	b320      	cbz	r0, 800dbaa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800db60:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800db62:	6803      	ldr	r3, [r0, #0]
 800db64:	4639      	mov	r1, r7
 800db66:	68db      	ldr	r3, [r3, #12]
 800db68:	4798      	blx	r3
 800db6a:	4606      	mov	r6, r0
 800db6c:	b1e8      	cbz	r0, 800dbaa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800db6e:	7b43      	ldrb	r3, [r0, #13]
 800db70:	7a82      	ldrb	r2, [r0, #10]
 800db72:	005b      	lsls	r3, r3, #1
 800db74:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800db78:	4313      	orrs	r3, r2
 800db7a:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800db7e:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 800db82:	2b06      	cmp	r3, #6
 800db84:	d111      	bne.n	800dbaa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800db86:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800db88:	6803      	ldr	r3, [r0, #0]
 800db8a:	4632      	mov	r2, r6
 800db8c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800db8e:	4639      	mov	r1, r7
 800db90:	4798      	blx	r3
 800db92:	7b73      	ldrb	r3, [r6, #13]
 800db94:	005b      	lsls	r3, r3, #1
 800db96:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800db9a:	7ab3      	ldrb	r3, [r6, #10]
 800db9c:	4313      	orrs	r3, r2
 800db9e:	4418      	add	r0, r3
 800dba0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800dba4:	4418      	add	r0, r3
 800dba6:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 800dbaa:	2600      	movs	r6, #0
 800dbac:	4637      	mov	r7, r6
 800dbae:	a806      	add	r0, sp, #24
 800dbb0:	f002 f9da 	bl	800ff68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800dbb4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 800dbb8:	9b03      	ldr	r3, [sp, #12]
 800dbba:	4286      	cmp	r6, r0
 800dbbc:	eba9 0903 	sub.w	r9, r9, r3
 800dbc0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800dbc4:	bfb8      	it	lt
 800dbc6:	4606      	movlt	r6, r0
 800dbc8:	3701      	adds	r7, #1
 800dbca:	b236      	sxth	r6, r6
 800dbcc:	b2bf      	uxth	r7, r7
 800dbce:	fa0f f989 	sxth.w	r9, r9
 800dbd2:	2b00      	cmp	r3, #0
 800dbd4:	f43f af0d 	beq.w	800d9f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800dbd8:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 800dbdc:	2b00      	cmp	r3, #0
 800dbde:	f47f af08 	bne.w	800d9f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800dbe2:	7a2b      	ldrb	r3, [r5, #8]
 800dbe4:	444b      	add	r3, r9
 800dbe6:	2b00      	cmp	r3, #0
 800dbe8:	dce1      	bgt.n	800dbae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 800dbea:	e702      	b.n	800d9f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800dbec:	2001581c 	.word	0x2001581c
 800dbf0:	20015818 	.word	0x20015818
 800dbf4:	20015820 	.word	0x20015820
 800dbf8:	20015824 	.word	0x20015824
 800dbfc:	ebaa 0606 	sub.w	r6, sl, r6
 800dc00:	2002      	movs	r0, #2
 800dc02:	fb96 f6f0 	sdiv	r6, r6, r0
 800dc06:	e71d      	b.n	800da44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800dc08:	441e      	add	r6, r3
 800dc0a:	ebaa 0606 	sub.w	r6, sl, r6
 800dc0e:	e719      	b.n	800da44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800dc10:	8925      	ldrh	r5, [r4, #8]
 800dc12:	1aed      	subs	r5, r5, r3
 800dc14:	eba5 050a 	sub.w	r5, r5, sl
 800dc18:	fa0f fb85 	sxth.w	fp, r5
 800dc1c:	8965      	ldrh	r5, [r4, #10]
 800dc1e:	eba5 0509 	sub.w	r5, r5, r9
 800dc22:	b22d      	sxth	r5, r5
 800dc24:	e72e      	b.n	800da84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800dc26:	8965      	ldrh	r5, [r4, #10]
 800dc28:	1aed      	subs	r5, r5, r3
 800dc2a:	eba5 050a 	sub.w	r5, r5, sl
 800dc2e:	4633      	mov	r3, r6
 800dc30:	b22d      	sxth	r5, r5
 800dc32:	463e      	mov	r6, r7
 800dc34:	f04f 0b00 	mov.w	fp, #0
 800dc38:	461f      	mov	r7, r3
 800dc3a:	e723      	b.n	800da84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800dc3c:	2500      	movs	r5, #0
 800dc3e:	e721      	b.n	800da84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

0800dc40 <_ZN8touchgfx8TextAreaD0Ev>:
 800dc40:	b510      	push	{r4, lr}
 800dc42:	2148      	movs	r1, #72	@ 0x48
 800dc44:	4604      	mov	r4, r0
 800dc46:	f015 fd89 	bl	802375c <_ZdlPvj>
 800dc4a:	4620      	mov	r0, r4
 800dc4c:	bd10      	pop	{r4, pc}
	...

0800dc50 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800dc50:	b513      	push	{r0, r1, r4, lr}
 800dc52:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 800dc56:	4604      	mov	r4, r0
 800dc58:	b1fb      	cbz	r3, 800dc9a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800dc5a:	4b16      	ldr	r3, [pc, #88]	@ (800dcb4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800dc5c:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800dc5e:	881b      	ldrh	r3, [r3, #0]
 800dc60:	428b      	cmp	r3, r1
 800dc62:	d91a      	bls.n	800dc9a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800dc64:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800dc68:	2b00      	cmp	r3, #0
 800dc6a:	dd16      	ble.n	800dc9a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800dc6c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800dc70:	2b00      	cmp	r3, #0
 800dc72:	dd12      	ble.n	800dc9a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800dc74:	4b10      	ldr	r3, [pc, #64]	@ (800dcb8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800dc76:	6818      	ldr	r0, [r3, #0]
 800dc78:	f7f6 fe66 	bl	8004948 <_ZNK8touchgfx5Texts7getTextEt>
 800dc7c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800dc80:	6822      	ldr	r2, [r4, #0]
 800dc82:	2b00      	cmp	r3, #0
 800dc84:	db06      	blt.n	800dc94 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800dc86:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800dc8a:	2b00      	cmp	r3, #0
 800dc8c:	db02      	blt.n	800dc94 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800dc8e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800dc90:	4298      	cmp	r0, r3
 800dc92:	d004      	beq.n	800dc9e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800dc94:	6953      	ldr	r3, [r2, #20]
 800dc96:	4620      	mov	r0, r4
 800dc98:	4798      	blx	r3
 800dc9a:	b002      	add	sp, #8
 800dc9c:	bd10      	pop	{r4, pc}
 800dc9e:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 800dca2:	c903      	ldmia	r1, {r0, r1}
 800dca4:	466b      	mov	r3, sp
 800dca6:	e883 0003 	stmia.w	r3, {r0, r1}
 800dcaa:	6912      	ldr	r2, [r2, #16]
 800dcac:	4619      	mov	r1, r3
 800dcae:	4620      	mov	r0, r4
 800dcb0:	4790      	blx	r2
 800dcb2:	e7f2      	b.n	800dc9a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800dcb4:	2001581c 	.word	0x2001581c
 800dcb8:	20015824 	.word	0x20015824

0800dcbc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800dcbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dcc0:	4b44      	ldr	r3, [pc, #272]	@ (800ddd4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800dcc2:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800dcc4:	881b      	ldrh	r3, [r3, #0]
 800dcc6:	4293      	cmp	r3, r2
 800dcc8:	b08e      	sub	sp, #56	@ 0x38
 800dcca:	4604      	mov	r4, r0
 800dccc:	d97e      	bls.n	800ddcc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800dcce:	6808      	ldr	r0, [r1, #0]
 800dcd0:	4d41      	ldr	r5, [pc, #260]	@ (800ddd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800dcd2:	6849      	ldr	r1, [r1, #4]
 800dcd4:	ab05      	add	r3, sp, #20
 800dcd6:	c303      	stmia	r3!, {r0, r1}
 800dcd8:	4611      	mov	r1, r2
 800dcda:	6828      	ldr	r0, [r5, #0]
 800dcdc:	f7f6 fe34 	bl	8004948 <_ZNK8touchgfx5Texts7getTextEt>
 800dce0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800dce4:	2b00      	cmp	r3, #0
 800dce6:	db11      	blt.n	800dd0c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800dce8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800dcec:	2b00      	cmp	r3, #0
 800dcee:	db0d      	blt.n	800dd0c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800dcf0:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800dcf2:	4298      	cmp	r0, r3
 800dcf4:	d10a      	bne.n	800dd0c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800dcf6:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 800dcfa:	e892 0003 	ldmia.w	r2, {r0, r1}
 800dcfe:	ab09      	add	r3, sp, #36	@ 0x24
 800dd00:	e883 0003 	stmia.w	r3, {r0, r1}
 800dd04:	4619      	mov	r1, r3
 800dd06:	a805      	add	r0, sp, #20
 800dd08:	f7fd f808 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 800dd0c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800dd10:	2b00      	cmp	r3, #0
 800dd12:	dd5b      	ble.n	800ddcc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800dd14:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800dd18:	2b00      	cmp	r3, #0
 800dd1a:	dd57      	ble.n	800ddcc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800dd1c:	4f2f      	ldr	r7, [pc, #188]	@ (800dddc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800dd1e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800dd20:	683b      	ldr	r3, [r7, #0]
 800dd22:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800dd26:	4b2e      	ldr	r3, [pc, #184]	@ (800dde0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800dd28:	681b      	ldr	r3, [r3, #0]
 800dd2a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800dd2e:	2e00      	cmp	r6, #0
 800dd30:	d04c      	beq.n	800ddcc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800dd32:	6823      	ldr	r3, [r4, #0]
 800dd34:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 800dd38:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800dd3a:	4620      	mov	r0, r4
 800dd3c:	4798      	blx	r3
 800dd3e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800dd40:	683b      	ldr	r3, [r7, #0]
 800dd42:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 800dd46:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 800dd4a:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 800dd4e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800dd50:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800dd54:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 800dd58:	785b      	ldrb	r3, [r3, #1]
 800dd5a:	9609      	str	r6, [sp, #36]	@ 0x24
 800dd5c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800dd60:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800dd64:	4b1f      	ldr	r3, [pc, #124]	@ (800dde4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800dd66:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 800dd6a:	681b      	ldr	r3, [r3, #0]
 800dd6c:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 800dd70:	910b      	str	r1, [sp, #44]	@ 0x2c
 800dd72:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 800dd76:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 800dd7a:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 800dd7e:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 800dd82:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800dd86:	b10a      	cbz	r2, 800dd8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800dd88:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 800dd8a:	b906      	cbnz	r6, 800dd8e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800dd8c:	689e      	ldr	r6, [r3, #8]
 800dd8e:	af07      	add	r7, sp, #28
 800dd90:	4621      	mov	r1, r4
 800dd92:	4638      	mov	r0, r7
 800dd94:	f004 f8f4 	bl	8011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd98:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800dd9a:	6828      	ldr	r0, [r5, #0]
 800dd9c:	f7f6 fdd4 	bl	8004948 <_ZNK8touchgfx5Texts7getTextEt>
 800dda0:	6823      	ldr	r3, [r4, #0]
 800dda2:	4605      	mov	r5, r0
 800dda4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800dda6:	4620      	mov	r0, r4
 800dda8:	4798      	blx	r3
 800ddaa:	6823      	ldr	r3, [r4, #0]
 800ddac:	4680      	mov	r8, r0
 800ddae:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ddb2:	4620      	mov	r0, r4
 800ddb4:	4798      	blx	r3
 800ddb6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800ddba:	ab09      	add	r3, sp, #36	@ 0x24
 800ddbc:	9300      	str	r3, [sp, #0]
 800ddbe:	9501      	str	r5, [sp, #4]
 800ddc0:	ab05      	add	r3, sp, #20
 800ddc2:	e897 0006 	ldmia.w	r7, {r1, r2}
 800ddc6:	4630      	mov	r0, r6
 800ddc8:	f7f6 fd70 	bl	80048ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ddcc:	b00e      	add	sp, #56	@ 0x38
 800ddce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ddd2:	bf00      	nop
 800ddd4:	2001581c 	.word	0x2001581c
 800ddd8:	20015824 	.word	0x20015824
 800dddc:	20015818 	.word	0x20015818
 800dde0:	20015820 	.word	0x20015820
 800dde4:	200157c0 	.word	0x200157c0

0800dde8 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800dde8:	b570      	push	{r4, r5, r6, lr}
 800ddea:	6803      	ldr	r3, [r0, #0]
 800ddec:	4604      	mov	r4, r0
 800ddee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ddf0:	4615      	mov	r5, r2
 800ddf2:	4798      	blx	r3
 800ddf4:	6823      	ldr	r3, [r4, #0]
 800ddf6:	4629      	mov	r1, r5
 800ddf8:	4620      	mov	r0, r4
 800ddfa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ddfc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de00:	4718      	bx	r3
	...

0800de04 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800de04:	b538      	push	{r3, r4, r5, lr}
 800de06:	4b0e      	ldr	r3, [pc, #56]	@ (800de40 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800de08:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800de0a:	881b      	ldrh	r3, [r3, #0]
 800de0c:	429a      	cmp	r2, r3
 800de0e:	4604      	mov	r4, r0
 800de10:	d214      	bcs.n	800de3c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800de12:	6803      	ldr	r3, [r0, #0]
 800de14:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800de16:	4798      	blx	r3
 800de18:	6823      	ldr	r3, [r4, #0]
 800de1a:	4605      	mov	r5, r0
 800de1c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800de1e:	4620      	mov	r0, r4
 800de20:	4798      	blx	r3
 800de22:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800de26:	b22d      	sxth	r5, r5
 800de28:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800de2c:	4601      	mov	r1, r0
 800de2e:	bf06      	itte	eq
 800de30:	4602      	moveq	r2, r0
 800de32:	4629      	moveq	r1, r5
 800de34:	462a      	movne	r2, r5
 800de36:	4620      	mov	r0, r4
 800de38:	f7ff ffd6 	bl	800dde8 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800de3c:	bd38      	pop	{r3, r4, r5, pc}
 800de3e:	bf00      	nop
 800de40:	2001581c 	.word	0x2001581c

0800de44 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800de44:	b530      	push	{r4, r5, lr}
 800de46:	888b      	ldrh	r3, [r1, #4]
 800de48:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800de4a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800de4e:	b085      	sub	sp, #20
 800de50:	4604      	mov	r4, r0
 800de52:	b923      	cbnz	r3, 800de5e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800de54:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800de58:	b90b      	cbnz	r3, 800de5e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800de5a:	f7ff ffd3 	bl	800de04 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800de5e:	6823      	ldr	r3, [r4, #0]
 800de60:	466d      	mov	r5, sp
 800de62:	4621      	mov	r1, r4
 800de64:	4628      	mov	r0, r5
 800de66:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800de6a:	4798      	blx	r3
 800de6c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800de70:	343c      	adds	r4, #60	@ 0x3c
 800de72:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800de76:	b005      	add	sp, #20
 800de78:	bd30      	pop	{r4, r5, pc}

0800de7a <_ZNK8touchgfx3Box12getSolidRectEv>:
 800de7a:	2300      	movs	r3, #0
 800de7c:	8083      	strh	r3, [r0, #4]
 800de7e:	80c3      	strh	r3, [r0, #6]
 800de80:	8003      	strh	r3, [r0, #0]
 800de82:	8043      	strh	r3, [r0, #2]
 800de84:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800de88:	2bff      	cmp	r3, #255	@ 0xff
 800de8a:	bf01      	itttt	eq
 800de8c:	890b      	ldrheq	r3, [r1, #8]
 800de8e:	8083      	strheq	r3, [r0, #4]
 800de90:	894b      	ldrheq	r3, [r1, #10]
 800de92:	80c3      	strheq	r3, [r0, #6]
 800de94:	4770      	bx	lr
	...

0800de98 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800de98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800de9a:	4604      	mov	r4, r0
 800de9c:	6808      	ldr	r0, [r1, #0]
 800de9e:	6849      	ldr	r1, [r1, #4]
 800dea0:	466b      	mov	r3, sp
 800dea2:	c303      	stmia	r3!, {r0, r1}
 800dea4:	6823      	ldr	r3, [r4, #0]
 800dea6:	4669      	mov	r1, sp
 800dea8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800deaa:	4620      	mov	r0, r4
 800deac:	4798      	blx	r3
 800deae:	4b08      	ldr	r3, [pc, #32]	@ (800ded0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800deb0:	681b      	ldr	r3, [r3, #0]
 800deb2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800deb6:	b10a      	cbz	r2, 800debc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800deb8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800deba:	b900      	cbnz	r0, 800debe <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800debc:	6898      	ldr	r0, [r3, #8]
 800debe:	6803      	ldr	r3, [r0, #0]
 800dec0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800dec2:	6a1d      	ldr	r5, [r3, #32]
 800dec4:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800dec8:	4669      	mov	r1, sp
 800deca:	47a8      	blx	r5
 800decc:	b003      	add	sp, #12
 800dece:	bd30      	pop	{r4, r5, pc}
 800ded0:	200157c0 	.word	0x200157c0

0800ded4 <_ZN8touchgfx3BoxD1Ev>:
 800ded4:	4770      	bx	lr

0800ded6 <_ZN8touchgfx3BoxD0Ev>:
 800ded6:	b510      	push	{r4, lr}
 800ded8:	212c      	movs	r1, #44	@ 0x2c
 800deda:	4604      	mov	r4, r0
 800dedc:	f015 fc3e 	bl	802375c <_ZdlPvj>
 800dee0:	4620      	mov	r0, r4
 800dee2:	bd10      	pop	{r4, pc}

0800dee4 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800dee4:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800dee8:	b12a      	cbz	r2, 800def6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800deea:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800deee:	b112      	cbz	r2, 800def6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800def0:	6803      	ldr	r3, [r0, #0]
 800def2:	695b      	ldr	r3, [r3, #20]
 800def4:	4718      	bx	r3
 800def6:	4770      	bx	lr

0800def8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800def8:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800defc:	4770      	bx	lr

0800defe <_ZN8touchgfx6ButtonD1Ev>:
 800defe:	4770      	bx	lr

0800df00 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800df00:	b570      	push	{r4, r5, r6, lr}
 800df02:	880b      	ldrh	r3, [r1, #0]
 800df04:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800df06:	4605      	mov	r5, r0
 800df08:	8813      	ldrh	r3, [r2, #0]
 800df0a:	f825 3f30 	strh.w	r3, [r5, #48]!
 800df0e:	4604      	mov	r4, r0
 800df10:	4628      	mov	r0, r5
 800df12:	f006 fb85 	bl	8014620 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800df16:	4606      	mov	r6, r0
 800df18:	4628      	mov	r0, r5
 800df1a:	f006 fbb5 	bl	8014688 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800df1e:	6823      	ldr	r3, [r4, #0]
 800df20:	4605      	mov	r5, r0
 800df22:	4631      	mov	r1, r6
 800df24:	4620      	mov	r0, r4
 800df26:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800df28:	4798      	blx	r3
 800df2a:	6823      	ldr	r3, [r4, #0]
 800df2c:	4629      	mov	r1, r5
 800df2e:	4620      	mov	r0, r4
 800df30:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800df32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800df36:	4718      	bx	r3

0800df38 <_ZN8touchgfx6ButtonD0Ev>:
 800df38:	b510      	push	{r4, lr}
 800df3a:	2134      	movs	r1, #52	@ 0x34
 800df3c:	4604      	mov	r4, r0
 800df3e:	f015 fc0d 	bl	802375c <_ZdlPvj>
 800df42:	4620      	mov	r0, r4
 800df44:	bd10      	pop	{r4, pc}

0800df46 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800df46:	b510      	push	{r4, lr}
 800df48:	4604      	mov	r4, r0
 800df4a:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800df4c:	b150      	cbz	r0, 800df64 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800df4e:	6803      	ldr	r3, [r0, #0]
 800df50:	68db      	ldr	r3, [r3, #12]
 800df52:	4798      	blx	r3
 800df54:	b130      	cbz	r0, 800df64 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800df56:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800df58:	6803      	ldr	r3, [r0, #0]
 800df5a:	4621      	mov	r1, r4
 800df5c:	689b      	ldr	r3, [r3, #8]
 800df5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800df62:	4718      	bx	r3
 800df64:	bd10      	pop	{r4, pc}

0800df66 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800df66:	b510      	push	{r4, lr}
 800df68:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 800df6c:	2bff      	cmp	r3, #255	@ 0xff
 800df6e:	4604      	mov	r4, r0
 800df70:	d006      	beq.n	800df80 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800df72:	2300      	movs	r3, #0
 800df74:	8003      	strh	r3, [r0, #0]
 800df76:	8043      	strh	r3, [r0, #2]
 800df78:	8083      	strh	r3, [r0, #4]
 800df7a:	80c3      	strh	r3, [r0, #6]
 800df7c:	4620      	mov	r0, r4
 800df7e:	bd10      	pop	{r4, pc}
 800df80:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 800df84:	b11b      	cbz	r3, 800df8e <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800df86:	3130      	adds	r1, #48	@ 0x30
 800df88:	f006 fbb2 	bl	80146f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800df8c:	e7f6      	b.n	800df7c <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800df8e:	312e      	adds	r1, #46	@ 0x2e
 800df90:	e7fa      	b.n	800df88 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800df94 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800df94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df98:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800df9c:	b08a      	sub	sp, #40	@ 0x28
 800df9e:	4604      	mov	r4, r0
 800dfa0:	4688      	mov	r8, r1
 800dfa2:	2b00      	cmp	r3, #0
 800dfa4:	d066      	beq.n	800e074 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800dfa6:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800dfa8:	f8ad 3014 	strh.w	r3, [sp, #20]
 800dfac:	a805      	add	r0, sp, #20
 800dfae:	f006 fb37 	bl	8014620 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800dfb2:	4607      	mov	r7, r0
 800dfb4:	a805      	add	r0, sp, #20
 800dfb6:	f006 fb67 	bl	8014688 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800dfba:	f9b8 6000 	ldrsh.w	r6, [r8]
 800dfbe:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800dfc2:	4432      	add	r2, r6
 800dfc4:	b292      	uxth	r2, r2
 800dfc6:	2300      	movs	r3, #0
 800dfc8:	fa0f fc82 	sxth.w	ip, r2
 800dfcc:	459c      	cmp	ip, r3
 800dfce:	9306      	str	r3, [sp, #24]
 800dfd0:	dd52      	ble.n	800e078 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800dfd2:	42b7      	cmp	r7, r6
 800dfd4:	dd50      	ble.n	800e078 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800dfd6:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800dfda:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800dfde:	442b      	add	r3, r5
 800dfe0:	b29b      	uxth	r3, r3
 800dfe2:	b219      	sxth	r1, r3
 800dfe4:	2900      	cmp	r1, #0
 800dfe6:	dd47      	ble.n	800e078 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800dfe8:	42a8      	cmp	r0, r5
 800dfea:	dd45      	ble.n	800e078 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800dfec:	4567      	cmp	r7, ip
 800dfee:	bfb8      	it	lt
 800dff0:	b2ba      	uxthlt	r2, r7
 800dff2:	4288      	cmp	r0, r1
 800dff4:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800dff8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800dffc:	bfb8      	it	lt
 800dffe:	b283      	uxthlt	r3, r0
 800e000:	1b92      	subs	r2, r2, r6
 800e002:	1b5b      	subs	r3, r3, r5
 800e004:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e008:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e00c:	f8ad 6018 	strh.w	r6, [sp, #24]
 800e010:	f8ad 501a 	strh.w	r5, [sp, #26]
 800e014:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e018:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800e01c:	429a      	cmp	r2, r3
 800e01e:	d026      	beq.n	800e06e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e020:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e024:	2b00      	cmp	r3, #0
 800e026:	dd22      	ble.n	800e06e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e028:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e02c:	2b00      	cmp	r3, #0
 800e02e:	dd1e      	ble.n	800e06e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e030:	2300      	movs	r3, #0
 800e032:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800e036:	6823      	ldr	r3, [r4, #0]
 800e038:	a908      	add	r1, sp, #32
 800e03a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e03c:	4620      	mov	r0, r4
 800e03e:	4798      	blx	r3
 800e040:	4b0f      	ldr	r3, [pc, #60]	@ (800e080 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800e042:	681b      	ldr	r3, [r3, #0]
 800e044:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800e048:	b10a      	cbz	r2, 800e04e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800e04a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800e04c:	b900      	cbnz	r0, 800e050 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800e04e:	6898      	ldr	r0, [r3, #8]
 800e050:	6801      	ldr	r1, [r0, #0]
 800e052:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 800e056:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800e05a:	2501      	movs	r5, #1
 800e05c:	9502      	str	r5, [sp, #8]
 800e05e:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800e062:	9401      	str	r4, [sp, #4]
 800e064:	ac06      	add	r4, sp, #24
 800e066:	9400      	str	r4, [sp, #0]
 800e068:	688c      	ldr	r4, [r1, #8]
 800e06a:	a905      	add	r1, sp, #20
 800e06c:	47a0      	blx	r4
 800e06e:	b00a      	add	sp, #40	@ 0x28
 800e070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e074:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 800e076:	e797      	b.n	800dfa8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800e078:	2300      	movs	r3, #0
 800e07a:	9307      	str	r3, [sp, #28]
 800e07c:	e7ca      	b.n	800e014 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800e07e:	bf00      	nop
 800e080:	200157c0 	.word	0x200157c0

0800e084 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800e084:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 800e088:	b12a      	cbz	r2, 800e096 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800e08a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800e08e:	b112      	cbz	r2, 800e096 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800e090:	6803      	ldr	r3, [r0, #0]
 800e092:	695b      	ldr	r3, [r3, #20]
 800e094:	4718      	bx	r3
 800e096:	4770      	bx	lr

0800e098 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800e098:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e09c:	4b2f      	ldr	r3, [pc, #188]	@ (800e15c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800e09e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800e0a0:	881b      	ldrh	r3, [r3, #0]
 800e0a2:	4293      	cmp	r3, r2
 800e0a4:	b08d      	sub	sp, #52	@ 0x34
 800e0a6:	4604      	mov	r4, r0
 800e0a8:	460f      	mov	r7, r1
 800e0aa:	d954      	bls.n	800e156 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e0ac:	4b2c      	ldr	r3, [pc, #176]	@ (800e160 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800e0ae:	6819      	ldr	r1, [r3, #0]
 800e0b0:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800e0b4:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800e0b8:	4a2a      	ldr	r2, [pc, #168]	@ (800e164 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800e0ba:	6812      	ldr	r2, [r2, #0]
 800e0bc:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800e0c0:	2900      	cmp	r1, #0
 800e0c2:	d048      	beq.n	800e156 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e0c4:	785a      	ldrb	r2, [r3, #1]
 800e0c6:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800e0ca:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800e0ce:	4b26      	ldr	r3, [pc, #152]	@ (800e168 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800e0d0:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800e0d4:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800e0d8:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800e0dc:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800e0de:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800e0e2:	9107      	str	r1, [sp, #28]
 800e0e4:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800e0e8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e0ec:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800e0f0:	681a      	ldr	r2, [r3, #0]
 800e0f2:	f88d 8020 	strb.w	r8, [sp, #32]
 800e0f6:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800e0fa:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800e0fe:	9609      	str	r6, [sp, #36]	@ 0x24
 800e100:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800e104:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800e108:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800e10c:	b10b      	cbz	r3, 800e112 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800e10e:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800e110:	b905      	cbnz	r5, 800e114 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800e112:	6895      	ldr	r5, [r2, #8]
 800e114:	ae05      	add	r6, sp, #20
 800e116:	4621      	mov	r1, r4
 800e118:	4630      	mov	r0, r6
 800e11a:	f003 ff31 	bl	8011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e11e:	4b13      	ldr	r3, [pc, #76]	@ (800e16c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800e120:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800e122:	6818      	ldr	r0, [r3, #0]
 800e124:	f7f6 fc10 	bl	8004948 <_ZNK8touchgfx5Texts7getTextEt>
 800e128:	6823      	ldr	r3, [r4, #0]
 800e12a:	4680      	mov	r8, r0
 800e12c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e12e:	4620      	mov	r0, r4
 800e130:	4798      	blx	r3
 800e132:	6823      	ldr	r3, [r4, #0]
 800e134:	4681      	mov	r9, r0
 800e136:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e13a:	4620      	mov	r0, r4
 800e13c:	4798      	blx	r3
 800e13e:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800e142:	ab07      	add	r3, sp, #28
 800e144:	9300      	str	r3, [sp, #0]
 800e146:	f8cd 8004 	str.w	r8, [sp, #4]
 800e14a:	463b      	mov	r3, r7
 800e14c:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e150:	4628      	mov	r0, r5
 800e152:	f7f6 fbab 	bl	80048ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e156:	b00d      	add	sp, #52	@ 0x34
 800e158:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e15c:	2001581c 	.word	0x2001581c
 800e160:	20015818 	.word	0x20015818
 800e164:	20015820 	.word	0x20015820
 800e168:	200157c0 	.word	0x200157c0
 800e16c:	20015824 	.word	0x20015824

0800e170 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800e170:	4770      	bx	lr

0800e172 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e172:	b510      	push	{r4, lr}
 800e174:	2134      	movs	r1, #52	@ 0x34
 800e176:	4604      	mov	r4, r0
 800e178:	f015 faf0 	bl	802375c <_ZdlPvj>
 800e17c:	4620      	mov	r0, r4
 800e17e:	bd10      	pop	{r4, pc}

0800e180 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800e180:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e184:	4604      	mov	r4, r0
 800e186:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800e188:	8962      	ldrh	r2, [r4, #10]
 800e18a:	b218      	sxth	r0, r3
 800e18c:	460e      	mov	r6, r1
 800e18e:	005b      	lsls	r3, r3, #1
 800e190:	8921      	ldrh	r1, [r4, #8]
 800e192:	b29b      	uxth	r3, r3
 800e194:	1ac9      	subs	r1, r1, r3
 800e196:	b08e      	sub	sp, #56	@ 0x38
 800e198:	b209      	sxth	r1, r1
 800e19a:	1ad3      	subs	r3, r2, r3
 800e19c:	b21b      	sxth	r3, r3
 800e19e:	2900      	cmp	r1, #0
 800e1a0:	f8ad 0000 	strh.w	r0, [sp]
 800e1a4:	f8ad 0002 	strh.w	r0, [sp, #2]
 800e1a8:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e1ac:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e1b0:	dd5e      	ble.n	800e270 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e1b2:	2b00      	cmp	r3, #0
 800e1b4:	dd5c      	ble.n	800e270 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e1b6:	6830      	ldr	r0, [r6, #0]
 800e1b8:	6871      	ldr	r1, [r6, #4]
 800e1ba:	ab02      	add	r3, sp, #8
 800e1bc:	c303      	stmia	r3!, {r0, r1}
 800e1be:	4669      	mov	r1, sp
 800e1c0:	a802      	add	r0, sp, #8
 800e1c2:	f7fc fdab 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 800e1c6:	4620      	mov	r0, r4
 800e1c8:	a902      	add	r1, sp, #8
 800e1ca:	f7ff fe65 	bl	800de98 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800e1ce:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 800e1d0:	2800      	cmp	r0, #0
 800e1d2:	d05f      	beq.n	800e294 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e1d4:	8963      	ldrh	r3, [r4, #10]
 800e1d6:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e1da:	f8ad 101c 	strh.w	r1, [sp, #28]
 800e1de:	1a1f      	subs	r7, r3, r0
 800e1e0:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800e1e4:	b202      	sxth	r2, r0
 800e1e6:	2500      	movs	r5, #0
 800e1e8:	b21b      	sxth	r3, r3
 800e1ea:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 800e1ee:	1a09      	subs	r1, r1, r0
 800e1f0:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800e1f4:	9506      	str	r5, [sp, #24]
 800e1f6:	f8ad 201e 	strh.w	r2, [sp, #30]
 800e1fa:	f8ad 5020 	strh.w	r5, [sp, #32]
 800e1fe:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 800e202:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 800e206:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800e20a:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800e20e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800e212:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 800e216:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800e21a:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800e21e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800e222:	af04      	add	r7, sp, #16
 800e224:	ab06      	add	r3, sp, #24
 800e226:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e22a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e22e:	e887 0003 	stmia.w	r7, {r0, r1}
 800e232:	4631      	mov	r1, r6
 800e234:	4638      	mov	r0, r7
 800e236:	f7fc fd71 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 800e23a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e23e:	2b00      	cmp	r3, #0
 800e240:	dd12      	ble.n	800e268 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e242:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e246:	2b00      	cmp	r3, #0
 800e248:	dd0e      	ble.n	800e268 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e24a:	6823      	ldr	r3, [r4, #0]
 800e24c:	4639      	mov	r1, r7
 800e24e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e250:	4620      	mov	r0, r4
 800e252:	4798      	blx	r3
 800e254:	f7f4 ff30 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 800e258:	6803      	ldr	r3, [r0, #0]
 800e25a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800e25c:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800e260:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800e264:	4639      	mov	r1, r7
 800e266:	47c0      	blx	r8
 800e268:	3501      	adds	r5, #1
 800e26a:	2d04      	cmp	r5, #4
 800e26c:	d1da      	bne.n	800e224 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800e26e:	e011      	b.n	800e294 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e270:	6830      	ldr	r0, [r6, #0]
 800e272:	6871      	ldr	r1, [r6, #4]
 800e274:	ab06      	add	r3, sp, #24
 800e276:	c303      	stmia	r3!, {r0, r1}
 800e278:	6823      	ldr	r3, [r4, #0]
 800e27a:	a906      	add	r1, sp, #24
 800e27c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e27e:	4620      	mov	r0, r4
 800e280:	4798      	blx	r3
 800e282:	f7f4 ff19 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 800e286:	6803      	ldr	r3, [r0, #0]
 800e288:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800e28a:	6a1d      	ldr	r5, [r3, #32]
 800e28c:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800e290:	a906      	add	r1, sp, #24
 800e292:	47a8      	blx	r5
 800e294:	b00e      	add	sp, #56	@ 0x38
 800e296:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e29a <_ZN8touchgfx5ImageD1Ev>:
 800e29a:	4770      	bx	lr

0800e29c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800e29c:	b570      	push	{r4, r5, r6, lr}
 800e29e:	880b      	ldrh	r3, [r1, #0]
 800e2a0:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800e2a2:	4604      	mov	r4, r0
 800e2a4:	4608      	mov	r0, r1
 800e2a6:	460d      	mov	r5, r1
 800e2a8:	f006 f9ba 	bl	8014620 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e2ac:	4606      	mov	r6, r0
 800e2ae:	4628      	mov	r0, r5
 800e2b0:	f006 f9ea 	bl	8014688 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e2b4:	6823      	ldr	r3, [r4, #0]
 800e2b6:	4605      	mov	r5, r0
 800e2b8:	4631      	mov	r1, r6
 800e2ba:	4620      	mov	r0, r4
 800e2bc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e2be:	4798      	blx	r3
 800e2c0:	6823      	ldr	r3, [r4, #0]
 800e2c2:	4629      	mov	r1, r5
 800e2c4:	4620      	mov	r0, r4
 800e2c6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e2c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e2cc:	4718      	bx	r3

0800e2ce <_ZN8touchgfx5ImageD0Ev>:
 800e2ce:	b510      	push	{r4, lr}
 800e2d0:	212c      	movs	r1, #44	@ 0x2c
 800e2d2:	4604      	mov	r4, r0
 800e2d4:	f015 fa42 	bl	802375c <_ZdlPvj>
 800e2d8:	4620      	mov	r0, r4
 800e2da:	bd10      	pop	{r4, pc}

0800e2dc <_ZNK8touchgfx5Image12getSolidRectEv>:
 800e2dc:	b510      	push	{r4, lr}
 800e2de:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800e2e2:	2bff      	cmp	r3, #255	@ 0xff
 800e2e4:	4604      	mov	r4, r0
 800e2e6:	d006      	beq.n	800e2f6 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800e2e8:	2300      	movs	r3, #0
 800e2ea:	8003      	strh	r3, [r0, #0]
 800e2ec:	8043      	strh	r3, [r0, #2]
 800e2ee:	8083      	strh	r3, [r0, #4]
 800e2f0:	80c3      	strh	r3, [r0, #6]
 800e2f2:	4620      	mov	r0, r4
 800e2f4:	bd10      	pop	{r4, pc}
 800e2f6:	3126      	adds	r1, #38	@ 0x26
 800e2f8:	f006 f9fa 	bl	80146f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e2fc:	e7f9      	b.n	800e2f2 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800e2fe <_ZNK8touchgfx5Image17invalidateContentEv>:
 800e2fe:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800e302:	b12a      	cbz	r2, 800e310 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e304:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800e308:	b112      	cbz	r2, 800e310 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e30a:	6803      	ldr	r3, [r0, #0]
 800e30c:	695b      	ldr	r3, [r3, #20]
 800e30e:	4718      	bx	r3
 800e310:	4770      	bx	lr
	...

0800e314 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800e314:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e318:	4604      	mov	r4, r0
 800e31a:	b088      	sub	sp, #32
 800e31c:	f854 3b26 	ldr.w	r3, [r4], #38
 800e320:	2500      	movs	r5, #0
 800e322:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e324:	460f      	mov	r7, r1
 800e326:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e32a:	a904      	add	r1, sp, #16
 800e32c:	4606      	mov	r6, r0
 800e32e:	4798      	blx	r3
 800e330:	4620      	mov	r0, r4
 800e332:	f006 f975 	bl	8014620 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e336:	4680      	mov	r8, r0
 800e338:	4620      	mov	r0, r4
 800e33a:	f006 f9a5 	bl	8014688 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e33e:	9506      	str	r5, [sp, #24]
 800e340:	ad06      	add	r5, sp, #24
 800e342:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e346:	4639      	mov	r1, r7
 800e348:	4628      	mov	r0, r5
 800e34a:	f8ad 801c 	strh.w	r8, [sp, #28]
 800e34e:	f7fc fce5 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 800e352:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e356:	2b00      	cmp	r3, #0
 800e358:	dd19      	ble.n	800e38e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e35a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e35e:	2b00      	cmp	r3, #0
 800e360:	dd15      	ble.n	800e38e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e362:	4b0c      	ldr	r3, [pc, #48]	@ (800e394 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800e364:	681b      	ldr	r3, [r3, #0]
 800e366:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800e36a:	b10a      	cbz	r2, 800e370 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800e36c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800e36e:	b900      	cbnz	r0, 800e372 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800e370:	6898      	ldr	r0, [r3, #8]
 800e372:	6801      	ldr	r1, [r0, #0]
 800e374:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800e378:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800e37c:	2701      	movs	r7, #1
 800e37e:	9702      	str	r7, [sp, #8]
 800e380:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800e384:	e9cd 5600 	strd	r5, r6, [sp]
 800e388:	688d      	ldr	r5, [r1, #8]
 800e38a:	4621      	mov	r1, r4
 800e38c:	47a8      	blx	r5
 800e38e:	b008      	add	sp, #32
 800e390:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e394:	200157c0 	.word	0x200157c0

0800e398 <_ZN8touchgfx7OutlineD1Ev>:
 800e398:	4770      	bx	lr

0800e39a <_ZN8touchgfx7OutlineD0Ev>:
 800e39a:	b510      	push	{r4, lr}
 800e39c:	2130      	movs	r1, #48	@ 0x30
 800e39e:	4604      	mov	r4, r0
 800e3a0:	f015 f9dc 	bl	802375c <_ZdlPvj>
 800e3a4:	4620      	mov	r0, r4
 800e3a6:	bd10      	pop	{r4, pc}

0800e3a8 <_ZN8touchgfx7Outline5resetEv>:
 800e3a8:	b510      	push	{r4, lr}
 800e3aa:	4604      	mov	r4, r0
 800e3ac:	f000 fe82 	bl	800f0b4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800e3b0:	60e0      	str	r0, [r4, #12]
 800e3b2:	f000 fe85 	bl	800f0c0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800e3b6:	68e3      	ldr	r3, [r4, #12]
 800e3b8:	6123      	str	r3, [r4, #16]
 800e3ba:	08c0      	lsrs	r0, r0, #3
 800e3bc:	2200      	movs	r2, #0
 800e3be:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800e3c2:	3801      	subs	r0, #1
 800e3c4:	6060      	str	r0, [r4, #4]
 800e3c6:	60a2      	str	r2, [r4, #8]
 800e3c8:	8019      	strh	r1, [r3, #0]
 800e3ca:	8059      	strh	r1, [r3, #2]
 800e3cc:	809a      	strh	r2, [r3, #4]
 800e3ce:	80da      	strh	r2, [r3, #6]
 800e3d0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e3d2:	f023 0301 	bic.w	r3, r3, #1
 800e3d6:	f043 0302 	orr.w	r3, r3, #2
 800e3da:	6263      	str	r3, [r4, #36]	@ 0x24
 800e3dc:	bd10      	pop	{r4, pc}
	...

0800e3e0 <_ZN8touchgfx7OutlineC1Ev>:
 800e3e0:	b510      	push	{r4, lr}
 800e3e2:	4b0a      	ldr	r3, [pc, #40]	@ (800e40c <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800e3e4:	6003      	str	r3, [r0, #0]
 800e3e6:	2300      	movs	r3, #0
 800e3e8:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800e3ec:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e3f0:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800e3f4:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800e3f8:	6243      	str	r3, [r0, #36]	@ 0x24
 800e3fa:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800e3fe:	4604      	mov	r4, r0
 800e400:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800e404:	f7ff ffd0 	bl	800e3a8 <_ZN8touchgfx7Outline5resetEv>
 800e408:	4620      	mov	r0, r4
 800e40a:	bd10      	pop	{r4, pc}
 800e40c:	080279e0 	.word	0x080279e0

0800e410 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800e410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e414:	b093      	sub	sp, #76	@ 0x4c
 800e416:	1156      	asrs	r6, r2, #5
 800e418:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800e41a:	9305      	str	r3, [sp, #20]
 800e41c:	f004 051f 	and.w	r5, r4, #31
 800e420:	1153      	asrs	r3, r2, #5
 800e422:	9504      	str	r5, [sp, #16]
 800e424:	1165      	asrs	r5, r4, #5
 800e426:	9303      	str	r3, [sp, #12]
 800e428:	42ae      	cmp	r6, r5
 800e42a:	ea4f 1364 	mov.w	r3, r4, asr #5
 800e42e:	9306      	str	r3, [sp, #24]
 800e430:	f002 031f 	and.w	r3, r2, #31
 800e434:	f040 80f8 	bne.w	800e628 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800e438:	9c04      	ldr	r4, [sp, #16]
 800e43a:	9a05      	ldr	r2, [sp, #20]
 800e43c:	42a3      	cmp	r3, r4
 800e43e:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800e442:	6902      	ldr	r2, [r0, #16]
 800e444:	d125      	bne.n	800e492 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800e446:	f9b2 3000 	ldrsh.w	r3, [r2]
 800e44a:	459e      	cmp	lr, r3
 800e44c:	d103      	bne.n	800e456 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800e44e:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e452:	429e      	cmp	r6, r3
 800e454:	d035      	beq.n	800e4c2 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e456:	88d1      	ldrh	r1, [r2, #6]
 800e458:	8893      	ldrh	r3, [r2, #4]
 800e45a:	430b      	orrs	r3, r1
 800e45c:	d010      	beq.n	800e480 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e45e:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e462:	2b00      	cmp	r3, #0
 800e464:	db0c      	blt.n	800e480 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e466:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800e468:	428b      	cmp	r3, r1
 800e46a:	da09      	bge.n	800e480 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e46c:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e470:	428b      	cmp	r3, r1
 800e472:	bf38      	it	cc
 800e474:	3208      	addcc	r2, #8
 800e476:	f103 0301 	add.w	r3, r3, #1
 800e47a:	bf38      	it	cc
 800e47c:	6102      	strcc	r2, [r0, #16]
 800e47e:	6083      	str	r3, [r0, #8]
 800e480:	6903      	ldr	r3, [r0, #16]
 800e482:	9a03      	ldr	r2, [sp, #12]
 800e484:	f8a3 e000 	strh.w	lr, [r3]
 800e488:	805a      	strh	r2, [r3, #2]
 800e48a:	2200      	movs	r2, #0
 800e48c:	809a      	strh	r2, [r3, #4]
 800e48e:	80da      	strh	r2, [r3, #6]
 800e490:	e017      	b.n	800e4c2 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e492:	9c05      	ldr	r4, [sp, #20]
 800e494:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800e498:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800e49c:	f004 041f 	and.w	r4, r4, #31
 800e4a0:	114e      	asrs	r6, r1, #5
 800e4a2:	9402      	str	r4, [sp, #8]
 800e4a4:	9c04      	ldr	r4, [sp, #16]
 800e4a6:	4576      	cmp	r6, lr
 800e4a8:	f001 0c1f 	and.w	ip, r1, #31
 800e4ac:	eba4 0403 	sub.w	r4, r4, r3
 800e4b0:	d10a      	bne.n	800e4c8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800e4b2:	9b02      	ldr	r3, [sp, #8]
 800e4b4:	449c      	add	ip, r3
 800e4b6:	44a0      	add	r8, r4
 800e4b8:	fb04 a40c 	mla	r4, r4, ip, sl
 800e4bc:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e4c0:	80d4      	strh	r4, [r2, #6]
 800e4c2:	b013      	add	sp, #76	@ 0x4c
 800e4c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e4c8:	9d05      	ldr	r5, [sp, #20]
 800e4ca:	1a69      	subs	r1, r5, r1
 800e4cc:	bf5b      	ittet	pl
 800e4ce:	f1cc 0520 	rsbpl	r5, ip, #32
 800e4d2:	436c      	mulpl	r4, r5
 800e4d4:	2500      	movmi	r5, #0
 800e4d6:	2520      	movpl	r5, #32
 800e4d8:	bf44      	itt	mi
 800e4da:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e4de:	4249      	negmi	r1, r1
 800e4e0:	9501      	str	r5, [sp, #4]
 800e4e2:	9f01      	ldr	r7, [sp, #4]
 800e4e4:	fb94 f5f1 	sdiv	r5, r4, r1
 800e4e8:	fb01 4415 	mls	r4, r1, r5, r4
 800e4ec:	bf54      	ite	pl
 800e4ee:	f04f 0901 	movpl.w	r9, #1
 800e4f2:	f04f 39ff 	movmi.w	r9, #4294967295
 800e4f6:	2c00      	cmp	r4, #0
 800e4f8:	bfb8      	it	lt
 800e4fa:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e4fe:	44bc      	add	ip, r7
 800e500:	44a8      	add	r8, r5
 800e502:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e506:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e50a:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e50e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e512:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e516:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800e51a:	bfb8      	it	lt
 800e51c:	1864      	addlt	r4, r4, r1
 800e51e:	ea58 0202 	orrs.w	r2, r8, r2
 800e522:	444e      	add	r6, r9
 800e524:	d011      	beq.n	800e54a <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e526:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e52a:	f1b8 0f00 	cmp.w	r8, #0
 800e52e:	db0c      	blt.n	800e54a <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e530:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800e532:	4590      	cmp	r8, r2
 800e534:	da09      	bge.n	800e54a <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e536:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800e53a:	4590      	cmp	r8, r2
 800e53c:	bf3c      	itt	cc
 800e53e:	f10c 0208 	addcc.w	r2, ip, #8
 800e542:	6102      	strcc	r2, [r0, #16]
 800e544:	f108 0201 	add.w	r2, r8, #1
 800e548:	6082      	str	r2, [r0, #8]
 800e54a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e54e:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e552:	f8ac 6000 	strh.w	r6, [ip]
 800e556:	2700      	movs	r7, #0
 800e558:	45b6      	cmp	lr, r6
 800e55a:	f8ac 2002 	strh.w	r2, [ip, #2]
 800e55e:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e562:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e566:	442b      	add	r3, r5
 800e568:	d04d      	beq.n	800e606 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800e56a:	9f04      	ldr	r7, [sp, #16]
 800e56c:	1aff      	subs	r7, r7, r3
 800e56e:	443d      	add	r5, r7
 800e570:	016d      	lsls	r5, r5, #5
 800e572:	fb95 f8f1 	sdiv	r8, r5, r1
 800e576:	fb01 5518 	mls	r5, r1, r8, r5
 800e57a:	2d00      	cmp	r5, #0
 800e57c:	bfb8      	it	lt
 800e57e:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e582:	f108 0701 	add.w	r7, r8, #1
 800e586:	bfb8      	it	lt
 800e588:	186d      	addlt	r5, r5, r1
 800e58a:	1a64      	subs	r4, r4, r1
 800e58c:	9703      	str	r7, [sp, #12]
 800e58e:	f04f 0a00 	mov.w	sl, #0
 800e592:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e596:	1964      	adds	r4, r4, r5
 800e598:	bf58      	it	pl
 800e59a:	9f03      	ldrpl	r7, [sp, #12]
 800e59c:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e5a0:	bf48      	it	mi
 800e5a2:	4647      	movmi	r7, r8
 800e5a4:	44bb      	add	fp, r7
 800e5a6:	f8ac b004 	strh.w	fp, [ip, #4]
 800e5aa:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e5ae:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e5b2:	f8ac b006 	strh.w	fp, [ip, #6]
 800e5b6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e5ba:	443b      	add	r3, r7
 800e5bc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e5c0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e5c4:	bf58      	it	pl
 800e5c6:	1a64      	subpl	r4, r4, r1
 800e5c8:	ea5b 0707 	orrs.w	r7, fp, r7
 800e5cc:	444e      	add	r6, r9
 800e5ce:	d011      	beq.n	800e5f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e5d0:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e5d4:	f1bb 0f00 	cmp.w	fp, #0
 800e5d8:	db0c      	blt.n	800e5f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e5da:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e5dc:	45bb      	cmp	fp, r7
 800e5de:	da09      	bge.n	800e5f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e5e0:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e5e4:	45bb      	cmp	fp, r7
 800e5e6:	bf3c      	itt	cc
 800e5e8:	f10c 0708 	addcc.w	r7, ip, #8
 800e5ec:	6107      	strcc	r7, [r0, #16]
 800e5ee:	f10b 0701 	add.w	r7, fp, #1
 800e5f2:	6087      	str	r7, [r0, #8]
 800e5f4:	6907      	ldr	r7, [r0, #16]
 800e5f6:	45b6      	cmp	lr, r6
 800e5f8:	803e      	strh	r6, [r7, #0]
 800e5fa:	807a      	strh	r2, [r7, #2]
 800e5fc:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e600:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e604:	d1c5      	bne.n	800e592 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800e606:	9a04      	ldr	r2, [sp, #16]
 800e608:	1ad3      	subs	r3, r2, r3
 800e60a:	6902      	ldr	r2, [r0, #16]
 800e60c:	8891      	ldrh	r1, [r2, #4]
 800e60e:	88d6      	ldrh	r6, [r2, #6]
 800e610:	4419      	add	r1, r3
 800e612:	8091      	strh	r1, [r2, #4]
 800e614:	9902      	ldr	r1, [sp, #8]
 800e616:	f101 0c20 	add.w	ip, r1, #32
 800e61a:	9901      	ldr	r1, [sp, #4]
 800e61c:	ebac 0c01 	sub.w	ip, ip, r1
 800e620:	fb03 630c 	mla	r3, r3, ip, r6
 800e624:	80d3      	strh	r3, [r2, #6]
 800e626:	e74c      	b.n	800e4c2 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e628:	9d05      	ldr	r5, [sp, #20]
 800e62a:	1aa2      	subs	r2, r4, r2
 800e62c:	eba5 0501 	sub.w	r5, r5, r1
 800e630:	9508      	str	r5, [sp, #32]
 800e632:	9202      	str	r2, [sp, #8]
 800e634:	f140 8128 	bpl.w	800e888 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800e638:	9a03      	ldr	r2, [sp, #12]
 800e63a:	2a00      	cmp	r2, #0
 800e63c:	f6ff af41 	blt.w	800e4c2 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e640:	9a02      	ldr	r2, [sp, #8]
 800e642:	4252      	negs	r2, r2
 800e644:	9202      	str	r2, [sp, #8]
 800e646:	9a06      	ldr	r2, [sp, #24]
 800e648:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800e64c:	f04f 34ff 	mov.w	r4, #4294967295
 800e650:	9206      	str	r2, [sp, #24]
 800e652:	462a      	mov	r2, r5
 800e654:	940b      	str	r4, [sp, #44]	@ 0x2c
 800e656:	435a      	muls	r2, r3
 800e658:	2400      	movs	r4, #0
 800e65a:	9d02      	ldr	r5, [sp, #8]
 800e65c:	9401      	str	r4, [sp, #4]
 800e65e:	9c02      	ldr	r4, [sp, #8]
 800e660:	fb92 f4f4 	sdiv	r4, r2, r4
 800e664:	fb05 2214 	mls	r2, r5, r4, r2
 800e668:	2a00      	cmp	r2, #0
 800e66a:	9207      	str	r2, [sp, #28]
 800e66c:	bfbc      	itt	lt
 800e66e:	1952      	addlt	r2, r2, r5
 800e670:	9207      	strlt	r2, [sp, #28]
 800e672:	9a01      	ldr	r2, [sp, #4]
 800e674:	6905      	ldr	r5, [r0, #16]
 800e676:	bfb8      	it	lt
 800e678:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800e67c:	eb04 0901 	add.w	r9, r4, r1
 800e680:	429a      	cmp	r2, r3
 800e682:	ea4f 1669 	mov.w	r6, r9, asr #5
 800e686:	f040 8112 	bne.w	800e8ae <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800e68a:	f9b5 3000 	ldrsh.w	r3, [r5]
 800e68e:	429e      	cmp	r6, r3
 800e690:	d104      	bne.n	800e69c <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800e692:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800e696:	9a03      	ldr	r2, [sp, #12]
 800e698:	429a      	cmp	r2, r3
 800e69a:	d01b      	beq.n	800e6d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e69c:	88ea      	ldrh	r2, [r5, #6]
 800e69e:	88ab      	ldrh	r3, [r5, #4]
 800e6a0:	4313      	orrs	r3, r2
 800e6a2:	d010      	beq.n	800e6c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e6a4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800e6a8:	2a00      	cmp	r2, #0
 800e6aa:	db0c      	blt.n	800e6c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e6ac:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e6ae:	429a      	cmp	r2, r3
 800e6b0:	da09      	bge.n	800e6c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e6b2:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800e6b6:	429a      	cmp	r2, r3
 800e6b8:	bf38      	it	cc
 800e6ba:	3508      	addcc	r5, #8
 800e6bc:	f102 0201 	add.w	r2, r2, #1
 800e6c0:	bf38      	it	cc
 800e6c2:	6105      	strcc	r5, [r0, #16]
 800e6c4:	6082      	str	r2, [r0, #8]
 800e6c6:	6903      	ldr	r3, [r0, #16]
 800e6c8:	9a03      	ldr	r2, [sp, #12]
 800e6ca:	805a      	strh	r2, [r3, #2]
 800e6cc:	2200      	movs	r2, #0
 800e6ce:	801e      	strh	r6, [r3, #0]
 800e6d0:	809a      	strh	r2, [r3, #4]
 800e6d2:	80da      	strh	r2, [r3, #6]
 800e6d4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800e6d6:	9a03      	ldr	r2, [sp, #12]
 800e6d8:	6901      	ldr	r1, [r0, #16]
 800e6da:	441a      	add	r2, r3
 800e6dc:	f9b1 3000 	ldrsh.w	r3, [r1]
 800e6e0:	42b3      	cmp	r3, r6
 800e6e2:	d103      	bne.n	800e6ec <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800e6e4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800e6e8:	429a      	cmp	r2, r3
 800e6ea:	d01a      	beq.n	800e722 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800e6ec:	88cc      	ldrh	r4, [r1, #6]
 800e6ee:	888b      	ldrh	r3, [r1, #4]
 800e6f0:	4323      	orrs	r3, r4
 800e6f2:	d010      	beq.n	800e716 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e6f4:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800e6f8:	2c00      	cmp	r4, #0
 800e6fa:	db0c      	blt.n	800e716 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e6fc:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e6fe:	429c      	cmp	r4, r3
 800e700:	da09      	bge.n	800e716 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e702:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800e706:	429c      	cmp	r4, r3
 800e708:	bf38      	it	cc
 800e70a:	3108      	addcc	r1, #8
 800e70c:	f104 0401 	add.w	r4, r4, #1
 800e710:	bf38      	it	cc
 800e712:	6101      	strcc	r1, [r0, #16]
 800e714:	6084      	str	r4, [r0, #8]
 800e716:	6903      	ldr	r3, [r0, #16]
 800e718:	2100      	movs	r1, #0
 800e71a:	801e      	strh	r6, [r3, #0]
 800e71c:	805a      	strh	r2, [r3, #2]
 800e71e:	8099      	strh	r1, [r3, #4]
 800e720:	80d9      	strh	r1, [r3, #6]
 800e722:	9b06      	ldr	r3, [sp, #24]
 800e724:	4293      	cmp	r3, r2
 800e726:	f000 8082 	beq.w	800e82e <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800e72a:	9b08      	ldr	r3, [sp, #32]
 800e72c:	9c02      	ldr	r4, [sp, #8]
 800e72e:	9902      	ldr	r1, [sp, #8]
 800e730:	015b      	lsls	r3, r3, #5
 800e732:	fb93 f1f1 	sdiv	r1, r3, r1
 800e736:	fb04 3311 	mls	r3, r4, r1, r3
 800e73a:	2b00      	cmp	r3, #0
 800e73c:	9103      	str	r1, [sp, #12]
 800e73e:	9308      	str	r3, [sp, #32]
 800e740:	da04      	bge.n	800e74c <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800e742:	1e4b      	subs	r3, r1, #1
 800e744:	9303      	str	r3, [sp, #12]
 800e746:	9b08      	ldr	r3, [sp, #32]
 800e748:	4423      	add	r3, r4
 800e74a:	9308      	str	r3, [sp, #32]
 800e74c:	9b07      	ldr	r3, [sp, #28]
 800e74e:	9902      	ldr	r1, [sp, #8]
 800e750:	1a5b      	subs	r3, r3, r1
 800e752:	9307      	str	r3, [sp, #28]
 800e754:	9b01      	ldr	r3, [sp, #4]
 800e756:	f1c3 0320 	rsb	r3, r3, #32
 800e75a:	930e      	str	r3, [sp, #56]	@ 0x38
 800e75c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800e75e:	9b01      	ldr	r3, [sp, #4]
 800e760:	1a5b      	subs	r3, r3, r1
 800e762:	464f      	mov	r7, r9
 800e764:	930a      	str	r3, [sp, #40]	@ 0x28
 800e766:	2600      	movs	r6, #0
 800e768:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800e76c:	185b      	adds	r3, r3, r1
 800e76e:	bf58      	it	pl
 800e770:	9902      	ldrpl	r1, [sp, #8]
 800e772:	9307      	str	r3, [sp, #28]
 800e774:	bf5d      	ittte	pl
 800e776:	1a5b      	subpl	r3, r3, r1
 800e778:	9307      	strpl	r3, [sp, #28]
 800e77a:	9b03      	ldrpl	r3, [sp, #12]
 800e77c:	9903      	ldrmi	r1, [sp, #12]
 800e77e:	bf58      	it	pl
 800e780:	1c59      	addpl	r1, r3, #1
 800e782:	4489      	add	r9, r1
 800e784:	2a00      	cmp	r2, #0
 800e786:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800e78a:	db2e      	blt.n	800e7ea <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e78c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e78e:	4293      	cmp	r3, r2
 800e790:	dd2b      	ble.n	800e7ea <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e792:	9c01      	ldr	r4, [sp, #4]
 800e794:	6905      	ldr	r5, [r0, #16]
 800e796:	46a0      	mov	r8, r4
 800e798:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800e79a:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800e79e:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800e7a2:	45a0      	cmp	r8, r4
 800e7a4:	f040 814f 	bne.w	800ea46 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800e7a8:	f9b5 1000 	ldrsh.w	r1, [r5]
 800e7ac:	4551      	cmp	r1, sl
 800e7ae:	d103      	bne.n	800e7b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800e7b0:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800e7b4:	4291      	cmp	r1, r2
 800e7b6:	d018      	beq.n	800e7ea <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e7b8:	ea5c 010e 	orrs.w	r1, ip, lr
 800e7bc:	d00f      	beq.n	800e7de <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800e7be:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800e7c2:	2900      	cmp	r1, #0
 800e7c4:	db0b      	blt.n	800e7de <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800e7c6:	428b      	cmp	r3, r1
 800e7c8:	dd09      	ble.n	800e7de <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800e7ca:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800e7ce:	4299      	cmp	r1, r3
 800e7d0:	bf38      	it	cc
 800e7d2:	3508      	addcc	r5, #8
 800e7d4:	f101 0101 	add.w	r1, r1, #1
 800e7d8:	bf38      	it	cc
 800e7da:	6105      	strcc	r5, [r0, #16]
 800e7dc:	6081      	str	r1, [r0, #8]
 800e7de:	6903      	ldr	r3, [r0, #16]
 800e7e0:	f8a3 a000 	strh.w	sl, [r3]
 800e7e4:	805a      	strh	r2, [r3, #2]
 800e7e6:	809e      	strh	r6, [r3, #4]
 800e7e8:	80de      	strh	r6, [r3, #6]
 800e7ea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800e7ec:	6901      	ldr	r1, [r0, #16]
 800e7ee:	441a      	add	r2, r3
 800e7f0:	88cc      	ldrh	r4, [r1, #6]
 800e7f2:	888b      	ldrh	r3, [r1, #4]
 800e7f4:	4323      	orrs	r3, r4
 800e7f6:	d010      	beq.n	800e81a <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800e7f8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800e7fc:	2c00      	cmp	r4, #0
 800e7fe:	db0c      	blt.n	800e81a <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800e800:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e802:	429c      	cmp	r4, r3
 800e804:	da09      	bge.n	800e81a <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800e806:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800e80a:	429c      	cmp	r4, r3
 800e80c:	bf38      	it	cc
 800e80e:	3108      	addcc	r1, #8
 800e810:	f104 0401 	add.w	r4, r4, #1
 800e814:	bf38      	it	cc
 800e816:	6101      	strcc	r1, [r0, #16]
 800e818:	6084      	str	r4, [r0, #8]
 800e81a:	6903      	ldr	r3, [r0, #16]
 800e81c:	f8a3 a000 	strh.w	sl, [r3]
 800e820:	805a      	strh	r2, [r3, #2]
 800e822:	809e      	strh	r6, [r3, #4]
 800e824:	80de      	strh	r6, [r3, #6]
 800e826:	9b06      	ldr	r3, [sp, #24]
 800e828:	4293      	cmp	r3, r2
 800e82a:	464f      	mov	r7, r9
 800e82c:	d19c      	bne.n	800e768 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800e82e:	9b01      	ldr	r3, [sp, #4]
 800e830:	6907      	ldr	r7, [r0, #16]
 800e832:	f1c3 0620 	rsb	r6, r3, #32
 800e836:	9b05      	ldr	r3, [sp, #20]
 800e838:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800e83c:	9b04      	ldr	r3, [sp, #16]
 800e83e:	429e      	cmp	r6, r3
 800e840:	f040 81cc 	bne.w	800ebdc <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800e844:	f9b7 3000 	ldrsh.w	r3, [r7]
 800e848:	459e      	cmp	lr, r3
 800e84a:	d104      	bne.n	800e856 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800e84c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e850:	429a      	cmp	r2, r3
 800e852:	f43f ae36 	beq.w	800e4c2 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e856:	88f9      	ldrh	r1, [r7, #6]
 800e858:	88bb      	ldrh	r3, [r7, #4]
 800e85a:	430b      	orrs	r3, r1
 800e85c:	d010      	beq.n	800e880 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e85e:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e862:	2b00      	cmp	r3, #0
 800e864:	db0c      	blt.n	800e880 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e866:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800e868:	428b      	cmp	r3, r1
 800e86a:	da09      	bge.n	800e880 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e86c:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e870:	428b      	cmp	r3, r1
 800e872:	bf38      	it	cc
 800e874:	3708      	addcc	r7, #8
 800e876:	f103 0301 	add.w	r3, r3, #1
 800e87a:	bf38      	it	cc
 800e87c:	6107      	strcc	r7, [r0, #16]
 800e87e:	6083      	str	r3, [r0, #8]
 800e880:	6903      	ldr	r3, [r0, #16]
 800e882:	f8a3 e000 	strh.w	lr, [r3]
 800e886:	e5ff      	b.n	800e488 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800e888:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800e88a:	9c03      	ldr	r4, [sp, #12]
 800e88c:	42a2      	cmp	r2, r4
 800e88e:	f6ff ae18 	blt.w	800e4c2 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e892:	9c06      	ldr	r4, [sp, #24]
 800e894:	42a2      	cmp	r2, r4
 800e896:	bfb8      	it	lt
 800e898:	3201      	addlt	r2, #1
 800e89a:	9c08      	ldr	r4, [sp, #32]
 800e89c:	bfb8      	it	lt
 800e89e:	9206      	strlt	r2, [sp, #24]
 800e8a0:	f1c3 0220 	rsb	r2, r3, #32
 800e8a4:	4362      	muls	r2, r4
 800e8a6:	2401      	movs	r4, #1
 800e8a8:	940b      	str	r4, [sp, #44]	@ 0x2c
 800e8aa:	2420      	movs	r4, #32
 800e8ac:	e6d5      	b.n	800e65a <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800e8ae:	f009 021f 	and.w	r2, r9, #31
 800e8b2:	ea4f 1861 	mov.w	r8, r1, asr #5
 800e8b6:	920c      	str	r2, [sp, #48]	@ 0x30
 800e8b8:	9a01      	ldr	r2, [sp, #4]
 800e8ba:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800e8be:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800e8c2:	45b0      	cmp	r8, r6
 800e8c4:	f001 011f 	and.w	r1, r1, #31
 800e8c8:	eba2 0203 	sub.w	r2, r2, r3
 800e8cc:	d108      	bne.n	800e8e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800e8ce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e8d0:	4419      	add	r1, r3
 800e8d2:	4496      	add	lr, r2
 800e8d4:	fb02 a101 	mla	r1, r2, r1, sl
 800e8d8:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e8dc:	80e9      	strh	r1, [r5, #6]
 800e8de:	e6f9      	b.n	800e6d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e8e0:	2c00      	cmp	r4, #0
 800e8e2:	f2c0 80a9 	blt.w	800ea38 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800e8e6:	2701      	movs	r7, #1
 800e8e8:	f1c1 0c20 	rsb	ip, r1, #32
 800e8ec:	970a      	str	r7, [sp, #40]	@ 0x28
 800e8ee:	fb02 f20c 	mul.w	r2, r2, ip
 800e8f2:	2720      	movs	r7, #32
 800e8f4:	9709      	str	r7, [sp, #36]	@ 0x24
 800e8f6:	fb92 fcf4 	sdiv	ip, r2, r4
 800e8fa:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800e8fc:	fb04 221c 	mls	r2, r4, ip, r2
 800e900:	2a00      	cmp	r2, #0
 800e902:	bfb8      	it	lt
 800e904:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800e908:	4439      	add	r1, r7
 800e90a:	fb0c a101 	mla	r1, ip, r1, sl
 800e90e:	80e9      	strh	r1, [r5, #6]
 800e910:	44e6      	add	lr, ip
 800e912:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800e914:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e918:	eb08 0501 	add.w	r5, r8, r1
 800e91c:	6901      	ldr	r1, [r0, #16]
 800e91e:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800e922:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800e926:	bfb8      	it	lt
 800e928:	1912      	addlt	r2, r2, r4
 800e92a:	ea58 070e 	orrs.w	r7, r8, lr
 800e92e:	d010      	beq.n	800e952 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e930:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800e934:	f1be 0f00 	cmp.w	lr, #0
 800e938:	db0b      	blt.n	800e952 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e93a:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e93c:	45be      	cmp	lr, r7
 800e93e:	da08      	bge.n	800e952 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e940:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e944:	45be      	cmp	lr, r7
 800e946:	bf3c      	itt	cc
 800e948:	3108      	addcc	r1, #8
 800e94a:	6101      	strcc	r1, [r0, #16]
 800e94c:	f10e 0101 	add.w	r1, lr, #1
 800e950:	6081      	str	r1, [r0, #8]
 800e952:	6901      	ldr	r1, [r0, #16]
 800e954:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800e958:	800d      	strh	r5, [r1, #0]
 800e95a:	f04f 0e00 	mov.w	lr, #0
 800e95e:	42ae      	cmp	r6, r5
 800e960:	f8a1 8002 	strh.w	r8, [r1, #2]
 800e964:	f8a1 e004 	strh.w	lr, [r1, #4]
 800e968:	f8a1 e006 	strh.w	lr, [r1, #6]
 800e96c:	4463      	add	r3, ip
 800e96e:	d054      	beq.n	800ea1a <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800e970:	9901      	ldr	r1, [sp, #4]
 800e972:	1ac9      	subs	r1, r1, r3
 800e974:	4461      	add	r1, ip
 800e976:	0149      	lsls	r1, r1, #5
 800e978:	fb91 fef4 	sdiv	lr, r1, r4
 800e97c:	fb04 111e 	mls	r1, r4, lr, r1
 800e980:	2900      	cmp	r1, #0
 800e982:	bfb8      	it	lt
 800e984:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800e988:	f10e 0701 	add.w	r7, lr, #1
 800e98c:	bfb8      	it	lt
 800e98e:	1909      	addlt	r1, r1, r4
 800e990:	1b12      	subs	r2, r2, r4
 800e992:	970d      	str	r7, [sp, #52]	@ 0x34
 800e994:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800e998:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800e99a:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800e99e:	1852      	adds	r2, r2, r1
 800e9a0:	bf54      	ite	pl
 800e9a2:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800e9a6:	46f4      	movmi	ip, lr
 800e9a8:	44e3      	add	fp, ip
 800e9aa:	f8aa b004 	strh.w	fp, [sl, #4]
 800e9ae:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800e9b2:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800e9b6:	f8aa b006 	strh.w	fp, [sl, #6]
 800e9ba:	4463      	add	r3, ip
 800e9bc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e9c0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e9c4:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800e9c8:	bf58      	it	pl
 800e9ca:	1b12      	subpl	r2, r2, r4
 800e9cc:	443d      	add	r5, r7
 800e9ce:	ea5b 070a 	orrs.w	r7, fp, sl
 800e9d2:	d014      	beq.n	800e9fe <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e9d4:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800e9d8:	f1ba 0f00 	cmp.w	sl, #0
 800e9dc:	db0f      	blt.n	800e9fe <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e9de:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e9e0:	45ba      	cmp	sl, r7
 800e9e2:	da0c      	bge.n	800e9fe <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e9e4:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800e9e8:	45ba      	cmp	sl, r7
 800e9ea:	bf38      	it	cc
 800e9ec:	f10c 0c08 	addcc.w	ip, ip, #8
 800e9f0:	f10a 0a01 	add.w	sl, sl, #1
 800e9f4:	bf38      	it	cc
 800e9f6:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800e9fa:	f8c0 a008 	str.w	sl, [r0, #8]
 800e9fe:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ea02:	f04f 0700 	mov.w	r7, #0
 800ea06:	42ae      	cmp	r6, r5
 800ea08:	f8ac 5000 	strh.w	r5, [ip]
 800ea0c:	f8ac 8002 	strh.w	r8, [ip, #2]
 800ea10:	f8ac 7004 	strh.w	r7, [ip, #4]
 800ea14:	f8ac 7006 	strh.w	r7, [ip, #6]
 800ea18:	d1bc      	bne.n	800e994 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800ea1a:	6904      	ldr	r4, [r0, #16]
 800ea1c:	9a01      	ldr	r2, [sp, #4]
 800ea1e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800ea20:	1ad3      	subs	r3, r2, r3
 800ea22:	88a2      	ldrh	r2, [r4, #4]
 800ea24:	441a      	add	r2, r3
 800ea26:	80a2      	strh	r2, [r4, #4]
 800ea28:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800ea2a:	3120      	adds	r1, #32
 800ea2c:	1a89      	subs	r1, r1, r2
 800ea2e:	88e2      	ldrh	r2, [r4, #6]
 800ea30:	fb03 2301 	mla	r3, r3, r1, r2
 800ea34:	80e3      	strh	r3, [r4, #6]
 800ea36:	e64d      	b.n	800e6d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ea38:	f04f 37ff 	mov.w	r7, #4294967295
 800ea3c:	970a      	str	r7, [sp, #40]	@ 0x28
 800ea3e:	434a      	muls	r2, r1
 800ea40:	4264      	negs	r4, r4
 800ea42:	2700      	movs	r7, #0
 800ea44:	e756      	b.n	800e8f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800ea46:	ea4f 1867 	mov.w	r8, r7, asr #5
 800ea4a:	f009 031f 	and.w	r3, r9, #31
 800ea4e:	45d0      	cmp	r8, sl
 800ea50:	f007 071f 	and.w	r7, r7, #31
 800ea54:	930f      	str	r3, [sp, #60]	@ 0x3c
 800ea56:	fa1f fc8c 	uxth.w	ip, ip
 800ea5a:	fa1f fe8e 	uxth.w	lr, lr
 800ea5e:	d10a      	bne.n	800ea76 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800ea60:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800ea62:	449c      	add	ip, r3
 800ea64:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ea66:	f8a5 c004 	strh.w	ip, [r5, #4]
 800ea6a:	441f      	add	r7, r3
 800ea6c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800ea6e:	fb03 e707 	mla	r7, r3, r7, lr
 800ea72:	80ef      	strh	r7, [r5, #6]
 800ea74:	e6b9      	b.n	800e7ea <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ea76:	2900      	cmp	r1, #0
 800ea78:	f2c0 80a8 	blt.w	800ebcc <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800ea7c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800ea7e:	f1c7 0320 	rsb	r3, r7, #32
 800ea82:	4363      	muls	r3, r4
 800ea84:	2401      	movs	r4, #1
 800ea86:	940d      	str	r4, [sp, #52]	@ 0x34
 800ea88:	2420      	movs	r4, #32
 800ea8a:	940c      	str	r4, [sp, #48]	@ 0x30
 800ea8c:	fb93 f4f1 	sdiv	r4, r3, r1
 800ea90:	fb01 3b14 	mls	fp, r1, r4, r3
 800ea94:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ea96:	f1bb 0f00 	cmp.w	fp, #0
 800ea9a:	bfb8      	it	lt
 800ea9c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800eaa0:	441f      	add	r7, r3
 800eaa2:	fb04 e707 	mla	r7, r4, r7, lr
 800eaa6:	44a4      	add	ip, r4
 800eaa8:	f8a5 c004 	strh.w	ip, [r5, #4]
 800eaac:	80ef      	strh	r7, [r5, #6]
 800eaae:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800eab2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800eab4:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800eab8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800eabc:	bfb8      	it	lt
 800eabe:	448b      	addlt	fp, r1
 800eac0:	eb08 0503 	add.w	r5, r8, r3
 800eac4:	ea5e 0307 	orrs.w	r3, lr, r7
 800eac8:	d011      	beq.n	800eaee <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800eaca:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800eace:	f1be 0f00 	cmp.w	lr, #0
 800ead2:	db0c      	blt.n	800eaee <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800ead4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ead6:	45be      	cmp	lr, r7
 800ead8:	da09      	bge.n	800eaee <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800eada:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800eade:	45be      	cmp	lr, r7
 800eae0:	bf3c      	itt	cc
 800eae2:	f10c 0708 	addcc.w	r7, ip, #8
 800eae6:	6107      	strcc	r7, [r0, #16]
 800eae8:	f10e 0701 	add.w	r7, lr, #1
 800eaec:	6087      	str	r7, [r0, #8]
 800eaee:	6907      	ldr	r7, [r0, #16]
 800eaf0:	b213      	sxth	r3, r2
 800eaf2:	9310      	str	r3, [sp, #64]	@ 0x40
 800eaf4:	807b      	strh	r3, [r7, #2]
 800eaf6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800eaf8:	803d      	strh	r5, [r7, #0]
 800eafa:	4555      	cmp	r5, sl
 800eafc:	80be      	strh	r6, [r7, #4]
 800eafe:	80fe      	strh	r6, [r7, #6]
 800eb00:	eb04 0c03 	add.w	ip, r4, r3
 800eb04:	d051      	beq.n	800ebaa <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800eb06:	9b01      	ldr	r3, [sp, #4]
 800eb08:	eba3 070c 	sub.w	r7, r3, ip
 800eb0c:	443c      	add	r4, r7
 800eb0e:	0164      	lsls	r4, r4, #5
 800eb10:	fb94 f8f1 	sdiv	r8, r4, r1
 800eb14:	fb01 4418 	mls	r4, r1, r8, r4
 800eb18:	2c00      	cmp	r4, #0
 800eb1a:	bfb8      	it	lt
 800eb1c:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800eb20:	ebab 0301 	sub.w	r3, fp, r1
 800eb24:	f108 0701 	add.w	r7, r8, #1
 800eb28:	bfb8      	it	lt
 800eb2a:	1864      	addlt	r4, r4, r1
 800eb2c:	9309      	str	r3, [sp, #36]	@ 0x24
 800eb2e:	9711      	str	r7, [sp, #68]	@ 0x44
 800eb30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800eb32:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800eb36:	191b      	adds	r3, r3, r4
 800eb38:	bf58      	it	pl
 800eb3a:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800eb3c:	f8be b004 	ldrh.w	fp, [lr, #4]
 800eb40:	9309      	str	r3, [sp, #36]	@ 0x24
 800eb42:	bf48      	it	mi
 800eb44:	4647      	movmi	r7, r8
 800eb46:	44bb      	add	fp, r7
 800eb48:	f8ae b004 	strh.w	fp, [lr, #4]
 800eb4c:	f8be b006 	ldrh.w	fp, [lr, #6]
 800eb50:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800eb54:	f8ae b006 	strh.w	fp, [lr, #6]
 800eb58:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800eb5c:	44bc      	add	ip, r7
 800eb5e:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800eb60:	f8be b006 	ldrh.w	fp, [lr, #6]
 800eb64:	443d      	add	r5, r7
 800eb66:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800eb6a:	bf5c      	itt	pl
 800eb6c:	1a5b      	subpl	r3, r3, r1
 800eb6e:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800eb70:	ea5b 0307 	orrs.w	r3, fp, r7
 800eb74:	d011      	beq.n	800eb9a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800eb76:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800eb7a:	f1bb 0f00 	cmp.w	fp, #0
 800eb7e:	db0c      	blt.n	800eb9a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800eb80:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800eb82:	45bb      	cmp	fp, r7
 800eb84:	da09      	bge.n	800eb9a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800eb86:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800eb8a:	45bb      	cmp	fp, r7
 800eb8c:	bf3c      	itt	cc
 800eb8e:	f10e 0708 	addcc.w	r7, lr, #8
 800eb92:	6107      	strcc	r7, [r0, #16]
 800eb94:	f10b 0701 	add.w	r7, fp, #1
 800eb98:	6087      	str	r7, [r0, #8]
 800eb9a:	6907      	ldr	r7, [r0, #16]
 800eb9c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800eb9e:	803d      	strh	r5, [r7, #0]
 800eba0:	4555      	cmp	r5, sl
 800eba2:	807b      	strh	r3, [r7, #2]
 800eba4:	80be      	strh	r6, [r7, #4]
 800eba6:	80fe      	strh	r6, [r7, #6]
 800eba8:	d1c2      	bne.n	800eb30 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800ebaa:	9b01      	ldr	r3, [sp, #4]
 800ebac:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800ebae:	eba3 0c0c 	sub.w	ip, r3, ip
 800ebb2:	6903      	ldr	r3, [r0, #16]
 800ebb4:	8899      	ldrh	r1, [r3, #4]
 800ebb6:	4461      	add	r1, ip
 800ebb8:	8099      	strh	r1, [r3, #4]
 800ebba:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800ebbc:	3720      	adds	r7, #32
 800ebbe:	1a7f      	subs	r7, r7, r1
 800ebc0:	88d9      	ldrh	r1, [r3, #6]
 800ebc2:	fb0c 1c07 	mla	ip, ip, r7, r1
 800ebc6:	f8a3 c006 	strh.w	ip, [r3, #6]
 800ebca:	e60e      	b.n	800e7ea <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ebcc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800ebce:	f04f 34ff 	mov.w	r4, #4294967295
 800ebd2:	940d      	str	r4, [sp, #52]	@ 0x34
 800ebd4:	437b      	muls	r3, r7
 800ebd6:	4249      	negs	r1, r1
 800ebd8:	2400      	movs	r4, #0
 800ebda:	e756      	b.n	800ea8a <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800ebdc:	9905      	ldr	r1, [sp, #20]
 800ebde:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800ebe2:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800ebe6:	f001 011f 	and.w	r1, r1, #31
 800ebea:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800ebee:	9102      	str	r1, [sp, #8]
 800ebf0:	9904      	ldr	r1, [sp, #16]
 800ebf2:	45f3      	cmp	fp, lr
 800ebf4:	f009 0c1f 	and.w	ip, r9, #31
 800ebf8:	eba1 0406 	sub.w	r4, r1, r6
 800ebfc:	d108      	bne.n	800ec10 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800ebfe:	9b02      	ldr	r3, [sp, #8]
 800ec00:	449c      	add	ip, r3
 800ec02:	44a0      	add	r8, r4
 800ec04:	fb04 a40c 	mla	r4, r4, ip, sl
 800ec08:	f8a7 8004 	strh.w	r8, [r7, #4]
 800ec0c:	80fc      	strh	r4, [r7, #6]
 800ec0e:	e458      	b.n	800e4c2 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ec10:	9905      	ldr	r1, [sp, #20]
 800ec12:	ebb1 0109 	subs.w	r1, r1, r9
 800ec16:	bf5b      	ittet	pl
 800ec18:	f1cc 0520 	rsbpl	r5, ip, #32
 800ec1c:	436c      	mulpl	r4, r5
 800ec1e:	2500      	movmi	r5, #0
 800ec20:	2520      	movpl	r5, #32
 800ec22:	bf44      	itt	mi
 800ec24:	fb04 f40c 	mulmi.w	r4, r4, ip
 800ec28:	4249      	negmi	r1, r1
 800ec2a:	9501      	str	r5, [sp, #4]
 800ec2c:	9b01      	ldr	r3, [sp, #4]
 800ec2e:	fb94 f5f1 	sdiv	r5, r4, r1
 800ec32:	fb01 4415 	mls	r4, r1, r5, r4
 800ec36:	bf54      	ite	pl
 800ec38:	f04f 0901 	movpl.w	r9, #1
 800ec3c:	f04f 39ff 	movmi.w	r9, #4294967295
 800ec40:	2c00      	cmp	r4, #0
 800ec42:	bfb8      	it	lt
 800ec44:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800ec48:	449c      	add	ip, r3
 800ec4a:	44a8      	add	r8, r5
 800ec4c:	fb05 ac0c 	mla	ip, r5, ip, sl
 800ec50:	f8a7 8004 	strh.w	r8, [r7, #4]
 800ec54:	f8a7 c006 	strh.w	ip, [r7, #6]
 800ec58:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ec5c:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800ec60:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ec64:	bfb8      	it	lt
 800ec66:	1864      	addlt	r4, r4, r1
 800ec68:	ea58 0707 	orrs.w	r7, r8, r7
 800ec6c:	eb0b 0309 	add.w	r3, fp, r9
 800ec70:	d011      	beq.n	800ec96 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ec72:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800ec76:	f1b8 0f00 	cmp.w	r8, #0
 800ec7a:	db0c      	blt.n	800ec96 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ec7c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ec7e:	45b8      	cmp	r8, r7
 800ec80:	da09      	bge.n	800ec96 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ec82:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800ec86:	45b8      	cmp	r8, r7
 800ec88:	bf3c      	itt	cc
 800ec8a:	f10c 0708 	addcc.w	r7, ip, #8
 800ec8e:	6107      	strcc	r7, [r0, #16]
 800ec90:	f108 0701 	add.w	r7, r8, #1
 800ec94:	6087      	str	r7, [r0, #8]
 800ec96:	6907      	ldr	r7, [r0, #16]
 800ec98:	f04f 0c00 	mov.w	ip, #0
 800ec9c:	b212      	sxth	r2, r2
 800ec9e:	459e      	cmp	lr, r3
 800eca0:	803b      	strh	r3, [r7, #0]
 800eca2:	807a      	strh	r2, [r7, #2]
 800eca4:	f8a7 c004 	strh.w	ip, [r7, #4]
 800eca8:	f8a7 c006 	strh.w	ip, [r7, #6]
 800ecac:	442e      	add	r6, r5
 800ecae:	d04d      	beq.n	800ed4c <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800ecb0:	9f04      	ldr	r7, [sp, #16]
 800ecb2:	1bbf      	subs	r7, r7, r6
 800ecb4:	443d      	add	r5, r7
 800ecb6:	016d      	lsls	r5, r5, #5
 800ecb8:	fb95 f8f1 	sdiv	r8, r5, r1
 800ecbc:	fb01 5518 	mls	r5, r1, r8, r5
 800ecc0:	4565      	cmp	r5, ip
 800ecc2:	bfb8      	it	lt
 800ecc4:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800ecc8:	f108 0701 	add.w	r7, r8, #1
 800eccc:	bfb8      	it	lt
 800ecce:	186d      	addlt	r5, r5, r1
 800ecd0:	1a64      	subs	r4, r4, r1
 800ecd2:	9703      	str	r7, [sp, #12]
 800ecd4:	f04f 0a00 	mov.w	sl, #0
 800ecd8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ecdc:	1964      	adds	r4, r4, r5
 800ecde:	bf58      	it	pl
 800ece0:	9f03      	ldrpl	r7, [sp, #12]
 800ece2:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800ece6:	bf48      	it	mi
 800ece8:	4647      	movmi	r7, r8
 800ecea:	44bb      	add	fp, r7
 800ecec:	f8ac b004 	strh.w	fp, [ip, #4]
 800ecf0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ecf4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800ecf8:	f8ac b006 	strh.w	fp, [ip, #6]
 800ecfc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ed00:	443e      	add	r6, r7
 800ed02:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ed06:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ed0a:	bf58      	it	pl
 800ed0c:	1a64      	subpl	r4, r4, r1
 800ed0e:	ea5b 0707 	orrs.w	r7, fp, r7
 800ed12:	444b      	add	r3, r9
 800ed14:	d011      	beq.n	800ed3a <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800ed16:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800ed1a:	f1bb 0f00 	cmp.w	fp, #0
 800ed1e:	db0c      	blt.n	800ed3a <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800ed20:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ed22:	45bb      	cmp	fp, r7
 800ed24:	da09      	bge.n	800ed3a <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800ed26:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800ed2a:	45bb      	cmp	fp, r7
 800ed2c:	bf3c      	itt	cc
 800ed2e:	f10c 0708 	addcc.w	r7, ip, #8
 800ed32:	6107      	strcc	r7, [r0, #16]
 800ed34:	f10b 0701 	add.w	r7, fp, #1
 800ed38:	6087      	str	r7, [r0, #8]
 800ed3a:	6907      	ldr	r7, [r0, #16]
 800ed3c:	459e      	cmp	lr, r3
 800ed3e:	803b      	strh	r3, [r7, #0]
 800ed40:	807a      	strh	r2, [r7, #2]
 800ed42:	f8a7 a004 	strh.w	sl, [r7, #4]
 800ed46:	f8a7 a006 	strh.w	sl, [r7, #6]
 800ed4a:	d1c5      	bne.n	800ecd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800ed4c:	9b04      	ldr	r3, [sp, #16]
 800ed4e:	1b9e      	subs	r6, r3, r6
 800ed50:	6903      	ldr	r3, [r0, #16]
 800ed52:	889a      	ldrh	r2, [r3, #4]
 800ed54:	4432      	add	r2, r6
 800ed56:	809a      	strh	r2, [r3, #4]
 800ed58:	9a02      	ldr	r2, [sp, #8]
 800ed5a:	f102 0c20 	add.w	ip, r2, #32
 800ed5e:	9a01      	ldr	r2, [sp, #4]
 800ed60:	ebac 0c02 	sub.w	ip, ip, r2
 800ed64:	88da      	ldrh	r2, [r3, #6]
 800ed66:	fb06 260c 	mla	r6, r6, ip, r2
 800ed6a:	80de      	strh	r6, [r3, #6]
 800ed6c:	f7ff bba9 	b.w	800e4c2 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800ed70 <_ZN8touchgfx7Outline6lineToEii>:
 800ed70:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800ed72:	079b      	lsls	r3, r3, #30
 800ed74:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ed76:	460e      	mov	r6, r1
 800ed78:	4615      	mov	r5, r2
 800ed7a:	d511      	bpl.n	800eda0 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800ed7c:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800ed80:	ea86 0701 	eor.w	r7, r6, r1
 800ed84:	ea85 0302 	eor.w	r3, r5, r2
 800ed88:	433b      	orrs	r3, r7
 800ed8a:	d009      	beq.n	800eda0 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800ed8c:	4633      	mov	r3, r6
 800ed8e:	9500      	str	r5, [sp, #0]
 800ed90:	f7ff fb3e 	bl	800e410 <_ZN8touchgfx7Outline10renderLineEiiii>
 800ed94:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800ed96:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800ed9a:	f043 0301 	orr.w	r3, r3, #1
 800ed9e:	6243      	str	r3, [r0, #36]	@ 0x24
 800eda0:	b003      	add	sp, #12
 800eda2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800eda4 <_ZN8touchgfx7Outline6moveToEii>:
 800eda4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eda6:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800eda8:	4615      	mov	r5, r2
 800edaa:	079a      	lsls	r2, r3, #30
 800edac:	4604      	mov	r4, r0
 800edae:	460e      	mov	r6, r1
 800edb0:	d401      	bmi.n	800edb6 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800edb2:	f7ff faf9 	bl	800e3a8 <_ZN8touchgfx7Outline5resetEv>
 800edb6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800edb8:	07db      	lsls	r3, r3, #31
 800edba:	d504      	bpl.n	800edc6 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800edbc:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800edc0:	4620      	mov	r0, r4
 800edc2:	f7ff ffd5 	bl	800ed70 <_ZN8touchgfx7Outline6lineToEii>
 800edc6:	6923      	ldr	r3, [r4, #16]
 800edc8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800edcc:	1170      	asrs	r0, r6, #5
 800edce:	4290      	cmp	r0, r2
 800edd0:	ea4f 1165 	mov.w	r1, r5, asr #5
 800edd4:	d103      	bne.n	800edde <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800edd6:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800edda:	4291      	cmp	r1, r2
 800eddc:	d01a      	beq.n	800ee14 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800edde:	88df      	ldrh	r7, [r3, #6]
 800ede0:	889a      	ldrh	r2, [r3, #4]
 800ede2:	433a      	orrs	r2, r7
 800ede4:	d010      	beq.n	800ee08 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800ede6:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800edea:	2a00      	cmp	r2, #0
 800edec:	db0c      	blt.n	800ee08 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800edee:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800edf0:	42ba      	cmp	r2, r7
 800edf2:	da09      	bge.n	800ee08 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800edf4:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800edf8:	42ba      	cmp	r2, r7
 800edfa:	bf38      	it	cc
 800edfc:	3308      	addcc	r3, #8
 800edfe:	f102 0201 	add.w	r2, r2, #1
 800ee02:	bf38      	it	cc
 800ee04:	6123      	strcc	r3, [r4, #16]
 800ee06:	60a2      	str	r2, [r4, #8]
 800ee08:	6923      	ldr	r3, [r4, #16]
 800ee0a:	2200      	movs	r2, #0
 800ee0c:	8018      	strh	r0, [r3, #0]
 800ee0e:	8059      	strh	r1, [r3, #2]
 800ee10:	809a      	strh	r2, [r3, #4]
 800ee12:	80da      	strh	r2, [r3, #6]
 800ee14:	6166      	str	r6, [r4, #20]
 800ee16:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800ee1a:	6225      	str	r5, [r4, #32]
 800ee1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ee1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800ee1e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ee22:	b0d0      	sub	sp, #320	@ 0x140
 800ee24:	466c      	mov	r4, sp
 800ee26:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800ee2a:	4627      	mov	r7, r4
 800ee2c:	1a0d      	subs	r5, r1, r0
 800ee2e:	2d48      	cmp	r5, #72	@ 0x48
 800ee30:	f100 0308 	add.w	r3, r0, #8
 800ee34:	f340 80d5 	ble.w	800efe2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800ee38:	112d      	asrs	r5, r5, #4
 800ee3a:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800ee3e:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ee42:	6816      	ldr	r6, [r2, #0]
 800ee44:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800ee48:	6006      	str	r6, [r0, #0]
 800ee4a:	6856      	ldr	r6, [r2, #4]
 800ee4c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800ee50:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800ee54:	6046      	str	r6, [r0, #4]
 800ee56:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800ee5a:	f8a2 8002 	strh.w	r8, [r2, #2]
 800ee5e:	f8a2 e004 	strh.w	lr, [r2, #4]
 800ee62:	f8a2 c006 	strh.w	ip, [r2, #6]
 800ee66:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800ee6a:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800ee6e:	4565      	cmp	r5, ip
 800ee70:	f1a1 0208 	sub.w	r2, r1, #8
 800ee74:	db06      	blt.n	800ee84 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800ee76:	d119      	bne.n	800eeac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800ee78:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800ee7c:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800ee80:	42ae      	cmp	r6, r5
 800ee82:	dd13      	ble.n	800eeac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800ee84:	460e      	mov	r6, r1
 800ee86:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800ee8a:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800ee8e:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800ee92:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800ee96:	601d      	str	r5, [r3, #0]
 800ee98:	6875      	ldr	r5, [r6, #4]
 800ee9a:	605d      	str	r5, [r3, #4]
 800ee9c:	f821 9c08 	strh.w	r9, [r1, #-8]
 800eea0:	f821 cc06 	strh.w	ip, [r1, #-6]
 800eea4:	f821 8c04 	strh.w	r8, [r1, #-4]
 800eea8:	f821 ec02 	strh.w	lr, [r1, #-2]
 800eeac:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800eeb0:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800eeb4:	42ae      	cmp	r6, r5
 800eeb6:	db06      	blt.n	800eec6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800eeb8:	d116      	bne.n	800eee8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800eeba:	f9b0 c000 	ldrsh.w	ip, [r0]
 800eebe:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800eec2:	45ac      	cmp	ip, r5
 800eec4:	da10      	bge.n	800eee8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800eec6:	681d      	ldr	r5, [r3, #0]
 800eec8:	f9b0 8000 	ldrsh.w	r8, [r0]
 800eecc:	6005      	str	r5, [r0, #0]
 800eece:	685d      	ldr	r5, [r3, #4]
 800eed0:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800eed4:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800eed8:	f8a0 8008 	strh.w	r8, [r0, #8]
 800eedc:	6045      	str	r5, [r0, #4]
 800eede:	8146      	strh	r6, [r0, #10]
 800eee0:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800eee4:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800eee8:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800eeec:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800eef0:	4565      	cmp	r5, ip
 800eef2:	db06      	blt.n	800ef02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800eef4:	d119      	bne.n	800ef2a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800eef6:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800eefa:	f9b0 5000 	ldrsh.w	r5, [r0]
 800eefe:	42ae      	cmp	r6, r5
 800ef00:	da13      	bge.n	800ef2a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ef02:	460e      	mov	r6, r1
 800ef04:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ef08:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800ef0c:	6005      	str	r5, [r0, #0]
 800ef0e:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800ef12:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800ef16:	6875      	ldr	r5, [r6, #4]
 800ef18:	6045      	str	r5, [r0, #4]
 800ef1a:	f821 9c08 	strh.w	r9, [r1, #-8]
 800ef1e:	f821 cc06 	strh.w	ip, [r1, #-6]
 800ef22:	f821 8c04 	strh.w	r8, [r1, #-4]
 800ef26:	f821 ec02 	strh.w	lr, [r1, #-2]
 800ef2a:	3308      	adds	r3, #8
 800ef2c:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800ef30:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800ef34:	45e6      	cmp	lr, ip
 800ef36:	dbf8      	blt.n	800ef2a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ef38:	d105      	bne.n	800ef46 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800ef3a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800ef3e:	f9b0 5000 	ldrsh.w	r5, [r0]
 800ef42:	42ae      	cmp	r6, r5
 800ef44:	dbf1      	blt.n	800ef2a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ef46:	4615      	mov	r5, r2
 800ef48:	3a08      	subs	r2, #8
 800ef4a:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800ef4e:	45b4      	cmp	ip, r6
 800ef50:	dbf9      	blt.n	800ef46 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800ef52:	d105      	bne.n	800ef60 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800ef54:	f9b0 8000 	ldrsh.w	r8, [r0]
 800ef58:	f9b2 6000 	ldrsh.w	r6, [r2]
 800ef5c:	45b0      	cmp	r8, r6
 800ef5e:	dbf2      	blt.n	800ef46 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800ef60:	4293      	cmp	r3, r2
 800ef62:	f1a5 0608 	sub.w	r6, r5, #8
 800ef66:	d816      	bhi.n	800ef96 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800ef68:	f8d6 c000 	ldr.w	ip, [r6]
 800ef6c:	f9b3 a000 	ldrsh.w	sl, [r3]
 800ef70:	f8c3 c000 	str.w	ip, [r3]
 800ef74:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800ef78:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800ef7c:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800ef80:	f8c3 c004 	str.w	ip, [r3, #4]
 800ef84:	f825 ac08 	strh.w	sl, [r5, #-8]
 800ef88:	f825 ec06 	strh.w	lr, [r5, #-6]
 800ef8c:	f825 9c04 	strh.w	r9, [r5, #-4]
 800ef90:	f825 8c02 	strh.w	r8, [r5, #-2]
 800ef94:	e7c9      	b.n	800ef2a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ef96:	f8d6 e000 	ldr.w	lr, [r6]
 800ef9a:	f9b0 a000 	ldrsh.w	sl, [r0]
 800ef9e:	f8c0 e000 	str.w	lr, [r0]
 800efa2:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800efa6:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800efaa:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800efae:	f8c0 e004 	str.w	lr, [r0, #4]
 800efb2:	f825 ac08 	strh.w	sl, [r5, #-8]
 800efb6:	f825 cc06 	strh.w	ip, [r5, #-6]
 800efba:	f825 9c04 	strh.w	r9, [r5, #-4]
 800efbe:	f825 8c02 	strh.w	r8, [r5, #-2]
 800efc2:	1acd      	subs	r5, r1, r3
 800efc4:	1a16      	subs	r6, r2, r0
 800efc6:	10ed      	asrs	r5, r5, #3
 800efc8:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800efcc:	bfb5      	itete	lt
 800efce:	e9c4 0200 	strdlt	r0, r2, [r4]
 800efd2:	e9c4 3100 	strdge	r3, r1, [r4]
 800efd6:	460a      	movlt	r2, r1
 800efd8:	4603      	movge	r3, r0
 800efda:	3408      	adds	r4, #8
 800efdc:	4618      	mov	r0, r3
 800efde:	4611      	mov	r1, r2
 800efe0:	e724      	b.n	800ee2c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800efe2:	4299      	cmp	r1, r3
 800efe4:	d928      	bls.n	800f038 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800efe6:	f1a3 0210 	sub.w	r2, r3, #16
 800efea:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800efee:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800eff2:	45ac      	cmp	ip, r5
 800eff4:	db06      	blt.n	800f004 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800eff6:	d11d      	bne.n	800f034 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800eff8:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800effc:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800f000:	42ae      	cmp	r6, r5
 800f002:	da17      	bge.n	800f034 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f004:	4615      	mov	r5, r2
 800f006:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800f00a:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800f00e:	6116      	str	r6, [r2, #16]
 800f010:	686e      	ldr	r6, [r5, #4]
 800f012:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800f016:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800f01a:	f8a2 9008 	strh.w	r9, [r2, #8]
 800f01e:	42a8      	cmp	r0, r5
 800f020:	6156      	str	r6, [r2, #20]
 800f022:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800f026:	f8a2 800c 	strh.w	r8, [r2, #12]
 800f02a:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800f02e:	f1a2 0208 	sub.w	r2, r2, #8
 800f032:	d1da      	bne.n	800efea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800f034:	3308      	adds	r3, #8
 800f036:	e7d4      	b.n	800efe2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f038:	42bc      	cmp	r4, r7
 800f03a:	d903      	bls.n	800f044 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800f03c:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800f040:	3c08      	subs	r4, #8
 800f042:	e6f3      	b.n	800ee2c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f044:	b050      	add	sp, #320	@ 0x140
 800f046:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800f04a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800f04a:	b510      	push	{r4, lr}
 800f04c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800f04e:	07da      	lsls	r2, r3, #31
 800f050:	4604      	mov	r4, r0
 800f052:	d507      	bpl.n	800f064 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800f054:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800f058:	f7ff fe8a 	bl	800ed70 <_ZN8touchgfx7Outline6lineToEii>
 800f05c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800f05e:	f023 0301 	bic.w	r3, r3, #1
 800f062:	6243      	str	r3, [r0, #36]	@ 0x24
 800f064:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800f066:	079b      	lsls	r3, r3, #30
 800f068:	d521      	bpl.n	800f0ae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800f06a:	6923      	ldr	r3, [r4, #16]
 800f06c:	88d9      	ldrh	r1, [r3, #6]
 800f06e:	889a      	ldrh	r2, [r3, #4]
 800f070:	430a      	orrs	r2, r1
 800f072:	d010      	beq.n	800f096 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f074:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f078:	2a00      	cmp	r2, #0
 800f07a:	db0c      	blt.n	800f096 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f07c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800f07e:	428a      	cmp	r2, r1
 800f080:	da09      	bge.n	800f096 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f082:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800f086:	4291      	cmp	r1, r2
 800f088:	bf88      	it	hi
 800f08a:	3308      	addhi	r3, #8
 800f08c:	f102 0201 	add.w	r2, r2, #1
 800f090:	bf88      	it	hi
 800f092:	6123      	strhi	r3, [r4, #16]
 800f094:	60a2      	str	r2, [r4, #8]
 800f096:	68a1      	ldr	r1, [r4, #8]
 800f098:	b129      	cbz	r1, 800f0a6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f09a:	6863      	ldr	r3, [r4, #4]
 800f09c:	4299      	cmp	r1, r3
 800f09e:	d802      	bhi.n	800f0a6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f0a0:	68e0      	ldr	r0, [r4, #12]
 800f0a2:	f7ff febc 	bl	800ee1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800f0a6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800f0a8:	f023 0302 	bic.w	r3, r3, #2
 800f0ac:	6263      	str	r3, [r4, #36]	@ 0x24
 800f0ae:	68e0      	ldr	r0, [r4, #12]
 800f0b0:	bd10      	pop	{r4, pc}
	...

0800f0b4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800f0b4:	4b01      	ldr	r3, [pc, #4]	@ (800f0bc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800f0b6:	6818      	ldr	r0, [r3, #0]
 800f0b8:	4770      	bx	lr
 800f0ba:	bf00      	nop
 800f0bc:	200157c8 	.word	0x200157c8

0800f0c0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800f0c0:	4b01      	ldr	r3, [pc, #4]	@ (800f0c8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800f0c2:	6818      	ldr	r0, [r3, #0]
 800f0c4:	4770      	bx	lr
 800f0c6:	bf00      	nop
 800f0c8:	200157cc 	.word	0x200157cc

0800f0cc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800f0cc:	b510      	push	{r4, lr}
 800f0ce:	6803      	ldr	r3, [r0, #0]
 800f0d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f0d2:	460c      	mov	r4, r1
 800f0d4:	4798      	blx	r3
 800f0d6:	1b03      	subs	r3, r0, r4
 800f0d8:	4258      	negs	r0, r3
 800f0da:	4158      	adcs	r0, r3
 800f0dc:	bd10      	pop	{r4, pc}
	...

0800f0e0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800f0e0:	4b01      	ldr	r3, [pc, #4]	@ (800f0e8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800f0e2:	6019      	str	r1, [r3, #0]
 800f0e4:	4770      	bx	lr
 800f0e6:	bf00      	nop
 800f0e8:	200157d0 	.word	0x200157d0

0800f0ec <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f0ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f0f0:	4696      	mov	lr, r2
 800f0f2:	4605      	mov	r5, r0
 800f0f4:	4614      	mov	r4, r2
 800f0f6:	460e      	mov	r6, r1
 800f0f8:	461f      	mov	r7, r3
 800f0fa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f0fe:	b097      	sub	sp, #92	@ 0x5c
 800f100:	f10d 0c1c 	add.w	ip, sp, #28
 800f104:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f108:	f8de 3000 	ldr.w	r3, [lr]
 800f10c:	f8cc 3000 	str.w	r3, [ip]
 800f110:	f104 0e14 	add.w	lr, r4, #20
 800f114:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f118:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800f11c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f120:	f8de 3000 	ldr.w	r3, [lr]
 800f124:	f8cc 3000 	str.w	r3, [ip]
 800f128:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800f12c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f130:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800f134:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f138:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800f13c:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800f140:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800f144:	f8de 3000 	ldr.w	r3, [lr]
 800f148:	f8cc 3000 	str.w	r3, [ip]
 800f14c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800f14e:	682b      	ldr	r3, [r5, #0]
 800f150:	9201      	str	r2, [sp, #4]
 800f152:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f156:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800f158:	9200      	str	r2, [sp, #0]
 800f15a:	f8cd 8008 	str.w	r8, [sp, #8]
 800f15e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800f162:	aa07      	add	r2, sp, #28
 800f164:	463b      	mov	r3, r7
 800f166:	4631      	mov	r1, r6
 800f168:	4628      	mov	r0, r5
 800f16a:	47d8      	blx	fp
 800f16c:	46a6      	mov	lr, r4
 800f16e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f172:	f10d 0c1c 	add.w	ip, sp, #28
 800f176:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f17a:	f8de 3000 	ldr.w	r3, [lr]
 800f17e:	f8cc 3000 	str.w	r3, [ip]
 800f182:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800f186:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f18a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800f18e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f192:	343c      	adds	r4, #60	@ 0x3c
 800f194:	f8de 3000 	ldr.w	r3, [lr]
 800f198:	f8cc 3000 	str.w	r3, [ip]
 800f19c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f19e:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800f1a2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f1a6:	6823      	ldr	r3, [r4, #0]
 800f1a8:	f8cc 3000 	str.w	r3, [ip]
 800f1ac:	682b      	ldr	r3, [r5, #0]
 800f1ae:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f1b2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800f1b4:	9201      	str	r2, [sp, #4]
 800f1b6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800f1b8:	9200      	str	r2, [sp, #0]
 800f1ba:	f8cd 8008 	str.w	r8, [sp, #8]
 800f1be:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800f1c0:	aa07      	add	r2, sp, #28
 800f1c2:	463b      	mov	r3, r7
 800f1c4:	4631      	mov	r1, r6
 800f1c6:	4628      	mov	r0, r5
 800f1c8:	47a0      	blx	r4
 800f1ca:	b017      	add	sp, #92	@ 0x5c
 800f1cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f1d0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800f1d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f1d4:	b08d      	sub	sp, #52	@ 0x34
 800f1d6:	4688      	mov	r8, r1
 800f1d8:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800f1da:	f8d3 c000 	ldr.w	ip, [r3]
 800f1de:	680f      	ldr	r7, [r1, #0]
 800f1e0:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800f1e4:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800f1e8:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800f1ec:	edd3 6a07 	vldr	s13, [r3, #28]
 800f1f0:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800f1f2:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800f1f6:	f9b1 9000 	ldrsh.w	r9, [r1]
 800f1fa:	f9ba 1000 	ldrsh.w	r1, [sl]
 800f1fe:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800f202:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800f206:	eba7 070c 	sub.w	r7, r7, ip
 800f20a:	42bc      	cmp	r4, r7
 800f20c:	bfa8      	it	ge
 800f20e:	463c      	movge	r4, r7
 800f210:	ee07 4a90 	vmov	s15, r4
 800f214:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f218:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800f21c:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f220:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f224:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f228:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800f22c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f230:	eb09 0e0c 	add.w	lr, r9, ip
 800f234:	4571      	cmp	r1, lr
 800f236:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f23a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f23e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f242:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f246:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f24a:	f340 808d 	ble.w	800f368 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f24e:	eba1 060e 	sub.w	r6, r1, lr
 800f252:	fb96 f5f4 	sdiv	r5, r6, r4
 800f256:	ee07 5a10 	vmov	s14, r5
 800f25a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f25e:	2d00      	cmp	r5, #0
 800f260:	fb04 6615 	mls	r6, r4, r5, r6
 800f264:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f268:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f26c:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f270:	dd13      	ble.n	800f29a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f272:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f276:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f27a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f27e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f282:	bf18      	it	ne
 800f284:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f288:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f28c:	bf08      	it	eq
 800f28e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f292:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f296:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f29a:	fb05 f204 	mul.w	r2, r5, r4
 800f29e:	1abf      	subs	r7, r7, r2
 800f2a0:	4494      	add	ip, r2
 800f2a2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f2a6:	4411      	add	r1, r2
 800f2a8:	eb09 020c 	add.w	r2, r9, ip
 800f2ac:	443a      	add	r2, r7
 800f2ae:	b209      	sxth	r1, r1
 800f2b0:	428a      	cmp	r2, r1
 800f2b2:	bfc4      	itt	gt
 800f2b4:	eba1 0209 	subgt.w	r2, r1, r9
 800f2b8:	eba2 070c 	subgt.w	r7, r2, ip
 800f2bc:	2f00      	cmp	r7, #0
 800f2be:	dd50      	ble.n	800f362 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800f2c0:	fb97 f1f4 	sdiv	r1, r7, r4
 800f2c4:	fb04 7211 	mls	r2, r4, r1, r7
 800f2c8:	b90a      	cbnz	r2, 800f2ce <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800f2ca:	3901      	subs	r1, #1
 800f2cc:	4622      	mov	r2, r4
 800f2ce:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f2d2:	6840      	ldr	r0, [r0, #4]
 800f2d4:	900b      	str	r0, [sp, #44]	@ 0x2c
 800f2d6:	f8d0 a000 	ldr.w	sl, [r0]
 800f2da:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800f2dc:	9008      	str	r0, [sp, #32]
 800f2de:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800f2e2:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800f2e4:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800f2e8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f2ec:	695b      	ldr	r3, [r3, #20]
 800f2ee:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800f2f0:	445b      	add	r3, fp
 800f2f2:	eef0 6a42 	vmov.f32	s13, s4
 800f2f6:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f2fa:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f2fe:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f302:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f306:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f30a:	9307      	str	r3, [sp, #28]
 800f30c:	ee17 7a90 	vmov	r7, s15
 800f310:	ee73 7a42 	vsub.f32	s15, s6, s4
 800f314:	eeb0 7a61 	vmov.f32	s14, s3
 800f318:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f31c:	ee16 3a90 	vmov	r3, s13
 800f320:	fb97 f7f4 	sdiv	r7, r7, r4
 800f324:	ee17 ca90 	vmov	ip, s15
 800f328:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f32c:	fb9c fcf4 	sdiv	ip, ip, r4
 800f330:	fb0c 3306 	mla	r3, ip, r6, r3
 800f334:	9302      	str	r3, [sp, #8]
 800f336:	ee17 3a10 	vmov	r3, s14
 800f33a:	44b6      	add	lr, r6
 800f33c:	fb04 e505 	mla	r5, r4, r5, lr
 800f340:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f344:	fb07 3706 	mla	r7, r7, r6, r3
 800f348:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f34c:	e9cd 4700 	strd	r4, r7, [sp]
 800f350:	2900      	cmp	r1, #0
 800f352:	bfcc      	ite	gt
 800f354:	46a1      	movgt	r9, r4
 800f356:	4691      	movle	r9, r2
 800f358:	eba9 0306 	sub.w	r3, r9, r6
 800f35c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f360:	47a0      	blx	r4
 800f362:	b00d      	add	sp, #52	@ 0x34
 800f364:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f368:	2500      	movs	r5, #0
 800f36a:	462e      	mov	r6, r5
 800f36c:	e799      	b.n	800f2a2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800f370 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f374:	b0db      	sub	sp, #364	@ 0x16c
 800f376:	461d      	mov	r5, r3
 800f378:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800f37c:	930a      	str	r3, [sp, #40]	@ 0x28
 800f37e:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800f382:	930b      	str	r3, [sp, #44]	@ 0x2c
 800f384:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800f388:	9310      	str	r3, [sp, #64]	@ 0x40
 800f38a:	6803      	ldr	r3, [r0, #0]
 800f38c:	910f      	str	r1, [sp, #60]	@ 0x3c
 800f38e:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800f390:	9009      	str	r0, [sp, #36]	@ 0x24
 800f392:	4614      	mov	r4, r2
 800f394:	4629      	mov	r1, r5
 800f396:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800f39a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800f39e:	47b8      	blx	r7
 800f3a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f3a2:	6058      	str	r0, [r3, #4]
 800f3a4:	2800      	cmp	r0, #0
 800f3a6:	f000 83a1 	beq.w	800faec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f3aa:	682b      	ldr	r3, [r5, #0]
 800f3ac:	9314      	str	r3, [sp, #80]	@ 0x50
 800f3ae:	686b      	ldr	r3, [r5, #4]
 800f3b0:	9315      	str	r3, [sp, #84]	@ 0x54
 800f3b2:	4bc4      	ldr	r3, [pc, #784]	@ (800f6c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f3b4:	ed94 7a02 	vldr	s14, [r4, #8]
 800f3b8:	7819      	ldrb	r1, [r3, #0]
 800f3ba:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f3be:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800f3c2:	2900      	cmp	r1, #0
 800f3c4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f3c8:	bf16      	itet	ne
 800f3ca:	4619      	movne	r1, r3
 800f3cc:	4611      	moveq	r1, r2
 800f3ce:	4613      	movne	r3, r2
 800f3d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f3d4:	9116      	str	r1, [sp, #88]	@ 0x58
 800f3d6:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800f3da:	f240 8387 	bls.w	800faec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f3de:	ed94 7a07 	vldr	s14, [r4, #28]
 800f3e2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f3e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f3ea:	f240 837f 	bls.w	800faec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f3ee:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800f3f2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f3f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f3fa:	f240 8377 	bls.w	800faec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f3fe:	6822      	ldr	r2, [r4, #0]
 800f400:	4bb1      	ldr	r3, [pc, #708]	@ (800f6c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800f402:	429a      	cmp	r2, r3
 800f404:	f2c0 8372 	blt.w	800faec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f408:	49b0      	ldr	r1, [pc, #704]	@ (800f6cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800f40a:	6963      	ldr	r3, [r4, #20]
 800f40c:	428a      	cmp	r2, r1
 800f40e:	f300 836d 	bgt.w	800faec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f412:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800f416:	48ae      	ldr	r0, [pc, #696]	@ (800f6d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800f418:	33ff      	adds	r3, #255	@ 0xff
 800f41a:	4283      	cmp	r3, r0
 800f41c:	f200 8366 	bhi.w	800faec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f420:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800f422:	4dac      	ldr	r5, [pc, #688]	@ (800f6d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800f424:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800f428:	33ff      	adds	r3, #255	@ 0xff
 800f42a:	42ab      	cmp	r3, r5
 800f42c:	f200 835e 	bhi.w	800faec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f430:	6862      	ldr	r2, [r4, #4]
 800f432:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800f436:	33ff      	adds	r3, #255	@ 0xff
 800f438:	4283      	cmp	r3, r0
 800f43a:	f200 8357 	bhi.w	800faec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f43e:	69a1      	ldr	r1, [r4, #24]
 800f440:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800f444:	33ff      	adds	r3, #255	@ 0xff
 800f446:	4283      	cmp	r3, r0
 800f448:	f200 8350 	bhi.w	800faec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f44c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800f44e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800f452:	30ff      	adds	r0, #255	@ 0xff
 800f454:	42a8      	cmp	r0, r5
 800f456:	f200 8349 	bhi.w	800faec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f45a:	428a      	cmp	r2, r1
 800f45c:	f280 8110 	bge.w	800f680 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800f460:	429a      	cmp	r2, r3
 800f462:	f300 8119 	bgt.w	800f698 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800f466:	4299      	cmp	r1, r3
 800f468:	f280 811d 	bge.w	800f6a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800f46c:	2502      	movs	r5, #2
 800f46e:	2701      	movs	r7, #1
 800f470:	46a9      	mov	r9, r5
 800f472:	46b8      	mov	r8, r7
 800f474:	f04f 0a00 	mov.w	sl, #0
 800f478:	4621      	mov	r1, r4
 800f47a:	a849      	add	r0, sp, #292	@ 0x124
 800f47c:	f004 fa8c 	bl	8013998 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800f480:	4622      	mov	r2, r4
 800f482:	4653      	mov	r3, sl
 800f484:	a949      	add	r1, sp, #292	@ 0x124
 800f486:	f8cd 9000 	str.w	r9, [sp]
 800f48a:	a819      	add	r0, sp, #100	@ 0x64
 800f48c:	f004 fbb4 	bl	8013bf8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f490:	4622      	mov	r2, r4
 800f492:	4653      	mov	r3, sl
 800f494:	a949      	add	r1, sp, #292	@ 0x124
 800f496:	f8cd 8000 	str.w	r8, [sp]
 800f49a:	a829      	add	r0, sp, #164	@ 0xa4
 800f49c:	f004 fbac 	bl	8013bf8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f4a0:	4643      	mov	r3, r8
 800f4a2:	4622      	mov	r2, r4
 800f4a4:	a949      	add	r1, sp, #292	@ 0x124
 800f4a6:	f8cd 9000 	str.w	r9, [sp]
 800f4aa:	a839      	add	r0, sp, #228	@ 0xe4
 800f4ac:	f004 fba4 	bl	8013bf8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f4b0:	42af      	cmp	r7, r5
 800f4b2:	bfb5      	itete	lt
 800f4b4:	2300      	movlt	r3, #0
 800f4b6:	2301      	movge	r3, #1
 800f4b8:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800f4ba:	930e      	strge	r3, [sp, #56]	@ 0x38
 800f4bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f4be:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f4c2:	af12      	add	r7, sp, #72	@ 0x48
 800f4c4:	bfb9      	ittee	lt
 800f4c6:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800f4c8:	ac19      	addlt	r4, sp, #100	@ 0x64
 800f4ca:	ad19      	addge	r5, sp, #100	@ 0x64
 800f4cc:	ac29      	addge	r4, sp, #164	@ 0xa4
 800f4ce:	e887 0003 	stmia.w	r7, {r0, r1}
 800f4d2:	b928      	cbnz	r0, 800f4e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800f4d4:	4b80      	ldr	r3, [pc, #512]	@ (800f6d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800f4d6:	6818      	ldr	r0, [r3, #0]
 800f4d8:	6803      	ldr	r3, [r0, #0]
 800f4da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f4dc:	4798      	blx	r3
 800f4de:	6038      	str	r0, [r7, #0]
 800f4e0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f4e2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f4e6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f4ea:	930c      	str	r3, [sp, #48]	@ 0x30
 800f4ec:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f4ee:	6963      	ldr	r3, [r4, #20]
 800f4f0:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800f4f2:	440b      	add	r3, r1
 800f4f4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f4f8:	4408      	add	r0, r1
 800f4fa:	b200      	sxth	r0, r0
 800f4fc:	4283      	cmp	r3, r0
 800f4fe:	900d      	str	r0, [sp, #52]	@ 0x34
 800f500:	f280 80dd 	bge.w	800f6be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800f504:	428b      	cmp	r3, r1
 800f506:	da08      	bge.n	800f51a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f508:	2a00      	cmp	r2, #0
 800f50a:	dd06      	ble.n	800f51a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f50c:	1acb      	subs	r3, r1, r3
 800f50e:	429a      	cmp	r2, r3
 800f510:	f2c0 80e4 	blt.w	800f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800f514:	2b00      	cmp	r3, #0
 800f516:	f300 80e2 	bgt.w	800f6de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800f51a:	6967      	ldr	r7, [r4, #20]
 800f51c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f51e:	443b      	add	r3, r7
 800f520:	461f      	mov	r7, r3
 800f522:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f524:	1bdf      	subs	r7, r3, r7
 800f526:	4297      	cmp	r7, r2
 800f528:	bfa8      	it	ge
 800f52a:	4617      	movge	r7, r2
 800f52c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f530:	2f00      	cmp	r7, #0
 800f532:	f340 8166 	ble.w	800f802 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800f536:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f538:	6829      	ldr	r1, [r5, #0]
 800f53a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f53e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f542:	6820      	ldr	r0, [r4, #0]
 800f544:	4411      	add	r1, r2
 800f546:	4299      	cmp	r1, r3
 800f548:	dd1a      	ble.n	800f580 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f54a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f54e:	440b      	add	r3, r1
 800f550:	4402      	add	r2, r0
 800f552:	b21b      	sxth	r3, r3
 800f554:	429a      	cmp	r2, r3
 800f556:	dc13      	bgt.n	800f580 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f558:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f55a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f55c:	681b      	ldr	r3, [r3, #0]
 800f55e:	9206      	str	r2, [sp, #24]
 800f560:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f562:	9205      	str	r2, [sp, #20]
 800f564:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f566:	9500      	str	r5, [sp, #0]
 800f568:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f56c:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f56e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f570:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f574:	a912      	add	r1, sp, #72	@ 0x48
 800f576:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f57a:	aa49      	add	r2, sp, #292	@ 0x124
 800f57c:	4623      	mov	r3, r4
 800f57e:	47c8      	blx	r9
 800f580:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f584:	441a      	add	r2, r3
 800f586:	6963      	ldr	r3, [r4, #20]
 800f588:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f58c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f590:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f594:	68a1      	ldr	r1, [r4, #8]
 800f596:	ed94 6a08 	vldr	s12, [r4, #32]
 800f59a:	6022      	str	r2, [r4, #0]
 800f59c:	3301      	adds	r3, #1
 800f59e:	6163      	str	r3, [r4, #20]
 800f5a0:	69a3      	ldr	r3, [r4, #24]
 800f5a2:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f5a6:	3b01      	subs	r3, #1
 800f5a8:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f5ac:	61a3      	str	r3, [r4, #24]
 800f5ae:	6923      	ldr	r3, [r4, #16]
 800f5b0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f5b4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f5b8:	edd4 6a07 	vldr	s13, [r4, #28]
 800f5bc:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f5c0:	440b      	add	r3, r1
 800f5c2:	68e1      	ldr	r1, [r4, #12]
 800f5c4:	6123      	str	r3, [r4, #16]
 800f5c6:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f5ca:	428b      	cmp	r3, r1
 800f5cc:	edc4 6a07 	vstr	s13, [r4, #28]
 800f5d0:	db15      	blt.n	800f5fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800f5d2:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f5d6:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f5da:	3201      	adds	r2, #1
 800f5dc:	edc4 6a07 	vstr	s13, [r4, #28]
 800f5e0:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f5e4:	6022      	str	r2, [r4, #0]
 800f5e6:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f5ea:	1a5b      	subs	r3, r3, r1
 800f5ec:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f5f0:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f5f4:	6123      	str	r3, [r4, #16]
 800f5f6:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f5fa:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f5fe:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f602:	441a      	add	r2, r3
 800f604:	696b      	ldr	r3, [r5, #20]
 800f606:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f60a:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f60e:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f612:	68a9      	ldr	r1, [r5, #8]
 800f614:	ed95 6a08 	vldr	s12, [r5, #32]
 800f618:	602a      	str	r2, [r5, #0]
 800f61a:	3301      	adds	r3, #1
 800f61c:	616b      	str	r3, [r5, #20]
 800f61e:	69ab      	ldr	r3, [r5, #24]
 800f620:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f624:	3b01      	subs	r3, #1
 800f626:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f62a:	61ab      	str	r3, [r5, #24]
 800f62c:	692b      	ldr	r3, [r5, #16]
 800f62e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f632:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f636:	edd5 6a07 	vldr	s13, [r5, #28]
 800f63a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f63e:	440b      	add	r3, r1
 800f640:	68e9      	ldr	r1, [r5, #12]
 800f642:	612b      	str	r3, [r5, #16]
 800f644:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f648:	428b      	cmp	r3, r1
 800f64a:	edc5 6a07 	vstr	s13, [r5, #28]
 800f64e:	db15      	blt.n	800f67c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800f650:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f654:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f658:	3201      	adds	r2, #1
 800f65a:	edc5 6a07 	vstr	s13, [r5, #28]
 800f65e:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f662:	602a      	str	r2, [r5, #0]
 800f664:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f668:	1a5b      	subs	r3, r3, r1
 800f66a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f66e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f672:	612b      	str	r3, [r5, #16]
 800f674:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f678:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f67c:	3f01      	subs	r7, #1
 800f67e:	e757      	b.n	800f530 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800f680:	4299      	cmp	r1, r3
 800f682:	dc13      	bgt.n	800f6ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800f684:	429a      	cmp	r2, r3
 800f686:	da14      	bge.n	800f6b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800f688:	2502      	movs	r5, #2
 800f68a:	2703      	movs	r7, #3
 800f68c:	46a9      	mov	r9, r5
 800f68e:	f04f 0800 	mov.w	r8, #0
 800f692:	f04f 0a01 	mov.w	sl, #1
 800f696:	e6ef      	b.n	800f478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f698:	2501      	movs	r5, #1
 800f69a:	2700      	movs	r7, #0
 800f69c:	46a9      	mov	r9, r5
 800f69e:	46b8      	mov	r8, r7
 800f6a0:	f04f 0a02 	mov.w	sl, #2
 800f6a4:	e6e8      	b.n	800f478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f6a6:	2501      	movs	r5, #1
 800f6a8:	2702      	movs	r7, #2
 800f6aa:	e6e1      	b.n	800f470 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800f6ac:	2500      	movs	r5, #0
 800f6ae:	2701      	movs	r7, #1
 800f6b0:	e7f4      	b.n	800f69c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800f6b2:	2702      	movs	r7, #2
 800f6b4:	2503      	movs	r5, #3
 800f6b6:	f04f 0900 	mov.w	r9, #0
 800f6ba:	46b8      	mov	r8, r7
 800f6bc:	e7e9      	b.n	800f692 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800f6be:	4613      	mov	r3, r2
 800f6c0:	e728      	b.n	800f514 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800f6c2:	bf00      	nop
 800f6c4:	200157b8 	.word	0x200157b8
 800f6c8:	fffd8f01 	.word	0xfffd8f01
 800f6cc:	00027100 	.word	0x00027100
 800f6d0:	0004e1ff 	.word	0x0004e1ff
 800f6d4:	0004e1fe 	.word	0x0004e1fe
 800f6d8:	200157c0 	.word	0x200157c0
 800f6dc:	4613      	mov	r3, r2
 800f6de:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800f6e0:	9111      	str	r1, [sp, #68]	@ 0x44
 800f6e2:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800f6e6:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800f6ea:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800f6ec:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800f6f0:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800f6f4:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800f6f8:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800f6fc:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800f700:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800f704:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800f708:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800f70c:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800f710:	469e      	mov	lr, r3
 800f712:	469c      	mov	ip, r3
 800f714:	f04f 0900 	mov.w	r9, #0
 800f718:	f1bc 0f00 	cmp.w	ip, #0
 800f71c:	d147      	bne.n	800f7ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800f71e:	eb03 0c07 	add.w	ip, r3, r7
 800f722:	1ad7      	subs	r7, r2, r3
 800f724:	f1b9 0f00 	cmp.w	r9, #0
 800f728:	d009      	beq.n	800f73e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800f72a:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800f72e:	9029      	str	r0, [sp, #164]	@ 0xa4
 800f730:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800f734:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800f738:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800f73c:	912d      	str	r1, [sp, #180]	@ 0xb4
 800f73e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f740:	9111      	str	r1, [sp, #68]	@ 0x44
 800f742:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f746:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f74a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f74e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f752:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f756:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f75a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f75e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f762:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f766:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f76a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f76e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f772:	f04f 0800 	mov.w	r8, #0
 800f776:	f1be 0f00 	cmp.w	lr, #0
 800f77a:	d031      	beq.n	800f7e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800f77c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800f77e:	4431      	add	r1, r6
 800f780:	4549      	cmp	r1, r9
 800f782:	4450      	add	r0, sl
 800f784:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f788:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f78c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f790:	db08      	blt.n	800f7a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800f792:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f796:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f79a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f79e:	3001      	adds	r0, #1
 800f7a0:	eba1 0109 	sub.w	r1, r1, r9
 800f7a4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f7a8:	f04f 0801 	mov.w	r8, #1
 800f7ac:	e7e3      	b.n	800f776 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800f7ae:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800f7b0:	4431      	add	r1, r6
 800f7b2:	4541      	cmp	r1, r8
 800f7b4:	4450      	add	r0, sl
 800f7b6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f7ba:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f7be:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f7c2:	db08      	blt.n	800f7d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800f7c4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f7c8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f7cc:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f7d0:	3001      	adds	r0, #1
 800f7d2:	eba1 0108 	sub.w	r1, r1, r8
 800f7d6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f7da:	f04f 0901 	mov.w	r9, #1
 800f7de:	e79b      	b.n	800f718 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800f7e0:	449c      	add	ip, r3
 800f7e2:	1aff      	subs	r7, r7, r3
 800f7e4:	f1b8 0f00 	cmp.w	r8, #0
 800f7e8:	d009      	beq.n	800f7fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800f7ea:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f7ee:	9019      	str	r0, [sp, #100]	@ 0x64
 800f7f0:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f7f4:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f7f8:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f7fc:	911d      	str	r1, [sp, #116]	@ 0x74
 800f7fe:	1ad2      	subs	r2, r2, r3
 800f800:	e68b      	b.n	800f51a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f802:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f804:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800f806:	2b00      	cmp	r3, #0
 800f808:	f000 80d1 	beq.w	800f9ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800f80c:	ad19      	add	r5, sp, #100	@ 0x64
 800f80e:	ac39      	add	r4, sp, #228	@ 0xe4
 800f810:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f812:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f816:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f81a:	930c      	str	r3, [sp, #48]	@ 0x30
 800f81c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f81e:	6963      	ldr	r3, [r4, #20]
 800f820:	440b      	add	r3, r1
 800f822:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f826:	4408      	add	r0, r1
 800f828:	b200      	sxth	r0, r0
 800f82a:	4283      	cmp	r3, r0
 800f82c:	900d      	str	r0, [sp, #52]	@ 0x34
 800f82e:	f280 80c1 	bge.w	800f9b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800f832:	428b      	cmp	r3, r1
 800f834:	da08      	bge.n	800f848 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f836:	2a00      	cmp	r2, #0
 800f838:	dd06      	ble.n	800f848 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f83a:	1acb      	subs	r3, r1, r3
 800f83c:	429a      	cmp	r2, r3
 800f83e:	f2c0 80bb 	blt.w	800f9b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800f842:	2b00      	cmp	r3, #0
 800f844:	f300 80b9 	bgt.w	800f9ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800f848:	6967      	ldr	r7, [r4, #20]
 800f84a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f84c:	443b      	add	r3, r7
 800f84e:	461f      	mov	r7, r3
 800f850:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f852:	1bdf      	subs	r7, r3, r7
 800f854:	4297      	cmp	r7, r2
 800f856:	bfa8      	it	ge
 800f858:	4617      	movge	r7, r2
 800f85a:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f85e:	2f00      	cmp	r7, #0
 800f860:	f340 813c 	ble.w	800fadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800f864:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f866:	6829      	ldr	r1, [r5, #0]
 800f868:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f86c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f870:	6820      	ldr	r0, [r4, #0]
 800f872:	4411      	add	r1, r2
 800f874:	4299      	cmp	r1, r3
 800f876:	dd1a      	ble.n	800f8ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f878:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f87c:	440b      	add	r3, r1
 800f87e:	4402      	add	r2, r0
 800f880:	b21b      	sxth	r3, r3
 800f882:	429a      	cmp	r2, r3
 800f884:	dc13      	bgt.n	800f8ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f886:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f888:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f88a:	681b      	ldr	r3, [r3, #0]
 800f88c:	9206      	str	r2, [sp, #24]
 800f88e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f890:	9205      	str	r2, [sp, #20]
 800f892:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f894:	9500      	str	r5, [sp, #0]
 800f896:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f89a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f89c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f89e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f8a2:	a912      	add	r1, sp, #72	@ 0x48
 800f8a4:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f8a8:	aa49      	add	r2, sp, #292	@ 0x124
 800f8aa:	4623      	mov	r3, r4
 800f8ac:	47c8      	blx	r9
 800f8ae:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f8b2:	441a      	add	r2, r3
 800f8b4:	6963      	ldr	r3, [r4, #20]
 800f8b6:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f8ba:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f8be:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f8c2:	68a1      	ldr	r1, [r4, #8]
 800f8c4:	ed94 6a08 	vldr	s12, [r4, #32]
 800f8c8:	6022      	str	r2, [r4, #0]
 800f8ca:	3301      	adds	r3, #1
 800f8cc:	6163      	str	r3, [r4, #20]
 800f8ce:	69a3      	ldr	r3, [r4, #24]
 800f8d0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f8d4:	3b01      	subs	r3, #1
 800f8d6:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f8da:	61a3      	str	r3, [r4, #24]
 800f8dc:	6923      	ldr	r3, [r4, #16]
 800f8de:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f8e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f8e6:	edd4 6a07 	vldr	s13, [r4, #28]
 800f8ea:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f8ee:	440b      	add	r3, r1
 800f8f0:	68e1      	ldr	r1, [r4, #12]
 800f8f2:	6123      	str	r3, [r4, #16]
 800f8f4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f8f8:	428b      	cmp	r3, r1
 800f8fa:	edc4 6a07 	vstr	s13, [r4, #28]
 800f8fe:	db15      	blt.n	800f92c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800f900:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f904:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f908:	3201      	adds	r2, #1
 800f90a:	edc4 6a07 	vstr	s13, [r4, #28]
 800f90e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f912:	6022      	str	r2, [r4, #0]
 800f914:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f918:	1a5b      	subs	r3, r3, r1
 800f91a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f91e:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f922:	6123      	str	r3, [r4, #16]
 800f924:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f928:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f92c:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f930:	441a      	add	r2, r3
 800f932:	696b      	ldr	r3, [r5, #20]
 800f934:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f938:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f93c:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f940:	68a9      	ldr	r1, [r5, #8]
 800f942:	ed95 6a08 	vldr	s12, [r5, #32]
 800f946:	602a      	str	r2, [r5, #0]
 800f948:	3301      	adds	r3, #1
 800f94a:	616b      	str	r3, [r5, #20]
 800f94c:	69ab      	ldr	r3, [r5, #24]
 800f94e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f952:	3b01      	subs	r3, #1
 800f954:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f958:	61ab      	str	r3, [r5, #24]
 800f95a:	692b      	ldr	r3, [r5, #16]
 800f95c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f960:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f964:	edd5 6a07 	vldr	s13, [r5, #28]
 800f968:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f96c:	440b      	add	r3, r1
 800f96e:	68e9      	ldr	r1, [r5, #12]
 800f970:	612b      	str	r3, [r5, #16]
 800f972:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f976:	428b      	cmp	r3, r1
 800f978:	edc5 6a07 	vstr	s13, [r5, #28]
 800f97c:	db15      	blt.n	800f9aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f97e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f982:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f986:	3201      	adds	r2, #1
 800f988:	edc5 6a07 	vstr	s13, [r5, #28]
 800f98c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f990:	602a      	str	r2, [r5, #0]
 800f992:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f996:	1a5b      	subs	r3, r3, r1
 800f998:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f99c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f9a0:	612b      	str	r3, [r5, #16]
 800f9a2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f9a6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f9aa:	3f01      	subs	r7, #1
 800f9ac:	e757      	b.n	800f85e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f9ae:	ad39      	add	r5, sp, #228	@ 0xe4
 800f9b0:	ac19      	add	r4, sp, #100	@ 0x64
 800f9b2:	e72d      	b.n	800f810 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f9b4:	4613      	mov	r3, r2
 800f9b6:	e744      	b.n	800f842 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f9b8:	4613      	mov	r3, r2
 800f9ba:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800f9be:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800f9c0:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800f9c4:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800f9c8:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800f9cc:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800f9d0:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800f9d4:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800f9d8:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800f9dc:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800f9de:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800f9e2:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800f9e6:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800f9ea:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800f9ee:	960e      	str	r6, [sp, #56]	@ 0x38
 800f9f0:	469e      	mov	lr, r3
 800f9f2:	461f      	mov	r7, r3
 800f9f4:	f04f 0900 	mov.w	r9, #0
 800f9f8:	2f00      	cmp	r7, #0
 800f9fa:	d146      	bne.n	800fa8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f9fc:	449c      	add	ip, r3
 800f9fe:	1ad7      	subs	r7, r2, r3
 800fa00:	f1b9 0f00 	cmp.w	r9, #0
 800fa04:	d009      	beq.n	800fa1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800fa06:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800fa0a:	9039      	str	r0, [sp, #228]	@ 0xe4
 800fa0c:	913d      	str	r1, [sp, #244]	@ 0xf4
 800fa0e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800fa12:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800fa16:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800fa1a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800fa1c:	910e      	str	r1, [sp, #56]	@ 0x38
 800fa1e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800fa22:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800fa26:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800fa2a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800fa2e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800fa32:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800fa36:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800fa3a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800fa3e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800fa42:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800fa46:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800fa4a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800fa4e:	f04f 0800 	mov.w	r8, #0
 800fa52:	f1be 0f00 	cmp.w	lr, #0
 800fa56:	d030      	beq.n	800faba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800fa58:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800fa5a:	4431      	add	r1, r6
 800fa5c:	4549      	cmp	r1, r9
 800fa5e:	4450      	add	r0, sl
 800fa60:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fa64:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fa68:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800fa6c:	db08      	blt.n	800fa80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800fa6e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800fa72:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800fa76:	ee37 7a06 	vadd.f32	s14, s14, s12
 800fa7a:	3001      	adds	r0, #1
 800fa7c:	eba1 0109 	sub.w	r1, r1, r9
 800fa80:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fa84:	f04f 0801 	mov.w	r8, #1
 800fa88:	e7e3      	b.n	800fa52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800fa8a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800fa8c:	4431      	add	r1, r6
 800fa8e:	4541      	cmp	r1, r8
 800fa90:	4450      	add	r0, sl
 800fa92:	ee37 7a24 	vadd.f32	s14, s14, s9
 800fa96:	ee77 7a84 	vadd.f32	s15, s15, s8
 800fa9a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800fa9e:	db08      	blt.n	800fab2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800faa0:	ee76 6a85 	vadd.f32	s13, s13, s10
 800faa4:	ee37 7a25 	vadd.f32	s14, s14, s11
 800faa8:	ee77 7a86 	vadd.f32	s15, s15, s12
 800faac:	3001      	adds	r0, #1
 800faae:	eba1 0108 	sub.w	r1, r1, r8
 800fab2:	3f01      	subs	r7, #1
 800fab4:	f04f 0901 	mov.w	r9, #1
 800fab8:	e79e      	b.n	800f9f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800faba:	449c      	add	ip, r3
 800fabc:	1aff      	subs	r7, r7, r3
 800fabe:	f1b8 0f00 	cmp.w	r8, #0
 800fac2:	d009      	beq.n	800fad8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800fac4:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800fac8:	9019      	str	r0, [sp, #100]	@ 0x64
 800faca:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800face:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800fad2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800fad6:	911d      	str	r1, [sp, #116]	@ 0x74
 800fad8:	1ad2      	subs	r2, r2, r3
 800fada:	e6b5      	b.n	800f848 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800fadc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800fade:	681b      	ldr	r3, [r3, #0]
 800fae0:	b923      	cbnz	r3, 800faec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fae2:	4b04      	ldr	r3, [pc, #16]	@ (800faf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800fae4:	6818      	ldr	r0, [r3, #0]
 800fae6:	6803      	ldr	r3, [r0, #0]
 800fae8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800faea:	4798      	blx	r3
 800faec:	b05b      	add	sp, #364	@ 0x16c
 800faee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800faf2:	bf00      	nop
 800faf4:	200157c0 	.word	0x200157c0

0800faf8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800faf8:	b570      	push	{r4, r5, r6, lr}
 800fafa:	4604      	mov	r4, r0
 800fafc:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800fb00:	9805      	ldr	r0, [sp, #20]
 800fb02:	6061      	str	r1, [r4, #4]
 800fb04:	2500      	movs	r5, #0
 800fb06:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800fb0a:	8263      	strh	r3, [r4, #18]
 800fb0c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800fb10:	8025      	strh	r5, [r4, #0]
 800fb12:	7221      	strb	r1, [r4, #8]
 800fb14:	7266      	strb	r6, [r4, #9]
 800fb16:	60e0      	str	r0, [r4, #12]
 800fb18:	8222      	strh	r2, [r4, #16]
 800fb1a:	82a3      	strh	r3, [r4, #20]
 800fb1c:	82e5      	strh	r5, [r4, #22]
 800fb1e:	8325      	strh	r5, [r4, #24]
 800fb20:	8365      	strh	r5, [r4, #26]
 800fb22:	83a5      	strh	r5, [r4, #28]
 800fb24:	83e5      	strh	r5, [r4, #30]
 800fb26:	8425      	strh	r5, [r4, #32]
 800fb28:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800fb2c:	b32e      	cbz	r6, 800fb7a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800fb2e:	6803      	ldr	r3, [r0, #0]
 800fb30:	695b      	ldr	r3, [r3, #20]
 800fb32:	4798      	blx	r3
 800fb34:	4606      	mov	r6, r0
 800fb36:	b300      	cbz	r0, 800fb7a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800fb38:	68e0      	ldr	r0, [r4, #12]
 800fb3a:	6803      	ldr	r3, [r0, #0]
 800fb3c:	4631      	mov	r1, r6
 800fb3e:	68db      	ldr	r3, [r3, #12]
 800fb40:	4798      	blx	r3
 800fb42:	4605      	mov	r5, r0
 800fb44:	b1c8      	cbz	r0, 800fb7a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800fb46:	7b43      	ldrb	r3, [r0, #13]
 800fb48:	7a82      	ldrb	r2, [r0, #10]
 800fb4a:	005b      	lsls	r3, r3, #1
 800fb4c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800fb50:	4313      	orrs	r3, r2
 800fb52:	8423      	strh	r3, [r4, #32]
 800fb54:	7a63      	ldrb	r3, [r4, #9]
 800fb56:	2b06      	cmp	r3, #6
 800fb58:	d10f      	bne.n	800fb7a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800fb5a:	68e0      	ldr	r0, [r4, #12]
 800fb5c:	6803      	ldr	r3, [r0, #0]
 800fb5e:	462a      	mov	r2, r5
 800fb60:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fb62:	4631      	mov	r1, r6
 800fb64:	4798      	blx	r3
 800fb66:	7b6b      	ldrb	r3, [r5, #13]
 800fb68:	005b      	lsls	r3, r3, #1
 800fb6a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800fb6e:	7aab      	ldrb	r3, [r5, #10]
 800fb70:	4313      	orrs	r3, r2
 800fb72:	4418      	add	r0, r3
 800fb74:	8c23      	ldrh	r3, [r4, #32]
 800fb76:	4418      	add	r0, r3
 800fb78:	8420      	strh	r0, [r4, #32]
 800fb7a:	4620      	mov	r0, r4
 800fb7c:	bd70      	pop	{r4, r5, r6, pc}

0800fb7e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800fb7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb82:	2400      	movs	r4, #0
 800fb84:	b085      	sub	sp, #20
 800fb86:	4681      	mov	r9, r0
 800fb88:	4688      	mov	r8, r1
 800fb8a:	4692      	mov	sl, r2
 800fb8c:	469b      	mov	fp, r3
 800fb8e:	4627      	mov	r7, r4
 800fb90:	4625      	mov	r5, r4
 800fb92:	4626      	mov	r6, r4
 800fb94:	4554      	cmp	r4, sl
 800fb96:	da2a      	bge.n	800fbee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800fb98:	2300      	movs	r3, #0
 800fb9a:	9303      	str	r3, [sp, #12]
 800fb9c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800fba0:	429d      	cmp	r5, r3
 800fba2:	d004      	beq.n	800fbae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800fba4:	f242 030b 	movw	r3, #8203	@ 0x200b
 800fba8:	429d      	cmp	r5, r3
 800fbaa:	bf18      	it	ne
 800fbac:	462f      	movne	r7, r5
 800fbae:	ab03      	add	r3, sp, #12
 800fbb0:	4642      	mov	r2, r8
 800fbb2:	4659      	mov	r1, fp
 800fbb4:	4648      	mov	r0, r9
 800fbb6:	f003 fd05 	bl	80135c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fbba:	4605      	mov	r5, r0
 800fbbc:	b1b8      	cbz	r0, 800fbee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800fbbe:	280a      	cmp	r0, #10
 800fbc0:	d015      	beq.n	800fbee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800fbc2:	9a03      	ldr	r2, [sp, #12]
 800fbc4:	b18a      	cbz	r2, 800fbea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800fbc6:	7b50      	ldrb	r0, [r2, #13]
 800fbc8:	7a93      	ldrb	r3, [r2, #10]
 800fbca:	8895      	ldrh	r5, [r2, #4]
 800fbcc:	0040      	lsls	r0, r0, #1
 800fbce:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800fbd2:	4303      	orrs	r3, r0
 800fbd4:	9301      	str	r3, [sp, #4]
 800fbd6:	f8d8 3000 	ldr.w	r3, [r8]
 800fbda:	4639      	mov	r1, r7
 800fbdc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fbde:	4640      	mov	r0, r8
 800fbe0:	4798      	blx	r3
 800fbe2:	9b01      	ldr	r3, [sp, #4]
 800fbe4:	4418      	add	r0, r3
 800fbe6:	4406      	add	r6, r0
 800fbe8:	b2b6      	uxth	r6, r6
 800fbea:	3401      	adds	r4, #1
 800fbec:	e7d2      	b.n	800fb94 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800fbee:	4630      	mov	r0, r6
 800fbf0:	b005      	add	sp, #20
 800fbf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fbf6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800fbf6:	2a02      	cmp	r2, #2
 800fbf8:	b530      	push	{r4, r5, lr}
 800fbfa:	d011      	beq.n	800fc20 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800fbfc:	2a03      	cmp	r2, #3
 800fbfe:	d01c      	beq.n	800fc3a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800fc00:	2a01      	cmp	r2, #1
 800fc02:	d10c      	bne.n	800fc1e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800fc04:	888b      	ldrh	r3, [r1, #4]
 800fc06:	8801      	ldrh	r1, [r0, #0]
 800fc08:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800fc0c:	8844      	ldrh	r4, [r0, #2]
 800fc0e:	8004      	strh	r4, [r0, #0]
 800fc10:	1a5b      	subs	r3, r3, r1
 800fc12:	1a9b      	subs	r3, r3, r2
 800fc14:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800fc18:	8043      	strh	r3, [r0, #2]
 800fc1a:	8081      	strh	r1, [r0, #4]
 800fc1c:	80c2      	strh	r2, [r0, #6]
 800fc1e:	bd30      	pop	{r4, r5, pc}
 800fc20:	88cb      	ldrh	r3, [r1, #6]
 800fc22:	8842      	ldrh	r2, [r0, #2]
 800fc24:	1a9b      	subs	r3, r3, r2
 800fc26:	88c2      	ldrh	r2, [r0, #6]
 800fc28:	1a9b      	subs	r3, r3, r2
 800fc2a:	888a      	ldrh	r2, [r1, #4]
 800fc2c:	8801      	ldrh	r1, [r0, #0]
 800fc2e:	8043      	strh	r3, [r0, #2]
 800fc30:	1a52      	subs	r2, r2, r1
 800fc32:	8881      	ldrh	r1, [r0, #4]
 800fc34:	1a52      	subs	r2, r2, r1
 800fc36:	8002      	strh	r2, [r0, #0]
 800fc38:	e7f1      	b.n	800fc1e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800fc3a:	88cb      	ldrh	r3, [r1, #6]
 800fc3c:	8841      	ldrh	r1, [r0, #2]
 800fc3e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800fc42:	f9b0 5000 	ldrsh.w	r5, [r0]
 800fc46:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800fc4a:	8045      	strh	r5, [r0, #2]
 800fc4c:	1a5b      	subs	r3, r3, r1
 800fc4e:	1a9b      	subs	r3, r3, r2
 800fc50:	8003      	strh	r3, [r0, #0]
 800fc52:	8082      	strh	r2, [r0, #4]
 800fc54:	80c4      	strh	r4, [r0, #6]
 800fc56:	e7e2      	b.n	800fc1e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800fc58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800fc58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc5c:	b09f      	sub	sp, #124	@ 0x7c
 800fc5e:	920f      	str	r2, [sp, #60]	@ 0x3c
 800fc60:	9312      	str	r3, [sp, #72]	@ 0x48
 800fc62:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800fc64:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800fc66:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800fc68:	8812      	ldrh	r2, [r2, #0]
 800fc6a:	889b      	ldrh	r3, [r3, #4]
 800fc6c:	900e      	str	r0, [sp, #56]	@ 0x38
 800fc6e:	4413      	add	r3, r2
 800fc70:	6828      	ldr	r0, [r5, #0]
 800fc72:	9117      	str	r1, [sp, #92]	@ 0x5c
 800fc74:	b21b      	sxth	r3, r3
 800fc76:	9311      	str	r3, [sp, #68]	@ 0x44
 800fc78:	6803      	ldr	r3, [r0, #0]
 800fc7a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800fc7e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800fc80:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 800fc84:	4798      	blx	r3
 800fc86:	682b      	ldr	r3, [r5, #0]
 800fc88:	9013      	str	r0, [sp, #76]	@ 0x4c
 800fc8a:	7b1a      	ldrb	r2, [r3, #12]
 800fc8c:	7adb      	ldrb	r3, [r3, #11]
 800fc8e:	9215      	str	r2, [sp, #84]	@ 0x54
 800fc90:	9316      	str	r3, [sp, #88]	@ 0x58
 800fc92:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800fc96:	2c00      	cmp	r4, #0
 800fc98:	d067      	beq.n	800fd6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800fc9a:	7c2b      	ldrb	r3, [r5, #16]
 800fc9c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800fc9e:	2b06      	cmp	r3, #6
 800fca0:	bf14      	ite	ne
 800fca2:	2301      	movne	r3, #1
 800fca4:	2302      	moveq	r3, #2
 800fca6:	4413      	add	r3, r2
 800fca8:	f04f 0900 	mov.w	r9, #0
 800fcac:	9310      	str	r3, [sp, #64]	@ 0x40
 800fcae:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800fcb2:	464c      	mov	r4, r9
 800fcb4:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 800fcb8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fcba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800fcbc:	4293      	cmp	r3, r2
 800fcbe:	f280 808b 	bge.w	800fdd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800fcc2:	2300      	movs	r3, #0
 800fcc4:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800fcc8:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800fccc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800fcd0:	429c      	cmp	r4, r3
 800fcd2:	d006      	beq.n	800fce2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 800fcd4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800fcd6:	f242 020b 	movw	r2, #8203	@ 0x200b
 800fcda:	4294      	cmp	r4, r2
 800fcdc:	bf18      	it	ne
 800fcde:	4623      	movne	r3, r4
 800fce0:	930c      	str	r3, [sp, #48]	@ 0x30
 800fce2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fce4:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800fce6:	682a      	ldr	r2, [r5, #0]
 800fce8:	428b      	cmp	r3, r1
 800fcea:	db40      	blt.n	800fd6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800fcec:	6813      	ldr	r3, [r2, #0]
 800fcee:	4610      	mov	r0, r2
 800fcf0:	695b      	ldr	r3, [r3, #20]
 800fcf2:	4798      	blx	r3
 800fcf4:	4604      	mov	r4, r0
 800fcf6:	6828      	ldr	r0, [r5, #0]
 800fcf8:	6803      	ldr	r3, [r0, #0]
 800fcfa:	aa1d      	add	r2, sp, #116	@ 0x74
 800fcfc:	689f      	ldr	r7, [r3, #8]
 800fcfe:	4621      	mov	r1, r4
 800fd00:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800fd04:	47b8      	blx	r7
 800fd06:	901c      	str	r0, [sp, #112]	@ 0x70
 800fd08:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800fd0c:	429c      	cmp	r4, r3
 800fd0e:	f000 80ea 	beq.w	800fee6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fd12:	f242 030b 	movw	r3, #8203	@ 0x200b
 800fd16:	429c      	cmp	r4, r3
 800fd18:	f000 80e5 	beq.w	800fee6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fd1c:	2c00      	cmp	r4, #0
 800fd1e:	f000 810c 	beq.w	800ff3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800fd22:	2c0a      	cmp	r4, #10
 800fd24:	d05e      	beq.n	800fde4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800fd26:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800fd28:	b36a      	cbz	r2, 800fd86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800fd2a:	8894      	ldrh	r4, [r2, #4]
 800fd2c:	f1bb 0f00 	cmp.w	fp, #0
 800fd30:	d03a      	beq.n	800fda8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800fd32:	f892 900d 	ldrb.w	r9, [r2, #13]
 800fd36:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800fd3a:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800fd3e:	f892 900a 	ldrb.w	r9, [r2, #10]
 800fd42:	f1bb 0f01 	cmp.w	fp, #1
 800fd46:	ea49 0903 	orr.w	r9, r9, r3
 800fd4a:	d133      	bne.n	800fdb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 800fd4c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800fd4e:	eba6 0609 	sub.w	r6, r6, r9
 800fd52:	2b00      	cmp	r3, #0
 800fd54:	d14d      	bne.n	800fdf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800fd56:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800fd58:	eb09 0306 	add.w	r3, r9, r6
 800fd5c:	4413      	add	r3, r2
 800fd5e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800fd60:	f9b2 2000 	ldrsh.w	r2, [r2]
 800fd64:	4293      	cmp	r3, r2
 800fd66:	da4e      	bge.n	800fe06 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800fd68:	e036      	b.n	800fdd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800fd6a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800fd6c:	e79c      	b.n	800fca8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 800fd6e:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800fd72:	9301      	str	r3, [sp, #4]
 800fd74:	ab1d      	add	r3, sp, #116	@ 0x74
 800fd76:	9300      	str	r3, [sp, #0]
 800fd78:	4659      	mov	r1, fp
 800fd7a:	ab1c      	add	r3, sp, #112	@ 0x70
 800fd7c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800fd7e:	f003 fc6a 	bl	8013656 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800fd82:	4604      	mov	r4, r0
 800fd84:	e7c0      	b.n	800fd08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800fd86:	6828      	ldr	r0, [r5, #0]
 800fd88:	6803      	ldr	r3, [r0, #0]
 800fd8a:	691b      	ldr	r3, [r3, #16]
 800fd8c:	4798      	blx	r3
 800fd8e:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800fd92:	4298      	cmp	r0, r3
 800fd94:	f000 80a7 	beq.w	800fee6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fd98:	f242 030b 	movw	r3, #8203	@ 0x200b
 800fd9c:	4298      	cmp	r0, r3
 800fd9e:	f000 80a2 	beq.w	800fee6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fda2:	f1bb 0f00 	cmp.w	fp, #0
 800fda6:	d100      	bne.n	800fdaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800fda8:	444e      	add	r6, r9
 800fdaa:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800fdac:	2a00      	cmp	r2, #0
 800fdae:	d1c0      	bne.n	800fd32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800fdb0:	4691      	mov	r9, r2
 800fdb2:	e098      	b.n	800fee6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fdb4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800fdb6:	2b00      	cmp	r3, #0
 800fdb8:	f000 80c1 	beq.w	800ff3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 800fdbc:	f1bb 0f00 	cmp.w	fp, #0
 800fdc0:	d117      	bne.n	800fdf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800fdc2:	6828      	ldr	r0, [r5, #0]
 800fdc4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800fdc6:	6803      	ldr	r3, [r0, #0]
 800fdc8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fdca:	4798      	blx	r3
 800fdcc:	4406      	add	r6, r0
 800fdce:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800fdd0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800fdd2:	1af3      	subs	r3, r6, r3
 800fdd4:	4293      	cmp	r3, r2
 800fdd6:	dd16      	ble.n	800fe06 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800fdd8:	2c00      	cmp	r4, #0
 800fdda:	f000 80ae 	beq.w	800ff3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800fdde:	2c0a      	cmp	r4, #10
 800fde0:	f040 809c 	bne.w	800ff1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 800fde4:	240a      	movs	r4, #10
 800fde6:	fab4 f084 	clz	r0, r4
 800fdea:	0940      	lsrs	r0, r0, #5
 800fdec:	b01f      	add	sp, #124	@ 0x7c
 800fdee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fdf2:	6828      	ldr	r0, [r5, #0]
 800fdf4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800fdf6:	6803      	ldr	r3, [r0, #0]
 800fdf8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fdfa:	4798      	blx	r3
 800fdfc:	f1bb 0f01 	cmp.w	fp, #1
 800fe00:	eba6 0600 	sub.w	r6, r6, r0
 800fe04:	d0a7      	beq.n	800fd56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800fe06:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800fe08:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800fe0a:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800fe0e:	f9b3 8000 	ldrsh.w	r8, [r3]
 800fe12:	7b43      	ldrb	r3, [r0, #13]
 800fe14:	015b      	lsls	r3, r3, #5
 800fe16:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800fe1a:	7983      	ldrb	r3, [r0, #6]
 800fe1c:	4431      	add	r1, r6
 800fe1e:	4313      	orrs	r3, r2
 800fe20:	440b      	add	r3, r1
 800fe22:	4543      	cmp	r3, r8
 800fe24:	db5f      	blt.n	800fee6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fe26:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800fe28:	4299      	cmp	r1, r3
 800fe2a:	da5c      	bge.n	800fee6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fe2c:	6828      	ldr	r0, [r5, #0]
 800fe2e:	6803      	ldr	r3, [r0, #0]
 800fe30:	45b0      	cmp	r8, r6
 800fe32:	bfc8      	it	gt
 800fe34:	eba8 0806 	subgt.w	r8, r8, r6
 800fe38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800fe3a:	bfcc      	ite	gt
 800fe3c:	fa1f f888 	uxthgt.w	r8, r8
 800fe40:	f04f 0800 	movle.w	r8, #0
 800fe44:	4798      	blx	r3
 800fe46:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800fe48:	7b53      	ldrb	r3, [r2, #13]
 800fe4a:	00d9      	lsls	r1, r3, #3
 800fe4c:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 800fe50:	7a11      	ldrb	r1, [r2, #8]
 800fe52:	4339      	orrs	r1, r7
 800fe54:	065f      	lsls	r7, r3, #25
 800fe56:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 800fe58:	bf44      	itt	mi
 800fe5a:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800fe5e:	b209      	sxthmi	r1, r1
 800fe60:	19c7      	adds	r7, r0, r7
 800fe62:	1a7f      	subs	r7, r7, r1
 800fe64:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800fe66:	b2bf      	uxth	r7, r7
 800fe68:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800fe6c:	fa0f fa87 	sxth.w	sl, r7
 800fe70:	4551      	cmp	r1, sl
 800fe72:	dd3c      	ble.n	800feee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800fe74:	011b      	lsls	r3, r3, #4
 800fe76:	79d0      	ldrb	r0, [r2, #7]
 800fe78:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800fe7c:	4303      	orrs	r3, r0
 800fe7e:	449a      	add	sl, r3
 800fe80:	4551      	cmp	r1, sl
 800fe82:	dc30      	bgt.n	800fee6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fe84:	1bcf      	subs	r7, r1, r7
 800fe86:	b23f      	sxth	r7, r7
 800fe88:	468a      	mov	sl, r1
 800fe8a:	9219      	str	r2, [sp, #100]	@ 0x64
 800fe8c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800fe8e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800fe90:	6828      	ldr	r0, [r5, #0]
 800fe92:	2a00      	cmp	r2, #0
 800fe94:	d12d      	bne.n	800fef2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800fe96:	9318      	str	r3, [sp, #96]	@ 0x60
 800fe98:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800fe9a:	6819      	ldr	r1, [r3, #0]
 800fe9c:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 800fe9e:	6801      	ldr	r1, [r0, #0]
 800fea0:	9314      	str	r3, [sp, #80]	@ 0x50
 800fea2:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800fea4:	4788      	blx	r1
 800fea6:	79a9      	ldrb	r1, [r5, #6]
 800fea8:	910b      	str	r1, [sp, #44]	@ 0x2c
 800feaa:	7ba9      	ldrb	r1, [r5, #14]
 800feac:	910a      	str	r1, [sp, #40]	@ 0x28
 800feae:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800feb2:	9109      	str	r1, [sp, #36]	@ 0x24
 800feb4:	68a9      	ldr	r1, [r5, #8]
 800feb6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800feb8:	9306      	str	r3, [sp, #24]
 800feba:	b2bf      	uxth	r7, r7
 800febc:	e9cd 8702 	strd	r8, r7, [sp, #8]
 800fec0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800fec2:	9304      	str	r3, [sp, #16]
 800fec4:	44b0      	add	r8, r6
 800fec6:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800feca:	fa0f f388 	sxth.w	r3, r8
 800fece:	9300      	str	r3, [sp, #0]
 800fed0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800fed2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800fed4:	9205      	str	r2, [sp, #20]
 800fed6:	f8cd a004 	str.w	sl, [sp, #4]
 800feda:	681a      	ldr	r2, [r3, #0]
 800fedc:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800fede:	685b      	ldr	r3, [r3, #4]
 800fee0:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800fee2:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 800fee4:	47b8      	blx	r7
 800fee6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fee8:	3301      	adds	r3, #1
 800feea:	930d      	str	r3, [sp, #52]	@ 0x34
 800feec:	e6e4      	b.n	800fcb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 800feee:	2700      	movs	r7, #0
 800fef0:	e7cb      	b.n	800fe8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 800fef2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800fef4:	f8d2 c008 	ldr.w	ip, [r2, #8]
 800fef8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800fefa:	f8dc 1000 	ldr.w	r1, [ip]
 800fefe:	e9cd 6204 	strd	r6, r2, [sp, #16]
 800ff02:	79aa      	ldrb	r2, [r5, #6]
 800ff04:	9203      	str	r2, [sp, #12]
 800ff06:	7baa      	ldrb	r2, [r5, #14]
 800ff08:	9202      	str	r2, [sp, #8]
 800ff0a:	68aa      	ldr	r2, [r5, #8]
 800ff0c:	e9cd 0200 	strd	r0, r2, [sp]
 800ff10:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800ff12:	688f      	ldr	r7, [r1, #8]
 800ff14:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800ff16:	4660      	mov	r0, ip
 800ff18:	47b8      	blx	r7
 800ff1a:	e7e4      	b.n	800fee6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800ff1c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800ff1e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800ff20:	3501      	adds	r5, #1
 800ff22:	429d      	cmp	r5, r3
 800ff24:	f6bf af5f 	bge.w	800fde6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800ff28:	4659      	mov	r1, fp
 800ff2a:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800ff2c:	f7f4 fc7a 	bl	8004824 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ff30:	4604      	mov	r4, r0
 800ff32:	b110      	cbz	r0, 800ff3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800ff34:	280a      	cmp	r0, #10
 800ff36:	d1f2      	bne.n	800ff1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 800ff38:	e754      	b.n	800fde4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800ff3a:	2400      	movs	r4, #0
 800ff3c:	e753      	b.n	800fde6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800ff3e:	f1bb 0f00 	cmp.w	fp, #0
 800ff42:	f43f af44 	beq.w	800fdce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800ff46:	e75e      	b.n	800fe06 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800ff48 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800ff48:	b530      	push	{r4, r5, lr}
 800ff4a:	8ac4      	ldrh	r4, [r0, #22]
 800ff4c:	8b45      	ldrh	r5, [r0, #26]
 800ff4e:	8343      	strh	r3, [r0, #26]
 800ff50:	442c      	add	r4, r5
 800ff52:	1ae4      	subs	r4, r4, r3
 800ff54:	82c4      	strh	r4, [r0, #22]
 800ff56:	8b83      	ldrh	r3, [r0, #28]
 800ff58:	8b04      	ldrh	r4, [r0, #24]
 800ff5a:	4422      	add	r2, r4
 800ff5c:	440c      	add	r4, r1
 800ff5e:	1a59      	subs	r1, r3, r1
 800ff60:	83c2      	strh	r2, [r0, #30]
 800ff62:	8304      	strh	r4, [r0, #24]
 800ff64:	8381      	strh	r1, [r0, #28]
 800ff66:	bd30      	pop	{r4, r5, pc}

0800ff68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800ff68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff6c:	4604      	mov	r4, r0
 800ff6e:	8a47      	ldrh	r7, [r0, #18]
 800ff70:	68c0      	ldr	r0, [r0, #12]
 800ff72:	6803      	ldr	r3, [r0, #0]
 800ff74:	b085      	sub	sp, #20
 800ff76:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ff78:	4798      	blx	r3
 800ff7a:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800ff7e:	7a63      	ldrb	r3, [r4, #9]
 800ff80:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800ff84:	42b7      	cmp	r7, r6
 800ff86:	f103 33ff 	add.w	r3, r3, #4294967295
 800ff8a:	bfac      	ite	ge
 800ff8c:	f04f 0900 	movge.w	r9, #0
 800ff90:	f04f 0901 	movlt.w	r9, #1
 800ff94:	2b05      	cmp	r3, #5
 800ff96:	d804      	bhi.n	800ffa2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 800ff98:	e8df f003 	tbb	[pc, r3]
 800ff9c:	470e0854 	.word	0x470e0854
 800ffa0:	4c4c      	.short	0x4c4c
 800ffa2:	2500      	movs	r5, #0
 800ffa4:	46a9      	mov	r9, r5
 800ffa6:	462e      	mov	r6, r5
 800ffa8:	462f      	mov	r7, r5
 800ffaa:	e00d      	b.n	800ffc8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800ffac:	42b7      	cmp	r7, r6
 800ffae:	bfb4      	ite	lt
 800ffb0:	2600      	movlt	r6, #0
 800ffb2:	2601      	movge	r6, #1
 800ffb4:	2500      	movs	r5, #0
 800ffb6:	e7f7      	b.n	800ffa8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800ffb8:	42b7      	cmp	r7, r6
 800ffba:	464d      	mov	r5, r9
 800ffbc:	f04f 0900 	mov.w	r9, #0
 800ffc0:	bfb4      	ite	lt
 800ffc2:	2600      	movlt	r6, #0
 800ffc4:	2601      	movge	r6, #1
 800ffc6:	464f      	mov	r7, r9
 800ffc8:	f04f 0800 	mov.w	r8, #0
 800ffcc:	f8a4 8016 	strh.w	r8, [r4, #22]
 800ffd0:	f8a4 8018 	strh.w	r8, [r4, #24]
 800ffd4:	f8cd 8004 	str.w	r8, [sp, #4]
 800ffd8:	2300      	movs	r3, #0
 800ffda:	9303      	str	r3, [sp, #12]
 800ffdc:	8823      	ldrh	r3, [r4, #0]
 800ffde:	2b20      	cmp	r3, #32
 800ffe0:	d034      	beq.n	801004c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 800ffe2:	f242 010b 	movw	r1, #8203	@ 0x200b
 800ffe6:	1a5a      	subs	r2, r3, r1
 800ffe8:	f1d2 0a00 	rsbs	sl, r2, #0
 800ffec:	eb4a 0a02 	adc.w	sl, sl, r2
 800fff0:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800fff4:	4293      	cmp	r3, r2
 800fff6:	d009      	beq.n	801000c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800fff8:	428b      	cmp	r3, r1
 800fffa:	9a01      	ldr	r2, [sp, #4]
 800fffc:	bf18      	it	ne
 800fffe:	461a      	movne	r2, r3
 8010000:	9201      	str	r2, [sp, #4]
 8010002:	bf0c      	ite	eq
 8010004:	f04f 0a01 	moveq.w	sl, #1
 8010008:	f04f 0a00 	movne.w	sl, #0
 801000c:	ab03      	add	r3, sp, #12
 801000e:	68e2      	ldr	r2, [r4, #12]
 8010010:	7a21      	ldrb	r1, [r4, #8]
 8010012:	6860      	ldr	r0, [r4, #4]
 8010014:	f003 fad6 	bl	80135c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010018:	8020      	strh	r0, [r4, #0]
 801001a:	b9d8      	cbnz	r0, 8010054 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 801001c:	8ba2      	ldrh	r2, [r4, #28]
 801001e:	2300      	movs	r3, #0
 8010020:	4611      	mov	r1, r2
 8010022:	4620      	mov	r0, r4
 8010024:	f7ff ff90 	bl	800ff48 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010028:	e06e      	b.n	8010108 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801002a:	2500      	movs	r5, #0
 801002c:	46a9      	mov	r9, r5
 801002e:	462e      	mov	r6, r5
 8010030:	2701      	movs	r7, #1
 8010032:	e7c9      	b.n	800ffc8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010034:	42b7      	cmp	r7, r6
 8010036:	f04f 0500 	mov.w	r5, #0
 801003a:	bfb4      	ite	lt
 801003c:	2700      	movlt	r7, #0
 801003e:	2701      	movge	r7, #1
 8010040:	462e      	mov	r6, r5
 8010042:	e7c1      	b.n	800ffc8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010044:	2500      	movs	r5, #0
 8010046:	46a9      	mov	r9, r5
 8010048:	2601      	movs	r6, #1
 801004a:	e7ad      	b.n	800ffa8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801004c:	9301      	str	r3, [sp, #4]
 801004e:	f04f 0a01 	mov.w	sl, #1
 8010052:	e7db      	b.n	801000c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8010054:	8b63      	ldrh	r3, [r4, #26]
 8010056:	280a      	cmp	r0, #10
 8010058:	f103 0301 	add.w	r3, r3, #1
 801005c:	8363      	strh	r3, [r4, #26]
 801005e:	d0dd      	beq.n	801001c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8010060:	9a03      	ldr	r2, [sp, #12]
 8010062:	bb62      	cbnz	r2, 80100be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8010064:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010068:	4298      	cmp	r0, r3
 801006a:	d003      	beq.n	8010074 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801006c:	f242 030b 	movw	r3, #8203	@ 0x200b
 8010070:	4298      	cmp	r0, r3
 8010072:	d1b1      	bne.n	800ffd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010074:	8823      	ldrh	r3, [r4, #0]
 8010076:	8ba1      	ldrh	r1, [r4, #28]
 8010078:	2b20      	cmp	r3, #32
 801007a:	d003      	beq.n	8010084 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 801007c:	f242 000b 	movw	r0, #8203	@ 0x200b
 8010080:	4283      	cmp	r3, r0
 8010082:	d131      	bne.n	80100e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8010084:	f1ba 0f00 	cmp.w	sl, #0
 8010088:	bf0a      	itet	eq
 801008a:	4688      	moveq	r8, r1
 801008c:	4650      	movne	r0, sl
 801008e:	2001      	moveq	r0, #1
 8010090:	440a      	add	r2, r1
 8010092:	8b23      	ldrh	r3, [r4, #24]
 8010094:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8010098:	b292      	uxth	r2, r2
 801009a:	83a2      	strh	r2, [r4, #28]
 801009c:	4413      	add	r3, r2
 801009e:	f1b9 0f00 	cmp.w	r9, #0
 80100a2:	d102      	bne.n	80100aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 80100a4:	2d00      	cmp	r5, #0
 80100a6:	d042      	beq.n	801012e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 80100a8:	b300      	cbz	r0, 80100ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 80100aa:	8c21      	ldrh	r1, [r4, #32]
 80100ac:	4419      	add	r1, r3
 80100ae:	458c      	cmp	ip, r1
 80100b0:	da37      	bge.n	8010122 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80100b2:	8ae1      	ldrh	r1, [r4, #22]
 80100b4:	2900      	cmp	r1, #0
 80100b6:	d034      	beq.n	8010122 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80100b8:	4563      	cmp	r3, ip
 80100ba:	dd8d      	ble.n	800ffd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80100bc:	e01d      	b.n	80100fa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80100be:	8893      	ldrh	r3, [r2, #4]
 80100c0:	8023      	strh	r3, [r4, #0]
 80100c2:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80100c6:	9901      	ldr	r1, [sp, #4]
 80100c8:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80100cc:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 80100d0:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80100d4:	ea4b 0b00 	orr.w	fp, fp, r0
 80100d8:	68e0      	ldr	r0, [r4, #12]
 80100da:	6803      	ldr	r3, [r0, #0]
 80100dc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80100de:	4798      	blx	r3
 80100e0:	eb0b 0200 	add.w	r2, fp, r0
 80100e4:	b292      	uxth	r2, r2
 80100e6:	e7c5      	b.n	8010074 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80100e8:	2000      	movs	r0, #0
 80100ea:	e7d1      	b.n	8010090 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80100ec:	4563      	cmp	r3, ip
 80100ee:	f77f af73 	ble.w	800ffd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80100f2:	8ae3      	ldrh	r3, [r4, #22]
 80100f4:	2b00      	cmp	r3, #0
 80100f6:	f43f af6f 	beq.w	800ffd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80100fa:	2301      	movs	r3, #1
 80100fc:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 8010100:	8c22      	ldrh	r2, [r4, #32]
 8010102:	8be3      	ldrh	r3, [r4, #30]
 8010104:	4413      	add	r3, r2
 8010106:	83e3      	strh	r3, [r4, #30]
 8010108:	68e0      	ldr	r0, [r4, #12]
 801010a:	6803      	ldr	r3, [r0, #0]
 801010c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801010e:	4798      	blx	r3
 8010110:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8010114:	4418      	add	r0, r3
 8010116:	8a63      	ldrh	r3, [r4, #18]
 8010118:	1a18      	subs	r0, r3, r0
 801011a:	8260      	strh	r0, [r4, #18]
 801011c:	b005      	add	sp, #20
 801011e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010122:	2300      	movs	r3, #0
 8010124:	4611      	mov	r1, r2
 8010126:	4620      	mov	r0, r4
 8010128:	f7ff ff0e 	bl	800ff48 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801012c:	e754      	b.n	800ffd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801012e:	4563      	cmp	r3, ip
 8010130:	dd14      	ble.n	801015c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8010132:	b117      	cbz	r7, 801013a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8010134:	2301      	movs	r3, #1
 8010136:	460a      	mov	r2, r1
 8010138:	e772      	b.n	8010020 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801013a:	2e00      	cmp	r6, #0
 801013c:	f43f af4c 	beq.w	800ffd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010140:	2800      	cmp	r0, #0
 8010142:	f47f af49 	bne.w	800ffd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010146:	f1ba 0f00 	cmp.w	sl, #0
 801014a:	d002      	beq.n	8010152 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 801014c:	2301      	movs	r3, #1
 801014e:	4642      	mov	r2, r8
 8010150:	e767      	b.n	8010022 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8010152:	8ae3      	ldrh	r3, [r4, #22]
 8010154:	2b00      	cmp	r3, #0
 8010156:	f43f af3f 	beq.w	800ffd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801015a:	e7d5      	b.n	8010108 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801015c:	2800      	cmp	r0, #0
 801015e:	f47f af3b 	bne.w	800ffd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010162:	f1ba 0f00 	cmp.w	sl, #0
 8010166:	f43f af37 	beq.w	800ffd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801016a:	2301      	movs	r3, #1
 801016c:	4642      	mov	r2, r8
 801016e:	e7da      	b.n	8010126 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08010170 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8010170:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010172:	4605      	mov	r5, r0
 8010174:	b08f      	sub	sp, #60	@ 0x3c
 8010176:	4617      	mov	r7, r2
 8010178:	461c      	mov	r4, r3
 801017a:	460e      	mov	r6, r1
 801017c:	b1d1      	cbz	r1, 80101b4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801017e:	681b      	ldr	r3, [r3, #0]
 8010180:	4620      	mov	r0, r4
 8010182:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010184:	4798      	blx	r3
 8010186:	4240      	negs	r0, r0
 8010188:	b200      	sxth	r0, r0
 801018a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 801018e:	9603      	str	r6, [sp, #12]
 8010190:	9700      	str	r7, [sp, #0]
 8010192:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8010196:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801019a:	4629      	mov	r1, r5
 801019c:	a805      	add	r0, sp, #20
 801019e:	f7ff fcab 	bl	800faf8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80101a2:	2401      	movs	r4, #1
 80101a4:	a805      	add	r0, sp, #20
 80101a6:	f7ff fedf 	bl	800ff68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80101aa:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80101ae:	b163      	cbz	r3, 80101ca <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80101b0:	3401      	adds	r4, #1
 80101b2:	e7f7      	b.n	80101a4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80101b4:	f003 fad4 	bl	8013760 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80101b8:	2401      	movs	r4, #1
 80101ba:	280a      	cmp	r0, #10
 80101bc:	4628      	mov	r0, r5
 80101be:	bf08      	it	eq
 80101c0:	3401      	addeq	r4, #1
 80101c2:	f003 facd 	bl	8013760 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80101c6:	2800      	cmp	r0, #0
 80101c8:	d1f7      	bne.n	80101ba <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80101ca:	b2a0      	uxth	r0, r4
 80101cc:	b00f      	add	sp, #60	@ 0x3c
 80101ce:	bdf0      	pop	{r4, r5, r6, r7, pc}

080101d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80101d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101d4:	b0e3      	sub	sp, #396	@ 0x18c
 80101d6:	461c      	mov	r4, r3
 80101d8:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 80101da:	4683      	mov	fp, r0
 80101dc:	4688      	mov	r8, r1
 80101de:	2b00      	cmp	r3, #0
 80101e0:	f000 8112 	beq.w	8010408 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80101e4:	6823      	ldr	r3, [r4, #0]
 80101e6:	2b00      	cmp	r3, #0
 80101e8:	f000 810e 	beq.w	8010408 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80101ec:	7ba3      	ldrb	r3, [r4, #14]
 80101ee:	2b00      	cmp	r3, #0
 80101f0:	f000 810a 	beq.w	8010408 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80101f4:	6810      	ldr	r0, [r2, #0]
 80101f6:	6851      	ldr	r1, [r2, #4]
 80101f8:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80101fc:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8010200:	ad0a      	add	r5, sp, #40	@ 0x28
 8010202:	462b      	mov	r3, r5
 8010204:	c303      	stmia	r3!, {r0, r1}
 8010206:	2100      	movs	r1, #0
 8010208:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801020c:	910c      	str	r1, [sp, #48]	@ 0x30
 801020e:	79a2      	ldrb	r2, [r4, #6]
 8010210:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8010214:	a90c      	add	r1, sp, #48	@ 0x30
 8010216:	4628      	mov	r0, r5
 8010218:	f7ff fced 	bl	800fbf6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801021c:	a90c      	add	r1, sp, #48	@ 0x30
 801021e:	4608      	mov	r0, r1
 8010220:	79a2      	ldrb	r2, [r4, #6]
 8010222:	f7ff fce8 	bl	800fbf6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010226:	a817      	add	r0, sp, #92	@ 0x5c
 8010228:	f002 fe45 	bl	8012eb6 <_ZN8touchgfx12TextProviderC1Ev>
 801022c:	6820      	ldr	r0, [r4, #0]
 801022e:	6803      	ldr	r3, [r0, #0]
 8010230:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010232:	4798      	blx	r3
 8010234:	4606      	mov	r6, r0
 8010236:	6820      	ldr	r0, [r4, #0]
 8010238:	6803      	ldr	r3, [r0, #0]
 801023a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801023c:	4798      	blx	r3
 801023e:	4633      	mov	r3, r6
 8010240:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8010242:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8010244:	9000      	str	r0, [sp, #0]
 8010246:	a817      	add	r0, sp, #92	@ 0x5c
 8010248:	f002 fe90 	bl	8012f6c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801024c:	6820      	ldr	r0, [r4, #0]
 801024e:	f894 a004 	ldrb.w	sl, [r4, #4]
 8010252:	6803      	ldr	r3, [r0, #0]
 8010254:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010256:	4798      	blx	r3
 8010258:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 801025c:	6823      	ldr	r3, [r4, #0]
 801025e:	4607      	mov	r7, r0
 8010260:	4406      	add	r6, r0
 8010262:	a830      	add	r0, sp, #192	@ 0xc0
 8010264:	f893 9009 	ldrb.w	r9, [r3, #9]
 8010268:	f002 fe25 	bl	8012eb6 <_ZN8touchgfx12TextProviderC1Ev>
 801026c:	7c23      	ldrb	r3, [r4, #16]
 801026e:	b17b      	cbz	r3, 8010290 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8010270:	6820      	ldr	r0, [r4, #0]
 8010272:	6803      	ldr	r3, [r0, #0]
 8010274:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010276:	4798      	blx	r3
 8010278:	9009      	str	r0, [sp, #36]	@ 0x24
 801027a:	6820      	ldr	r0, [r4, #0]
 801027c:	6802      	ldr	r2, [r0, #0]
 801027e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8010280:	4790      	blx	r2
 8010282:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010284:	9000      	str	r0, [sp, #0]
 8010286:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8010288:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801028a:	a830      	add	r0, sp, #192	@ 0xc0
 801028c:	f002 fe6e 	bl	8012f6c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010290:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010294:	7be2      	ldrb	r2, [r4, #15]
 8010296:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801029a:	1a8a      	subs	r2, r1, r2
 801029c:	7c21      	ldrb	r1, [r4, #16]
 801029e:	9103      	str	r1, [sp, #12]
 80102a0:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80102a4:	9102      	str	r1, [sp, #8]
 80102a6:	6821      	ldr	r1, [r4, #0]
 80102a8:	9101      	str	r1, [sp, #4]
 80102aa:	7961      	ldrb	r1, [r4, #5]
 80102ac:	9100      	str	r1, [sp, #0]
 80102ae:	b292      	uxth	r2, r2
 80102b0:	a930      	add	r1, sp, #192	@ 0xc0
 80102b2:	a80e      	add	r0, sp, #56	@ 0x38
 80102b4:	f7ff fc20 	bl	800faf8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80102b8:	2e00      	cmp	r6, #0
 80102ba:	dc5b      	bgt.n	8010374 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80102bc:	af17      	add	r7, sp, #92	@ 0x5c
 80102be:	f04f 0900 	mov.w	r9, #0
 80102c2:	7c23      	ldrb	r3, [r4, #16]
 80102c4:	2b00      	cmp	r3, #0
 80102c6:	f000 80b1 	beq.w	801042c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80102ca:	a80e      	add	r0, sp, #56	@ 0x38
 80102cc:	f7ff fe4c 	bl	800ff68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80102d0:	f1ba 0f00 	cmp.w	sl, #0
 80102d4:	f000 80a5 	beq.w	8010422 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80102d8:	7c23      	ldrb	r3, [r4, #16]
 80102da:	9309      	str	r3, [sp, #36]	@ 0x24
 80102dc:	2264      	movs	r2, #100	@ 0x64
 80102de:	4639      	mov	r1, r7
 80102e0:	a849      	add	r0, sp, #292	@ 0x124
 80102e2:	f014 fc4e 	bl	8024b82 <memcpy>
 80102e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80102e8:	2b00      	cmp	r3, #0
 80102ea:	f000 80a7 	beq.w	801043c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80102ee:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 80102f2:	7922      	ldrb	r2, [r4, #4]
 80102f4:	2a01      	cmp	r2, #1
 80102f6:	f040 808a 	bne.w	801040e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80102fa:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 80102fe:	1ac0      	subs	r0, r0, r3
 8010300:	2302      	movs	r3, #2
 8010302:	fb90 f0f3 	sdiv	r0, r0, r3
 8010306:	b200      	sxth	r0, r0
 8010308:	7c23      	ldrb	r3, [r4, #16]
 801030a:	2b00      	cmp	r3, #0
 801030c:	f000 808b 	beq.w	8010426 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010310:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 8010314:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 8010318:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801031c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010320:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8010324:	4410      	add	r0, r2
 8010326:	b200      	sxth	r0, r0
 8010328:	9000      	str	r0, [sp, #0]
 801032a:	e9cd 9703 	strd	r9, r7, [sp, #12]
 801032e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8010332:	4642      	mov	r2, r8
 8010334:	2100      	movs	r1, #0
 8010336:	4658      	mov	r0, fp
 8010338:	f7ff fc8e 	bl	800fc58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 801033c:	2800      	cmp	r0, #0
 801033e:	d163      	bne.n	8010408 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010340:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010344:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8010348:	b2b2      	uxth	r2, r6
 801034a:	4413      	add	r3, r2
 801034c:	1a8a      	subs	r2, r1, r2
 801034e:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8010352:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 8010356:	b21b      	sxth	r3, r3
 8010358:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801035c:	2a00      	cmp	r2, #0
 801035e:	d153      	bne.n	8010408 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010360:	6822      	ldr	r2, [r4, #0]
 8010362:	8869      	ldrh	r1, [r5, #2]
 8010364:	7a12      	ldrb	r2, [r2, #8]
 8010366:	1a9b      	subs	r3, r3, r2
 8010368:	88ea      	ldrh	r2, [r5, #6]
 801036a:	440a      	add	r2, r1
 801036c:	b212      	sxth	r2, r2
 801036e:	4293      	cmp	r3, r2
 8010370:	dda7      	ble.n	80102c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8010372:	e049      	b.n	8010408 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010374:	7c23      	ldrb	r3, [r4, #16]
 8010376:	444f      	add	r7, r9
 8010378:	b1c3      	cbz	r3, 80103ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801037a:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 801037e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8010382:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010386:	443b      	add	r3, r7
 8010388:	4293      	cmp	r3, r2
 801038a:	da97      	bge.n	80102bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801038c:	a80e      	add	r0, sp, #56	@ 0x38
 801038e:	f7ff fdeb 	bl	800ff68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010392:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 8010396:	3b01      	subs	r3, #1
 8010398:	b29b      	uxth	r3, r3
 801039a:	454b      	cmp	r3, r9
 801039c:	9309      	str	r3, [sp, #36]	@ 0x24
 801039e:	d021      	beq.n	80103e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80103a0:	7961      	ldrb	r1, [r4, #5]
 80103a2:	a817      	add	r0, sp, #92	@ 0x5c
 80103a4:	f7f4 fa3e 	bl	8004824 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80103a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80103aa:	e7f4      	b.n	8010396 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80103ac:	fa1f f986 	uxth.w	r9, r6
 80103b0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80103b4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80103b8:	443b      	add	r3, r7
 80103ba:	4293      	cmp	r3, r2
 80103bc:	f6bf af7e 	bge.w	80102bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80103c0:	a817      	add	r0, sp, #92	@ 0x5c
 80103c2:	f003 f9cd 	bl	8013760 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80103c6:	b1f8      	cbz	r0, 8010408 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80103c8:	280a      	cmp	r0, #10
 80103ca:	d1f1      	bne.n	80103b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80103cc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80103d0:	444b      	add	r3, r9
 80103d2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80103d6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 80103da:	eba3 0309 	sub.w	r3, r3, r9
 80103de:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80103e2:	e7e5      	b.n	80103b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80103e4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 80103e8:	b2b3      	uxth	r3, r6
 80103ea:	441a      	add	r2, r3
 80103ec:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80103f0:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 80103f4:	1ad3      	subs	r3, r2, r3
 80103f6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80103fa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80103fe:	b11b      	cbz	r3, 8010408 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010400:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 8010404:	2b00      	cmp	r3, #0
 8010406:	d0ba      	beq.n	801037e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8010408:	b063      	add	sp, #396	@ 0x18c
 801040a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801040e:	2a02      	cmp	r2, #2
 8010410:	d105      	bne.n	801041e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8010412:	7be2      	ldrb	r2, [r4, #15]
 8010414:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8010418:	1a80      	subs	r0, r0, r2
 801041a:	1ac0      	subs	r0, r0, r3
 801041c:	e773      	b.n	8010306 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 801041e:	2000      	movs	r0, #0
 8010420:	e772      	b.n	8010308 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8010422:	7be0      	ldrb	r0, [r4, #15]
 8010424:	e770      	b.n	8010308 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8010426:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801042a:	e773      	b.n	8010314 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 801042c:	f1ba 0f00 	cmp.w	sl, #0
 8010430:	d0f7      	beq.n	8010422 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8010432:	2264      	movs	r2, #100	@ 0x64
 8010434:	4639      	mov	r1, r7
 8010436:	a849      	add	r0, sp, #292	@ 0x124
 8010438:	f014 fba3 	bl	8024b82 <memcpy>
 801043c:	2300      	movs	r3, #0
 801043e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8010442:	6821      	ldr	r1, [r4, #0]
 8010444:	a849      	add	r0, sp, #292	@ 0x124
 8010446:	f7ff fb9a 	bl	800fb7e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801044a:	b203      	sxth	r3, r0
 801044c:	e751      	b.n	80102f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0801044e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801044e:	2b03      	cmp	r3, #3
 8010450:	d818      	bhi.n	8010484 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8010452:	e8df f003 	tbb	[pc, r3]
 8010456:	0602      	.short	0x0602
 8010458:	130d      	.short	0x130d
 801045a:	f9b0 2000 	ldrsh.w	r2, [r0]
 801045e:	1850      	adds	r0, r2, r1
 8010460:	4770      	bx	lr
 8010462:	8803      	ldrh	r3, [r0, #0]
 8010464:	8880      	ldrh	r0, [r0, #4]
 8010466:	4418      	add	r0, r3
 8010468:	b200      	sxth	r0, r0
 801046a:	1a80      	subs	r0, r0, r2
 801046c:	3801      	subs	r0, #1
 801046e:	4770      	bx	lr
 8010470:	8803      	ldrh	r3, [r0, #0]
 8010472:	8880      	ldrh	r0, [r0, #4]
 8010474:	4418      	add	r0, r3
 8010476:	b200      	sxth	r0, r0
 8010478:	1a40      	subs	r0, r0, r1
 801047a:	e7f7      	b.n	801046c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 801047c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010480:	4410      	add	r0, r2
 8010482:	4770      	bx	lr
 8010484:	2000      	movs	r0, #0
 8010486:	4770      	bx	lr

08010488 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010488:	2b03      	cmp	r3, #3
 801048a:	d817      	bhi.n	80104bc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 801048c:	e8df f003 	tbb	[pc, r3]
 8010490:	10090602 	.word	0x10090602
 8010494:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010498:	1850      	adds	r0, r2, r1
 801049a:	4770      	bx	lr
 801049c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80104a0:	e7fa      	b.n	8010498 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80104a2:	8843      	ldrh	r3, [r0, #2]
 80104a4:	88c0      	ldrh	r0, [r0, #6]
 80104a6:	4418      	add	r0, r3
 80104a8:	b200      	sxth	r0, r0
 80104aa:	1a80      	subs	r0, r0, r2
 80104ac:	3801      	subs	r0, #1
 80104ae:	4770      	bx	lr
 80104b0:	8843      	ldrh	r3, [r0, #2]
 80104b2:	88c0      	ldrh	r0, [r0, #6]
 80104b4:	4418      	add	r0, r3
 80104b6:	b200      	sxth	r0, r0
 80104b8:	1a40      	subs	r0, r0, r1
 80104ba:	e7f7      	b.n	80104ac <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80104bc:	2000      	movs	r0, #0
 80104be:	4770      	bx	lr

080104c0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80104c0:	4b01      	ldr	r3, [pc, #4]	@ (80104c8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80104c2:	2200      	movs	r2, #0
 80104c4:	601a      	str	r2, [r3, #0]
 80104c6:	4770      	bx	lr
 80104c8:	200157d0 	.word	0x200157d0

080104cc <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80104cc:	4603      	mov	r3, r0
 80104ce:	b1c8      	cbz	r0, 8010504 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80104d0:	0c02      	lsrs	r2, r0, #16
 80104d2:	0412      	lsls	r2, r2, #16
 80104d4:	b9a2      	cbnz	r2, 8010500 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80104d6:	0403      	lsls	r3, r0, #16
 80104d8:	2010      	movs	r0, #16
 80104da:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 80104de:	bf04      	itt	eq
 80104e0:	021b      	lsleq	r3, r3, #8
 80104e2:	3008      	addeq	r0, #8
 80104e4:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 80104e8:	bf04      	itt	eq
 80104ea:	011b      	lsleq	r3, r3, #4
 80104ec:	3004      	addeq	r0, #4
 80104ee:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 80104f2:	bf04      	itt	eq
 80104f4:	009b      	lsleq	r3, r3, #2
 80104f6:	3002      	addeq	r0, #2
 80104f8:	2b00      	cmp	r3, #0
 80104fa:	db04      	blt.n	8010506 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80104fc:	3001      	adds	r0, #1
 80104fe:	4770      	bx	lr
 8010500:	2000      	movs	r0, #0
 8010502:	e7ea      	b.n	80104da <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8010504:	2020      	movs	r0, #32
 8010506:	4770      	bx	lr

08010508 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801050c:	b087      	sub	sp, #28
 801050e:	460d      	mov	r5, r1
 8010510:	4616      	mov	r6, r2
 8010512:	4698      	mov	r8, r3
 8010514:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 8010518:	4601      	mov	r1, r0
 801051a:	b120      	cbz	r0, 8010526 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801051c:	b11a      	cbz	r2, 8010526 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801051e:	2d1f      	cmp	r5, #31
 8010520:	d801      	bhi.n	8010526 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8010522:	2b1f      	cmp	r3, #31
 8010524:	d904      	bls.n	8010530 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8010526:	2000      	movs	r0, #0
 8010528:	6038      	str	r0, [r7, #0]
 801052a:	b007      	add	sp, #28
 801052c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010530:	b97d      	cbnz	r5, 8010552 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8010532:	b143      	cbz	r3, 8010546 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8010534:	4602      	mov	r2, r0
 8010536:	e9cd 4700 	strd	r4, r7, [sp]
 801053a:	462b      	mov	r3, r5
 801053c:	4641      	mov	r1, r8
 801053e:	4630      	mov	r0, r6
 8010540:	f7ff ffe2 	bl	8010508 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010544:	e7f1      	b.n	801052a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8010546:	f04f 33ff 	mov.w	r3, #4294967295
 801054a:	603b      	str	r3, [r7, #0]
 801054c:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8010550:	e7eb      	b.n	801052a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8010552:	fa32 fa05 	lsrs.w	sl, r2, r5
 8010556:	d106      	bne.n	8010566 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8010558:	4346      	muls	r6, r0
 801055a:	fbb6 f0f4 	udiv	r0, r6, r4
 801055e:	fb04 6610 	mls	r6, r4, r0, r6
 8010562:	603e      	str	r6, [r7, #0]
 8010564:	e7e1      	b.n	801052a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8010566:	2201      	movs	r2, #1
 8010568:	40aa      	lsls	r2, r5
 801056a:	3a01      	subs	r2, #1
 801056c:	4016      	ands	r6, r2
 801056e:	fa00 fb05 	lsl.w	fp, r0, r5
 8010572:	4630      	mov	r0, r6
 8010574:	fbbb f9f4 	udiv	r9, fp, r4
 8010578:	fb0a f309 	mul.w	r3, sl, r9
 801057c:	9303      	str	r3, [sp, #12]
 801057e:	f7ff ffa5 	bl	80104cc <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010582:	462b      	mov	r3, r5
 8010584:	460a      	mov	r2, r1
 8010586:	e9cd 4700 	strd	r4, r7, [sp]
 801058a:	4601      	mov	r1, r0
 801058c:	4630      	mov	r0, r6
 801058e:	f7ff ffbb 	bl	8010508 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010592:	fb04 b919 	mls	r9, r4, r9, fp
 8010596:	4606      	mov	r6, r0
 8010598:	4648      	mov	r0, r9
 801059a:	eb05 0108 	add.w	r1, r5, r8
 801059e:	f7ff ff95 	bl	80104cc <_ZN8touchgfx16TouchCalibration4clzuEm>
 80105a2:	ab05      	add	r3, sp, #20
 80105a4:	e9cd 4300 	strd	r4, r3, [sp]
 80105a8:	464a      	mov	r2, r9
 80105aa:	4603      	mov	r3, r0
 80105ac:	4650      	mov	r0, sl
 80105ae:	f7ff ffab 	bl	8010508 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80105b2:	6839      	ldr	r1, [r7, #0]
 80105b4:	9a05      	ldr	r2, [sp, #20]
 80105b6:	9b03      	ldr	r3, [sp, #12]
 80105b8:	4411      	add	r1, r2
 80105ba:	fbb1 f2f4 	udiv	r2, r1, r4
 80105be:	18d3      	adds	r3, r2, r3
 80105c0:	441e      	add	r6, r3
 80105c2:	fb04 1412 	mls	r4, r4, r2, r1
 80105c6:	4430      	add	r0, r6
 80105c8:	603c      	str	r4, [r7, #0]
 80105ca:	e7ae      	b.n	801052a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080105cc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80105cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80105d0:	b085      	sub	sp, #20
 80105d2:	f1b0 0900 	subs.w	r9, r0, #0
 80105d6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80105d8:	461d      	mov	r5, r3
 80105da:	bfbf      	itttt	lt
 80105dc:	6823      	ldrlt	r3, [r4, #0]
 80105de:	425b      	neglt	r3, r3
 80105e0:	f1c9 0900 	rsblt	r9, r9, #0
 80105e4:	6023      	strlt	r3, [r4, #0]
 80105e6:	bfb4      	ite	lt
 80105e8:	f04f 36ff 	movlt.w	r6, #4294967295
 80105ec:	2601      	movge	r6, #1
 80105ee:	2a00      	cmp	r2, #0
 80105f0:	4617      	mov	r7, r2
 80105f2:	da04      	bge.n	80105fe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80105f4:	6823      	ldr	r3, [r4, #0]
 80105f6:	425b      	negs	r3, r3
 80105f8:	4257      	negs	r7, r2
 80105fa:	4276      	negs	r6, r6
 80105fc:	6023      	str	r3, [r4, #0]
 80105fe:	2d00      	cmp	r5, #0
 8010600:	4638      	mov	r0, r7
 8010602:	bfba      	itte	lt
 8010604:	426d      	neglt	r5, r5
 8010606:	f04f 38ff 	movlt.w	r8, #4294967295
 801060a:	f04f 0801 	movge.w	r8, #1
 801060e:	f7ff ff5d 	bl	80104cc <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010612:	ab03      	add	r3, sp, #12
 8010614:	e9cd 5300 	strd	r5, r3, [sp]
 8010618:	463a      	mov	r2, r7
 801061a:	4603      	mov	r3, r0
 801061c:	4648      	mov	r0, r9
 801061e:	f7ff ff73 	bl	8010508 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010622:	6823      	ldr	r3, [r4, #0]
 8010624:	9a03      	ldr	r2, [sp, #12]
 8010626:	4546      	cmp	r6, r8
 8010628:	441a      	add	r2, r3
 801062a:	fb92 f3f5 	sdiv	r3, r2, r5
 801062e:	4418      	add	r0, r3
 8010630:	bf18      	it	ne
 8010632:	4240      	negne	r0, r0
 8010634:	fb05 2313 	mls	r3, r5, r3, r2
 8010638:	1c72      	adds	r2, r6, #1
 801063a:	6023      	str	r3, [r4, #0]
 801063c:	d105      	bne.n	801064a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801063e:	2b00      	cmp	r3, #0
 8010640:	f1c3 0200 	rsb	r2, r3, #0
 8010644:	db0b      	blt.n	801065e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8010646:	6022      	str	r2, [r4, #0]
 8010648:	e006      	b.n	8010658 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801064a:	2e01      	cmp	r6, #1
 801064c:	d104      	bne.n	8010658 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801064e:	2b00      	cmp	r3, #0
 8010650:	da02      	bge.n	8010658 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010652:	442b      	add	r3, r5
 8010654:	3801      	subs	r0, #1
 8010656:	6023      	str	r3, [r4, #0]
 8010658:	b005      	add	sp, #20
 801065a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801065e:	3801      	subs	r0, #1
 8010660:	1b52      	subs	r2, r2, r5
 8010662:	e7f0      	b.n	8010646 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08010664 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010664:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010668:	4c1c      	ldr	r4, [pc, #112]	@ (80106dc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801066a:	6807      	ldr	r7, [r0, #0]
 801066c:	69a3      	ldr	r3, [r4, #24]
 801066e:	4605      	mov	r5, r0
 8010670:	b92b      	cbnz	r3, 801067e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8010672:	6840      	ldr	r0, [r0, #4]
 8010674:	e9c5 7000 	strd	r7, r0, [r5]
 8010678:	b004      	add	sp, #16
 801067a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801067e:	68a2      	ldr	r2, [r4, #8]
 8010680:	6820      	ldr	r0, [r4, #0]
 8010682:	ae04      	add	r6, sp, #16
 8010684:	f04f 0802 	mov.w	r8, #2
 8010688:	fb93 f1f8 	sdiv	r1, r3, r8
 801068c:	440a      	add	r2, r1
 801068e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8010692:	69e1      	ldr	r1, [r4, #28]
 8010694:	9600      	str	r6, [sp, #0]
 8010696:	463a      	mov	r2, r7
 8010698:	f7ff ff98 	bl	80105cc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801069c:	69a3      	ldr	r3, [r4, #24]
 801069e:	686a      	ldr	r2, [r5, #4]
 80106a0:	6a21      	ldr	r1, [r4, #32]
 80106a2:	9600      	str	r6, [sp, #0]
 80106a4:	4607      	mov	r7, r0
 80106a6:	6860      	ldr	r0, [r4, #4]
 80106a8:	f7ff ff90 	bl	80105cc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80106ac:	6962      	ldr	r2, [r4, #20]
 80106ae:	69a3      	ldr	r3, [r4, #24]
 80106b0:	fb93 f8f8 	sdiv	r8, r3, r8
 80106b4:	4442      	add	r2, r8
 80106b6:	9203      	str	r2, [sp, #12]
 80106b8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80106ba:	682a      	ldr	r2, [r5, #0]
 80106bc:	9600      	str	r6, [sp, #0]
 80106be:	4407      	add	r7, r0
 80106c0:	68e0      	ldr	r0, [r4, #12]
 80106c2:	f7ff ff83 	bl	80105cc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80106c6:	9600      	str	r6, [sp, #0]
 80106c8:	4680      	mov	r8, r0
 80106ca:	69a3      	ldr	r3, [r4, #24]
 80106cc:	686a      	ldr	r2, [r5, #4]
 80106ce:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 80106d0:	6920      	ldr	r0, [r4, #16]
 80106d2:	f7ff ff7b 	bl	80105cc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80106d6:	4440      	add	r0, r8
 80106d8:	e7cc      	b.n	8010674 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80106da:	bf00      	nop
 80106dc:	200157d4 	.word	0x200157d4

080106e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80106e0:	4b07      	ldr	r3, [pc, #28]	@ (8010700 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80106e2:	781b      	ldrb	r3, [r3, #0]
 80106e4:	2b01      	cmp	r3, #1
 80106e6:	d109      	bne.n	80106fc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80106e8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80106ec:	f9b0 2000 	ldrsh.w	r2, [r0]
 80106f0:	8003      	strh	r3, [r0, #0]
 80106f2:	4b04      	ldr	r3, [pc, #16]	@ (8010704 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80106f4:	881b      	ldrh	r3, [r3, #0]
 80106f6:	3b01      	subs	r3, #1
 80106f8:	1a9b      	subs	r3, r3, r2
 80106fa:	800b      	strh	r3, [r1, #0]
 80106fc:	4770      	bx	lr
 80106fe:	bf00      	nop
 8010700:	200157b8 	.word	0x200157b8
 8010704:	200157b4 	.word	0x200157b4

08010708 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8010708:	b510      	push	{r4, lr}
 801070a:	4b07      	ldr	r3, [pc, #28]	@ (8010728 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 801070c:	781b      	ldrb	r3, [r3, #0]
 801070e:	2b01      	cmp	r3, #1
 8010710:	d108      	bne.n	8010724 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8010712:	4b06      	ldr	r3, [pc, #24]	@ (801072c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8010714:	880c      	ldrh	r4, [r1, #0]
 8010716:	881b      	ldrh	r3, [r3, #0]
 8010718:	f9b0 2000 	ldrsh.w	r2, [r0]
 801071c:	3b01      	subs	r3, #1
 801071e:	1b1b      	subs	r3, r3, r4
 8010720:	8003      	strh	r3, [r0, #0]
 8010722:	800a      	strh	r2, [r1, #0]
 8010724:	bd10      	pop	{r4, pc}
 8010726:	bf00      	nop
 8010728:	200157b8 	.word	0x200157b8
 801072c:	200157b4 	.word	0x200157b4

08010730 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8010730:	b510      	push	{r4, lr}
 8010732:	4b0a      	ldr	r3, [pc, #40]	@ (801075c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8010734:	781b      	ldrb	r3, [r3, #0]
 8010736:	2b01      	cmp	r3, #1
 8010738:	d10e      	bne.n	8010758 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801073a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801073e:	8843      	ldrh	r3, [r0, #2]
 8010740:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010744:	8044      	strh	r4, [r0, #2]
 8010746:	18ca      	adds	r2, r1, r3
 8010748:	4b05      	ldr	r3, [pc, #20]	@ (8010760 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801074a:	881b      	ldrh	r3, [r3, #0]
 801074c:	1a9b      	subs	r3, r3, r2
 801074e:	8003      	strh	r3, [r0, #0]
 8010750:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010754:	80c3      	strh	r3, [r0, #6]
 8010756:	8081      	strh	r1, [r0, #4]
 8010758:	bd10      	pop	{r4, pc}
 801075a:	bf00      	nop
 801075c:	200157b8 	.word	0x200157b8
 8010760:	200157b4 	.word	0x200157b4

08010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010764:	4b08      	ldr	r3, [pc, #32]	@ (8010788 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8010766:	781b      	ldrb	r3, [r3, #0]
 8010768:	2b01      	cmp	r3, #1
 801076a:	d10c      	bne.n	8010786 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 801076c:	8803      	ldrh	r3, [r0, #0]
 801076e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8010772:	8842      	ldrh	r2, [r0, #2]
 8010774:	8002      	strh	r2, [r0, #0]
 8010776:	185a      	adds	r2, r3, r1
 8010778:	4b04      	ldr	r3, [pc, #16]	@ (801078c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801077a:	881b      	ldrh	r3, [r3, #0]
 801077c:	1a9b      	subs	r3, r3, r2
 801077e:	8043      	strh	r3, [r0, #2]
 8010780:	88c3      	ldrh	r3, [r0, #6]
 8010782:	8083      	strh	r3, [r0, #4]
 8010784:	80c1      	strh	r1, [r0, #6]
 8010786:	4770      	bx	lr
 8010788:	200157b8 	.word	0x200157b8
 801078c:	200157b4 	.word	0x200157b4

08010790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010790:	b510      	push	{r4, lr}
 8010792:	4b07      	ldr	r3, [pc, #28]	@ (80107b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010794:	781b      	ldrb	r3, [r3, #0]
 8010796:	2b01      	cmp	r3, #1
 8010798:	d108      	bne.n	80107ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801079a:	f9b1 3000 	ldrsh.w	r3, [r1]
 801079e:	f9b0 4000 	ldrsh.w	r4, [r0]
 80107a2:	8003      	strh	r3, [r0, #0]
 80107a4:	8893      	ldrh	r3, [r2, #4]
 80107a6:	3b01      	subs	r3, #1
 80107a8:	1b1b      	subs	r3, r3, r4
 80107aa:	800b      	strh	r3, [r1, #0]
 80107ac:	bd10      	pop	{r4, pc}
 80107ae:	bf00      	nop
 80107b0:	200157b8 	.word	0x200157b8

080107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80107b4:	b510      	push	{r4, lr}
 80107b6:	4b0a      	ldr	r3, [pc, #40]	@ (80107e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80107b8:	781b      	ldrb	r3, [r3, #0]
 80107ba:	2b01      	cmp	r3, #1
 80107bc:	460a      	mov	r2, r1
 80107be:	d10d      	bne.n	80107dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80107c0:	8881      	ldrh	r1, [r0, #4]
 80107c2:	8803      	ldrh	r3, [r0, #0]
 80107c4:	440b      	add	r3, r1
 80107c6:	4601      	mov	r1, r0
 80107c8:	3b01      	subs	r3, #1
 80107ca:	f821 3b02 	strh.w	r3, [r1], #2
 80107ce:	f7ff ffdf 	bl	8010790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80107d2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80107d6:	88c2      	ldrh	r2, [r0, #6]
 80107d8:	8082      	strh	r2, [r0, #4]
 80107da:	80c3      	strh	r3, [r0, #6]
 80107dc:	bd10      	pop	{r4, pc}
 80107de:	bf00      	nop
 80107e0:	200157b8 	.word	0x200157b8

080107e4 <_ZN8touchgfx11Application13requestRedrawEv>:
 80107e4:	4b06      	ldr	r3, [pc, #24]	@ (8010800 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80107e6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80107ea:	4b06      	ldr	r3, [pc, #24]	@ (8010804 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80107ec:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 80107f0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80107f4:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 80107f8:	2100      	movs	r1, #0
 80107fa:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 80107fe:	4770      	bx	lr
 8010800:	200157b4 	.word	0x200157b4
 8010804:	200157b6 	.word	0x200157b6

08010808 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8010808:	4b03      	ldr	r3, [pc, #12]	@ (8010818 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801080a:	6818      	ldr	r0, [r3, #0]
 801080c:	b110      	cbz	r0, 8010814 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801080e:	6803      	ldr	r3, [r0, #0]
 8010810:	699b      	ldr	r3, [r3, #24]
 8010812:	4718      	bx	r3
 8010814:	4770      	bx	lr
 8010816:	bf00      	nop
 8010818:	20015804 	.word	0x20015804

0801081c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 801081c:	4770      	bx	lr
	...

08010820 <_ZN8touchgfx11Application4drawEv>:
 8010820:	b507      	push	{r0, r1, r2, lr}
 8010822:	4b09      	ldr	r3, [pc, #36]	@ (8010848 <_ZN8touchgfx11Application4drawEv+0x28>)
 8010824:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010828:	4b08      	ldr	r3, [pc, #32]	@ (801084c <_ZN8touchgfx11Application4drawEv+0x2c>)
 801082a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801082e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010832:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010836:	6803      	ldr	r3, [r0, #0]
 8010838:	2100      	movs	r1, #0
 801083a:	9100      	str	r1, [sp, #0]
 801083c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801083e:	4669      	mov	r1, sp
 8010840:	4798      	blx	r3
 8010842:	b003      	add	sp, #12
 8010844:	f85d fb04 	ldr.w	pc, [sp], #4
 8010848:	200157b4 	.word	0x200157b4
 801084c:	200157b6 	.word	0x200157b6

08010850 <_ZN8touchgfx11Application10invalidateEv>:
 8010850:	4b09      	ldr	r3, [pc, #36]	@ (8010878 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8010852:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010856:	4b09      	ldr	r3, [pc, #36]	@ (801087c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8010858:	b082      	sub	sp, #8
 801085a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801085e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010862:	2100      	movs	r1, #0
 8010864:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010868:	9100      	str	r1, [sp, #0]
 801086a:	6803      	ldr	r3, [r0, #0]
 801086c:	aa02      	add	r2, sp, #8
 801086e:	e912 0006 	ldmdb	r2, {r1, r2}
 8010872:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010874:	b002      	add	sp, #8
 8010876:	4718      	bx	r3
 8010878:	200157b4 	.word	0x200157b4
 801087c:	200157b6 	.word	0x200157b6

08010880 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010880:	4b03      	ldr	r3, [pc, #12]	@ (8010890 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010882:	6818      	ldr	r0, [r3, #0]
 8010884:	b110      	cbz	r0, 801088c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010886:	6803      	ldr	r3, [r0, #0]
 8010888:	69db      	ldr	r3, [r3, #28]
 801088a:	4718      	bx	r3
 801088c:	4770      	bx	lr
 801088e:	bf00      	nop
 8010890:	20015804 	.word	0x20015804

08010894 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010894:	4b03      	ldr	r3, [pc, #12]	@ (80108a4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010896:	6818      	ldr	r0, [r3, #0]
 8010898:	b110      	cbz	r0, 80108a0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801089a:	6803      	ldr	r3, [r0, #0]
 801089c:	6a1b      	ldr	r3, [r3, #32]
 801089e:	4718      	bx	r3
 80108a0:	4770      	bx	lr
 80108a2:	bf00      	nop
 80108a4:	20015804 	.word	0x20015804

080108a8 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80108a8:	2300      	movs	r3, #0
 80108aa:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 80108ae:	4770      	bx	lr

080108b0 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80108b0:	4b03      	ldr	r3, [pc, #12]	@ (80108c0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80108b2:	6818      	ldr	r0, [r3, #0]
 80108b4:	b110      	cbz	r0, 80108bc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80108b6:	6803      	ldr	r3, [r0, #0]
 80108b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80108ba:	4718      	bx	r3
 80108bc:	4770      	bx	lr
 80108be:	bf00      	nop
 80108c0:	20015804 	.word	0x20015804

080108c4 <_ZN8touchgfx11ApplicationD1Ev>:
 80108c4:	4770      	bx	lr

080108c6 <_ZN8touchgfx11ApplicationD0Ev>:
 80108c6:	b510      	push	{r4, lr}
 80108c8:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 80108cc:	4604      	mov	r4, r0
 80108ce:	f012 ff45 	bl	802375c <_ZdlPvj>
 80108d2:	4620      	mov	r0, r4
 80108d4:	bd10      	pop	{r4, pc}

080108d6 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80108d6:	b510      	push	{r4, lr}
 80108d8:	f9b1 4000 	ldrsh.w	r4, [r1]
 80108dc:	888a      	ldrh	r2, [r1, #4]
 80108de:	f9b0 3000 	ldrsh.w	r3, [r0]
 80108e2:	4422      	add	r2, r4
 80108e4:	b212      	sxth	r2, r2
 80108e6:	4293      	cmp	r3, r2
 80108e8:	da15      	bge.n	8010916 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80108ea:	8882      	ldrh	r2, [r0, #4]
 80108ec:	4413      	add	r3, r2
 80108ee:	b21b      	sxth	r3, r3
 80108f0:	429c      	cmp	r4, r3
 80108f2:	da10      	bge.n	8010916 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80108f4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80108f8:	88c9      	ldrh	r1, [r1, #6]
 80108fa:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80108fe:	4419      	add	r1, r3
 8010900:	b209      	sxth	r1, r1
 8010902:	428a      	cmp	r2, r1
 8010904:	da07      	bge.n	8010916 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010906:	88c0      	ldrh	r0, [r0, #6]
 8010908:	4410      	add	r0, r2
 801090a:	b200      	sxth	r0, r0
 801090c:	4283      	cmp	r3, r0
 801090e:	bfac      	ite	ge
 8010910:	2000      	movge	r0, #0
 8010912:	2001      	movlt	r0, #1
 8010914:	bd10      	pop	{r4, pc}
 8010916:	2000      	movs	r0, #0
 8010918:	e7fc      	b.n	8010914 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801091a <_ZN8touchgfx4Rect10restrictToEss>:
 801091a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801091e:	2b00      	cmp	r3, #0
 8010920:	b510      	push	{r4, lr}
 8010922:	da04      	bge.n	801092e <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8010924:	8884      	ldrh	r4, [r0, #4]
 8010926:	4423      	add	r3, r4
 8010928:	8083      	strh	r3, [r0, #4]
 801092a:	2300      	movs	r3, #0
 801092c:	8003      	strh	r3, [r0, #0]
 801092e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010932:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010936:	1b09      	subs	r1, r1, r4
 8010938:	428b      	cmp	r3, r1
 801093a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801093e:	bfc8      	it	gt
 8010940:	8081      	strhgt	r1, [r0, #4]
 8010942:	2b00      	cmp	r3, #0
 8010944:	da04      	bge.n	8010950 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8010946:	88c1      	ldrh	r1, [r0, #6]
 8010948:	440b      	add	r3, r1
 801094a:	80c3      	strh	r3, [r0, #6]
 801094c:	2300      	movs	r3, #0
 801094e:	8043      	strh	r3, [r0, #2]
 8010950:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010954:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8010958:	1a52      	subs	r2, r2, r1
 801095a:	4293      	cmp	r3, r2
 801095c:	bfc8      	it	gt
 801095e:	80c2      	strhgt	r2, [r0, #6]
 8010960:	bd10      	pop	{r4, pc}
	...

08010964 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8010964:	b510      	push	{r4, lr}
 8010966:	4b10      	ldr	r3, [pc, #64]	@ (80109a8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8010968:	f9b3 2000 	ldrsh.w	r2, [r3]
 801096c:	4b0f      	ldr	r3, [pc, #60]	@ (80109ac <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801096e:	460c      	mov	r4, r1
 8010970:	4620      	mov	r0, r4
 8010972:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010976:	f7ff ffd0 	bl	801091a <_ZN8touchgfx4Rect10restrictToEss>
 801097a:	4b0d      	ldr	r3, [pc, #52]	@ (80109b0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801097c:	6818      	ldr	r0, [r3, #0]
 801097e:	b190      	cbz	r0, 80109a6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8010980:	6803      	ldr	r3, [r0, #0]
 8010982:	4621      	mov	r1, r4
 8010984:	689b      	ldr	r3, [r3, #8]
 8010986:	4798      	blx	r3
 8010988:	4b0a      	ldr	r3, [pc, #40]	@ (80109b4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801098a:	6818      	ldr	r0, [r3, #0]
 801098c:	b118      	cbz	r0, 8010996 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801098e:	6803      	ldr	r3, [r0, #0]
 8010990:	4621      	mov	r1, r4
 8010992:	689b      	ldr	r3, [r3, #8]
 8010994:	4798      	blx	r3
 8010996:	4b08      	ldr	r3, [pc, #32]	@ (80109b8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8010998:	6818      	ldr	r0, [r3, #0]
 801099a:	6803      	ldr	r3, [r0, #0]
 801099c:	4621      	mov	r1, r4
 801099e:	69db      	ldr	r3, [r3, #28]
 80109a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80109a4:	4718      	bx	r3
 80109a6:	bd10      	pop	{r4, pc}
 80109a8:	200157b6 	.word	0x200157b6
 80109ac:	200157b4 	.word	0x200157b4
 80109b0:	20015804 	.word	0x20015804
 80109b4:	20015800 	.word	0x20015800
 80109b8:	200157c0 	.word	0x200157c0

080109bc <_ZNK8touchgfx4Rect8includesERKS0_>:
 80109bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80109be:	4606      	mov	r6, r0
 80109c0:	4608      	mov	r0, r1
 80109c2:	460f      	mov	r7, r1
 80109c4:	f7fa f9ed 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80109c8:	b9e8      	cbnz	r0, 8010a06 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80109ca:	f9b7 5000 	ldrsh.w	r5, [r7]
 80109ce:	f9b6 4000 	ldrsh.w	r4, [r6]
 80109d2:	42a5      	cmp	r5, r4
 80109d4:	db17      	blt.n	8010a06 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80109d6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80109da:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80109de:	429a      	cmp	r2, r3
 80109e0:	db11      	blt.n	8010a06 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80109e2:	88b9      	ldrh	r1, [r7, #4]
 80109e4:	440d      	add	r5, r1
 80109e6:	88b1      	ldrh	r1, [r6, #4]
 80109e8:	440c      	add	r4, r1
 80109ea:	b22d      	sxth	r5, r5
 80109ec:	b224      	sxth	r4, r4
 80109ee:	42a5      	cmp	r5, r4
 80109f0:	dc09      	bgt.n	8010a06 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80109f2:	88f8      	ldrh	r0, [r7, #6]
 80109f4:	4410      	add	r0, r2
 80109f6:	88f2      	ldrh	r2, [r6, #6]
 80109f8:	4413      	add	r3, r2
 80109fa:	b200      	sxth	r0, r0
 80109fc:	b21b      	sxth	r3, r3
 80109fe:	4298      	cmp	r0, r3
 8010a00:	bfcc      	ite	gt
 8010a02:	2000      	movgt	r0, #0
 8010a04:	2001      	movle	r0, #1
 8010a06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08010a08 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8010a08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010a0a:	4604      	mov	r4, r0
 8010a0c:	4608      	mov	r0, r1
 8010a0e:	460d      	mov	r5, r1
 8010a10:	f7fa f9c7 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a14:	b978      	cbnz	r0, 8010a36 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8010a16:	4620      	mov	r0, r4
 8010a18:	f7fa f9c3 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a1c:	f9b5 6000 	ldrsh.w	r6, [r5]
 8010a20:	b150      	cbz	r0, 8010a38 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8010a22:	8026      	strh	r6, [r4, #0]
 8010a24:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8010a28:	8063      	strh	r3, [r4, #2]
 8010a2a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8010a2e:	80a3      	strh	r3, [r4, #4]
 8010a30:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010a34:	80e3      	strh	r3, [r4, #6]
 8010a36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010a38:	f9b4 1000 	ldrsh.w	r1, [r4]
 8010a3c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010a40:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8010a44:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8010a48:	88ed      	ldrh	r5, [r5, #6]
 8010a4a:	42b1      	cmp	r1, r6
 8010a4c:	460f      	mov	r7, r1
 8010a4e:	bfa8      	it	ge
 8010a50:	4637      	movge	r7, r6
 8010a52:	4293      	cmp	r3, r2
 8010a54:	4618      	mov	r0, r3
 8010a56:	4466      	add	r6, ip
 8010a58:	bfa8      	it	ge
 8010a5a:	4610      	movge	r0, r2
 8010a5c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010a60:	8027      	strh	r7, [r4, #0]
 8010a62:	442a      	add	r2, r5
 8010a64:	88e5      	ldrh	r5, [r4, #6]
 8010a66:	8060      	strh	r0, [r4, #2]
 8010a68:	4461      	add	r1, ip
 8010a6a:	442b      	add	r3, r5
 8010a6c:	b236      	sxth	r6, r6
 8010a6e:	b209      	sxth	r1, r1
 8010a70:	b212      	sxth	r2, r2
 8010a72:	b21b      	sxth	r3, r3
 8010a74:	428e      	cmp	r6, r1
 8010a76:	bfac      	ite	ge
 8010a78:	ebc7 0106 	rsbge	r1, r7, r6
 8010a7c:	ebc7 0101 	rsblt	r1, r7, r1
 8010a80:	429a      	cmp	r2, r3
 8010a82:	bfac      	ite	ge
 8010a84:	ebc0 0202 	rsbge	r2, r0, r2
 8010a88:	ebc0 0203 	rsblt	r2, r0, r3
 8010a8c:	80a1      	strh	r1, [r4, #4]
 8010a8e:	80e2      	strh	r2, [r4, #6]
 8010a90:	e7d1      	b.n	8010a36 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08010a94 <_ZN8touchgfx11Application11getInstanceEv>:
 8010a94:	4b01      	ldr	r3, [pc, #4]	@ (8010a9c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8010a96:	6818      	ldr	r0, [r3, #0]
 8010a98:	4770      	bx	lr
 8010a9a:	bf00      	nop
 8010a9c:	20015814 	.word	0x20015814

08010aa0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8010aa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010aa2:	4b10      	ldr	r3, [pc, #64]	@ (8010ae4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8010aa4:	781b      	ldrb	r3, [r3, #0]
 8010aa6:	4605      	mov	r5, r0
 8010aa8:	b1d3      	cbz	r3, 8010ae0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8010aaa:	4b0f      	ldr	r3, [pc, #60]	@ (8010ae8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8010aac:	4f0f      	ldr	r7, [pc, #60]	@ (8010aec <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8010aae:	881c      	ldrh	r4, [r3, #0]
 8010ab0:	f100 06ee 	add.w	r6, r0, #238	@ 0xee
 8010ab4:	f8b5 312e 	ldrh.w	r3, [r5, #302]	@ 0x12e
 8010ab8:	42a3      	cmp	r3, r4
 8010aba:	d90e      	bls.n	8010ada <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8010abc:	683b      	ldr	r3, [r7, #0]
 8010abe:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8010ac2:	b10a      	cbz	r2, 8010ac8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8010ac4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8010ac6:	b900      	cbnz	r0, 8010aca <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8010ac8:	6898      	ldr	r0, [r3, #8]
 8010aca:	6803      	ldr	r3, [r0, #0]
 8010acc:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8010ad0:	69db      	ldr	r3, [r3, #28]
 8010ad2:	3401      	adds	r4, #1
 8010ad4:	4798      	blx	r3
 8010ad6:	b2a4      	uxth	r4, r4
 8010ad8:	e7ec      	b.n	8010ab4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8010ada:	2300      	movs	r3, #0
 8010adc:	f8a5 312e 	strh.w	r3, [r5, #302]	@ 0x12e
 8010ae0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010ae2:	bf00      	nop
 8010ae4:	200157be 	.word	0x200157be
 8010ae8:	2000008c 	.word	0x2000008c
 8010aec:	200157c0 	.word	0x200157c0

08010af0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8010af0:	b510      	push	{r4, lr}
 8010af2:	2300      	movs	r3, #0
 8010af4:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 8010af8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8010afc:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8010b00:	4604      	mov	r4, r0
 8010b02:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8010b06:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 8010b0a:	429a      	cmp	r2, r3
 8010b0c:	d90e      	bls.n	8010b2c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8010b0e:	18e2      	adds	r2, r4, r3
 8010b10:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 8010b14:	b122      	cbz	r2, 8010b20 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8010b16:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8010b1a:	6803      	ldr	r3, [r0, #0]
 8010b1c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010b1e:	4798      	blx	r3
 8010b20:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8010b24:	3301      	adds	r3, #1
 8010b26:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8010b2a:	e7ea      	b.n	8010b02 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8010b2c:	bd10      	pop	{r4, pc}

08010b2e <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8010b2e:	2300      	movs	r3, #0
 8010b30:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8010b34:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 8010b38:	30a4      	adds	r0, #164	@ 0xa4
 8010b3a:	f802 3b01 	strb.w	r3, [r2], #1
 8010b3e:	4282      	cmp	r2, r0
 8010b40:	d1fb      	bne.n	8010b3a <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8010b42:	4770      	bx	lr

08010b44 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010b44:	b570      	push	{r4, r5, r6, lr}
 8010b46:	4c0b      	ldr	r4, [pc, #44]	@ (8010b74 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010b48:	4605      	mov	r5, r0
 8010b4a:	6820      	ldr	r0, [r4, #0]
 8010b4c:	460e      	mov	r6, r1
 8010b4e:	b110      	cbz	r0, 8010b56 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8010b50:	6803      	ldr	r3, [r0, #0]
 8010b52:	695b      	ldr	r3, [r3, #20]
 8010b54:	4798      	blx	r3
 8010b56:	1d28      	adds	r0, r5, #4
 8010b58:	f7ff ffe9 	bl	8010b2e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8010b5c:	6026      	str	r6, [r4, #0]
 8010b5e:	6833      	ldr	r3, [r6, #0]
 8010b60:	4630      	mov	r0, r6
 8010b62:	68db      	ldr	r3, [r3, #12]
 8010b64:	4798      	blx	r3
 8010b66:	682b      	ldr	r3, [r5, #0]
 8010b68:	4628      	mov	r0, r5
 8010b6a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010b6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b70:	4718      	bx	r3
 8010b72:	bf00      	nop
 8010b74:	20015804 	.word	0x20015804

08010b78 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8010b78:	2300      	movs	r3, #0
 8010b7a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 8010b7e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 8010b82:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010b84:	461a      	mov	r2, r3
 8010b86:	461c      	mov	r4, r3
 8010b88:	461d      	mov	r5, r3
 8010b8a:	459c      	cmp	ip, r3
 8010b8c:	dd1a      	ble.n	8010bc4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8010b8e:	18c6      	adds	r6, r0, r3
 8010b90:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8010b94:	b16e      	cbz	r6, 8010bb2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8010b96:	429a      	cmp	r2, r3
 8010b98:	d008      	beq.n	8010bac <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8010b9a:	fa1f fe82 	uxth.w	lr, r2
 8010b9e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8010ba2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8010ba6:	1887      	adds	r7, r0, r2
 8010ba8:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 8010bac:	3201      	adds	r2, #1
 8010bae:	3301      	adds	r3, #1
 8010bb0:	e7eb      	b.n	8010b8a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8010bb2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 8010bb6:	4299      	cmp	r1, r3
 8010bb8:	bfa8      	it	ge
 8010bba:	3501      	addge	r5, #1
 8010bbc:	429e      	cmp	r6, r3
 8010bbe:	bfc8      	it	gt
 8010bc0:	3401      	addgt	r4, #1
 8010bc2:	e7f4      	b.n	8010bae <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8010bc4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 8010bc8:	1b49      	subs	r1, r1, r5
 8010bca:	1b1b      	subs	r3, r3, r4
 8010bcc:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 8010bd0:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8010bd4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8010bd8:	4293      	cmp	r3, r2
 8010bda:	dd03      	ble.n	8010be4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8010bdc:	3b01      	subs	r3, #1
 8010bde:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8010be2:	e7f7      	b.n	8010bd4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8010be4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08010be8 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010be8:	b570      	push	{r4, r5, r6, lr}
 8010bea:	4d16      	ldr	r5, [pc, #88]	@ (8010c44 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8010bec:	4604      	mov	r4, r0
 8010bee:	6828      	ldr	r0, [r5, #0]
 8010bf0:	b140      	cbz	r0, 8010c04 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010bf2:	7a03      	ldrb	r3, [r0, #8]
 8010bf4:	b933      	cbnz	r3, 8010c04 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010bf6:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8010bfa:	6803      	ldr	r3, [r0, #0]
 8010bfc:	689b      	ldr	r3, [r3, #8]
 8010bfe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c02:	4718      	bx	r3
 8010c04:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 8010c08:	4e0f      	ldr	r6, [pc, #60]	@ (8010c48 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8010c0a:	b973      	cbnz	r3, 8010c2a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010c0c:	b168      	cbz	r0, 8010c2a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010c0e:	7a03      	ldrb	r3, [r0, #8]
 8010c10:	b15b      	cbz	r3, 8010c2a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010c12:	6830      	ldr	r0, [r6, #0]
 8010c14:	b110      	cbz	r0, 8010c1c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010c16:	6803      	ldr	r3, [r0, #0]
 8010c18:	691b      	ldr	r3, [r3, #16]
 8010c1a:	4798      	blx	r3
 8010c1c:	6828      	ldr	r0, [r5, #0]
 8010c1e:	6803      	ldr	r3, [r0, #0]
 8010c20:	68db      	ldr	r3, [r3, #12]
 8010c22:	4798      	blx	r3
 8010c24:	2301      	movs	r3, #1
 8010c26:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8010c2a:	3404      	adds	r4, #4
 8010c2c:	4620      	mov	r0, r4
 8010c2e:	f7ff ff5f 	bl	8010af0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8010c32:	4620      	mov	r0, r4
 8010c34:	f7ff ffa0 	bl	8010b78 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8010c38:	6830      	ldr	r0, [r6, #0]
 8010c3a:	b110      	cbz	r0, 8010c42 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8010c3c:	6803      	ldr	r3, [r0, #0]
 8010c3e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010c40:	e7dd      	b.n	8010bfe <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8010c42:	bd70      	pop	{r4, r5, r6, pc}
 8010c44:	20015808 	.word	0x20015808
 8010c48:	20015804 	.word	0x20015804

08010c4c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8010c4c:	4603      	mov	r3, r0
 8010c4e:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 8010c52:	2200      	movs	r2, #0
 8010c54:	801a      	strh	r2, [r3, #0]
 8010c56:	805a      	strh	r2, [r3, #2]
 8010c58:	809a      	strh	r2, [r3, #4]
 8010c5a:	80da      	strh	r2, [r3, #6]
 8010c5c:	3308      	adds	r3, #8
 8010c5e:	428b      	cmp	r3, r1
 8010c60:	d1f8      	bne.n	8010c54 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8010c62:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 8010c66:	4770      	bx	lr

08010c68 <_ZN8touchgfx11ApplicationC1Ev>:
 8010c68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010c6a:	4606      	mov	r6, r0
 8010c6c:	4b1c      	ldr	r3, [pc, #112]	@ (8010ce0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8010c6e:	f846 3b04 	str.w	r3, [r6], #4
 8010c72:	4604      	mov	r4, r0
 8010c74:	2500      	movs	r5, #0
 8010c76:	22a8      	movs	r2, #168	@ 0xa8
 8010c78:	2100      	movs	r1, #0
 8010c7a:	4630      	mov	r0, r6
 8010c7c:	f013 feb1 	bl	80249e2 <memset>
 8010c80:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8010c84:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8010c88:	f7ff ffe0 	bl	8010c4c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010c8c:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8010c90:	f7ff ffdc 	bl	8010c4c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010c94:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 8010c98:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 8010c9c:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 8010ca0:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8010ca4:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8010ca8:	490e      	ldr	r1, [pc, #56]	@ (8010ce4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8010caa:	480f      	ldr	r0, [pc, #60]	@ (8010ce8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8010cac:	4f0f      	ldr	r7, [pc, #60]	@ (8010cec <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8010cae:	f011 fec1 	bl	8022a34 <CRC_Lock>
 8010cb2:	4b0f      	ldr	r3, [pc, #60]	@ (8010cf0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8010cb4:	b158      	cbz	r0, 8010cce <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8010cb6:	801d      	strh	r5, [r3, #0]
 8010cb8:	4a0e      	ldr	r2, [pc, #56]	@ (8010cf4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8010cba:	2300      	movs	r3, #0
 8010cbc:	6013      	str	r3, [r2, #0]
 8010cbe:	4a0e      	ldr	r2, [pc, #56]	@ (8010cf8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8010cc0:	603b      	str	r3, [r7, #0]
 8010cc2:	4630      	mov	r0, r6
 8010cc4:	6013      	str	r3, [r2, #0]
 8010cc6:	f7ff ff32 	bl	8010b2e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8010cca:	4620      	mov	r0, r4
 8010ccc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010cce:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8010cd2:	2002      	movs	r0, #2
 8010cd4:	801a      	strh	r2, [r3, #0]
 8010cd6:	6038      	str	r0, [r7, #0]
 8010cd8:	f001 ff40 	bl	8012b5c <_ZN8touchgfx6Screen4drawEv>
 8010cdc:	e7ec      	b.n	8010cb8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8010cde:	bf00      	nop
 8010ce0:	080279f0 	.word	0x080279f0
 8010ce4:	b5e8b5cd 	.word	0xb5e8b5cd
 8010ce8:	f407a5c2 	.word	0xf407a5c2
 8010cec:	20015804 	.word	0x20015804
 8010cf0:	2000008c 	.word	0x2000008c
 8010cf4:	20015814 	.word	0x20015814
 8010cf8:	20015808 	.word	0x20015808

08010cfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8010cfc:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 8010d00:	3b01      	subs	r3, #1
 8010d02:	b29b      	uxth	r3, r3
 8010d04:	428b      	cmp	r3, r1
 8010d06:	b510      	push	{r4, lr}
 8010d08:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 8010d0c:	d908      	bls.n	8010d20 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8010d0e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8010d12:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8010d16:	681a      	ldr	r2, [r3, #0]
 8010d18:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010d1c:	685a      	ldr	r2, [r3, #4]
 8010d1e:	6062      	str	r2, [r4, #4]
 8010d20:	bd10      	pop	{r4, pc}
	...

08010d24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8010d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d28:	4b92      	ldr	r3, [pc, #584]	@ (8010f74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 8010d2a:	b08f      	sub	sp, #60	@ 0x3c
 8010d2c:	ac0a      	add	r4, sp, #40	@ 0x28
 8010d2e:	e884 0006 	stmia.w	r4, {r1, r2}
 8010d32:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010d36:	4b90      	ldr	r3, [pc, #576]	@ (8010f78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 8010d38:	4683      	mov	fp, r0
 8010d3a:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010d3e:	4620      	mov	r0, r4
 8010d40:	f7ff fdeb 	bl	801091a <_ZN8touchgfx4Rect10restrictToEss>
 8010d44:	4620      	mov	r0, r4
 8010d46:	f7fa f82c 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010d4a:	2800      	cmp	r0, #0
 8010d4c:	d170      	bne.n	8010e30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8010d4e:	4b8b      	ldr	r3, [pc, #556]	@ (8010f7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8010d50:	681b      	ldr	r3, [r3, #0]
 8010d52:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8010d56:	2b02      	cmp	r3, #2
 8010d58:	d06a      	beq.n	8010e30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8010d5a:	9403      	str	r4, [sp, #12]
 8010d5c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8010d60:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8010d64:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8010d68:	35a4      	adds	r5, #164	@ 0xa4
 8010d6a:	9301      	str	r3, [sp, #4]
 8010d6c:	b15c      	cbz	r4, 8010d86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 8010d6e:	4629      	mov	r1, r5
 8010d70:	9803      	ldr	r0, [sp, #12]
 8010d72:	f7ff fe23 	bl	80109bc <_ZNK8touchgfx4Rect8includesERKS0_>
 8010d76:	3c01      	subs	r4, #1
 8010d78:	b118      	cbz	r0, 8010d82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 8010d7a:	b2a1      	uxth	r1, r4
 8010d7c:	9801      	ldr	r0, [sp, #4]
 8010d7e:	f7ff ffbd 	bl	8010cfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010d82:	3d08      	subs	r5, #8
 8010d84:	e7f2      	b.n	8010d6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 8010d86:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 8010d8a:	f8cd a010 	str.w	sl, [sp, #16]
 8010d8e:	f10a 33ff 	add.w	r3, sl, #4294967295
 8010d92:	9302      	str	r3, [sp, #8]
 8010d94:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8010d98:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8010d9c:	9306      	str	r3, [sp, #24]
 8010d9e:	445c      	add	r4, fp
 8010da0:	2500      	movs	r5, #0
 8010da2:	4626      	mov	r6, r4
 8010da4:	f8cd a014 	str.w	sl, [sp, #20]
 8010da8:	462f      	mov	r7, r5
 8010daa:	9b05      	ldr	r3, [sp, #20]
 8010dac:	2b00      	cmp	r3, #0
 8010dae:	d073      	beq.n	8010e98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 8010db0:	9903      	ldr	r1, [sp, #12]
 8010db2:	4630      	mov	r0, r6
 8010db4:	f7ff fd8f 	bl	80108d6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010db8:	b350      	cbz	r0, 8010e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 8010dba:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 8010dbe:	f9b6 c000 	ldrsh.w	ip, [r6]
 8010dc2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8010dc6:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8010dca:	45e6      	cmp	lr, ip
 8010dcc:	db33      	blt.n	8010e36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 8010dce:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8010dd2:	88b3      	ldrh	r3, [r6, #4]
 8010dd4:	4472      	add	r2, lr
 8010dd6:	4463      	add	r3, ip
 8010dd8:	b212      	sxth	r2, r2
 8010dda:	b21b      	sxth	r3, r3
 8010ddc:	429a      	cmp	r2, r3
 8010dde:	dc2a      	bgt.n	8010e36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 8010de0:	88f3      	ldrh	r3, [r6, #6]
 8010de2:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8010de6:	fa1f f289 	uxth.w	r2, r9
 8010dea:	4413      	add	r3, r2
 8010dec:	b29b      	uxth	r3, r3
 8010dee:	45c8      	cmp	r8, r9
 8010df0:	fa1f fc88 	uxth.w	ip, r8
 8010df4:	fa0f fe83 	sxth.w	lr, r3
 8010df8:	db0f      	blt.n	8010e1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 8010dfa:	eba3 030c 	sub.w	r3, r3, ip
 8010dfe:	1ac9      	subs	r1, r1, r3
 8010e00:	b209      	sxth	r1, r1
 8010e02:	2900      	cmp	r1, #0
 8010e04:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010e08:	dd12      	ble.n	8010e30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8010e0a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 8010e0e:	4605      	mov	r5, r0
 8010e10:	9b05      	ldr	r3, [sp, #20]
 8010e12:	3b01      	subs	r3, #1
 8010e14:	9305      	str	r3, [sp, #20]
 8010e16:	3e08      	subs	r6, #8
 8010e18:	e7c7      	b.n	8010daa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 8010e1a:	4461      	add	r1, ip
 8010e1c:	b209      	sxth	r1, r1
 8010e1e:	4571      	cmp	r1, lr
 8010e20:	dc38      	bgt.n	8010e94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 8010e22:	eba2 020c 	sub.w	r2, r2, ip
 8010e26:	b212      	sxth	r2, r2
 8010e28:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010e2c:	2a00      	cmp	r2, #0
 8010e2e:	dcee      	bgt.n	8010e0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8010e30:	b00f      	add	sp, #60	@ 0x3c
 8010e32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e36:	45c8      	cmp	r8, r9
 8010e38:	db2c      	blt.n	8010e94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 8010e3a:	88f3      	ldrh	r3, [r6, #6]
 8010e3c:	4499      	add	r9, r3
 8010e3e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8010e42:	4498      	add	r8, r3
 8010e44:	fa0f f989 	sxth.w	r9, r9
 8010e48:	fa0f f888 	sxth.w	r8, r8
 8010e4c:	45c1      	cmp	r9, r8
 8010e4e:	db21      	blt.n	8010e94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 8010e50:	88b3      	ldrh	r3, [r6, #4]
 8010e52:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8010e56:	fa1f f28c 	uxth.w	r2, ip
 8010e5a:	4413      	add	r3, r2
 8010e5c:	b29b      	uxth	r3, r3
 8010e5e:	45e6      	cmp	lr, ip
 8010e60:	fa1f f88e 	uxth.w	r8, lr
 8010e64:	fa0f f983 	sxth.w	r9, r3
 8010e68:	db0a      	blt.n	8010e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 8010e6a:	eba3 0308 	sub.w	r3, r3, r8
 8010e6e:	1ac9      	subs	r1, r1, r3
 8010e70:	b209      	sxth	r1, r1
 8010e72:	2900      	cmp	r1, #0
 8010e74:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8010e78:	ddda      	ble.n	8010e30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8010e7a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8010e7e:	e7c6      	b.n	8010e0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8010e80:	4441      	add	r1, r8
 8010e82:	b209      	sxth	r1, r1
 8010e84:	4549      	cmp	r1, r9
 8010e86:	dc05      	bgt.n	8010e94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 8010e88:	eba2 0208 	sub.w	r2, r2, r8
 8010e8c:	b212      	sxth	r2, r2
 8010e8e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8010e92:	e7cb      	b.n	8010e2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 8010e94:	4607      	mov	r7, r0
 8010e96:	e7bb      	b.n	8010e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 8010e98:	2d00      	cmp	r5, #0
 8010e9a:	d181      	bne.n	8010da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 8010e9c:	2f00      	cmp	r7, #0
 8010e9e:	f000 81df 	beq.w	8011260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8010ea2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8010ea6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 8010eaa:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 8010eae:	b2b3      	uxth	r3, r6
 8010eb0:	9305      	str	r3, [sp, #20]
 8010eb2:	9a05      	ldr	r2, [sp, #20]
 8010eb4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8010eb8:	4413      	add	r3, r2
 8010eba:	b2ba      	uxth	r2, r7
 8010ebc:	4492      	add	sl, r2
 8010ebe:	b29b      	uxth	r3, r3
 8010ec0:	fa1f fa8a 	uxth.w	sl, sl
 8010ec4:	fa0f f883 	sxth.w	r8, r3
 8010ec8:	fa0f f98a 	sxth.w	r9, sl
 8010ecc:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8010ed0:	9b04      	ldr	r3, [sp, #16]
 8010ed2:	2b00      	cmp	r3, #0
 8010ed4:	d054      	beq.n	8010f80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 8010ed6:	9903      	ldr	r1, [sp, #12]
 8010ed8:	4620      	mov	r0, r4
 8010eda:	f7ff fcfc 	bl	80108d6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010ede:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8010ee2:	b1c0      	cbz	r0, 8010f16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8010ee4:	f9b4 e000 	ldrsh.w	lr, [r4]
 8010ee8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010eec:	4576      	cmp	r6, lr
 8010eee:	dc22      	bgt.n	8010f36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 8010ef0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010ef4:	44f4      	add	ip, lr
 8010ef6:	fa0f fc8c 	sxth.w	ip, ip
 8010efa:	45e0      	cmp	r8, ip
 8010efc:	db1b      	blt.n	8010f36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 8010efe:	428f      	cmp	r7, r1
 8010f00:	fa1f fc81 	uxth.w	ip, r1
 8010f04:	88e1      	ldrh	r1, [r4, #6]
 8010f06:	dc0d      	bgt.n	8010f24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 8010f08:	ebaa 0c0c 	sub.w	ip, sl, ip
 8010f0c:	eba1 010c 	sub.w	r1, r1, ip
 8010f10:	f8a4 9002 	strh.w	r9, [r4, #2]
 8010f14:	80e1      	strh	r1, [r4, #6]
 8010f16:	4628      	mov	r0, r5
 8010f18:	9904      	ldr	r1, [sp, #16]
 8010f1a:	3901      	subs	r1, #1
 8010f1c:	9104      	str	r1, [sp, #16]
 8010f1e:	3c08      	subs	r4, #8
 8010f20:	4605      	mov	r5, r0
 8010f22:	e7d3      	b.n	8010ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 8010f24:	4461      	add	r1, ip
 8010f26:	b209      	sxth	r1, r1
 8010f28:	4549      	cmp	r1, r9
 8010f2a:	dcf5      	bgt.n	8010f18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010f2c:	eba2 0c0c 	sub.w	ip, r2, ip
 8010f30:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010f34:	e7ef      	b.n	8010f16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8010f36:	428f      	cmp	r7, r1
 8010f38:	dcee      	bgt.n	8010f18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010f3a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8010f3e:	4461      	add	r1, ip
 8010f40:	b209      	sxth	r1, r1
 8010f42:	4589      	cmp	r9, r1
 8010f44:	dbe8      	blt.n	8010f18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010f46:	4576      	cmp	r6, lr
 8010f48:	fa1f fc8e 	uxth.w	ip, lr
 8010f4c:	88a1      	ldrh	r1, [r4, #4]
 8010f4e:	dc07      	bgt.n	8010f60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 8010f50:	eba3 0c0c 	sub.w	ip, r3, ip
 8010f54:	eba1 010c 	sub.w	r1, r1, ip
 8010f58:	f8a4 8000 	strh.w	r8, [r4]
 8010f5c:	80a1      	strh	r1, [r4, #4]
 8010f5e:	e7da      	b.n	8010f16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8010f60:	4461      	add	r1, ip
 8010f62:	b209      	sxth	r1, r1
 8010f64:	4588      	cmp	r8, r1
 8010f66:	dbd7      	blt.n	8010f18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010f68:	9905      	ldr	r1, [sp, #20]
 8010f6a:	eba1 0c0c 	sub.w	ip, r1, ip
 8010f6e:	f8a4 c004 	strh.w	ip, [r4, #4]
 8010f72:	e7d0      	b.n	8010f16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8010f74:	200157b6 	.word	0x200157b6
 8010f78:	200157b4 	.word	0x200157b4
 8010f7c:	200157c0 	.word	0x200157c0
 8010f80:	2d00      	cmp	r5, #0
 8010f82:	f000 816d 	beq.w	8011260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8010f86:	9b06      	ldr	r3, [sp, #24]
 8010f88:	445b      	add	r3, fp
 8010f8a:	461c      	mov	r4, r3
 8010f8c:	9b02      	ldr	r3, [sp, #8]
 8010f8e:	3301      	adds	r3, #1
 8010f90:	f000 8166 	beq.w	8011260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8010f94:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 8010f98:	4629      	mov	r1, r5
 8010f9a:	9803      	ldr	r0, [sp, #12]
 8010f9c:	f7ff fd0e 	bl	80109bc <_ZNK8touchgfx4Rect8includesERKS0_>
 8010fa0:	b120      	cbz	r0, 8010fac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 8010fa2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8010fa6:	9801      	ldr	r0, [sp, #4]
 8010fa8:	f7ff fea8 	bl	8010cfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010fac:	9903      	ldr	r1, [sp, #12]
 8010fae:	4628      	mov	r0, r5
 8010fb0:	f7ff fc91 	bl	80108d6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010fb4:	2800      	cmp	r0, #0
 8010fb6:	f000 809c 	beq.w	80110f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 8010fba:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 8010fbe:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8010fc2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010fc6:	9309      	str	r3, [sp, #36]	@ 0x24
 8010fc8:	fa1f f189 	uxth.w	r1, r9
 8010fcc:	eb01 0c03 	add.w	ip, r1, r3
 8010fd0:	fa1f fa8c 	uxth.w	sl, ip
 8010fd4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8010fd8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8010fdc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 8010fe0:	b283      	uxth	r3, r0
 8010fe2:	eb03 050c 	add.w	r5, r3, ip
 8010fe6:	b2ad      	uxth	r5, r5
 8010fe8:	9505      	str	r5, [sp, #20]
 8010fea:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8010fee:	9504      	str	r5, [sp, #16]
 8010ff0:	4548      	cmp	r0, r9
 8010ff2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8010ff6:	f340 8099 	ble.w	801112c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 8010ffa:	1a5b      	subs	r3, r3, r1
 8010ffc:	b29b      	uxth	r3, r3
 8010ffe:	4596      	cmp	lr, r2
 8011000:	fa0f f08a 	sxth.w	r0, sl
 8011004:	b21e      	sxth	r6, r3
 8011006:	dd2e      	ble.n	8011066 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 8011008:	9f02      	ldr	r7, [sp, #8]
 801100a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 801100e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011012:	9f04      	ldr	r7, [sp, #16]
 8011014:	1a3f      	subs	r7, r7, r0
 8011016:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 801101a:	fa1f fe8e 	uxth.w	lr, lr
 801101e:	b292      	uxth	r2, r2
 8011020:	ebae 0102 	sub.w	r1, lr, r2
 8011024:	44a6      	add	lr, r4
 8011026:	4402      	add	r2, r0
 8011028:	b289      	uxth	r1, r1
 801102a:	fa0f fe8e 	sxth.w	lr, lr
 801102e:	b212      	sxth	r2, r2
 8011030:	b20d      	sxth	r5, r1
 8011032:	ebae 0202 	sub.w	r2, lr, r2
 8011036:	436f      	muls	r7, r5
 8011038:	4372      	muls	r2, r6
 801103a:	4297      	cmp	r7, r2
 801103c:	db09      	blt.n	8011052 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 801103e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 8011042:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 8011046:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801104a:	449c      	add	ip, r3
 801104c:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8011050:	e684      	b.n	8010d5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8011052:	4421      	add	r1, r4
 8011054:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 8011058:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 801105c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8011060:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8011064:	e67a      	b.n	8010d5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8011066:	9f04      	ldr	r7, [sp, #16]
 8011068:	42b8      	cmp	r0, r7
 801106a:	da27      	bge.n	80110bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 801106c:	9902      	ldr	r1, [sp, #8]
 801106e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8011072:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8011076:	eb05 010e 	add.w	r1, r5, lr
 801107a:	fa1f f881 	uxth.w	r8, r1
 801107e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 8011082:	4411      	add	r1, r2
 8011084:	eba1 0108 	sub.w	r1, r1, r8
 8011088:	b289      	uxth	r1, r1
 801108a:	fa0f f988 	sxth.w	r9, r8
 801108e:	eba2 020e 	sub.w	r2, r2, lr
 8011092:	fa0f f881 	sxth.w	r8, r1
 8011096:	1a3f      	subs	r7, r7, r0
 8011098:	4372      	muls	r2, r6
 801109a:	fb08 f707 	mul.w	r7, r8, r7
 801109e:	42ba      	cmp	r2, r7
 80110a0:	dc06      	bgt.n	80110b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 80110a2:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 80110a6:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 80110aa:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 80110ae:	e7ca      	b.n	8011046 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 80110b0:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 80110b4:	4429      	add	r1, r5
 80110b6:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80110ba:	e64f      	b.n	8010d5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80110bc:	9805      	ldr	r0, [sp, #20]
 80110be:	ebaa 0000 	sub.w	r0, sl, r0
 80110c2:	b280      	uxth	r0, r0
 80110c4:	2d06      	cmp	r5, #6
 80110c6:	fa0f fe80 	sxth.w	lr, r0
 80110ca:	d817      	bhi.n	80110fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 80110cc:	9b04      	ldr	r3, [sp, #16]
 80110ce:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80110d2:	1c6b      	adds	r3, r5, #1
 80110d4:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 80110d8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 80110dc:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 80110e0:	9b01      	ldr	r3, [sp, #4]
 80110e2:	9801      	ldr	r0, [sp, #4]
 80110e4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80110e8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80110ec:	805a      	strh	r2, [r3, #2]
 80110ee:	809e      	strh	r6, [r3, #4]
 80110f0:	80d9      	strh	r1, [r3, #6]
 80110f2:	9b02      	ldr	r3, [sp, #8]
 80110f4:	3b01      	subs	r3, #1
 80110f6:	9302      	str	r3, [sp, #8]
 80110f8:	3c08      	subs	r4, #8
 80110fa:	e747      	b.n	8010f8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 80110fc:	9a02      	ldr	r2, [sp, #8]
 80110fe:	45b6      	cmp	lr, r6
 8011100:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011104:	db0d      	blt.n	8011122 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 8011106:	449c      	add	ip, r3
 8011108:	fa1f fc8c 	uxth.w	ip, ip
 801110c:	445a      	add	r2, fp
 801110e:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8011112:	448c      	add	ip, r1
 8011114:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8011118:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 801111c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 8011120:	e61c      	b.n	8010d5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8011122:	445a      	add	r2, fp
 8011124:	4484      	add	ip, r0
 8011126:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 801112a:	e78f      	b.n	801104c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 801112c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 8011130:	fa1f f18e 	uxth.w	r1, lr
 8011134:	eb01 0806 	add.w	r8, r1, r6
 8011138:	b293      	uxth	r3, r2
 801113a:	fa1f f888 	uxth.w	r8, r8
 801113e:	9306      	str	r3, [sp, #24]
 8011140:	fa0f f388 	sxth.w	r3, r8
 8011144:	9307      	str	r3, [sp, #28]
 8011146:	9f06      	ldr	r7, [sp, #24]
 8011148:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 801114c:	443b      	add	r3, r7
 801114e:	b29b      	uxth	r3, r3
 8011150:	4596      	cmp	lr, r2
 8011152:	9308      	str	r3, [sp, #32]
 8011154:	da24      	bge.n	80111a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 8011156:	9905      	ldr	r1, [sp, #20]
 8011158:	eba3 0308 	sub.w	r3, r3, r8
 801115c:	ebaa 0401 	sub.w	r4, sl, r1
 8011160:	b2a4      	uxth	r4, r4
 8011162:	b29b      	uxth	r3, r3
 8011164:	b225      	sxth	r5, r4
 8011166:	b219      	sxth	r1, r3
 8011168:	eba2 020e 	sub.w	r2, r2, lr
 801116c:	eba9 0000 	sub.w	r0, r9, r0
 8011170:	436a      	muls	r2, r5
 8011172:	4348      	muls	r0, r1
 8011174:	4282      	cmp	r2, r0
 8011176:	9a02      	ldr	r2, [sp, #8]
 8011178:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801117c:	445a      	add	r2, fp
 801117e:	dc06      	bgt.n	801118e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8011180:	9b07      	ldr	r3, [sp, #28]
 8011182:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 8011186:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 801118a:	44a4      	add	ip, r4
 801118c:	e75e      	b.n	801104c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 801118e:	9904      	ldr	r1, [sp, #16]
 8011190:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8011194:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 8011198:	4433      	add	r3, r6
 801119a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801119e:	e5dd      	b.n	8010d5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80111a0:	9f06      	ldr	r7, [sp, #24]
 80111a2:	9b04      	ldr	r3, [sp, #16]
 80111a4:	1bc9      	subs	r1, r1, r7
 80111a6:	fa0f f78a 	sxth.w	r7, sl
 80111aa:	b289      	uxth	r1, r1
 80111ac:	429f      	cmp	r7, r3
 80111ae:	fa0f fe81 	sxth.w	lr, r1
 80111b2:	dd23      	ble.n	80111fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 80111b4:	9a05      	ldr	r2, [sp, #20]
 80111b6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80111ba:	9d07      	ldr	r5, [sp, #28]
 80111bc:	ebaa 0202 	sub.w	r2, sl, r2
 80111c0:	b292      	uxth	r2, r2
 80111c2:	eba5 0a03 	sub.w	sl, r5, r3
 80111c6:	b214      	sxth	r4, r2
 80111c8:	eba9 0000 	sub.w	r0, r9, r0
 80111cc:	9b02      	ldr	r3, [sp, #8]
 80111ce:	fb0e f000 	mul.w	r0, lr, r0
 80111d2:	fb04 fa0a 	mul.w	sl, r4, sl
 80111d6:	00db      	lsls	r3, r3, #3
 80111d8:	4550      	cmp	r0, sl
 80111da:	445b      	add	r3, fp
 80111dc:	db03      	blt.n	80111e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 80111de:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 80111e2:	4494      	add	ip, r2
 80111e4:	e732      	b.n	801104c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 80111e6:	9a04      	ldr	r2, [sp, #16]
 80111e8:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 80111ec:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 80111f0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 80111f4:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80111f8:	4431      	add	r1, r6
 80111fa:	e75c      	b.n	80110b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 80111fc:	9b08      	ldr	r3, [sp, #32]
 80111fe:	eba3 0308 	sub.w	r3, r3, r8
 8011202:	b29b      	uxth	r3, r3
 8011204:	2d06      	cmp	r5, #6
 8011206:	b218      	sxth	r0, r3
 8011208:	d813      	bhi.n	8011232 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 801120a:	9b07      	ldr	r3, [sp, #28]
 801120c:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8011210:	1c6b      	adds	r3, r5, #1
 8011212:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8011216:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801121a:	9b01      	ldr	r3, [sp, #4]
 801121c:	9901      	ldr	r1, [sp, #4]
 801121e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8011222:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8011226:	805a      	strh	r2, [r3, #2]
 8011228:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801122a:	809a      	strh	r2, [r3, #4]
 801122c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011230:	e75f      	b.n	80110f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 8011232:	9c02      	ldr	r4, [sp, #8]
 8011234:	4570      	cmp	r0, lr
 8011236:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801123a:	db0d      	blt.n	8011258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 801123c:	4431      	add	r1, r6
 801123e:	9b06      	ldr	r3, [sp, #24]
 8011240:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8011244:	b289      	uxth	r1, r1
 8011246:	445c      	add	r4, fp
 8011248:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801124c:	4419      	add	r1, r3
 801124e:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8011252:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 8011256:	e581      	b.n	8010d5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8011258:	445c      	add	r4, fp
 801125a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 801125e:	e79b      	b.n	8011198 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8011260:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8011264:	1e65      	subs	r5, r4, #1
 8011266:	b2ad      	uxth	r5, r5
 8011268:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801126c:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8011270:	42b5      	cmp	r5, r6
 8011272:	d044      	beq.n	80112fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 8011274:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8011278:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 801127c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8011280:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8011284:	4282      	cmp	r2, r0
 8011286:	d11f      	bne.n	80112c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 8011288:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 801128c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8011290:	459c      	cmp	ip, r3
 8011292:	d119      	bne.n	80112c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 8011294:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8011298:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801129c:	19d8      	adds	r0, r3, r7
 801129e:	b200      	sxth	r0, r0
 80112a0:	4288      	cmp	r0, r1
 80112a2:	d109      	bne.n	80112b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80112a4:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 80112a8:	4413      	add	r3, r2
 80112aa:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80112ae:	4629      	mov	r1, r5
 80112b0:	9801      	ldr	r0, [sp, #4]
 80112b2:	f7ff fd23 	bl	8010cfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80112b6:	e003      	b.n	80112c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 80112b8:	4411      	add	r1, r2
 80112ba:	b209      	sxth	r1, r1
 80112bc:	42b9      	cmp	r1, r7
 80112be:	d0f3      	beq.n	80112a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80112c0:	3d01      	subs	r5, #1
 80112c2:	b2ad      	uxth	r5, r5
 80112c4:	3c08      	subs	r4, #8
 80112c6:	e7d3      	b.n	8011270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 80112c8:	42b9      	cmp	r1, r7
 80112ca:	d1f9      	bne.n	80112c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 80112cc:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 80112d0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80112d4:	4299      	cmp	r1, r3
 80112d6:	d1f3      	bne.n	80112c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 80112d8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 80112dc:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 80112e0:	181f      	adds	r7, r3, r0
 80112e2:	b23f      	sxth	r7, r7
 80112e4:	42ba      	cmp	r2, r7
 80112e6:	d105      	bne.n	80112f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 80112e8:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 80112ec:	440b      	add	r3, r1
 80112ee:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80112f2:	e7dc      	b.n	80112ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 80112f4:	440a      	add	r2, r1
 80112f6:	b212      	sxth	r2, r2
 80112f8:	4290      	cmp	r0, r2
 80112fa:	d1e1      	bne.n	80112c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 80112fc:	e7f6      	b.n	80112ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 80112fe:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8011302:	2e07      	cmp	r6, #7
 8011304:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8011308:	d812      	bhi.n	8011330 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 801130a:	1c75      	adds	r5, r6, #1
 801130c:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 8011310:	9d01      	ldr	r5, [sp, #4]
 8011312:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8011316:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 801131a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801131e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8011322:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8011326:	442c      	add	r4, r5
 8011328:	8061      	strh	r1, [r4, #2]
 801132a:	80a2      	strh	r2, [r4, #4]
 801132c:	80e3      	strh	r3, [r4, #6]
 801132e:	e57f      	b.n	8010e30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8011330:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8011334:	3e01      	subs	r6, #1
 8011336:	445c      	add	r4, fp
 8011338:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 801133c:	f04f 37ff 	mov.w	r7, #4294967295
 8011340:	2500      	movs	r5, #0
 8011342:	9305      	str	r3, [sp, #20]
 8011344:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8011348:	9302      	str	r3, [sp, #8]
 801134a:	1e72      	subs	r2, r6, #1
 801134c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8011350:	9304      	str	r3, [sp, #16]
 8011352:	4691      	mov	r9, r2
 8011354:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8011358:	f1b9 3fff 	cmp.w	r9, #4294967295
 801135c:	bf14      	ite	ne
 801135e:	9905      	ldrne	r1, [sp, #20]
 8011360:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8011364:	6818      	ldr	r0, [r3, #0]
 8011366:	9207      	str	r2, [sp, #28]
 8011368:	bf18      	it	ne
 801136a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801136e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8011372:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8011376:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801137a:	9306      	str	r3, [sp, #24]
 801137c:	fb18 f801 	smulbb	r8, r8, r1
 8011380:	6859      	ldr	r1, [r3, #4]
 8011382:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011386:	4671      	mov	r1, lr
 8011388:	a80c      	add	r0, sp, #48	@ 0x30
 801138a:	f7ff fb3d 	bl	8010a08 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801138e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8011392:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8011396:	9b04      	ldr	r3, [sp, #16]
 8011398:	9a02      	ldr	r2, [sp, #8]
 801139a:	fb10 f001 	smulbb	r0, r0, r1
 801139e:	fb02 8803 	mla	r8, r2, r3, r8
 80113a2:	eba0 0108 	sub.w	r1, r0, r8
 80113a6:	f04f 0c08 	mov.w	ip, #8
 80113aa:	fb90 f0fc 	sdiv	r0, r0, ip
 80113ae:	4288      	cmp	r0, r1
 80113b0:	dc20      	bgt.n	80113f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 80113b2:	4551      	cmp	r1, sl
 80113b4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80113b8:	da03      	bge.n	80113c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 80113ba:	b1d9      	cbz	r1, 80113f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 80113bc:	468a      	mov	sl, r1
 80113be:	464f      	mov	r7, r9
 80113c0:	4635      	mov	r5, r6
 80113c2:	f109 39ff 	add.w	r9, r9, #4294967295
 80113c6:	f119 0f02 	cmn.w	r9, #2
 80113ca:	d1c5      	bne.n	8011358 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 80113cc:	4616      	mov	r6, r2
 80113ce:	3201      	adds	r2, #1
 80113d0:	f1a4 0408 	sub.w	r4, r4, #8
 80113d4:	d1b6      	bne.n	8011344 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 80113d6:	9b01      	ldr	r3, [sp, #4]
 80113d8:	b2ac      	uxth	r4, r5
 80113da:	00ed      	lsls	r5, r5, #3
 80113dc:	1958      	adds	r0, r3, r5
 80113de:	1c7b      	adds	r3, r7, #1
 80113e0:	d10b      	bne.n	80113fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 80113e2:	4601      	mov	r1, r0
 80113e4:	9803      	ldr	r0, [sp, #12]
 80113e6:	f7ff fb0f 	bl	8010a08 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80113ea:	4621      	mov	r1, r4
 80113ec:	9801      	ldr	r0, [sp, #4]
 80113ee:	f7ff fc85 	bl	8010cfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80113f2:	e4b3      	b.n	8010d5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80113f4:	464f      	mov	r7, r9
 80113f6:	4635      	mov	r5, r6
 80113f8:	e7ed      	b.n	80113d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 80113fa:	9b01      	ldr	r3, [sp, #4]
 80113fc:	00ff      	lsls	r7, r7, #3
 80113fe:	19d9      	adds	r1, r3, r7
 8011400:	f7ff fb02 	bl	8010a08 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011404:	9b03      	ldr	r3, [sp, #12]
 8011406:	cb03      	ldmia	r3!, {r0, r1}
 8011408:	445f      	add	r7, fp
 801140a:	445d      	add	r5, fp
 801140c:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8011410:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8011414:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8011418:	9b03      	ldr	r3, [sp, #12]
 801141a:	6869      	ldr	r1, [r5, #4]
 801141c:	c303      	stmia	r3!, {r0, r1}
 801141e:	e7e4      	b.n	80113ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

08011420 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8011420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011424:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8011428:	b0a1      	sub	sp, #132	@ 0x84
 801142a:	4604      	mov	r4, r0
 801142c:	4630      	mov	r0, r6
 801142e:	f7f9 fcb8 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011432:	4605      	mov	r5, r0
 8011434:	b948      	cbnz	r0, 801144a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8011436:	6823      	ldr	r3, [r4, #0]
 8011438:	e896 0006 	ldmia.w	r6, {r1, r2}
 801143c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801143e:	4620      	mov	r0, r4
 8011440:	4798      	blx	r3
 8011442:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8011446:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 801144a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801144e:	2b00      	cmp	r3, #0
 8011450:	d149      	bne.n	80114e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 8011452:	4bb1      	ldr	r3, [pc, #708]	@ (8011718 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 8011454:	681b      	ldr	r3, [r3, #0]
 8011456:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 801145a:	1ebb      	subs	r3, r7, #2
 801145c:	425f      	negs	r7, r3
 801145e:	415f      	adcs	r7, r3
 8011460:	4bae      	ldr	r3, [pc, #696]	@ (801171c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 8011462:	681b      	ldr	r3, [r3, #0]
 8011464:	2b00      	cmp	r3, #0
 8011466:	d040      	beq.n	80114ea <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8011468:	4dad      	ldr	r5, [pc, #692]	@ (8011720 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 801146a:	4628      	mov	r0, r5
 801146c:	f7f9 fc99 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011470:	4606      	mov	r6, r0
 8011472:	2800      	cmp	r0, #0
 8011474:	d139      	bne.n	80114ea <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8011476:	4628      	mov	r0, r5
 8011478:	f7ff f95a 	bl	8010730 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801147c:	6823      	ldr	r3, [r4, #0]
 801147e:	6829      	ldr	r1, [r5, #0]
 8011480:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011482:	686a      	ldr	r2, [r5, #4]
 8011484:	4620      	mov	r0, r4
 8011486:	4798      	blx	r3
 8011488:	802e      	strh	r6, [r5, #0]
 801148a:	806e      	strh	r6, [r5, #2]
 801148c:	80ae      	strh	r6, [r5, #4]
 801148e:	80ee      	strh	r6, [r5, #6]
 8011490:	af0f      	add	r7, sp, #60	@ 0x3c
 8011492:	4ea4      	ldr	r6, [pc, #656]	@ (8011724 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 8011494:	4638      	mov	r0, r7
 8011496:	f7ff fbd9 	bl	8010c4c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801149a:	8835      	ldrh	r5, [r6, #0]
 801149c:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 80114a0:	462b      	mov	r3, r5
 80114a2:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80114a6:	4563      	cmp	r3, ip
 80114a8:	d224      	bcs.n	80114f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 80114aa:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 80114ae:	2907      	cmp	r1, #7
 80114b0:	d816      	bhi.n	80114e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80114b2:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80114b6:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80114ba:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80114be:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 80114c2:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 80114c6:	1c4a      	adds	r2, r1, #1
 80114c8:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 80114cc:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 80114d0:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 80114d4:	f8a2 a002 	strh.w	sl, [r2, #2]
 80114d8:	f8a2 8004 	strh.w	r8, [r2, #4]
 80114dc:	f8a2 e006 	strh.w	lr, [r2, #6]
 80114e0:	3301      	adds	r3, #1
 80114e2:	b29b      	uxth	r3, r3
 80114e4:	e7df      	b.n	80114a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 80114e6:	2701      	movs	r7, #1
 80114e8:	e7ba      	b.n	8011460 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 80114ea:	2f00      	cmp	r7, #0
 80114ec:	d1d0      	bne.n	8011490 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 80114ee:	b021      	add	sp, #132	@ 0x84
 80114f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114f4:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 80114f8:	42ab      	cmp	r3, r5
 80114fa:	d90c      	bls.n	8011516 <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 80114fc:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8011500:	6822      	ldr	r2, [r4, #0]
 8011502:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8011506:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8011508:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 801150c:	4620      	mov	r0, r4
 801150e:	3501      	adds	r5, #1
 8011510:	47b8      	blx	r7
 8011512:	b2ad      	uxth	r5, r5
 8011514:	e7ee      	b.n	80114f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 8011516:	4d80      	ldr	r5, [pc, #512]	@ (8011718 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 8011518:	6828      	ldr	r0, [r5, #0]
 801151a:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 801151e:	2b01      	cmp	r3, #1
 8011520:	f040 813b 	bne.w	801179a <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 8011524:	4a80      	ldr	r2, [pc, #512]	@ (8011728 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 8011526:	8833      	ldrh	r3, [r6, #0]
 8011528:	7812      	ldrb	r2, [r2, #0]
 801152a:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 801152e:	2a01      	cmp	r2, #1
 8011530:	d014      	beq.n	801155c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8011532:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 8011536:	32ae      	adds	r2, #174	@ 0xae
 8011538:	f04f 0900 	mov.w	r9, #0
 801153c:	4283      	cmp	r3, r0
 801153e:	f102 0208 	add.w	r2, r2, #8
 8011542:	f280 8082 	bge.w	801164a <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 8011546:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 801154a:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 801154e:	4439      	add	r1, r7
 8011550:	b209      	sxth	r1, r1
 8011552:	4589      	cmp	r9, r1
 8011554:	bfb8      	it	lt
 8011556:	4689      	movlt	r9, r1
 8011558:	3301      	adds	r3, #1
 801155a:	e7ef      	b.n	801153c <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 801155c:	4f73      	ldr	r7, [pc, #460]	@ (801172c <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 801155e:	883a      	ldrh	r2, [r7, #0]
 8011560:	4693      	mov	fp, r2
 8011562:	4283      	cmp	r3, r0
 8011564:	da08      	bge.n	8011578 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 8011566:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 801156a:	3301      	adds	r3, #1
 801156c:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 8011570:	458b      	cmp	fp, r1
 8011572:	bfa8      	it	ge
 8011574:	468b      	movge	fp, r1
 8011576:	e7f4      	b.n	8011562 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 8011578:	2300      	movs	r3, #0
 801157a:	2a0f      	cmp	r2, #15
 801157c:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 8011730 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 8011580:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8011584:	bf8c      	ite	hi
 8011586:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 801158a:	f04f 0801 	movls.w	r8, #1
 801158e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8011592:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8011596:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801159a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801159e:	6828      	ldr	r0, [r5, #0]
 80115a0:	455b      	cmp	r3, fp
 80115a2:	f340 80c7 	ble.w	8011734 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 80115a6:	6803      	ldr	r3, [r0, #0]
 80115a8:	f8b7 a000 	ldrh.w	sl, [r7]
 80115ac:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80115b0:	4798      	blx	r3
 80115b2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80115b6:	682b      	ldr	r3, [r5, #0]
 80115b8:	ebaa 0000 	sub.w	r0, sl, r0
 80115bc:	b280      	uxth	r0, r0
 80115be:	ebac 0e08 	sub.w	lr, ip, r8
 80115c2:	4570      	cmp	r0, lr
 80115c4:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 80115c8:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 80115cc:	dd05      	ble.n	80115da <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 80115ce:	4558      	cmp	r0, fp
 80115d0:	dd03      	ble.n	80115da <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 80115d2:	b901      	cbnz	r1, 80115d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 80115d4:	b392      	cbz	r2, 801163c <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 80115d6:	4658      	mov	r0, fp
 80115d8:	e006      	b.n	80115e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 80115da:	2900      	cmp	r1, #0
 80115dc:	d1fb      	bne.n	80115d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 80115de:	2a00      	cmp	r2, #0
 80115e0:	d1f9      	bne.n	80115d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 80115e2:	4558      	cmp	r0, fp
 80115e4:	bfb8      	it	lt
 80115e6:	4658      	movlt	r0, fp
 80115e8:	f9b9 3000 	ldrsh.w	r3, [r9]
 80115ec:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 80115f0:	2200      	movs	r2, #0
 80115f2:	ebac 0000 	sub.w	r0, ip, r0
 80115f6:	f8b6 a000 	ldrh.w	sl, [r6]
 80115fa:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80115fe:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8011602:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8011606:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801160a:	4553      	cmp	r3, sl
 801160c:	ddc5      	ble.n	801159a <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 801160e:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8011612:	ab0d      	add	r3, sp, #52	@ 0x34
 8011614:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8011618:	6851      	ldr	r1, [r2, #4]
 801161a:	c303      	stmia	r3!, {r0, r1}
 801161c:	a80d      	add	r0, sp, #52	@ 0x34
 801161e:	a90b      	add	r1, sp, #44	@ 0x2c
 8011620:	f7f9 fb7c 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 8011624:	a80d      	add	r0, sp, #52	@ 0x34
 8011626:	f7f9 fbbc 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801162a:	b920      	cbnz	r0, 8011636 <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 801162c:	6823      	ldr	r3, [r4, #0]
 801162e:	a90d      	add	r1, sp, #52	@ 0x34
 8011630:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011632:	4620      	mov	r0, r4
 8011634:	4798      	blx	r3
 8011636:	f10a 0a01 	add.w	sl, sl, #1
 801163a:	e7e4      	b.n	8011606 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 801163c:	681a      	ldr	r2, [r3, #0]
 801163e:	2101      	movs	r1, #1
 8011640:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 8011644:	4618      	mov	r0, r3
 8011646:	4790      	blx	r2
 8011648:	e7a7      	b.n	801159a <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 801164a:	4b39      	ldr	r3, [pc, #228]	@ (8011730 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 801164c:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 801172c <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 8011650:	881f      	ldrh	r7, [r3, #0]
 8011652:	2300      	movs	r3, #0
 8011654:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 8011658:	2f0f      	cmp	r7, #15
 801165a:	bf8c      	ite	hi
 801165c:	08ff      	lsrhi	r7, r7, #3
 801165e:	2701      	movls	r7, #1
 8011660:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8011664:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 8011668:	6828      	ldr	r0, [r5, #0]
 801166a:	4413      	add	r3, r2
 801166c:	b21b      	sxth	r3, r3
 801166e:	454b      	cmp	r3, r9
 8011670:	da60      	bge.n	8011734 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 8011672:	6803      	ldr	r3, [r0, #0]
 8011674:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8011678:	4798      	blx	r3
 801167a:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 801167e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8011682:	682a      	ldr	r2, [r5, #0]
 8011684:	4473      	add	r3, lr
 8011686:	b21b      	sxth	r3, r3
 8011688:	eb03 0e07 	add.w	lr, r3, r7
 801168c:	4570      	cmp	r0, lr
 801168e:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 8011692:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 8011696:	da0d      	bge.n	80116b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 8011698:	4548      	cmp	r0, r9
 801169a:	da0b      	bge.n	80116b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 801169c:	f1bc 0f00 	cmp.w	ip, #0
 80116a0:	d138      	bne.n	8011714 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80116a2:	2900      	cmp	r1, #0
 80116a4:	d136      	bne.n	8011714 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80116a6:	6813      	ldr	r3, [r2, #0]
 80116a8:	2101      	movs	r1, #1
 80116aa:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 80116ae:	4610      	mov	r0, r2
 80116b0:	4798      	blx	r3
 80116b2:	e7d5      	b.n	8011660 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80116b4:	f1bc 0f00 	cmp.w	ip, #0
 80116b8:	d12c      	bne.n	8011714 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80116ba:	bb59      	cbnz	r1, 8011714 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80116bc:	4548      	cmp	r0, r9
 80116be:	bfa8      	it	ge
 80116c0:	4648      	movge	r0, r9
 80116c2:	f9b8 2000 	ldrsh.w	r2, [r8]
 80116c6:	f8b6 a000 	ldrh.w	sl, [r6]
 80116ca:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80116ce:	2100      	movs	r1, #0
 80116d0:	1ac0      	subs	r0, r0, r3
 80116d2:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 80116d6:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80116da:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 80116de:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80116e2:	4553      	cmp	r3, sl
 80116e4:	ddbc      	ble.n	8011660 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80116e6:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 80116ea:	ab0d      	add	r3, sp, #52	@ 0x34
 80116ec:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80116f0:	6851      	ldr	r1, [r2, #4]
 80116f2:	c303      	stmia	r3!, {r0, r1}
 80116f4:	a80d      	add	r0, sp, #52	@ 0x34
 80116f6:	a90b      	add	r1, sp, #44	@ 0x2c
 80116f8:	f7f9 fb10 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 80116fc:	a80d      	add	r0, sp, #52	@ 0x34
 80116fe:	f7f9 fb50 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011702:	b920      	cbnz	r0, 801170e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 8011704:	6823      	ldr	r3, [r4, #0]
 8011706:	a90d      	add	r1, sp, #52	@ 0x34
 8011708:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801170a:	4620      	mov	r0, r4
 801170c:	4798      	blx	r3
 801170e:	f10a 0a01 	add.w	sl, sl, #1
 8011712:	e7e4      	b.n	80116de <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 8011714:	4648      	mov	r0, r9
 8011716:	e7d4      	b.n	80116c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 8011718:	200157c0 	.word	0x200157c0
 801171c:	20015800 	.word	0x20015800
 8011720:	2001580c 	.word	0x2001580c
 8011724:	2000008c 	.word	0x2000008c
 8011728:	200157b8 	.word	0x200157b8
 801172c:	200157b4 	.word	0x200157b4
 8011730:	200157b6 	.word	0x200157b6
 8011734:	6828      	ldr	r0, [r5, #0]
 8011736:	6803      	ldr	r3, [r0, #0]
 8011738:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801173a:	4798      	blx	r3
 801173c:	4ba5      	ldr	r3, [pc, #660]	@ (80119d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 801173e:	781b      	ldrb	r3, [r3, #0]
 8011740:	2b00      	cmp	r3, #0
 8011742:	f43f aed4 	beq.w	80114ee <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8011746:	2300      	movs	r3, #0
 8011748:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 801174c:	4ba2      	ldr	r3, [pc, #648]	@ (80119d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 801174e:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 8011752:	881b      	ldrh	r3, [r3, #0]
 8011754:	a80f      	add	r0, sp, #60	@ 0x3c
 8011756:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 801175a:	42b3      	cmp	r3, r6
 801175c:	f4bf aec7 	bcs.w	80114ee <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8011760:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8011764:	2907      	cmp	r1, #7
 8011766:	d815      	bhi.n	8011794 <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 8011768:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801176c:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8011770:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011774:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8011778:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 801177c:	1c4a      	adds	r2, r1, #1
 801177e:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8011782:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 8011786:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 801178a:	f8a2 e002 	strh.w	lr, [r2, #2]
 801178e:	f8a2 c004 	strh.w	ip, [r2, #4]
 8011792:	80d7      	strh	r7, [r2, #6]
 8011794:	3301      	adds	r3, #1
 8011796:	b29b      	uxth	r3, r3
 8011798:	e7df      	b.n	801175a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 801179a:	2b02      	cmp	r3, #2
 801179c:	f040 80d1 	bne.w	8011942 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80117a0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80117a4:	9308      	str	r3, [sp, #32]
 80117a6:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 80117aa:	9307      	str	r3, [sp, #28]
 80117ac:	6803      	ldr	r3, [r0, #0]
 80117ae:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 80117b2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80117b6:	4798      	blx	r3
 80117b8:	4b88      	ldr	r3, [pc, #544]	@ (80119dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 80117ba:	881b      	ldrh	r3, [r3, #0]
 80117bc:	9302      	str	r3, [sp, #8]
 80117be:	4b88      	ldr	r3, [pc, #544]	@ (80119e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 80117c0:	881e      	ldrh	r6, [r3, #0]
 80117c2:	4b88      	ldr	r3, [pc, #544]	@ (80119e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 80117c4:	781b      	ldrb	r3, [r3, #0]
 80117c6:	f10b 37ff 	add.w	r7, fp, #4294967295
 80117ca:	2b01      	cmp	r3, #1
 80117cc:	bf1c      	itt	ne
 80117ce:	9b02      	ldrne	r3, [sp, #8]
 80117d0:	9602      	strne	r6, [sp, #8]
 80117d2:	b2bf      	uxth	r7, r7
 80117d4:	fa0f f887 	sxth.w	r8, r7
 80117d8:	4682      	mov	sl, r0
 80117da:	f04f 0000 	mov.w	r0, #0
 80117de:	bf18      	it	ne
 80117e0:	461e      	movne	r6, r3
 80117e2:	f7f0 fbab 	bl	8001f3c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80117e6:	fb96 fbfb 	sdiv	fp, r6, fp
 80117ea:	fb0b f808 	mul.w	r8, fp, r8
 80117ee:	45c2      	cmp	sl, r8
 80117f0:	da0c      	bge.n	801180c <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 80117f2:	6828      	ldr	r0, [r5, #0]
 80117f4:	6803      	ldr	r3, [r0, #0]
 80117f6:	210a      	movs	r1, #10
 80117f8:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80117fc:	4798      	blx	r3
 80117fe:	6828      	ldr	r0, [r5, #0]
 8011800:	6803      	ldr	r3, [r0, #0]
 8011802:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8011806:	4798      	blx	r3
 8011808:	4682      	mov	sl, r0
 801180a:	e7f0      	b.n	80117ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 801180c:	2000      	movs	r0, #0
 801180e:	f7f0 fbbf 	bl	8001f90 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011812:	fa1f f38b 	uxth.w	r3, fp
 8011816:	fb17 f703 	smulbb	r7, r7, r3
 801181a:	9304      	str	r3, [sp, #16]
 801181c:	b2bb      	uxth	r3, r7
 801181e:	9305      	str	r3, [sp, #20]
 8011820:	f04f 0800 	mov.w	r8, #0
 8011824:	0973      	lsrs	r3, r6, #5
 8011826:	4f70      	ldr	r7, [pc, #448]	@ (80119e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 8011828:	9306      	str	r3, [sp, #24]
 801182a:	4645      	mov	r5, r8
 801182c:	42b5      	cmp	r5, r6
 801182e:	d085      	beq.n	801173c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8011830:	6838      	ldr	r0, [r7, #0]
 8011832:	6803      	ldr	r3, [r0, #0]
 8011834:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8011838:	4798      	blx	r3
 801183a:	4582      	cmp	sl, r0
 801183c:	4681      	mov	r9, r0
 801183e:	d907      	bls.n	8011850 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 8011840:	f1b8 0f00 	cmp.w	r8, #0
 8011844:	d007      	beq.n	8011856 <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 8011846:	6838      	ldr	r0, [r7, #0]
 8011848:	6803      	ldr	r3, [r0, #0]
 801184a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 801184e:	e774      	b.n	801173a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8011850:	f1b8 0f00 	cmp.w	r8, #0
 8011854:	d003      	beq.n	801185e <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 8011856:	454d      	cmp	r5, r9
 8011858:	d3f5      	bcc.n	8011846 <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 801185a:	f04f 0801 	mov.w	r8, #1
 801185e:	9a04      	ldr	r2, [sp, #16]
 8011860:	fb95 f3fb 	sdiv	r3, r5, fp
 8011864:	9303      	str	r3, [sp, #12]
 8011866:	3301      	adds	r3, #1
 8011868:	fb13 f302 	smulbb	r3, r3, r2
 801186c:	b299      	uxth	r1, r3
 801186e:	f1b8 0f00 	cmp.w	r8, #0
 8011872:	d04e      	beq.n	8011912 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 8011874:	eb09 030b 	add.w	r3, r9, fp
 8011878:	42b3      	cmp	r3, r6
 801187a:	bfa8      	it	ge
 801187c:	4633      	movge	r3, r6
 801187e:	9807      	ldr	r0, [sp, #28]
 8011880:	b29b      	uxth	r3, r3
 8011882:	428b      	cmp	r3, r1
 8011884:	bf94      	ite	ls
 8011886:	ebc5 0203 	rsbls	r2, r5, r3
 801188a:	ebc5 0201 	rsbhi	r2, r5, r1
 801188e:	4282      	cmp	r2, r0
 8011890:	bfa8      	it	ge
 8011892:	4602      	movge	r2, r0
 8011894:	9808      	ldr	r0, [sp, #32]
 8011896:	fa1f fa82 	uxth.w	sl, r2
 801189a:	4582      	cmp	sl, r0
 801189c:	d205      	bcs.n	80118aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 801189e:	fa15 f082 	uxtah	r0, r5, r2
 80118a2:	4286      	cmp	r6, r0
 80118a4:	d001      	beq.n	80118aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 80118a6:	4299      	cmp	r1, r3
 80118a8:	d240      	bcs.n	801192c <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 80118aa:	2001      	movs	r0, #1
 80118ac:	9209      	str	r2, [sp, #36]	@ 0x24
 80118ae:	f7f0 fb45 	bl	8001f3c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80118b2:	6838      	ldr	r0, [r7, #0]
 80118b4:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 80118b8:	6803      	ldr	r3, [r0, #0]
 80118ba:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80118be:	4798      	blx	r3
 80118c0:	4b48      	ldr	r3, [pc, #288]	@ (80119e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 80118c2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80118c4:	781b      	ldrb	r3, [r3, #0]
 80118c6:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80118ca:	2b01      	cmp	r3, #1
 80118cc:	b212      	sxth	r2, r2
 80118ce:	f04f 0000 	mov.w	r0, #0
 80118d2:	d122      	bne.n	801191a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 80118d4:	1b73      	subs	r3, r6, r5
 80118d6:	eba3 030a 	sub.w	r3, r3, sl
 80118da:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80118de:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 80118e2:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 80118e6:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 80118ea:	6823      	ldr	r3, [r4, #0]
 80118ec:	a90d      	add	r1, sp, #52	@ 0x34
 80118ee:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80118f0:	4620      	mov	r0, r4
 80118f2:	4798      	blx	r3
 80118f4:	6838      	ldr	r0, [r7, #0]
 80118f6:	9b03      	ldr	r3, [sp, #12]
 80118f8:	4259      	negs	r1, r3
 80118fa:	6803      	ldr	r3, [r0, #0]
 80118fc:	b209      	sxth	r1, r1
 80118fe:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8011902:	4798      	blx	r3
 8011904:	4455      	add	r5, sl
 8011906:	2001      	movs	r0, #1
 8011908:	b2ad      	uxth	r5, r5
 801190a:	f7f0 fb41 	bl	8001f90 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801190e:	46ca      	mov	sl, r9
 8011910:	e78c      	b.n	801182c <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 8011912:	9b05      	ldr	r3, [sp, #20]
 8011914:	eba9 0303 	sub.w	r3, r9, r3
 8011918:	e7b1      	b.n	801187e <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 801191a:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 801191e:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 8011922:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 8011926:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 801192a:	e7de      	b.n	80118ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 801192c:	6838      	ldr	r0, [r7, #0]
 801192e:	6803      	ldr	r3, [r0, #0]
 8011930:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011932:	4798      	blx	r3
 8011934:	6838      	ldr	r0, [r7, #0]
 8011936:	9906      	ldr	r1, [sp, #24]
 8011938:	6803      	ldr	r3, [r0, #0]
 801193a:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 801193e:	4798      	blx	r3
 8011940:	e7e5      	b.n	801190e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 8011942:	2b03      	cmp	r3, #3
 8011944:	f040 8130 	bne.w	8011ba8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 8011948:	4b26      	ldr	r3, [pc, #152]	@ (80119e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 801194a:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 801194e:	781b      	ldrb	r3, [r3, #0]
 8011950:	2b01      	cmp	r3, #1
 8011952:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8011956:	f000 8093 	beq.w	8011a80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801195a:	8832      	ldrh	r2, [r6, #0]
 801195c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8011960:	3201      	adds	r2, #1
 8011962:	b292      	uxth	r2, r2
 8011964:	2900      	cmp	r1, #0
 8011966:	f43f aee9 	beq.w	801173c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801196a:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 801196e:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 8011972:	441d      	add	r5, r3
 8011974:	b22d      	sxth	r5, r5
 8011976:	4694      	mov	ip, r2
 8011978:	f04f 0800 	mov.w	r8, #0
 801197c:	fa1f f38c 	uxth.w	r3, ip
 8011980:	4299      	cmp	r1, r3
 8011982:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8011986:	f240 80ba 	bls.w	8011afe <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 801198a:	4427      	add	r7, r4
 801198c:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8011990:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8011994:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8011998:	4283      	cmp	r3, r0
 801199a:	f340 809c 	ble.w	8011ad6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 801199e:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 80119a2:	4405      	add	r5, r0
 80119a4:	b22d      	sxth	r5, r5
 80119a6:	429d      	cmp	r5, r3
 80119a8:	bfa8      	it	ge
 80119aa:	461d      	movge	r5, r3
 80119ac:	46e0      	mov	r8, ip
 80119ae:	f10c 0c01 	add.w	ip, ip, #1
 80119b2:	e7e3      	b.n	801197c <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 80119b4:	d10a      	bne.n	80119cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 80119b6:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 80119ba:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 80119be:	4562      	cmp	r2, ip
 80119c0:	bfb8      	it	lt
 80119c2:	4662      	movlt	r2, ip
 80119c4:	4288      	cmp	r0, r1
 80119c6:	bfb8      	it	lt
 80119c8:	4698      	movlt	r8, r3
 80119ca:	e082      	b.n	8011ad2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 80119cc:	428a      	cmp	r2, r1
 80119ce:	bfb8      	it	lt
 80119d0:	460a      	movlt	r2, r1
 80119d2:	e07e      	b.n	8011ad2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 80119d4:	200157be 	.word	0x200157be
 80119d8:	2000008c 	.word	0x2000008c
 80119dc:	200157b6 	.word	0x200157b6
 80119e0:	200157b4 	.word	0x200157b4
 80119e4:	200157b8 	.word	0x200157b8
 80119e8:	200157c0 	.word	0x200157c0
 80119ec:	19e1      	adds	r1, r4, r7
 80119ee:	ab0d      	add	r3, sp, #52	@ 0x34
 80119f0:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80119f4:	6849      	ldr	r1, [r1, #4]
 80119f6:	c303      	stmia	r3!, {r0, r1}
 80119f8:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 80119fc:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8011a00:	454b      	cmp	r3, r9
 8011a02:	bfb8      	it	lt
 8011a04:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 8011a08:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8011a0c:	440b      	add	r3, r1
 8011a0e:	1a9b      	subs	r3, r3, r2
 8011a10:	a80d      	add	r0, sp, #52	@ 0x34
 8011a12:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8011a16:	f7fe fea5 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011a1a:	a80d      	add	r0, sp, #52	@ 0x34
 8011a1c:	f7f9 f9c1 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011a20:	bb70      	cbnz	r0, 8011a80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8011a22:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 8011a26:	6828      	ldr	r0, [r5, #0]
 8011a28:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8011a2c:	f8d0 e000 	ldr.w	lr, [r0]
 8011a30:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8011a34:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8011a38:	45cc      	cmp	ip, r9
 8011a3a:	bfd4      	ite	le
 8011a3c:	fa1f fc8c 	uxthle.w	ip, ip
 8011a40:	fa1f fc89 	uxthgt.w	ip, r9
 8011a44:	f8cd c000 	str.w	ip, [sp]
 8011a48:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 8011a4c:	47d8      	blx	fp
 8011a4e:	4683      	mov	fp, r0
 8011a50:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8011a54:	a80d      	add	r0, sp, #52	@ 0x34
 8011a56:	f7fe fe6b 	bl	8010730 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011a5a:	6823      	ldr	r3, [r4, #0]
 8011a5c:	4427      	add	r7, r4
 8011a5e:	4620      	mov	r0, r4
 8011a60:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011a62:	a90d      	add	r1, sp, #52	@ 0x34
 8011a64:	4798      	blx	r3
 8011a66:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 8011a6a:	eba0 000b 	sub.w	r0, r0, fp
 8011a6e:	b200      	sxth	r0, r0
 8011a70:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 8011a74:	b920      	cbnz	r0, 8011a80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8011a76:	fa1f f188 	uxth.w	r1, r8
 8011a7a:	4650      	mov	r0, sl
 8011a7c:	f7ff f93e 	bl	8010cfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011a80:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8011a84:	f1bb 0f00 	cmp.w	fp, #0
 8011a88:	f43f ae58 	beq.w	801173c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8011a8c:	8833      	ldrh	r3, [r6, #0]
 8011a8e:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8011a92:	3301      	adds	r3, #1
 8011a94:	b29b      	uxth	r3, r3
 8011a96:	f04f 0800 	mov.w	r8, #0
 8011a9a:	b299      	uxth	r1, r3
 8011a9c:	458b      	cmp	fp, r1
 8011a9e:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8011aa2:	d9a3      	bls.n	80119ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 8011aa4:	4427      	add	r7, r4
 8011aa6:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8011aaa:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 8011aae:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 8011ab2:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8011ab6:	4408      	add	r0, r1
 8011ab8:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8011abc:	4461      	add	r1, ip
 8011abe:	b200      	sxth	r0, r0
 8011ac0:	b209      	sxth	r1, r1
 8011ac2:	4288      	cmp	r0, r1
 8011ac4:	f6bf af76 	bge.w	80119b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 8011ac8:	4584      	cmp	ip, r0
 8011aca:	4662      	mov	r2, ip
 8011acc:	4698      	mov	r8, r3
 8011ace:	bfb8      	it	lt
 8011ad0:	4602      	movlt	r2, r0
 8011ad2:	3301      	adds	r3, #1
 8011ad4:	e7e1      	b.n	8011a9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 8011ad6:	d10e      	bne.n	8011af6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 8011ad8:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8011adc:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8011ae0:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8011ae4:	4473      	add	r3, lr
 8011ae6:	b21b      	sxth	r3, r3
 8011ae8:	429d      	cmp	r5, r3
 8011aea:	bfa8      	it	ge
 8011aec:	461d      	movge	r5, r3
 8011aee:	4287      	cmp	r7, r0
 8011af0:	bfb8      	it	lt
 8011af2:	46e0      	movlt	r8, ip
 8011af4:	e75b      	b.n	80119ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8011af6:	4285      	cmp	r5, r0
 8011af8:	bfa8      	it	ge
 8011afa:	4605      	movge	r5, r0
 8011afc:	e757      	b.n	80119ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8011afe:	eb0a 0007 	add.w	r0, sl, r7
 8011b02:	4427      	add	r7, r4
 8011b04:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8011b08:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8011b0c:	45cb      	cmp	fp, r9
 8011b0e:	bfbe      	ittt	lt
 8011b10:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 8011b14:	445d      	addlt	r5, fp
 8011b16:	b22d      	sxthlt	r5, r5
 8011b18:	f7f9 f943 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011b1c:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8011b20:	2800      	cmp	r0, #0
 8011b22:	f47f af1f 	bne.w	8011964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 8011b26:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8011b2a:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8011b2e:	482b      	ldr	r0, [pc, #172]	@ (8011bdc <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 8011b30:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8011b34:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8011b38:	6800      	ldr	r0, [r0, #0]
 8011b3a:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 8011b3e:	1aad      	subs	r5, r5, r2
 8011b40:	454d      	cmp	r5, r9
 8011b42:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8011b46:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8011b4a:	bfa8      	it	ge
 8011b4c:	464d      	movge	r5, r9
 8011b4e:	f8d0 c000 	ldr.w	ip, [r0]
 8011b52:	b2ad      	uxth	r5, r5
 8011b54:	fa1f fb8b 	uxth.w	fp, fp
 8011b58:	455d      	cmp	r5, fp
 8011b5a:	bf94      	ite	ls
 8011b5c:	9500      	strls	r5, [sp, #0]
 8011b5e:	f8cd b000 	strhi.w	fp, [sp]
 8011b62:	b292      	uxth	r2, r2
 8011b64:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 8011b68:	b29b      	uxth	r3, r3
 8011b6a:	b289      	uxth	r1, r1
 8011b6c:	47a8      	blx	r5
 8011b6e:	6823      	ldr	r3, [r4, #0]
 8011b70:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8011b74:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011b76:	a90d      	add	r1, sp, #52	@ 0x34
 8011b78:	4620      	mov	r0, r4
 8011b7a:	4798      	blx	r3
 8011b7c:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8011b80:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8011b84:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8011b88:	1a5b      	subs	r3, r3, r1
 8011b8a:	440a      	add	r2, r1
 8011b8c:	b21b      	sxth	r3, r3
 8011b8e:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8011b92:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8011b96:	2b00      	cmp	r3, #0
 8011b98:	f47f aedf 	bne.w	801195a <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8011b9c:	fa1f f188 	uxth.w	r1, r8
 8011ba0:	4650      	mov	r0, sl
 8011ba2:	f7ff f8ab 	bl	8010cfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011ba6:	e6d8      	b.n	801195a <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8011ba8:	8835      	ldrh	r5, [r6, #0]
 8011baa:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8011bae:	42ab      	cmp	r3, r5
 8011bb0:	f67f adc4 	bls.w	801173c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8011bb4:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8011bb8:	ab0d      	add	r3, sp, #52	@ 0x34
 8011bba:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8011bbe:	6851      	ldr	r1, [r2, #4]
 8011bc0:	c303      	stmia	r3!, {r0, r1}
 8011bc2:	a80d      	add	r0, sp, #52	@ 0x34
 8011bc4:	f7f9 f8ed 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011bc8:	b920      	cbnz	r0, 8011bd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 8011bca:	6823      	ldr	r3, [r4, #0]
 8011bcc:	a90d      	add	r1, sp, #52	@ 0x34
 8011bce:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011bd0:	4620      	mov	r0, r4
 8011bd2:	4798      	blx	r3
 8011bd4:	3501      	adds	r5, #1
 8011bd6:	b2ad      	uxth	r5, r5
 8011bd8:	e7e7      	b.n	8011baa <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 8011bda:	bf00      	nop
 8011bdc:	200157c0 	.word	0x200157c0

08011be0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011be0:	4b03      	ldr	r3, [pc, #12]	@ (8011bf0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011be2:	2200      	movs	r2, #0
 8011be4:	801a      	strh	r2, [r3, #0]
 8011be6:	805a      	strh	r2, [r3, #2]
 8011be8:	809a      	strh	r2, [r3, #4]
 8011bea:	80da      	strh	r2, [r3, #6]
 8011bec:	4770      	bx	lr
 8011bee:	bf00      	nop
 8011bf0:	2001580c 	.word	0x2001580c

08011bf4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011bf8:	4606      	mov	r6, r0
 8011bfa:	b09d      	sub	sp, #116	@ 0x74
 8011bfc:	a803      	add	r0, sp, #12
 8011bfe:	4614      	mov	r4, r2
 8011c00:	468a      	mov	sl, r1
 8011c02:	461d      	mov	r5, r3
 8011c04:	f001 f957 	bl	8012eb6 <_ZN8touchgfx12TextProviderC1Ev>
 8011c08:	6833      	ldr	r3, [r6, #0]
 8011c0a:	4630      	mov	r0, r6
 8011c0c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011c0e:	4798      	blx	r3
 8011c10:	6833      	ldr	r3, [r6, #0]
 8011c12:	4607      	mov	r7, r0
 8011c14:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011c16:	4630      	mov	r0, r6
 8011c18:	4798      	blx	r3
 8011c1a:	462a      	mov	r2, r5
 8011c1c:	9000      	str	r0, [sp, #0]
 8011c1e:	4621      	mov	r1, r4
 8011c20:	463b      	mov	r3, r7
 8011c22:	a803      	add	r0, sp, #12
 8011c24:	f001 f9a2 	bl	8012f6c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011c28:	2500      	movs	r5, #0
 8011c2a:	462c      	mov	r4, r5
 8011c2c:	46a9      	mov	r9, r5
 8011c2e:	46a8      	mov	r8, r5
 8011c30:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8011c34:	2300      	movs	r3, #0
 8011c36:	9302      	str	r3, [sp, #8]
 8011c38:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8011c3c:	429c      	cmp	r4, r3
 8011c3e:	d002      	beq.n	8011c46 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011c40:	455c      	cmp	r4, fp
 8011c42:	bf18      	it	ne
 8011c44:	4625      	movne	r5, r4
 8011c46:	ab02      	add	r3, sp, #8
 8011c48:	4632      	mov	r2, r6
 8011c4a:	4651      	mov	r1, sl
 8011c4c:	a803      	add	r0, sp, #12
 8011c4e:	f001 fcb9 	bl	80135c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011c52:	4604      	mov	r4, r0
 8011c54:	b108      	cbz	r0, 8011c5a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011c56:	280a      	cmp	r0, #10
 8011c58:	d10a      	bne.n	8011c70 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011c5a:	45c1      	cmp	r9, r8
 8011c5c:	bf38      	it	cc
 8011c5e:	46c1      	movcc	r9, r8
 8011c60:	f04f 0800 	mov.w	r8, #0
 8011c64:	2c00      	cmp	r4, #0
 8011c66:	d1e5      	bne.n	8011c34 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011c68:	4648      	mov	r0, r9
 8011c6a:	b01d      	add	sp, #116	@ 0x74
 8011c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c70:	9a02      	ldr	r2, [sp, #8]
 8011c72:	2a00      	cmp	r2, #0
 8011c74:	d0de      	beq.n	8011c34 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011c76:	7b57      	ldrb	r7, [r2, #13]
 8011c78:	6833      	ldr	r3, [r6, #0]
 8011c7a:	8894      	ldrh	r4, [r2, #4]
 8011c7c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011c7e:	007f      	lsls	r7, r7, #1
 8011c80:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8011c84:	7a97      	ldrb	r7, [r2, #10]
 8011c86:	4629      	mov	r1, r5
 8011c88:	4307      	orrs	r7, r0
 8011c8a:	4630      	mov	r0, r6
 8011c8c:	4798      	blx	r3
 8011c8e:	4438      	add	r0, r7
 8011c90:	4480      	add	r8, r0
 8011c92:	fa1f f888 	uxth.w	r8, r8
 8011c96:	e7e5      	b.n	8011c64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011c98 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011c98:	b508      	push	{r3, lr}
 8011c9a:	6803      	ldr	r3, [r0, #0]
 8011c9c:	68db      	ldr	r3, [r3, #12]
 8011c9e:	4798      	blx	r3
 8011ca0:	b128      	cbz	r0, 8011cae <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8011ca2:	7b43      	ldrb	r3, [r0, #13]
 8011ca4:	7a80      	ldrb	r0, [r0, #10]
 8011ca6:	005b      	lsls	r3, r3, #1
 8011ca8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011cac:	4318      	orrs	r0, r3
 8011cae:	bd08      	pop	{r3, pc}

08011cb0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011cb0:	b40e      	push	{r1, r2, r3}
 8011cb2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011cb4:	b09e      	sub	sp, #120	@ 0x78
 8011cb6:	ab23      	add	r3, sp, #140	@ 0x8c
 8011cb8:	4605      	mov	r5, r0
 8011cba:	f853 4b04 	ldr.w	r4, [r3], #4
 8011cbe:	9303      	str	r3, [sp, #12]
 8011cc0:	a805      	add	r0, sp, #20
 8011cc2:	f001 f8f8 	bl	8012eb6 <_ZN8touchgfx12TextProviderC1Ev>
 8011cc6:	682b      	ldr	r3, [r5, #0]
 8011cc8:	4628      	mov	r0, r5
 8011cca:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011ccc:	4798      	blx	r3
 8011cce:	682b      	ldr	r3, [r5, #0]
 8011cd0:	4606      	mov	r6, r0
 8011cd2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011cd4:	4628      	mov	r0, r5
 8011cd6:	4798      	blx	r3
 8011cd8:	4633      	mov	r3, r6
 8011cda:	ae1e      	add	r6, sp, #120	@ 0x78
 8011cdc:	4621      	mov	r1, r4
 8011cde:	9000      	str	r0, [sp, #0]
 8011ce0:	9a03      	ldr	r2, [sp, #12]
 8011ce2:	2400      	movs	r4, #0
 8011ce4:	a805      	add	r0, sp, #20
 8011ce6:	f001 f941 	bl	8012f6c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011cea:	f846 4d68 	str.w	r4, [r6, #-104]!
 8011cee:	462a      	mov	r2, r5
 8011cf0:	4633      	mov	r3, r6
 8011cf2:	4621      	mov	r1, r4
 8011cf4:	a805      	add	r0, sp, #20
 8011cf6:	f001 fc65 	bl	80135c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011cfa:	b1f0      	cbz	r0, 8011d3a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011cfc:	280a      	cmp	r0, #10
 8011cfe:	d018      	beq.n	8011d32 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011d00:	9f04      	ldr	r7, [sp, #16]
 8011d02:	b1b7      	cbz	r7, 8011d32 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011d04:	7b78      	ldrb	r0, [r7, #13]
 8011d06:	7a3b      	ldrb	r3, [r7, #8]
 8011d08:	88ea      	ldrh	r2, [r5, #6]
 8011d0a:	00c1      	lsls	r1, r0, #3
 8011d0c:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8011d10:	4319      	orrs	r1, r3
 8011d12:	0643      	lsls	r3, r0, #25
 8011d14:	bf44      	itt	mi
 8011d16:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8011d1a:	b219      	sxthmi	r1, r3
 8011d1c:	0100      	lsls	r0, r0, #4
 8011d1e:	79fb      	ldrb	r3, [r7, #7]
 8011d20:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8011d24:	4303      	orrs	r3, r0
 8011d26:	4413      	add	r3, r2
 8011d28:	1a5b      	subs	r3, r3, r1
 8011d2a:	b21b      	sxth	r3, r3
 8011d2c:	429c      	cmp	r4, r3
 8011d2e:	bfb8      	it	lt
 8011d30:	461c      	movlt	r4, r3
 8011d32:	4633      	mov	r3, r6
 8011d34:	462a      	mov	r2, r5
 8011d36:	2100      	movs	r1, #0
 8011d38:	e7dc      	b.n	8011cf4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8011d3a:	b2a0      	uxth	r0, r4
 8011d3c:	b01e      	add	sp, #120	@ 0x78
 8011d3e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011d42:	b003      	add	sp, #12
 8011d44:	4770      	bx	lr

08011d46 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8011d46:	7a43      	ldrb	r3, [r0, #9]
 8011d48:	8880      	ldrh	r0, [r0, #4]
 8011d4a:	4418      	add	r0, r3
 8011d4c:	b280      	uxth	r0, r0
 8011d4e:	4770      	bx	lr

08011d50 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8011d50:	6803      	ldr	r3, [r0, #0]
 8011d52:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011d54:	4718      	bx	r3

08011d56 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011d56:	b40e      	push	{r1, r2, r3}
 8011d58:	b570      	push	{r4, r5, r6, lr}
 8011d5a:	b09d      	sub	sp, #116	@ 0x74
 8011d5c:	ab21      	add	r3, sp, #132	@ 0x84
 8011d5e:	4604      	mov	r4, r0
 8011d60:	f853 5b04 	ldr.w	r5, [r3], #4
 8011d64:	9302      	str	r3, [sp, #8]
 8011d66:	a803      	add	r0, sp, #12
 8011d68:	f001 f8a5 	bl	8012eb6 <_ZN8touchgfx12TextProviderC1Ev>
 8011d6c:	6823      	ldr	r3, [r4, #0]
 8011d6e:	4620      	mov	r0, r4
 8011d70:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011d72:	4798      	blx	r3
 8011d74:	6823      	ldr	r3, [r4, #0]
 8011d76:	4606      	mov	r6, r0
 8011d78:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011d7a:	4620      	mov	r0, r4
 8011d7c:	4798      	blx	r3
 8011d7e:	4633      	mov	r3, r6
 8011d80:	9000      	str	r0, [sp, #0]
 8011d82:	9a02      	ldr	r2, [sp, #8]
 8011d84:	4629      	mov	r1, r5
 8011d86:	a803      	add	r0, sp, #12
 8011d88:	f001 f8f0 	bl	8012f6c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011d8c:	a803      	add	r0, sp, #12
 8011d8e:	f001 fce7 	bl	8013760 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011d92:	2401      	movs	r4, #1
 8011d94:	b2a3      	uxth	r3, r4
 8011d96:	b140      	cbz	r0, 8011daa <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8011d98:	280a      	cmp	r0, #10
 8011d9a:	bf08      	it	eq
 8011d9c:	3301      	addeq	r3, #1
 8011d9e:	a803      	add	r0, sp, #12
 8011da0:	bf08      	it	eq
 8011da2:	b21c      	sxtheq	r4, r3
 8011da4:	f001 fcdc 	bl	8013760 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011da8:	e7f4      	b.n	8011d94 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8011daa:	4618      	mov	r0, r3
 8011dac:	b01d      	add	sp, #116	@ 0x74
 8011dae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011db2:	b003      	add	sp, #12
 8011db4:	4770      	bx	lr

08011db6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8011db6:	b40e      	push	{r1, r2, r3}
 8011db8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011dba:	b09e      	sub	sp, #120	@ 0x78
 8011dbc:	ab23      	add	r3, sp, #140	@ 0x8c
 8011dbe:	4604      	mov	r4, r0
 8011dc0:	f853 5b04 	ldr.w	r5, [r3], #4
 8011dc4:	9303      	str	r3, [sp, #12]
 8011dc6:	a805      	add	r0, sp, #20
 8011dc8:	f001 f875 	bl	8012eb6 <_ZN8touchgfx12TextProviderC1Ev>
 8011dcc:	6823      	ldr	r3, [r4, #0]
 8011dce:	4620      	mov	r0, r4
 8011dd0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011dd2:	4798      	blx	r3
 8011dd4:	6823      	ldr	r3, [r4, #0]
 8011dd6:	4606      	mov	r6, r0
 8011dd8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011dda:	4620      	mov	r0, r4
 8011ddc:	4798      	blx	r3
 8011dde:	4633      	mov	r3, r6
 8011de0:	4629      	mov	r1, r5
 8011de2:	9000      	str	r0, [sp, #0]
 8011de4:	9a03      	ldr	r2, [sp, #12]
 8011de6:	a805      	add	r0, sp, #20
 8011de8:	ad1e      	add	r5, sp, #120	@ 0x78
 8011dea:	f001 f8bf 	bl	8012f6c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011dee:	2100      	movs	r1, #0
 8011df0:	f845 1d68 	str.w	r1, [r5, #-104]!
 8011df4:	4622      	mov	r2, r4
 8011df6:	462b      	mov	r3, r5
 8011df8:	a805      	add	r0, sp, #20
 8011dfa:	f001 fbe3 	bl	80135c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011dfe:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 8011e02:	b1d8      	cbz	r0, 8011e3c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8011e04:	280a      	cmp	r0, #10
 8011e06:	d012      	beq.n	8011e2e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8011e08:	9804      	ldr	r0, [sp, #16]
 8011e0a:	b180      	cbz	r0, 8011e2e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8011e0c:	7b47      	ldrb	r7, [r0, #13]
 8011e0e:	88e2      	ldrh	r2, [r4, #6]
 8011e10:	00fb      	lsls	r3, r7, #3
 8011e12:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011e16:	7a03      	ldrb	r3, [r0, #8]
 8011e18:	430b      	orrs	r3, r1
 8011e1a:	0679      	lsls	r1, r7, #25
 8011e1c:	bf44      	itt	mi
 8011e1e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011e22:	b21b      	sxthmi	r3, r3
 8011e24:	1ad3      	subs	r3, r2, r3
 8011e26:	b21b      	sxth	r3, r3
 8011e28:	429e      	cmp	r6, r3
 8011e2a:	bfa8      	it	ge
 8011e2c:	461e      	movge	r6, r3
 8011e2e:	462b      	mov	r3, r5
 8011e30:	4622      	mov	r2, r4
 8011e32:	2100      	movs	r1, #0
 8011e34:	a805      	add	r0, sp, #20
 8011e36:	f001 fbc5 	bl	80135c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011e3a:	e7e2      	b.n	8011e02 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8011e3c:	4630      	mov	r0, r6
 8011e3e:	b01e      	add	sp, #120	@ 0x78
 8011e40:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011e44:	b003      	add	sp, #12
 8011e46:	4770      	bx	lr

08011e48 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8011e48:	b513      	push	{r0, r1, r4, lr}
 8011e4a:	6803      	ldr	r3, [r0, #0]
 8011e4c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011e50:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011e54:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011e58:	2400      	movs	r4, #0
 8011e5a:	9400      	str	r4, [sp, #0]
 8011e5c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011e60:	691b      	ldr	r3, [r3, #16]
 8011e62:	4669      	mov	r1, sp
 8011e64:	4798      	blx	r3
 8011e66:	b002      	add	sp, #8
 8011e68:	bd10      	pop	{r4, pc}

08011e6a <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8011e6a:	b538      	push	{r3, r4, r5, lr}
 8011e6c:	680b      	ldr	r3, [r1, #0]
 8011e6e:	460c      	mov	r4, r1
 8011e70:	68db      	ldr	r3, [r3, #12]
 8011e72:	4605      	mov	r5, r0
 8011e74:	4798      	blx	r3
 8011e76:	6823      	ldr	r3, [r4, #0]
 8011e78:	4620      	mov	r0, r4
 8011e7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011e7c:	4629      	mov	r1, r5
 8011e7e:	4798      	blx	r3
 8011e80:	4628      	mov	r0, r5
 8011e82:	bd38      	pop	{r3, r4, r5, pc}

08011e84 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8011e84:	b410      	push	{r4}
 8011e86:	880a      	ldrh	r2, [r1, #0]
 8011e88:	8884      	ldrh	r4, [r0, #4]
 8011e8a:	4422      	add	r2, r4
 8011e8c:	800a      	strh	r2, [r1, #0]
 8011e8e:	88c4      	ldrh	r4, [r0, #6]
 8011e90:	884a      	ldrh	r2, [r1, #2]
 8011e92:	4422      	add	r2, r4
 8011e94:	804a      	strh	r2, [r1, #2]
 8011e96:	6940      	ldr	r0, [r0, #20]
 8011e98:	b120      	cbz	r0, 8011ea4 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8011e9a:	6803      	ldr	r3, [r0, #0]
 8011e9c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011ea0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011ea2:	4718      	bx	r3
 8011ea4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011ea8:	4770      	bx	lr

08011eaa <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8011eaa:	b570      	push	{r4, r5, r6, lr}
 8011eac:	8882      	ldrh	r2, [r0, #4]
 8011eae:	880b      	ldrh	r3, [r1, #0]
 8011eb0:	4413      	add	r3, r2
 8011eb2:	800b      	strh	r3, [r1, #0]
 8011eb4:	88c2      	ldrh	r2, [r0, #6]
 8011eb6:	884b      	ldrh	r3, [r1, #2]
 8011eb8:	460c      	mov	r4, r1
 8011eba:	4413      	add	r3, r2
 8011ebc:	804b      	strh	r3, [r1, #2]
 8011ebe:	4605      	mov	r5, r0
 8011ec0:	1d01      	adds	r1, r0, #4
 8011ec2:	4620      	mov	r0, r4
 8011ec4:	f7f8 ff2a 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 8011ec8:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8011ecc:	2b00      	cmp	r3, #0
 8011ece:	dd0b      	ble.n	8011ee8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011ed0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011ed4:	2b00      	cmp	r3, #0
 8011ed6:	dd07      	ble.n	8011ee8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011ed8:	6968      	ldr	r0, [r5, #20]
 8011eda:	b128      	cbz	r0, 8011ee8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011edc:	6803      	ldr	r3, [r0, #0]
 8011ede:	4621      	mov	r1, r4
 8011ee0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011ee2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011ee6:	4718      	bx	r3
 8011ee8:	bd70      	pop	{r4, r5, r6, pc}
	...

08011eec <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8011eec:	b570      	push	{r4, r5, r6, lr}
 8011eee:	8882      	ldrh	r2, [r0, #4]
 8011ef0:	880b      	ldrh	r3, [r1, #0]
 8011ef2:	4413      	add	r3, r2
 8011ef4:	800b      	strh	r3, [r1, #0]
 8011ef6:	88c2      	ldrh	r2, [r0, #6]
 8011ef8:	884b      	ldrh	r3, [r1, #2]
 8011efa:	460c      	mov	r4, r1
 8011efc:	4413      	add	r3, r2
 8011efe:	804b      	strh	r3, [r1, #2]
 8011f00:	4605      	mov	r5, r0
 8011f02:	1d01      	adds	r1, r0, #4
 8011f04:	4620      	mov	r0, r4
 8011f06:	f7f8 ff09 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 8011f0a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8011f0e:	2b00      	cmp	r3, #0
 8011f10:	dd19      	ble.n	8011f46 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011f12:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011f16:	2b00      	cmp	r3, #0
 8011f18:	dd15      	ble.n	8011f46 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011f1a:	6968      	ldr	r0, [r5, #20]
 8011f1c:	b128      	cbz	r0, 8011f2a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8011f1e:	6803      	ldr	r3, [r0, #0]
 8011f20:	4621      	mov	r1, r4
 8011f22:	691b      	ldr	r3, [r3, #16]
 8011f24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011f28:	4718      	bx	r3
 8011f2a:	4b07      	ldr	r3, [pc, #28]	@ (8011f48 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8011f2c:	681b      	ldr	r3, [r3, #0]
 8011f2e:	3304      	adds	r3, #4
 8011f30:	429d      	cmp	r5, r3
 8011f32:	d108      	bne.n	8011f46 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011f34:	f7fe fdae 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 8011f38:	6803      	ldr	r3, [r0, #0]
 8011f3a:	6821      	ldr	r1, [r4, #0]
 8011f3c:	6862      	ldr	r2, [r4, #4]
 8011f3e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011f40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011f44:	4718      	bx	r3
 8011f46:	bd70      	pop	{r4, r5, r6, pc}
 8011f48:	20015804 	.word	0x20015804

08011f4c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8011f4c:	b570      	push	{r4, r5, r6, lr}
 8011f4e:	4604      	mov	r4, r0
 8011f50:	4616      	mov	r6, r2
 8011f52:	460d      	mov	r5, r1
 8011f54:	b901      	cbnz	r1, 8011f58 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8011f56:	b192      	cbz	r2, 8011f7e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8011f58:	6823      	ldr	r3, [r4, #0]
 8011f5a:	4620      	mov	r0, r4
 8011f5c:	699b      	ldr	r3, [r3, #24]
 8011f5e:	4798      	blx	r3
 8011f60:	88e2      	ldrh	r2, [r4, #6]
 8011f62:	88a1      	ldrh	r1, [r4, #4]
 8011f64:	4432      	add	r2, r6
 8011f66:	4429      	add	r1, r5
 8011f68:	4620      	mov	r0, r4
 8011f6a:	b212      	sxth	r2, r2
 8011f6c:	b209      	sxth	r1, r1
 8011f6e:	f7f1 fdca 	bl	8003b06 <_ZN8touchgfx8Drawable5setXYEss>
 8011f72:	6823      	ldr	r3, [r4, #0]
 8011f74:	4620      	mov	r0, r4
 8011f76:	699b      	ldr	r3, [r3, #24]
 8011f78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011f7c:	4718      	bx	r3
 8011f7e:	bd70      	pop	{r4, r5, r6, pc}

08011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8011f80:	b510      	push	{r4, lr}
 8011f82:	4604      	mov	r4, r0
 8011f84:	4608      	mov	r0, r1
 8011f86:	2300      	movs	r3, #0
 8011f88:	8023      	strh	r3, [r4, #0]
 8011f8a:	8063      	strh	r3, [r4, #2]
 8011f8c:	6803      	ldr	r3, [r0, #0]
 8011f8e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011f92:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8011f96:	80a1      	strh	r1, [r4, #4]
 8011f98:	80e2      	strh	r2, [r4, #6]
 8011f9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011f9c:	4621      	mov	r1, r4
 8011f9e:	4798      	blx	r3
 8011fa0:	4620      	mov	r0, r4
 8011fa2:	bd10      	pop	{r4, pc}

08011fa4 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 8011fa4:	4770      	bx	lr

08011fa6 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 8011fa6:	b510      	push	{r4, lr}
 8011fa8:	211c      	movs	r1, #28
 8011faa:	4604      	mov	r4, r0
 8011fac:	f011 fbd6 	bl	802375c <_ZdlPvj>
 8011fb0:	4620      	mov	r0, r4
 8011fb2:	bd10      	pop	{r4, pc}

08011fb4 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 8011fb4:	4a04      	ldr	r2, [pc, #16]	@ (8011fc8 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 8011fb6:	6002      	str	r2, [r0, #0]
 8011fb8:	2200      	movs	r2, #0
 8011fba:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8011fbe:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011fc2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011fc6:	4770      	bx	lr
 8011fc8:	08027a44 	.word	0x08027a44

08011fcc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 8011fcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011fd0:	4604      	mov	r4, r0
 8011fd2:	b087      	sub	sp, #28
 8011fd4:	8b45      	ldrh	r5, [r0, #26]
 8011fd6:	f8b2 c000 	ldrh.w	ip, [r2]
 8011fda:	9105      	str	r1, [sp, #20]
 8011fdc:	68e1      	ldr	r1, [r4, #12]
 8011fde:	9203      	str	r2, [sp, #12]
 8011fe0:	1c68      	adds	r0, r5, #1
 8011fe2:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8011fe6:	f01c 0501 	ands.w	r5, ip, #1
 8011fea:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011fee:	9502      	str	r5, [sp, #8]
 8011ff0:	b280      	uxth	r0, r0
 8011ff2:	d07d      	beq.n	80120f0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 8011ff4:	ee07 2a90 	vmov	s15, r2
 8011ff8:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8011ffc:	8360      	strh	r0, [r4, #26]
 8011ffe:	edc1 6a00 	vstr	s13, [r1]
 8012002:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012006:	8b61      	ldrh	r1, [r4, #26]
 8012008:	ee07 2a10 	vmov	s14, r2
 801200c:	68e2      	ldr	r2, [r4, #12]
 801200e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012012:	f04f 0e00 	mov.w	lr, #0
 8012016:	1c48      	adds	r0, r1, #1
 8012018:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 801201c:	ee06 ea10 	vmov	s12, lr
 8012020:	8360      	strh	r0, [r4, #26]
 8012022:	ed82 7a00 	vstr	s14, [r2]
 8012026:	8b21      	ldrh	r1, [r4, #24]
 8012028:	68a2      	ldr	r2, [r4, #8]
 801202a:	2501      	movs	r5, #1
 801202c:	1c48      	adds	r0, r1, #1
 801202e:	8320      	strh	r0, [r4, #24]
 8012030:	5455      	strb	r5, [r2, r1]
 8012032:	2200      	movs	r2, #0
 8012034:	3304      	adds	r3, #4
 8012036:	ee07 2a90 	vmov	s15, r2
 801203a:	9300      	str	r3, [sp, #0]
 801203c:	46aa      	mov	sl, r5
 801203e:	4613      	mov	r3, r2
 8012040:	4611      	mov	r1, r2
 8012042:	462e      	mov	r6, r5
 8012044:	9201      	str	r2, [sp, #4]
 8012046:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801204a:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 801204e:	9805      	ldr	r0, [sp, #20]
 8012050:	f8d4 b008 	ldr.w	fp, [r4, #8]
 8012054:	f108 0701 	add.w	r7, r8, #1
 8012058:	42a8      	cmp	r0, r5
 801205a:	b2bf      	uxth	r7, r7
 801205c:	eb0b 0908 	add.w	r9, fp, r8
 8012060:	f340 80db 	ble.w	801221a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 8012064:	fa4c f906 	asr.w	r9, ip, r6
 8012068:	f009 0901 	and.w	r9, r9, #1
 801206c:	fa5f f389 	uxtb.w	r3, r9
 8012070:	9304      	str	r3, [sp, #16]
 8012072:	9b00      	ldr	r3, [sp, #0]
 8012074:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012078:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801207c:	f1b9 0f00 	cmp.w	r9, #0
 8012080:	d07d      	beq.n	801217e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 8012082:	ee05 1a10 	vmov	s10, r1
 8012086:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 801208a:	ee05 3a10 	vmov	s10, r3
 801208e:	8327      	strh	r7, [r4, #24]
 8012090:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8012094:	f1ba 0f00 	cmp.w	sl, #0
 8012098:	d050      	beq.n	801213c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 801209a:	f04f 0002 	mov.w	r0, #2
 801209e:	f80b 0008 	strb.w	r0, [fp, r8]
 80120a2:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80120a6:	68e7      	ldr	r7, [r4, #12]
 80120a8:	f108 0901 	add.w	r9, r8, #1
 80120ac:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80120b0:	f8a4 901a 	strh.w	r9, [r4, #26]
 80120b4:	edc7 4a00 	vstr	s9, [r7]
 80120b8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80120bc:	68e7      	ldr	r7, [r4, #12]
 80120be:	f108 0901 	add.w	r9, r8, #1
 80120c2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80120c6:	f8a4 901a 	strh.w	r9, [r4, #26]
 80120ca:	ed87 5a00 	vstr	s10, [r7]
 80120ce:	3601      	adds	r6, #1
 80120d0:	2e10      	cmp	r6, #16
 80120d2:	d106      	bne.n	80120e2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 80120d4:	9e01      	ldr	r6, [sp, #4]
 80120d6:	9803      	ldr	r0, [sp, #12]
 80120d8:	3601      	adds	r6, #1
 80120da:	9601      	str	r6, [sp, #4]
 80120dc:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 80120e0:	2600      	movs	r6, #0
 80120e2:	9800      	ldr	r0, [sp, #0]
 80120e4:	f8dd a010 	ldr.w	sl, [sp, #16]
 80120e8:	3004      	adds	r0, #4
 80120ea:	3501      	adds	r5, #1
 80120ec:	9000      	str	r0, [sp, #0]
 80120ee:	e7ac      	b.n	801204a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 80120f0:	ee06 2a10 	vmov	s12, r2
 80120f4:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 80120f8:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80120fc:	ee16 5a10 	vmov	r5, s12
 8012100:	442a      	add	r2, r5
 8012102:	ee06 2a90 	vmov	s13, r2
 8012106:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 801210a:	8360      	strh	r0, [r4, #26]
 801210c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012110:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8012114:	4472      	add	r2, lr
 8012116:	ee07 2a10 	vmov	s14, r2
 801211a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 801211e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012122:	edc1 6a00 	vstr	s13, [r1]
 8012126:	8b61      	ldrh	r1, [r4, #26]
 8012128:	68e2      	ldr	r2, [r4, #12]
 801212a:	ee27 7a27 	vmul.f32	s14, s14, s15
 801212e:	1c48      	adds	r0, r1, #1
 8012130:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8012134:	8360      	strh	r0, [r4, #26]
 8012136:	ed82 7a00 	vstr	s14, [r2]
 801213a:	e774      	b.n	8012026 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 801213c:	f04f 0005 	mov.w	r0, #5
 8012140:	f80b 0008 	strb.w	r0, [fp, r8]
 8012144:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8012148:	68e7      	ldr	r7, [r4, #12]
 801214a:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 801214e:	f108 0901 	add.w	r9, r8, #1
 8012152:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8012156:	f8a4 901a 	strh.w	r9, [r4, #26]
 801215a:	ed87 4a00 	vstr	s8, [r7]
 801215e:	ee04 2a10 	vmov	s8, r2
 8012162:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8012166:	68e7      	ldr	r7, [r4, #12]
 8012168:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 801216c:	f108 0901 	add.w	r9, r8, #1
 8012170:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8012174:	f8a4 901a 	strh.w	r9, [r4, #26]
 8012178:	ed87 4a00 	vstr	s8, [r7]
 801217c:	e791      	b.n	80120a2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 801217e:	f1ba 0f00 	cmp.w	sl, #0
 8012182:	d146      	bne.n	8012212 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 8012184:	f04f 0005 	mov.w	r0, #5
 8012188:	8327      	strh	r7, [r4, #24]
 801218a:	f80b 0008 	strb.w	r0, [fp, r8]
 801218e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8012192:	68e7      	ldr	r7, [r4, #12]
 8012194:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8012198:	f108 0901 	add.w	r9, r8, #1
 801219c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80121a0:	ee17 0a90 	vmov	r0, s15
 80121a4:	f8a4 901a 	strh.w	r9, [r4, #26]
 80121a8:	ed87 5a00 	vstr	s10, [r7]
 80121ac:	ee05 2a10 	vmov	s10, r2
 80121b0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80121b4:	68e7      	ldr	r7, [r4, #12]
 80121b6:	4408      	add	r0, r1
 80121b8:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 80121bc:	ee07 0a90 	vmov	s15, r0
 80121c0:	f108 0901 	add.w	r9, r8, #1
 80121c4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80121c8:	f8a4 901a 	strh.w	r9, [r4, #26]
 80121cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80121d0:	ed87 5a00 	vstr	s10, [r7]
 80121d4:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80121d8:	68e7      	ldr	r7, [r4, #12]
 80121da:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80121de:	f108 0901 	add.w	r9, r8, #1
 80121e2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80121e6:	441a      	add	r2, r3
 80121e8:	f8a4 901a 	strh.w	r9, [r4, #26]
 80121ec:	edc7 7a00 	vstr	s15, [r7]
 80121f0:	ee07 2a90 	vmov	s15, r2
 80121f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80121f8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80121fc:	68e7      	ldr	r7, [r4, #12]
 80121fe:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8012202:	f108 0901 	add.w	r9, r8, #1
 8012206:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801220a:	f8a4 901a 	strh.w	r9, [r4, #26]
 801220e:	edc7 7a00 	vstr	s15, [r7]
 8012212:	461a      	mov	r2, r3
 8012214:	ee07 1a90 	vmov	s15, r1
 8012218:	e759      	b.n	80120ce <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 801221a:	f1ba 0f00 	cmp.w	sl, #0
 801221e:	d045      	beq.n	80122ac <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 8012220:	ee05 1a90 	vmov	s11, r1
 8012224:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8012228:	eef4 5a66 	vcmp.f32	s11, s13
 801222c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012230:	d108      	bne.n	8012244 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 8012232:	ee05 3a90 	vmov	s11, r3
 8012236:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801223a:	eef4 5a47 	vcmp.f32	s11, s14
 801223e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012242:	d033      	beq.n	80122ac <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 8012244:	9b02      	ldr	r3, [sp, #8]
 8012246:	8327      	strh	r7, [r4, #24]
 8012248:	b1b3      	cbz	r3, 8012278 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 801224a:	2302      	movs	r3, #2
 801224c:	f889 3000 	strb.w	r3, [r9]
 8012250:	8b62      	ldrh	r2, [r4, #26]
 8012252:	68e3      	ldr	r3, [r4, #12]
 8012254:	1c51      	adds	r1, r2, #1
 8012256:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801225a:	8361      	strh	r1, [r4, #26]
 801225c:	edc3 6a00 	vstr	s13, [r3]
 8012260:	8b62      	ldrh	r2, [r4, #26]
 8012262:	68e3      	ldr	r3, [r4, #12]
 8012264:	1c51      	adds	r1, r2, #1
 8012266:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801226a:	8361      	strh	r1, [r4, #26]
 801226c:	ed83 7a00 	vstr	s14, [r3]
 8012270:	9800      	ldr	r0, [sp, #0]
 8012272:	b007      	add	sp, #28
 8012274:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012278:	2305      	movs	r3, #5
 801227a:	f889 3000 	strb.w	r3, [r9]
 801227e:	8b62      	ldrh	r2, [r4, #26]
 8012280:	68e3      	ldr	r3, [r4, #12]
 8012282:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8012286:	1c51      	adds	r1, r2, #1
 8012288:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801228c:	8361      	strh	r1, [r4, #26]
 801228e:	ee07 ea90 	vmov	s15, lr
 8012292:	ed83 6a00 	vstr	s12, [r3]
 8012296:	8b62      	ldrh	r2, [r4, #26]
 8012298:	68e3      	ldr	r3, [r4, #12]
 801229a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801229e:	1c51      	adds	r1, r2, #1
 80122a0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80122a4:	8361      	strh	r1, [r4, #26]
 80122a6:	edc3 7a00 	vstr	s15, [r3]
 80122aa:	e7d1      	b.n	8012250 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 80122ac:	ee05 2a90 	vmov	s11, r2
 80122b0:	9902      	ldr	r1, [sp, #8]
 80122b2:	8327      	strh	r7, [r4, #24]
 80122b4:	2305      	movs	r3, #5
 80122b6:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80122ba:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80122be:	f889 3000 	strb.w	r3, [r9]
 80122c2:	b181      	cbz	r1, 80122e6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 80122c4:	8b62      	ldrh	r2, [r4, #26]
 80122c6:	68e3      	ldr	r3, [r4, #12]
 80122c8:	1c51      	adds	r1, r2, #1
 80122ca:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80122ce:	8361      	strh	r1, [r4, #26]
 80122d0:	ed83 5a00 	vstr	s10, [r3]
 80122d4:	8b62      	ldrh	r2, [r4, #26]
 80122d6:	68e3      	ldr	r3, [r4, #12]
 80122d8:	1c51      	adds	r1, r2, #1
 80122da:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80122de:	8361      	strh	r1, [r4, #26]
 80122e0:	edc3 5a00 	vstr	s11, [r3]
 80122e4:	e7b4      	b.n	8012250 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 80122e6:	8b65      	ldrh	r5, [r4, #26]
 80122e8:	68e1      	ldr	r1, [r4, #12]
 80122ea:	1c6e      	adds	r6, r5, #1
 80122ec:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 80122f0:	8366      	strh	r6, [r4, #26]
 80122f2:	ed81 5a00 	vstr	s10, [r1]
 80122f6:	8b65      	ldrh	r5, [r4, #26]
 80122f8:	68e1      	ldr	r1, [r4, #12]
 80122fa:	1c6e      	adds	r6, r5, #1
 80122fc:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8012300:	8366      	strh	r6, [r4, #26]
 8012302:	edc1 5a00 	vstr	s11, [r1]
 8012306:	8b65      	ldrh	r5, [r4, #26]
 8012308:	68e1      	ldr	r1, [r4, #12]
 801230a:	1c6e      	adds	r6, r5, #1
 801230c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8012310:	ee17 0a90 	vmov	r0, s15
 8012314:	ee16 5a10 	vmov	r5, s12
 8012318:	4428      	add	r0, r5
 801231a:	ee07 0a90 	vmov	s15, r0
 801231e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012322:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8012326:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801232a:	4472      	add	r2, lr
 801232c:	8366      	strh	r6, [r4, #26]
 801232e:	edc1 7a00 	vstr	s15, [r1]
 8012332:	ee07 2a90 	vmov	s15, r2
 8012336:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801233a:	8b61      	ldrh	r1, [r4, #26]
 801233c:	68e5      	ldr	r5, [r4, #12]
 801233e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8012342:	1c4e      	adds	r6, r1, #1
 8012344:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 8012348:	8366      	strh	r6, [r4, #26]
 801234a:	edc1 7a00 	vstr	s15, [r1]
 801234e:	8b22      	ldrh	r2, [r4, #24]
 8012350:	68a1      	ldr	r1, [r4, #8]
 8012352:	1c55      	adds	r5, r2, #1
 8012354:	8325      	strh	r5, [r4, #24]
 8012356:	548b      	strb	r3, [r1, r2]
 8012358:	e791      	b.n	801227e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

0801235c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 801235c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012360:	b08e      	sub	sp, #56	@ 0x38
 8012362:	4604      	mov	r4, r0
 8012364:	4688      	mov	r8, r1
 8012366:	4615      	mov	r5, r2
 8012368:	4699      	mov	r9, r3
 801236a:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 801236c:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 8012370:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 8012372:	f7f0 fc73 	bl	8002c5c <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 8012376:	6060      	str	r0, [r4, #4]
 8012378:	f1b9 0f00 	cmp.w	r9, #0
 801237c:	f000 80e8 	beq.w	8012550 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8012380:	2800      	cmp	r0, #0
 8012382:	f000 80e5 	beq.w	8012550 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8012386:	a805      	add	r0, sp, #20
 8012388:	f000 f8f9 	bl	801257e <_ZN8touchgfx9Matrix3x3C1Ev>
 801238c:	6833      	ldr	r3, [r6, #0]
 801238e:	4630      	mov	r0, r6
 8012390:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8012392:	4798      	blx	r3
 8012394:	a805      	add	r0, sp, #20
 8012396:	eef0 0a40 	vmov.f32	s1, s0
 801239a:	f000 f8f4 	bl	8012586 <_ZN8touchgfx9Matrix3x35scaleEff>
 801239e:	6860      	ldr	r0, [r4, #4]
 80123a0:	f1ba 0f03 	cmp.w	sl, #3
 80123a4:	d83b      	bhi.n	801241e <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 80123a6:	e8df f00a 	tbb	[pc, sl]
 80123aa:	1002      	.short	0x1002
 80123ac:	9f71      	.short	0x9f71
 80123ae:	6803      	ldr	r3, [r0, #0]
 80123b0:	462a      	mov	r2, r5
 80123b2:	689b      	ldr	r3, [r3, #8]
 80123b4:	4641      	mov	r1, r8
 80123b6:	4798      	blx	r3
 80123b8:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 80123bc:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80123c0:	ee07 7a90 	vmov	s15, r7
 80123c4:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80123c8:	e026      	b.n	8012418 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 80123ca:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 80123ce:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 80123d2:	8869      	ldrh	r1, [r5, #2]
 80123d4:	f8ad 2010 	strh.w	r2, [sp, #16]
 80123d8:	1a9b      	subs	r3, r3, r2
 80123da:	1a5b      	subs	r3, r3, r1
 80123dc:	f8ad 300c 	strh.w	r3, [sp, #12]
 80123e0:	882b      	ldrh	r3, [r5, #0]
 80123e2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80123e6:	88ab      	ldrh	r3, [r5, #4]
 80123e8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80123ec:	6803      	ldr	r3, [r0, #0]
 80123ee:	aa03      	add	r2, sp, #12
 80123f0:	689b      	ldr	r3, [r3, #8]
 80123f2:	4641      	mov	r1, r8
 80123f4:	4798      	blx	r3
 80123f6:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 8012558 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 80123fa:	a805      	add	r0, sp, #20
 80123fc:	f000 f8e8 	bl	80125d0 <_ZN8touchgfx9Matrix3x36rotateEf>
 8012400:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8012404:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8012406:	ee07 7a90 	vmov	s15, r7
 801240a:	1a9b      	subs	r3, r3, r2
 801240c:	ee00 3a10 	vmov	s0, r3
 8012410:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8012414:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8012418:	a805      	add	r0, sp, #20
 801241a:	f000 f927 	bl	801266c <_ZN8touchgfx9Matrix3x39translateEff>
 801241e:	6860      	ldr	r0, [r4, #4]
 8012420:	6803      	ldr	r3, [r0, #0]
 8012422:	a905      	add	r1, sp, #20
 8012424:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012426:	4798      	blx	r3
 8012428:	6860      	ldr	r0, [r4, #4]
 801242a:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801242c:	6803      	ldr	r3, [r0, #0]
 801242e:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 8012432:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012434:	4798      	blx	r3
 8012436:	6860      	ldr	r0, [r4, #4]
 8012438:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 801243c:	6803      	ldr	r3, [r0, #0]
 801243e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012440:	4798      	blx	r3
 8012442:	6860      	ldr	r0, [r4, #4]
 8012444:	6803      	ldr	r3, [r0, #0]
 8012446:	2101      	movs	r1, #1
 8012448:	68db      	ldr	r3, [r3, #12]
 801244a:	2500      	movs	r5, #0
 801244c:	4798      	blx	r3
 801244e:	f8b9 7000 	ldrh.w	r7, [r9]
 8012452:	61a5      	str	r5, [r4, #24]
 8012454:	f104 0310 	add.w	r3, r4, #16
 8012458:	f104 0208 	add.w	r2, r4, #8
 801245c:	f104 0114 	add.w	r1, r4, #20
 8012460:	f104 000c 	add.w	r0, r4, #12
 8012464:	f109 0602 	add.w	r6, r9, #2
 8012468:	f7f2 fa90 	bl	800498c <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 801246c:	42af      	cmp	r7, r5
 801246e:	dd60      	ble.n	8012532 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 8012470:	8831      	ldrh	r1, [r6, #0]
 8012472:	f101 030f 	add.w	r3, r1, #15
 8012476:	1cb2      	adds	r2, r6, #2
 8012478:	f3c3 1307 	ubfx	r3, r3, #4, #8
 801247c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012480:	4620      	mov	r0, r4
 8012482:	f7ff fda3 	bl	8011fcc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 8012486:	3501      	adds	r5, #1
 8012488:	4606      	mov	r6, r0
 801248a:	e7ef      	b.n	801246c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 801248c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8012490:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8012494:	8829      	ldrh	r1, [r5, #0]
 8012496:	f8ad 2010 	strh.w	r2, [sp, #16]
 801249a:	1a9b      	subs	r3, r3, r2
 801249c:	1a5b      	subs	r3, r3, r1
 801249e:	f8ad 300c 	strh.w	r3, [sp, #12]
 80124a2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80124a6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80124aa:	886d      	ldrh	r5, [r5, #2]
 80124ac:	f8ad 1012 	strh.w	r1, [sp, #18]
 80124b0:	1a5b      	subs	r3, r3, r1
 80124b2:	1b5b      	subs	r3, r3, r5
 80124b4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80124b8:	6803      	ldr	r3, [r0, #0]
 80124ba:	aa03      	add	r2, sp, #12
 80124bc:	689b      	ldr	r3, [r3, #8]
 80124be:	4641      	mov	r1, r8
 80124c0:	4798      	blx	r3
 80124c2:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 801255c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 80124c6:	a805      	add	r0, sp, #20
 80124c8:	f000 f882 	bl	80125d0 <_ZN8touchgfx9Matrix3x36rotateEf>
 80124cc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80124d0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80124d2:	1a9b      	subs	r3, r3, r2
 80124d4:	ee00 3a90 	vmov	s1, r3
 80124d8:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 80124dc:	1bdb      	subs	r3, r3, r7
 80124de:	ee00 3a10 	vmov	s0, r3
 80124e2:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 80124e6:	e795      	b.n	8012414 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 80124e8:	886b      	ldrh	r3, [r5, #2]
 80124ea:	f8ad 300c 	strh.w	r3, [sp, #12]
 80124ee:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80124f2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80124f6:	8829      	ldrh	r1, [r5, #0]
 80124f8:	f8ad 2012 	strh.w	r2, [sp, #18]
 80124fc:	1a9b      	subs	r3, r3, r2
 80124fe:	1a5b      	subs	r3, r3, r1
 8012500:	f8ad 300e 	strh.w	r3, [sp, #14]
 8012504:	88eb      	ldrh	r3, [r5, #6]
 8012506:	f8ad 3010 	strh.w	r3, [sp, #16]
 801250a:	6803      	ldr	r3, [r0, #0]
 801250c:	aa03      	add	r2, sp, #12
 801250e:	689b      	ldr	r3, [r3, #8]
 8012510:	4641      	mov	r1, r8
 8012512:	4798      	blx	r3
 8012514:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 8012560 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 8012518:	a805      	add	r0, sp, #20
 801251a:	f000 f859 	bl	80125d0 <_ZN8touchgfx9Matrix3x36rotateEf>
 801251e:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8012522:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8012526:	1bdb      	subs	r3, r3, r7
 8012528:	ee00 3a90 	vmov	s1, r3
 801252c:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8012530:	e748      	b.n	80123c4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 8012532:	6860      	ldr	r0, [r4, #4]
 8012534:	8b22      	ldrh	r2, [r4, #24]
 8012536:	6803      	ldr	r3, [r0, #0]
 8012538:	2100      	movs	r1, #0
 801253a:	9101      	str	r1, [sp, #4]
 801253c:	8b61      	ldrh	r1, [r4, #26]
 801253e:	9100      	str	r1, [sp, #0]
 8012540:	6a1d      	ldr	r5, [r3, #32]
 8012542:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 8012546:	47a8      	blx	r5
 8012548:	6860      	ldr	r0, [r4, #4]
 801254a:	6803      	ldr	r3, [r0, #0]
 801254c:	69db      	ldr	r3, [r3, #28]
 801254e:	4798      	blx	r3
 8012550:	b00e      	add	sp, #56	@ 0x38
 8012552:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012556:	bf00      	nop
 8012558:	42b40000 	.word	0x42b40000
 801255c:	43340000 	.word	0x43340000
 8012560:	43870000 	.word	0x43870000

08012564 <_ZN8touchgfx9Matrix3x35resetEv>:
 8012564:	2300      	movs	r3, #0
 8012566:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801256a:	6002      	str	r2, [r0, #0]
 801256c:	6043      	str	r3, [r0, #4]
 801256e:	6083      	str	r3, [r0, #8]
 8012570:	60c3      	str	r3, [r0, #12]
 8012572:	6102      	str	r2, [r0, #16]
 8012574:	6143      	str	r3, [r0, #20]
 8012576:	6183      	str	r3, [r0, #24]
 8012578:	61c3      	str	r3, [r0, #28]
 801257a:	6202      	str	r2, [r0, #32]
 801257c:	4770      	bx	lr

0801257e <_ZN8touchgfx9Matrix3x3C1Ev>:
 801257e:	b508      	push	{r3, lr}
 8012580:	f7ff fff0 	bl	8012564 <_ZN8touchgfx9Matrix3x35resetEv>
 8012584:	bd08      	pop	{r3, pc}

08012586 <_ZN8touchgfx9Matrix3x35scaleEff>:
 8012586:	edd0 7a00 	vldr	s15, [r0]
 801258a:	ee67 7a80 	vmul.f32	s15, s15, s0
 801258e:	edc0 7a00 	vstr	s15, [r0]
 8012592:	edd0 7a01 	vldr	s15, [r0, #4]
 8012596:	ee67 7a80 	vmul.f32	s15, s15, s0
 801259a:	edc0 7a01 	vstr	s15, [r0, #4]
 801259e:	edd0 7a02 	vldr	s15, [r0, #8]
 80125a2:	ee27 0a80 	vmul.f32	s0, s15, s0
 80125a6:	edd0 7a03 	vldr	s15, [r0, #12]
 80125aa:	ed80 0a02 	vstr	s0, [r0, #8]
 80125ae:	ee67 7aa0 	vmul.f32	s15, s15, s1
 80125b2:	edc0 7a03 	vstr	s15, [r0, #12]
 80125b6:	edd0 7a04 	vldr	s15, [r0, #16]
 80125ba:	ee67 7aa0 	vmul.f32	s15, s15, s1
 80125be:	edc0 7a04 	vstr	s15, [r0, #16]
 80125c2:	edd0 7a05 	vldr	s15, [r0, #20]
 80125c6:	ee67 0aa0 	vmul.f32	s1, s15, s1
 80125ca:	edc0 0a05 	vstr	s1, [r0, #20]
 80125ce:	4770      	bx	lr

080125d0 <_ZN8touchgfx9Matrix3x36rotateEf>:
 80125d0:	b510      	push	{r4, lr}
 80125d2:	eddf 7a24 	vldr	s15, [pc, #144]	@ 8012664 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 80125d6:	ee20 0a27 	vmul.f32	s0, s0, s15
 80125da:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8012668 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 80125de:	ed2d 8b02 	vpush	{d8}
 80125e2:	eec0 8a27 	vdiv.f32	s17, s0, s15
 80125e6:	4604      	mov	r4, r0
 80125e8:	eeb0 0a68 	vmov.f32	s0, s17
 80125ec:	f011 f8fe 	bl	80237ec <cosf>
 80125f0:	eeb0 8a40 	vmov.f32	s16, s0
 80125f4:	eeb0 0a68 	vmov.f32	s0, s17
 80125f8:	f011 f93c 	bl	8023874 <sinf>
 80125fc:	edd4 6a03 	vldr	s13, [r4, #12]
 8012600:	edd4 4a00 	vldr	s9, [r4]
 8012604:	ed94 7a04 	vldr	s14, [r4, #16]
 8012608:	ed94 5a01 	vldr	s10, [r4, #4]
 801260c:	edd4 5a02 	vldr	s11, [r4, #8]
 8012610:	ee60 7a66 	vnmul.f32	s15, s0, s13
 8012614:	ee66 6a88 	vmul.f32	s13, s13, s16
 8012618:	eee8 7a24 	vfma.f32	s15, s16, s9
 801261c:	eee0 6a24 	vfma.f32	s13, s0, s9
 8012620:	edc4 7a00 	vstr	s15, [r4]
 8012624:	ee60 7a47 	vnmul.f32	s15, s0, s14
 8012628:	ee27 7a08 	vmul.f32	s14, s14, s16
 801262c:	eee8 7a05 	vfma.f32	s15, s16, s10
 8012630:	eea0 7a05 	vfma.f32	s14, s0, s10
 8012634:	edc4 7a01 	vstr	s15, [r4, #4]
 8012638:	edd4 7a05 	vldr	s15, [r4, #20]
 801263c:	edc4 6a03 	vstr	s13, [r4, #12]
 8012640:	ee20 6a67 	vnmul.f32	s12, s0, s15
 8012644:	ee67 7a88 	vmul.f32	s15, s15, s16
 8012648:	eea8 6a25 	vfma.f32	s12, s16, s11
 801264c:	ecbd 8b02 	vpop	{d8}
 8012650:	eee0 7a25 	vfma.f32	s15, s0, s11
 8012654:	ed84 6a02 	vstr	s12, [r4, #8]
 8012658:	ed84 7a04 	vstr	s14, [r4, #16]
 801265c:	edc4 7a05 	vstr	s15, [r4, #20]
 8012660:	bd10      	pop	{r4, pc}
 8012662:	bf00      	nop
 8012664:	40490fdb 	.word	0x40490fdb
 8012668:	43340000 	.word	0x43340000

0801266c <_ZN8touchgfx9Matrix3x39translateEff>:
 801266c:	ed90 6a06 	vldr	s12, [r0, #24]
 8012670:	edd0 7a00 	vldr	s15, [r0]
 8012674:	edd0 6a07 	vldr	s13, [r0, #28]
 8012678:	ed90 7a08 	vldr	s14, [r0, #32]
 801267c:	eee6 7a00 	vfma.f32	s15, s12, s0
 8012680:	edc0 7a00 	vstr	s15, [r0]
 8012684:	edd0 7a01 	vldr	s15, [r0, #4]
 8012688:	eee6 7a80 	vfma.f32	s15, s13, s0
 801268c:	edc0 7a01 	vstr	s15, [r0, #4]
 8012690:	edd0 7a02 	vldr	s15, [r0, #8]
 8012694:	eee7 7a00 	vfma.f32	s15, s14, s0
 8012698:	edc0 7a02 	vstr	s15, [r0, #8]
 801269c:	edd0 7a03 	vldr	s15, [r0, #12]
 80126a0:	eee6 7a20 	vfma.f32	s15, s12, s1
 80126a4:	edc0 7a03 	vstr	s15, [r0, #12]
 80126a8:	edd0 7a04 	vldr	s15, [r0, #16]
 80126ac:	eee6 7aa0 	vfma.f32	s15, s13, s1
 80126b0:	edc0 7a04 	vstr	s15, [r0, #16]
 80126b4:	edd0 7a05 	vldr	s15, [r0, #20]
 80126b8:	eee7 7a20 	vfma.f32	s15, s14, s1
 80126bc:	edc0 7a05 	vstr	s15, [r0, #20]
 80126c0:	4770      	bx	lr

080126c2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 80126c2:	edd0 6a01 	vldr	s13, [r0, #4]
 80126c6:	edd0 7a04 	vldr	s15, [r0, #16]
 80126ca:	ed90 7a03 	vldr	s14, [r0, #12]
 80126ce:	ee60 7aa7 	vmul.f32	s15, s1, s15
 80126d2:	ee60 0aa6 	vmul.f32	s1, s1, s13
 80126d6:	edd0 6a00 	vldr	s13, [r0]
 80126da:	eee7 7a00 	vfma.f32	s15, s14, s0
 80126de:	b084      	sub	sp, #16
 80126e0:	eee6 0a80 	vfma.f32	s1, s13, s0
 80126e4:	ed90 7a05 	vldr	s14, [r0, #20]
 80126e8:	ed90 0a02 	vldr	s0, [r0, #8]
 80126ec:	ee30 0a80 	vadd.f32	s0, s1, s0
 80126f0:	ee77 0a87 	vadd.f32	s1, s15, s14
 80126f4:	b004      	add	sp, #16
 80126f6:	4770      	bx	lr

080126f8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80126f8:	b530      	push	{r4, r5, lr}
 80126fa:	8083      	strh	r3, [r0, #4]
 80126fc:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8012700:	80c3      	strh	r3, [r0, #6]
 8012702:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8012706:	7203      	strb	r3, [r0, #8]
 8012708:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801270c:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8012710:	7243      	strb	r3, [r0, #9]
 8012712:	7a83      	ldrb	r3, [r0, #10]
 8012714:	6141      	str	r1, [r0, #20]
 8012716:	f365 0306 	bfi	r3, r5, #0, #7
 801271a:	f89d 501c 	ldrb.w	r5, [sp, #28]
 801271e:	8302      	strh	r2, [r0, #24]
 8012720:	f365 13c7 	bfi	r3, r5, #7, #1
 8012724:	7283      	strb	r3, [r0, #10]
 8012726:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801272a:	72c3      	strb	r3, [r0, #11]
 801272c:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8012730:	7303      	strb	r3, [r0, #12]
 8012732:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8012736:	81c3      	strh	r3, [r0, #14]
 8012738:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801273c:	8203      	strh	r3, [r0, #16]
 801273e:	4b01      	ldr	r3, [pc, #4]	@ (8012744 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8012740:	6003      	str	r3, [r0, #0]
 8012742:	bd30      	pop	{r4, r5, pc}
 8012744:	08027a58 	.word	0x08027a58

08012748 <_ZNK8touchgfx9ConstFont4findEt>:
 8012748:	b5f0      	push	{r4, r5, r6, r7, lr}
 801274a:	6944      	ldr	r4, [r0, #20]
 801274c:	b3bc      	cbz	r4, 80127be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801274e:	88a3      	ldrh	r3, [r4, #4]
 8012750:	8b02      	ldrh	r2, [r0, #24]
 8012752:	1acb      	subs	r3, r1, r3
 8012754:	f102 32ff 	add.w	r2, r2, #4294967295
 8012758:	d431      	bmi.n	80127be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801275a:	4293      	cmp	r3, r2
 801275c:	dd0c      	ble.n	8012778 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801275e:	230e      	movs	r3, #14
 8012760:	fb03 4302 	mla	r3, r3, r2, r4
 8012764:	889b      	ldrh	r3, [r3, #4]
 8012766:	1a5b      	subs	r3, r3, r1
 8012768:	1ad3      	subs	r3, r2, r3
 801276a:	429a      	cmp	r2, r3
 801276c:	db27      	blt.n	80127be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801276e:	2b00      	cmp	r3, #0
 8012770:	bfbc      	itt	lt
 8012772:	2302      	movlt	r3, #2
 8012774:	fb92 f3f3 	sdivlt	r3, r2, r3
 8012778:	2500      	movs	r5, #0
 801277a:	260e      	movs	r6, #14
 801277c:	4295      	cmp	r5, r2
 801277e:	dc1e      	bgt.n	80127be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012780:	fb06 4003 	mla	r0, r6, r3, r4
 8012784:	8887      	ldrh	r7, [r0, #4]
 8012786:	42b9      	cmp	r1, r7
 8012788:	d01a      	beq.n	80127c0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801278a:	d20d      	bcs.n	80127a8 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801278c:	1e5a      	subs	r2, r3, #1
 801278e:	4295      	cmp	r5, r2
 8012790:	dc15      	bgt.n	80127be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012792:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8012796:	1a5b      	subs	r3, r3, r1
 8012798:	1ad3      	subs	r3, r2, r3
 801279a:	429a      	cmp	r2, r3
 801279c:	db0f      	blt.n	80127be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801279e:	429d      	cmp	r5, r3
 80127a0:	ddec      	ble.n	801277c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80127a2:	1953      	adds	r3, r2, r5
 80127a4:	105b      	asrs	r3, r3, #1
 80127a6:	e7e9      	b.n	801277c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80127a8:	1c5d      	adds	r5, r3, #1
 80127aa:	42aa      	cmp	r2, r5
 80127ac:	db07      	blt.n	80127be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80127ae:	8a43      	ldrh	r3, [r0, #18]
 80127b0:	1acb      	subs	r3, r1, r3
 80127b2:	442b      	add	r3, r5
 80127b4:	429d      	cmp	r5, r3
 80127b6:	dc02      	bgt.n	80127be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80127b8:	429a      	cmp	r2, r3
 80127ba:	dadf      	bge.n	801277c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80127bc:	e7f1      	b.n	80127a2 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80127be:	2000      	movs	r0, #0
 80127c0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080127c2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80127c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80127c4:	4604      	mov	r4, r0
 80127c6:	4617      	mov	r7, r2
 80127c8:	461e      	mov	r6, r3
 80127ca:	b911      	cbnz	r1, 80127d2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80127cc:	2500      	movs	r5, #0
 80127ce:	4628      	mov	r0, r5
 80127d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80127d2:	290a      	cmp	r1, #10
 80127d4:	d0fa      	beq.n	80127cc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80127d6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 80127da:	4291      	cmp	r1, r2
 80127dc:	d0f6      	beq.n	80127cc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80127de:	f242 020b 	movw	r2, #8203	@ 0x200b
 80127e2:	4291      	cmp	r1, r2
 80127e4:	d0f2      	beq.n	80127cc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80127e6:	f7ff ffaf 	bl	8012748 <_ZNK8touchgfx9ConstFont4findEt>
 80127ea:	4605      	mov	r5, r0
 80127ec:	b950      	cbnz	r0, 8012804 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80127ee:	6823      	ldr	r3, [r4, #0]
 80127f0:	4620      	mov	r0, r4
 80127f2:	691b      	ldr	r3, [r3, #16]
 80127f4:	4798      	blx	r3
 80127f6:	4601      	mov	r1, r0
 80127f8:	4620      	mov	r0, r4
 80127fa:	f7ff ffa5 	bl	8012748 <_ZNK8touchgfx9ConstFont4findEt>
 80127fe:	4605      	mov	r5, r0
 8012800:	2800      	cmp	r0, #0
 8012802:	d0e3      	beq.n	80127cc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012804:	6823      	ldr	r3, [r4, #0]
 8012806:	4629      	mov	r1, r5
 8012808:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801280a:	4620      	mov	r0, r4
 801280c:	4798      	blx	r3
 801280e:	6038      	str	r0, [r7, #0]
 8012810:	6823      	ldr	r3, [r4, #0]
 8012812:	4620      	mov	r0, r4
 8012814:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8012816:	4798      	blx	r3
 8012818:	7030      	strb	r0, [r6, #0]
 801281a:	e7d8      	b.n	80127ce <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801281c <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801281c:	2000      	movs	r0, #0
 801281e:	4770      	bx	lr

08012820 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8012820:	2001      	movs	r0, #1
 8012822:	4770      	bx	lr

08012824 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8012824:	2002      	movs	r0, #2
 8012826:	4770      	bx	lr

08012828 <_ZN8touchgfx6ScreenD1Ev>:
 8012828:	4770      	bx	lr

0801282a <_ZN8touchgfx12GestureEventD1Ev>:
 801282a:	4770      	bx	lr

0801282c <_ZN8touchgfx9DragEventD1Ev>:
 801282c:	4770      	bx	lr

0801282e <_ZN8touchgfx10ClickEventD1Ev>:
 801282e:	4770      	bx	lr

08012830 <_ZN8touchgfx10ClickEventD0Ev>:
 8012830:	b510      	push	{r4, lr}
 8012832:	210c      	movs	r1, #12
 8012834:	4604      	mov	r4, r0
 8012836:	f010 ff91 	bl	802375c <_ZdlPvj>
 801283a:	4620      	mov	r0, r4
 801283c:	bd10      	pop	{r4, pc}

0801283e <_ZN8touchgfx9DragEventD0Ev>:
 801283e:	b510      	push	{r4, lr}
 8012840:	2110      	movs	r1, #16
 8012842:	4604      	mov	r4, r0
 8012844:	f010 ff8a 	bl	802375c <_ZdlPvj>
 8012848:	4620      	mov	r0, r4
 801284a:	bd10      	pop	{r4, pc}

0801284c <_ZN8touchgfx12GestureEventD0Ev>:
 801284c:	b510      	push	{r4, lr}
 801284e:	210c      	movs	r1, #12
 8012850:	4604      	mov	r4, r0
 8012852:	f010 ff83 	bl	802375c <_ZdlPvj>
 8012856:	4620      	mov	r0, r4
 8012858:	bd10      	pop	{r4, pc}

0801285a <_ZN8touchgfx6ScreenD0Ev>:
 801285a:	b510      	push	{r4, lr}
 801285c:	213c      	movs	r1, #60	@ 0x3c
 801285e:	4604      	mov	r4, r0
 8012860:	f010 ff7c 	bl	802375c <_ZdlPvj>
 8012864:	4620      	mov	r0, r4
 8012866:	bd10      	pop	{r4, pc}

08012868 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8012868:	b530      	push	{r4, r5, lr}
 801286a:	460d      	mov	r5, r1
 801286c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801286e:	b087      	sub	sp, #28
 8012870:	4604      	mov	r4, r0
 8012872:	b301      	cbz	r1, 80128b6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8012874:	a801      	add	r0, sp, #4
 8012876:	f7ff fb83 	bl	8011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801287a:	892a      	ldrh	r2, [r5, #8]
 801287c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012880:	7928      	ldrb	r0, [r5, #4]
 8012882:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8012886:	f88d 0010 	strb.w	r0, [sp, #16]
 801288a:	1ad2      	subs	r2, r2, r3
 801288c:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 801288e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8012890:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012894:	441a      	add	r2, r3
 8012896:	896b      	ldrh	r3, [r5, #10]
 8012898:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801289c:	f8ad 2014 	strh.w	r2, [sp, #20]
 80128a0:	1b5b      	subs	r3, r3, r5
 80128a2:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 80128a4:	442b      	add	r3, r5
 80128a6:	4d05      	ldr	r5, [pc, #20]	@ (80128bc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80128a8:	9503      	str	r5, [sp, #12]
 80128aa:	f8ad 3016 	strh.w	r3, [sp, #22]
 80128ae:	6803      	ldr	r3, [r0, #0]
 80128b0:	a903      	add	r1, sp, #12
 80128b2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80128b4:	4798      	blx	r3
 80128b6:	b007      	add	sp, #28
 80128b8:	bd30      	pop	{r4, r5, pc}
 80128ba:	bf00      	nop
 80128bc:	08027ae8 	.word	0x08027ae8

080128c0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80128c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80128c4:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80128c6:	b08a      	sub	sp, #40	@ 0x28
 80128c8:	4604      	mov	r4, r0
 80128ca:	460d      	mov	r5, r1
 80128cc:	b113      	cbz	r3, 80128d4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80128ce:	790b      	ldrb	r3, [r1, #4]
 80128d0:	2b00      	cmp	r3, #0
 80128d2:	d044      	beq.n	801295e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80128d4:	f104 0804 	add.w	r8, r4, #4
 80128d8:	4641      	mov	r1, r8
 80128da:	a803      	add	r0, sp, #12
 80128dc:	f7ff fb50 	bl	8011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80128e0:	792b      	ldrb	r3, [r5, #4]
 80128e2:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80128e6:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80128ea:	b983      	cbnz	r3, 801290e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80128ec:	892a      	ldrh	r2, [r5, #8]
 80128ee:	88e9      	ldrh	r1, [r5, #6]
 80128f0:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 80128f4:	1b92      	subs	r2, r2, r6
 80128f6:	1bc9      	subs	r1, r1, r7
 80128f8:	9301      	str	r3, [sp, #4]
 80128fa:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 80128fe:	9300      	str	r3, [sp, #0]
 8012900:	b212      	sxth	r2, r2
 8012902:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8012906:	b209      	sxth	r1, r1
 8012908:	4640      	mov	r0, r8
 801290a:	f7f8 f923 	bl	800ab54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801290e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8012910:	b329      	cbz	r1, 801295e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012912:	a805      	add	r0, sp, #20
 8012914:	f7ff fb34 	bl	8011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012918:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801291c:	792b      	ldrb	r3, [r5, #4]
 801291e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8012920:	f88d 3020 	strb.w	r3, [sp, #32]
 8012924:	1abf      	subs	r7, r7, r2
 8012926:	88ea      	ldrh	r2, [r5, #6]
 8012928:	4417      	add	r7, r2
 801292a:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 801292c:	4417      	add	r7, r2
 801292e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8012932:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8012936:	1ab6      	subs	r6, r6, r2
 8012938:	892a      	ldrh	r2, [r5, #8]
 801293a:	4416      	add	r6, r2
 801293c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801293e:	4416      	add	r6, r2
 8012940:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8012944:	4a07      	ldr	r2, [pc, #28]	@ (8012964 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8012946:	9207      	str	r2, [sp, #28]
 8012948:	2600      	movs	r6, #0
 801294a:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 801294e:	6803      	ldr	r3, [r0, #0]
 8012950:	a907      	add	r1, sp, #28
 8012952:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8012954:	4798      	blx	r3
 8012956:	792b      	ldrb	r3, [r5, #4]
 8012958:	b10b      	cbz	r3, 801295e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801295a:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 801295e:	b00a      	add	sp, #40	@ 0x28
 8012960:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012964:	08027ac0 	.word	0x08027ac0

08012968 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8012968:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801296c:	460c      	mov	r4, r1
 801296e:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8012970:	b088      	sub	sp, #32
 8012972:	4605      	mov	r5, r0
 8012974:	2900      	cmp	r1, #0
 8012976:	d06d      	beq.n	8012a54 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8012978:	4668      	mov	r0, sp
 801297a:	f7ff fb01 	bl	8011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801297e:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8012980:	88e3      	ldrh	r3, [r4, #6]
 8012982:	f9bd 8000 	ldrsh.w	r8, [sp]
 8012986:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801298a:	440b      	add	r3, r1
 801298c:	b21b      	sxth	r3, r3
 801298e:	4543      	cmp	r3, r8
 8012990:	db31      	blt.n	80129f6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012992:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8012996:	44c4      	add	ip, r8
 8012998:	fa0f fc8c 	sxth.w	ip, ip
 801299c:	4563      	cmp	r3, ip
 801299e:	da2a      	bge.n	80129f6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80129a0:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 80129a2:	8926      	ldrh	r6, [r4, #8]
 80129a4:	4416      	add	r6, r2
 80129a6:	b236      	sxth	r6, r6
 80129a8:	42be      	cmp	r6, r7
 80129aa:	db24      	blt.n	80129f6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80129ac:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80129b0:	4438      	add	r0, r7
 80129b2:	b200      	sxth	r0, r0
 80129b4:	4286      	cmp	r6, r0
 80129b6:	da1e      	bge.n	80129f6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80129b8:	8963      	ldrh	r3, [r4, #10]
 80129ba:	4419      	add	r1, r3
 80129bc:	b209      	sxth	r1, r1
 80129be:	4541      	cmp	r1, r8
 80129c0:	db08      	blt.n	80129d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80129c2:	4561      	cmp	r1, ip
 80129c4:	da06      	bge.n	80129d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80129c6:	89a3      	ldrh	r3, [r4, #12]
 80129c8:	441a      	add	r2, r3
 80129ca:	b212      	sxth	r2, r2
 80129cc:	42ba      	cmp	r2, r7
 80129ce:	db01      	blt.n	80129d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80129d0:	4282      	cmp	r2, r0
 80129d2:	db10      	blt.n	80129f6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80129d4:	4b21      	ldr	r3, [pc, #132]	@ (8012a5c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80129d6:	9304      	str	r3, [sp, #16]
 80129d8:	2302      	movs	r3, #2
 80129da:	f88d 3014 	strb.w	r3, [sp, #20]
 80129de:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80129e0:	2300      	movs	r3, #0
 80129e2:	f8ad 3016 	strh.w	r3, [sp, #22]
 80129e6:	f8ad 3018 	strh.w	r3, [sp, #24]
 80129ea:	f8ad 301a 	strh.w	r3, [sp, #26]
 80129ee:	6803      	ldr	r3, [r0, #0]
 80129f0:	a904      	add	r1, sp, #16
 80129f2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80129f4:	4798      	blx	r3
 80129f6:	1d29      	adds	r1, r5, #4
 80129f8:	a802      	add	r0, sp, #8
 80129fa:	f7ff fac1 	bl	8011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80129fe:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012a02:	88e0      	ldrh	r0, [r4, #6]
 8012a04:	7921      	ldrb	r1, [r4, #4]
 8012a06:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8012a0a:	8922      	ldrh	r2, [r4, #8]
 8012a0c:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8012a0e:	f88d 1014 	strb.w	r1, [sp, #20]
 8012a12:	eba3 0808 	sub.w	r8, r3, r8
 8012a16:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012a1a:	1bdf      	subs	r7, r3, r7
 8012a1c:	b2bb      	uxth	r3, r7
 8012a1e:	fa1f f888 	uxth.w	r8, r8
 8012a22:	8967      	ldrh	r7, [r4, #10]
 8012a24:	89a4      	ldrh	r4, [r4, #12]
 8012a26:	4440      	add	r0, r8
 8012a28:	4460      	add	r0, ip
 8012a2a:	441a      	add	r2, r3
 8012a2c:	44b8      	add	r8, r7
 8012a2e:	4423      	add	r3, r4
 8012a30:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012a34:	4433      	add	r3, r6
 8012a36:	4432      	add	r2, r6
 8012a38:	44e0      	add	r8, ip
 8012a3a:	4c09      	ldr	r4, [pc, #36]	@ (8012a60 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8012a3c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8012a3e:	9404      	str	r4, [sp, #16]
 8012a40:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012a44:	f8ad 801a 	strh.w	r8, [sp, #26]
 8012a48:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012a4c:	6803      	ldr	r3, [r0, #0]
 8012a4e:	a904      	add	r1, sp, #16
 8012a50:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8012a52:	4798      	blx	r3
 8012a54:	b008      	add	sp, #32
 8012a56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012a5a:	bf00      	nop
 8012a5c:	08027ac0 	.word	0x08027ac0
 8012a60:	08027ad4 	.word	0x08027ad4

08012a64 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8012a64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012a66:	4604      	mov	r4, r0
 8012a68:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8012a6c:	3201      	adds	r2, #1
 8012a6e:	d112      	bne.n	8012a96 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8012a70:	6803      	ldr	r3, [r0, #0]
 8012a72:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8012a76:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012a7a:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012a7e:	2500      	movs	r5, #0
 8012a80:	9500      	str	r5, [sp, #0]
 8012a82:	466d      	mov	r5, sp
 8012a84:	4629      	mov	r1, r5
 8012a86:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012a8a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012a8c:	4798      	blx	r3
 8012a8e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8012a92:	e884 0003 	stmia.w	r4, {r0, r1}
 8012a96:	4620      	mov	r0, r4
 8012a98:	b003      	add	sp, #12
 8012a9a:	bd30      	pop	{r4, r5, pc}

08012a9c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012a9c:	b513      	push	{r0, r1, r4, lr}
 8012a9e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8012aa2:	3301      	adds	r3, #1
 8012aa4:	4604      	mov	r4, r0
 8012aa6:	d109      	bne.n	8012abc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8012aa8:	4601      	mov	r1, r0
 8012aaa:	4668      	mov	r0, sp
 8012aac:	f7ff fa68 	bl	8011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012ab0:	f8bd 3000 	ldrh.w	r3, [sp]
 8012ab4:	8423      	strh	r3, [r4, #32]
 8012ab6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012aba:	8463      	strh	r3, [r4, #34]	@ 0x22
 8012abc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012ac0:	b002      	add	sp, #8
 8012ac2:	bd10      	pop	{r4, pc}

08012ac4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8012ac4:	b513      	push	{r0, r1, r4, lr}
 8012ac6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8012aca:	3301      	adds	r3, #1
 8012acc:	4604      	mov	r4, r0
 8012ace:	d109      	bne.n	8012ae4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012ad0:	4601      	mov	r1, r0
 8012ad2:	4668      	mov	r0, sp
 8012ad4:	f7ff fa54 	bl	8011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012ad8:	f8bd 3000 	ldrh.w	r3, [sp]
 8012adc:	8423      	strh	r3, [r4, #32]
 8012ade:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012ae2:	8463      	strh	r3, [r4, #34]	@ 0x22
 8012ae4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8012ae8:	b002      	add	sp, #8
 8012aea:	bd10      	pop	{r4, pc}

08012aec <_ZN8touchgfx6ScreenC1Ev>:
 8012aec:	b570      	push	{r4, r5, r6, lr}
 8012aee:	4605      	mov	r5, r0
 8012af0:	4b16      	ldr	r3, [pc, #88]	@ (8012b4c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8012af2:	f845 3b04 	str.w	r3, [r5], #4
 8012af6:	2300      	movs	r3, #0
 8012af8:	8103      	strh	r3, [r0, #8]
 8012afa:	8143      	strh	r3, [r0, #10]
 8012afc:	8183      	strh	r3, [r0, #12]
 8012afe:	81c3      	strh	r3, [r0, #14]
 8012b00:	8203      	strh	r3, [r0, #16]
 8012b02:	8243      	strh	r3, [r0, #18]
 8012b04:	8283      	strh	r3, [r0, #20]
 8012b06:	82c3      	strh	r3, [r0, #22]
 8012b08:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8012b0c:	6203      	str	r3, [r0, #32]
 8012b0e:	8483      	strh	r3, [r0, #36]	@ 0x24
 8012b10:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8012b12:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8012b16:	4a0e      	ldr	r2, [pc, #56]	@ (8012b50 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8012b18:	6343      	str	r3, [r0, #52]	@ 0x34
 8012b1a:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8012b1e:	4b0d      	ldr	r3, [pc, #52]	@ (8012b54 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8012b20:	6042      	str	r2, [r0, #4]
 8012b22:	f9b3 6000 	ldrsh.w	r6, [r3]
 8012b26:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8012b28:	4a0b      	ldr	r2, [pc, #44]	@ (8012b58 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8012b2a:	4604      	mov	r4, r0
 8012b2c:	2101      	movs	r1, #1
 8012b2e:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8012b32:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8012b36:	f9b2 1000 	ldrsh.w	r1, [r2]
 8012b3a:	4628      	mov	r0, r5
 8012b3c:	4798      	blx	r3
 8012b3e:	6863      	ldr	r3, [r4, #4]
 8012b40:	4628      	mov	r0, r5
 8012b42:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8012b44:	4631      	mov	r1, r6
 8012b46:	4798      	blx	r3
 8012b48:	4620      	mov	r0, r4
 8012b4a:	bd70      	pop	{r4, r5, r6, pc}
 8012b4c:	08027afc 	.word	0x08027afc
 8012b50:	080275b0 	.word	0x080275b0
 8012b54:	200157b6 	.word	0x200157b6
 8012b58:	200157b4 	.word	0x200157b4

08012b5c <_ZN8touchgfx6Screen4drawEv>:
 8012b5c:	b507      	push	{r0, r1, r2, lr}
 8012b5e:	4b09      	ldr	r3, [pc, #36]	@ (8012b84 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8012b60:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012b64:	4b08      	ldr	r3, [pc, #32]	@ (8012b88 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8012b66:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012b6a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012b6e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012b72:	6803      	ldr	r3, [r0, #0]
 8012b74:	2100      	movs	r1, #0
 8012b76:	9100      	str	r1, [sp, #0]
 8012b78:	689b      	ldr	r3, [r3, #8]
 8012b7a:	4669      	mov	r1, sp
 8012b7c:	4798      	blx	r3
 8012b7e:	b003      	add	sp, #12
 8012b80:	f85d fb04 	ldr.w	pc, [sp], #4
 8012b84:	200157b4 	.word	0x200157b4
 8012b88:	200157b6 	.word	0x200157b6

08012b8c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b90:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8012b94:	2b00      	cmp	r3, #0
 8012b96:	b089      	sub	sp, #36	@ 0x24
 8012b98:	4680      	mov	r8, r0
 8012b9a:	460c      	mov	r4, r1
 8012b9c:	4615      	mov	r5, r2
 8012b9e:	dd0e      	ble.n	8012bbe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012ba0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012ba4:	2b00      	cmp	r3, #0
 8012ba6:	dd0a      	ble.n	8012bbe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012ba8:	4628      	mov	r0, r5
 8012baa:	f7ff ff5b 	bl	8012a64 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012bae:	4621      	mov	r1, r4
 8012bb0:	f7fd fe91 	bl	80108d6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012bb4:	69eb      	ldr	r3, [r5, #28]
 8012bb6:	b928      	cbnz	r0, 8012bc4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8012bb8:	461d      	mov	r5, r3
 8012bba:	2b00      	cmp	r3, #0
 8012bbc:	d1f4      	bne.n	8012ba8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012bbe:	b009      	add	sp, #36	@ 0x24
 8012bc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012bc4:	ae04      	add	r6, sp, #16
 8012bc6:	2b00      	cmp	r3, #0
 8012bc8:	f000 80b5 	beq.w	8012d36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012bcc:	682b      	ldr	r3, [r5, #0]
 8012bce:	4629      	mov	r1, r5
 8012bd0:	68db      	ldr	r3, [r3, #12]
 8012bd2:	a802      	add	r0, sp, #8
 8012bd4:	4798      	blx	r3
 8012bd6:	4628      	mov	r0, r5
 8012bd8:	f7ff ff60 	bl	8012a9c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012bdc:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012be0:	4407      	add	r7, r0
 8012be2:	4628      	mov	r0, r5
 8012be4:	f7ff ff6e 	bl	8012ac4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012be8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012bec:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012bf0:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012bf4:	4418      	add	r0, r3
 8012bf6:	4621      	mov	r1, r4
 8012bf8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012bfc:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012c00:	b23f      	sxth	r7, r7
 8012c02:	4630      	mov	r0, r6
 8012c04:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012c08:	f8ad 7010 	strh.w	r7, [sp, #16]
 8012c0c:	f7f8 f886 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 8012c10:	4628      	mov	r0, r5
 8012c12:	f7ff ff27 	bl	8012a64 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012c16:	4602      	mov	r2, r0
 8012c18:	e896 0003 	ldmia.w	r6, {r0, r1}
 8012c1c:	ab06      	add	r3, sp, #24
 8012c1e:	e883 0003 	stmia.w	r3, {r0, r1}
 8012c22:	4611      	mov	r1, r2
 8012c24:	4618      	mov	r0, r3
 8012c26:	f7f8 f879 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 8012c2a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012c2e:	f9b4 1000 	ldrsh.w	r1, [r4]
 8012c32:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8012c36:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8012c3a:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8012c3e:	4299      	cmp	r1, r3
 8012c40:	d10b      	bne.n	8012c5a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012c42:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012c46:	4552      	cmp	r2, sl
 8012c48:	d107      	bne.n	8012c5a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012c4a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012c4e:	455a      	cmp	r2, fp
 8012c50:	d103      	bne.n	8012c5a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012c52:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012c56:	454a      	cmp	r2, r9
 8012c58:	d06d      	beq.n	8012d36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012c5a:	f1bb 0f00 	cmp.w	fp, #0
 8012c5e:	dd65      	ble.n	8012d2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012c60:	f1b9 0f00 	cmp.w	r9, #0
 8012c64:	dd62      	ble.n	8012d2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012c66:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012c6a:	fa1f f08a 	uxth.w	r0, sl
 8012c6e:	4552      	cmp	r2, sl
 8012c70:	9000      	str	r0, [sp, #0]
 8012c72:	da12      	bge.n	8012c9a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8012c74:	9301      	str	r3, [sp, #4]
 8012c76:	9b00      	ldr	r3, [sp, #0]
 8012c78:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012c7c:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012c80:	1a9a      	subs	r2, r3, r2
 8012c82:	f8ad 1010 	strh.w	r1, [sp, #16]
 8012c86:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012c8a:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012c8e:	69ea      	ldr	r2, [r5, #28]
 8012c90:	4631      	mov	r1, r6
 8012c92:	4640      	mov	r0, r8
 8012c94:	f7ff ff7a 	bl	8012b8c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012c98:	9b01      	ldr	r3, [sp, #4]
 8012c9a:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012c9e:	429a      	cmp	r2, r3
 8012ca0:	b29f      	uxth	r7, r3
 8012ca2:	da0d      	bge.n	8012cc0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8012ca4:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012ca8:	1aba      	subs	r2, r7, r2
 8012caa:	f8ad a012 	strh.w	sl, [sp, #18]
 8012cae:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012cb2:	f8ad 9016 	strh.w	r9, [sp, #22]
 8012cb6:	69ea      	ldr	r2, [r5, #28]
 8012cb8:	4631      	mov	r1, r6
 8012cba:	4640      	mov	r0, r8
 8012cbc:	f7ff ff66 	bl	8012b8c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012cc0:	8822      	ldrh	r2, [r4, #0]
 8012cc2:	88a3      	ldrh	r3, [r4, #4]
 8012cc4:	445f      	add	r7, fp
 8012cc6:	4413      	add	r3, r2
 8012cc8:	b29b      	uxth	r3, r3
 8012cca:	b2bf      	uxth	r7, r7
 8012ccc:	b23a      	sxth	r2, r7
 8012cce:	b219      	sxth	r1, r3
 8012cd0:	4291      	cmp	r1, r2
 8012cd2:	dd0d      	ble.n	8012cf0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8012cd4:	1bdb      	subs	r3, r3, r7
 8012cd6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012cda:	f8ad a012 	strh.w	sl, [sp, #18]
 8012cde:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012ce2:	f8ad 9016 	strh.w	r9, [sp, #22]
 8012ce6:	69ea      	ldr	r2, [r5, #28]
 8012ce8:	4631      	mov	r1, r6
 8012cea:	4640      	mov	r0, r8
 8012cec:	f7ff ff4e 	bl	8012b8c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012cf0:	88e2      	ldrh	r2, [r4, #6]
 8012cf2:	8863      	ldrh	r3, [r4, #2]
 8012cf4:	4413      	add	r3, r2
 8012cf6:	9a00      	ldr	r2, [sp, #0]
 8012cf8:	444a      	add	r2, r9
 8012cfa:	b29b      	uxth	r3, r3
 8012cfc:	fa1f f982 	uxth.w	r9, r2
 8012d00:	fa0f f289 	sxth.w	r2, r9
 8012d04:	b219      	sxth	r1, r3
 8012d06:	428a      	cmp	r2, r1
 8012d08:	da15      	bge.n	8012d36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012d0a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012d0e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012d12:	f8ad 1014 	strh.w	r1, [sp, #20]
 8012d16:	eba3 0309 	sub.w	r3, r3, r9
 8012d1a:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012d1e:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012d22:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012d26:	69ea      	ldr	r2, [r5, #28]
 8012d28:	4631      	mov	r1, r6
 8012d2a:	e001      	b.n	8012d30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8012d2c:	69ea      	ldr	r2, [r5, #28]
 8012d2e:	4621      	mov	r1, r4
 8012d30:	4640      	mov	r0, r8
 8012d32:	f7ff ff2b 	bl	8012b8c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012d36:	4628      	mov	r0, r5
 8012d38:	f7ff fe94 	bl	8012a64 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012d3c:	6861      	ldr	r1, [r4, #4]
 8012d3e:	4602      	mov	r2, r0
 8012d40:	6820      	ldr	r0, [r4, #0]
 8012d42:	4633      	mov	r3, r6
 8012d44:	c303      	stmia	r3!, {r0, r1}
 8012d46:	4611      	mov	r1, r2
 8012d48:	4630      	mov	r0, r6
 8012d4a:	f7f7 ffe7 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 8012d4e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012d52:	2b00      	cmp	r3, #0
 8012d54:	f77f af33 	ble.w	8012bbe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012d58:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012d5c:	2b00      	cmp	r3, #0
 8012d5e:	f77f af2e 	ble.w	8012bbe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012d62:	4628      	mov	r0, r5
 8012d64:	f7ff fe9a 	bl	8012a9c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012d68:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8012d6c:	1a18      	subs	r0, r3, r0
 8012d6e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012d72:	4628      	mov	r0, r5
 8012d74:	f7ff fea6 	bl	8012ac4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012d78:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012d7c:	1a18      	subs	r0, r3, r0
 8012d7e:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012d82:	682b      	ldr	r3, [r5, #0]
 8012d84:	4631      	mov	r1, r6
 8012d86:	689b      	ldr	r3, [r3, #8]
 8012d88:	4628      	mov	r0, r5
 8012d8a:	4798      	blx	r3
 8012d8c:	e717      	b.n	8012bbe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012d8e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012d8e:	b570      	push	{r4, r5, r6, lr}
 8012d90:	460c      	mov	r4, r1
 8012d92:	b086      	sub	sp, #24
 8012d94:	1d06      	adds	r6, r0, #4
 8012d96:	2300      	movs	r3, #0
 8012d98:	4631      	mov	r1, r6
 8012d9a:	4605      	mov	r5, r0
 8012d9c:	a802      	add	r0, sp, #8
 8012d9e:	9301      	str	r3, [sp, #4]
 8012da0:	f7ff f8ee 	bl	8011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012da4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012da8:	8822      	ldrh	r2, [r4, #0]
 8012daa:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012dae:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012db2:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012db6:	1ad2      	subs	r2, r2, r3
 8012db8:	8863      	ldrh	r3, [r4, #2]
 8012dba:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012dbe:	1a5b      	subs	r3, r3, r1
 8012dc0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012dc4:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012dc8:	aa01      	add	r2, sp, #4
 8012dca:	a904      	add	r1, sp, #16
 8012dcc:	4630      	mov	r0, r6
 8012dce:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012dd2:	f7f8 f87b 	bl	800aecc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8012dd6:	9a01      	ldr	r2, [sp, #4]
 8012dd8:	b11a      	cbz	r2, 8012de2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8012dda:	4621      	mov	r1, r4
 8012ddc:	4628      	mov	r0, r5
 8012dde:	f7ff fed5 	bl	8012b8c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012de2:	b006      	add	sp, #24
 8012de4:	bd70      	pop	{r4, r5, r6, pc}

08012de6 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8012de6:	b530      	push	{r4, r5, lr}
 8012de8:	4602      	mov	r2, r0
 8012dea:	4604      	mov	r4, r0
 8012dec:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8012df0:	b085      	sub	sp, #20
 8012df2:	460d      	mov	r5, r1
 8012df4:	6851      	ldr	r1, [r2, #4]
 8012df6:	466b      	mov	r3, sp
 8012df8:	c303      	stmia	r3!, {r0, r1}
 8012dfa:	4629      	mov	r1, r5
 8012dfc:	4668      	mov	r0, sp
 8012dfe:	f7f7 ff8d 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 8012e02:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8012e06:	b12b      	cbz	r3, 8012e14 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8012e08:	4669      	mov	r1, sp
 8012e0a:	4620      	mov	r0, r4
 8012e0c:	f7ff ffbf 	bl	8012d8e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8012e10:	b005      	add	sp, #20
 8012e12:	bd30      	pop	{r4, r5, pc}
 8012e14:	3404      	adds	r4, #4
 8012e16:	4621      	mov	r1, r4
 8012e18:	a802      	add	r0, sp, #8
 8012e1a:	f7ff f8b1 	bl	8011f80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012e1e:	f8bd 3000 	ldrh.w	r3, [sp]
 8012e22:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8012e26:	1a9b      	subs	r3, r3, r2
 8012e28:	f8ad 3000 	strh.w	r3, [sp]
 8012e2c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012e30:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012e34:	4669      	mov	r1, sp
 8012e36:	1a9b      	subs	r3, r3, r2
 8012e38:	4620      	mov	r0, r4
 8012e3a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012e3e:	f7f8 f80c 	bl	800ae5a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8012e42:	e7e5      	b.n	8012e10 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08012e44 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8012e44:	680a      	ldr	r2, [r1, #0]
 8012e46:	460b      	mov	r3, r1
 8012e48:	6992      	ldr	r2, [r2, #24]
 8012e4a:	1d01      	adds	r1, r0, #4
 8012e4c:	4618      	mov	r0, r3
 8012e4e:	4710      	bx	r2

08012e50 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8012e50:	4298      	cmp	r0, r3
 8012e52:	d200      	bcs.n	8012e56 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8012e54:	b913      	cbnz	r3, 8012e5c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8012e56:	440a      	add	r2, r1
 8012e58:	b210      	sxth	r0, r2
 8012e5a:	4770      	bx	lr
 8012e5c:	ee07 0a90 	vmov	s15, r0
 8012e60:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8012e64:	ee07 3a90 	vmov	s15, r3
 8012e68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e6c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8012e70:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012e74:	ee37 7a66 	vsub.f32	s14, s14, s13
 8012e78:	ee07 2a90 	vmov	s15, r2
 8012e7c:	ee67 5a07 	vmul.f32	s11, s14, s14
 8012e80:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8012e84:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012e88:	ee07 1a90 	vmov	s15, r1
 8012e8c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e90:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8012e94:	eee6 7a26 	vfma.f32	s15, s12, s13
 8012e98:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012e9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ea0:	bfcc      	ite	gt
 8012ea2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8012ea6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8012eaa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012eae:	ee17 3a90 	vmov	r3, s15
 8012eb2:	b218      	sxth	r0, r3
 8012eb4:	4770      	bx	lr

08012eb6 <_ZN8touchgfx12TextProviderC1Ev>:
 8012eb6:	b538      	push	{r3, r4, r5, lr}
 8012eb8:	2500      	movs	r5, #0
 8012eba:	2302      	movs	r3, #2
 8012ebc:	4604      	mov	r4, r0
 8012ebe:	e9c0 5500 	strd	r5, r5, [r0]
 8012ec2:	7403      	strb	r3, [r0, #16]
 8012ec4:	6145      	str	r5, [r0, #20]
 8012ec6:	7605      	strb	r5, [r0, #24]
 8012ec8:	83c5      	strh	r5, [r0, #30]
 8012eca:	8405      	strh	r5, [r0, #32]
 8012ecc:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8012ece:	8705      	strh	r5, [r0, #56]	@ 0x38
 8012ed0:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8012ed2:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8012ed6:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8012eda:	220e      	movs	r2, #14
 8012edc:	4629      	mov	r1, r5
 8012ede:	304c      	adds	r0, #76	@ 0x4c
 8012ee0:	f011 fd7f 	bl	80249e2 <memset>
 8012ee4:	2301      	movs	r3, #1
 8012ee6:	4620      	mov	r0, r4
 8012ee8:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8012eec:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8012ef0:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8012ef4:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8012ef8:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8012efc:	f7f1 fcd4 	bl	80048a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8012f00:	4620      	mov	r0, r4
 8012f02:	bd38      	pop	{r3, r4, r5, pc}

08012f04 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012f04:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012f06:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012f0a:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 8012f0c:	fab0 f080 	clz	r0, r0
 8012f10:	0940      	lsrs	r0, r0, #5
 8012f12:	4770      	bx	lr

08012f14 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012f14:	b530      	push	{r4, r5, lr}
 8012f16:	2500      	movs	r5, #0
 8012f18:	2401      	movs	r4, #1
 8012f1a:	6843      	ldr	r3, [r0, #4]
 8012f1c:	b913      	cbnz	r3, 8012f24 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8012f1e:	6803      	ldr	r3, [r0, #0]
 8012f20:	b313      	cbz	r3, 8012f68 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012f22:	6043      	str	r3, [r0, #4]
 8012f24:	7e03      	ldrb	r3, [r0, #24]
 8012f26:	b143      	cbz	r3, 8012f3a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012f28:	6943      	ldr	r3, [r0, #20]
 8012f2a:	b12b      	cbz	r3, 8012f38 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012f2c:	881a      	ldrh	r2, [r3, #0]
 8012f2e:	b11a      	cbz	r2, 8012f38 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012f30:	1c9a      	adds	r2, r3, #2
 8012f32:	6142      	str	r2, [r0, #20]
 8012f34:	8818      	ldrh	r0, [r3, #0]
 8012f36:	bd30      	pop	{r4, r5, pc}
 8012f38:	7605      	strb	r5, [r0, #24]
 8012f3a:	6843      	ldr	r3, [r0, #4]
 8012f3c:	8819      	ldrh	r1, [r3, #0]
 8012f3e:	b199      	cbz	r1, 8012f68 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012f40:	1c9a      	adds	r2, r3, #2
 8012f42:	2902      	cmp	r1, #2
 8012f44:	6042      	str	r2, [r0, #4]
 8012f46:	d1f5      	bne.n	8012f34 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8012f48:	7c03      	ldrb	r3, [r0, #16]
 8012f4a:	2b01      	cmp	r3, #1
 8012f4c:	d8e5      	bhi.n	8012f1a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012f4e:	1c5a      	adds	r2, r3, #1
 8012f50:	3302      	adds	r3, #2
 8012f52:	7402      	strb	r2, [r0, #16]
 8012f54:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8012f58:	6143      	str	r3, [r0, #20]
 8012f5a:	2b00      	cmp	r3, #0
 8012f5c:	d0dd      	beq.n	8012f1a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012f5e:	881b      	ldrh	r3, [r3, #0]
 8012f60:	2b00      	cmp	r3, #0
 8012f62:	d0da      	beq.n	8012f1a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012f64:	7604      	strb	r4, [r0, #24]
 8012f66:	e7d8      	b.n	8012f1a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012f68:	2000      	movs	r0, #0
 8012f6a:	e7e4      	b.n	8012f36 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08012f6c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8012f6c:	b430      	push	{r4, r5}
 8012f6e:	6001      	str	r1, [r0, #0]
 8012f70:	2100      	movs	r1, #0
 8012f72:	6041      	str	r1, [r0, #4]
 8012f74:	6815      	ldr	r5, [r2, #0]
 8012f76:	6085      	str	r5, [r0, #8]
 8012f78:	6852      	ldr	r2, [r2, #4]
 8012f7a:	6443      	str	r3, [r0, #68]	@ 0x44
 8012f7c:	9b02      	ldr	r3, [sp, #8]
 8012f7e:	60c2      	str	r2, [r0, #12]
 8012f80:	7401      	strb	r1, [r0, #16]
 8012f82:	6141      	str	r1, [r0, #20]
 8012f84:	7601      	strb	r1, [r0, #24]
 8012f86:	8701      	strh	r1, [r0, #56]	@ 0x38
 8012f88:	8401      	strh	r1, [r0, #32]
 8012f8a:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8012f8e:	6483      	str	r3, [r0, #72]	@ 0x48
 8012f90:	bc30      	pop	{r4, r5}
 8012f92:	f7f1 bc89 	b.w	80048a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08012f96 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8012f96:	b408      	push	{r3}
 8012f98:	b510      	push	{r4, lr}
 8012f9a:	b085      	sub	sp, #20
 8012f9c:	ac07      	add	r4, sp, #28
 8012f9e:	f854 3b04 	ldr.w	r3, [r4], #4
 8012fa2:	9300      	str	r3, [sp, #0]
 8012fa4:	4613      	mov	r3, r2
 8012fa6:	4622      	mov	r2, r4
 8012fa8:	9403      	str	r4, [sp, #12]
 8012faa:	f7ff ffdf 	bl	8012f6c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012fae:	b005      	add	sp, #20
 8012fb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012fb4:	b001      	add	sp, #4
 8012fb6:	4770      	bx	lr

08012fb8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8012fb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012fba:	4605      	mov	r5, r0
 8012fbc:	4608      	mov	r0, r1
 8012fbe:	b1e9      	cbz	r1, 8012ffc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8012fc0:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8012fc4:	460b      	mov	r3, r1
 8012fc6:	f101 0708 	add.w	r7, r1, #8
 8012fca:	4622      	mov	r2, r4
 8012fcc:	6818      	ldr	r0, [r3, #0]
 8012fce:	6859      	ldr	r1, [r3, #4]
 8012fd0:	4626      	mov	r6, r4
 8012fd2:	c603      	stmia	r6!, {r0, r1}
 8012fd4:	3308      	adds	r3, #8
 8012fd6:	42bb      	cmp	r3, r7
 8012fd8:	4634      	mov	r4, r6
 8012fda:	d1f7      	bne.n	8012fcc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012fdc:	6818      	ldr	r0, [r3, #0]
 8012fde:	6030      	str	r0, [r6, #0]
 8012fe0:	889b      	ldrh	r3, [r3, #4]
 8012fe2:	80b3      	strh	r3, [r6, #4]
 8012fe4:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8012fe8:	015b      	lsls	r3, r3, #5
 8012fea:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8012fee:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8012ff2:	430b      	orrs	r3, r1
 8012ff4:	425b      	negs	r3, r3
 8012ff6:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8012ffa:	4610      	mov	r0, r2
 8012ffc:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012ffe <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012ffe:	b538      	push	{r3, r4, r5, lr}
 8013000:	460c      	mov	r4, r1
 8013002:	6811      	ldr	r1, [r2, #0]
 8013004:	4610      	mov	r0, r2
 8013006:	68cd      	ldr	r5, [r1, #12]
 8013008:	4619      	mov	r1, r3
 801300a:	47a8      	blx	r5
 801300c:	2800      	cmp	r0, #0
 801300e:	bf08      	it	eq
 8013010:	4620      	moveq	r0, r4
 8013012:	bd38      	pop	{r3, r4, r5, pc}

08013014 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8013014:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013018:	468c      	mov	ip, r1
 801301a:	4605      	mov	r5, r0
 801301c:	4614      	mov	r4, r2
 801301e:	b942      	cbnz	r2, 8013032 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8013020:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8013024:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8013028:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 801302c:	4620      	mov	r0, r4
 801302e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013032:	7b50      	ldrb	r0, [r2, #13]
 8013034:	8893      	ldrh	r3, [r2, #4]
 8013036:	0106      	lsls	r6, r0, #4
 8013038:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801303c:	79e6      	ldrb	r6, [r4, #7]
 801303e:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8013042:	4316      	orrs	r6, r2
 8013044:	185a      	adds	r2, r3, r1
 8013046:	b291      	uxth	r1, r2
 8013048:	291d      	cmp	r1, #29
 801304a:	b2b7      	uxth	r7, r6
 801304c:	d87e      	bhi.n	801314c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801304e:	2201      	movs	r2, #1
 8013050:	408a      	lsls	r2, r1
 8013052:	498a      	ldr	r1, [pc, #552]	@ (801327c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8013054:	420a      	tst	r2, r1
 8013056:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801305a:	d12d      	bne.n	80130b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801305c:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8013060:	d074      	beq.n	801314c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8013062:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8013066:	4623      	mov	r3, r4
 8013068:	f104 0e08 	add.w	lr, r4, #8
 801306c:	4614      	mov	r4, r2
 801306e:	6818      	ldr	r0, [r3, #0]
 8013070:	6859      	ldr	r1, [r3, #4]
 8013072:	4694      	mov	ip, r2
 8013074:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8013078:	3308      	adds	r3, #8
 801307a:	4573      	cmp	r3, lr
 801307c:	4662      	mov	r2, ip
 801307e:	d1f6      	bne.n	801306e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8013080:	6818      	ldr	r0, [r3, #0]
 8013082:	f8cc 0000 	str.w	r0, [ip]
 8013086:	889b      	ldrh	r3, [r3, #4]
 8013088:	f8ac 3004 	strh.w	r3, [ip, #4]
 801308c:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8013090:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8013094:	b2b3      	uxth	r3, r6
 8013096:	1aca      	subs	r2, r1, r3
 8013098:	b292      	uxth	r2, r2
 801309a:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 801309e:	10d2      	asrs	r2, r2, #3
 80130a0:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 80130a4:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 80130a8:	4302      	orrs	r2, r0
 80130aa:	1bcf      	subs	r7, r1, r7
 80130ac:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 80130b0:	1afb      	subs	r3, r7, r3
 80130b2:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 80130b6:	e7b9      	b.n	801302c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80130b8:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80130bc:	4623      	mov	r3, r4
 80130be:	f104 0808 	add.w	r8, r4, #8
 80130c2:	4614      	mov	r4, r2
 80130c4:	6818      	ldr	r0, [r3, #0]
 80130c6:	6859      	ldr	r1, [r3, #4]
 80130c8:	4696      	mov	lr, r2
 80130ca:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80130ce:	3308      	adds	r3, #8
 80130d0:	4543      	cmp	r3, r8
 80130d2:	4672      	mov	r2, lr
 80130d4:	d1f6      	bne.n	80130c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 80130d6:	6818      	ldr	r0, [r3, #0]
 80130d8:	f8ce 0000 	str.w	r0, [lr]
 80130dc:	889b      	ldrh	r3, [r3, #4]
 80130de:	f8ae 3004 	strh.w	r3, [lr, #4]
 80130e2:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 80130e4:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 80130e8:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 80130ea:	f640 6333 	movw	r3, #3635	@ 0xe33
 80130ee:	4299      	cmp	r1, r3
 80130f0:	d111      	bne.n	8013116 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 80130f2:	f8dc 3000 	ldr.w	r3, [ip]
 80130f6:	4660      	mov	r0, ip
 80130f8:	68db      	ldr	r3, [r3, #12]
 80130fa:	4798      	blx	r3
 80130fc:	7b41      	ldrb	r1, [r0, #13]
 80130fe:	00cb      	lsls	r3, r1, #3
 8013100:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013104:	7a03      	ldrb	r3, [r0, #8]
 8013106:	4313      	orrs	r3, r2
 8013108:	064a      	lsls	r2, r1, #25
 801310a:	bf44      	itt	mi
 801310c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013110:	b21b      	sxthmi	r3, r3
 8013112:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8013116:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 801311a:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 801311e:	443b      	add	r3, r7
 8013120:	4433      	add	r3, r6
 8013122:	b29b      	uxth	r3, r3
 8013124:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8013128:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 801312c:	10db      	asrs	r3, r3, #3
 801312e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8013132:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8013136:	4313      	orrs	r3, r2
 8013138:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 801313c:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8013140:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8013144:	1a9b      	subs	r3, r3, r2
 8013146:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 801314a:	e76f      	b.n	801302c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 801314c:	f023 0204 	bic.w	r2, r3, #4
 8013150:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8013154:	428a      	cmp	r2, r1
 8013156:	d003      	beq.n	8013160 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8013158:	f640 621d 	movw	r2, #3613	@ 0xe1d
 801315c:	4293      	cmp	r3, r2
 801315e:	d137      	bne.n	80131d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8013160:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8013164:	4622      	mov	r2, r4
 8013166:	f104 0808 	add.w	r8, r4, #8
 801316a:	4634      	mov	r4, r6
 801316c:	6810      	ldr	r0, [r2, #0]
 801316e:	6851      	ldr	r1, [r2, #4]
 8013170:	46b6      	mov	lr, r6
 8013172:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013176:	3208      	adds	r2, #8
 8013178:	4542      	cmp	r2, r8
 801317a:	4676      	mov	r6, lr
 801317c:	d1f6      	bne.n	801316c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 801317e:	6810      	ldr	r0, [r2, #0]
 8013180:	f8ce 0000 	str.w	r0, [lr]
 8013184:	8892      	ldrh	r2, [r2, #4]
 8013186:	f8ae 2004 	strh.w	r2, [lr, #4]
 801318a:	3b01      	subs	r3, #1
 801318c:	b29b      	uxth	r3, r3
 801318e:	4662      	mov	r2, ip
 8013190:	4621      	mov	r1, r4
 8013192:	4628      	mov	r0, r5
 8013194:	f7ff ff33 	bl	8012ffe <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8013198:	7b41      	ldrb	r1, [r0, #13]
 801319a:	00cb      	lsls	r3, r1, #3
 801319c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80131a0:	7a03      	ldrb	r3, [r0, #8]
 80131a2:	0648      	lsls	r0, r1, #25
 80131a4:	ea43 0302 	orr.w	r3, r3, r2
 80131a8:	bf44      	itt	mi
 80131aa:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80131ae:	b21b      	sxthmi	r3, r3
 80131b0:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80131b4:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80131b8:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 80131bc:	005b      	lsls	r3, r3, #1
 80131be:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80131c2:	4313      	orrs	r3, r2
 80131c4:	115a      	asrs	r2, r3, #5
 80131c6:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80131ca:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 80131ce:	e046      	b.n	801325e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 80131d0:	00c2      	lsls	r2, r0, #3
 80131d2:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 80131d6:	7a22      	ldrb	r2, [r4, #8]
 80131d8:	430a      	orrs	r2, r1
 80131da:	0641      	lsls	r1, r0, #25
 80131dc:	bf44      	itt	mi
 80131de:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 80131e2:	b212      	sxthmi	r2, r2
 80131e4:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 80131e8:	f640 6109 	movw	r1, #3593	@ 0xe09
 80131ec:	f023 0210 	bic.w	r2, r3, #16
 80131f0:	428a      	cmp	r2, r1
 80131f2:	d003      	beq.n	80131fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 80131f4:	f640 6213 	movw	r2, #3603	@ 0xe13
 80131f8:	4293      	cmp	r3, r2
 80131fa:	d13d      	bne.n	8013278 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 80131fc:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8013200:	f104 0808 	add.w	r8, r4, #8
 8013204:	4696      	mov	lr, r2
 8013206:	6820      	ldr	r0, [r4, #0]
 8013208:	6861      	ldr	r1, [r4, #4]
 801320a:	4616      	mov	r6, r2
 801320c:	c603      	stmia	r6!, {r0, r1}
 801320e:	3408      	adds	r4, #8
 8013210:	4544      	cmp	r4, r8
 8013212:	4632      	mov	r2, r6
 8013214:	d1f7      	bne.n	8013206 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8013216:	6820      	ldr	r0, [r4, #0]
 8013218:	6030      	str	r0, [r6, #0]
 801321a:	88a1      	ldrh	r1, [r4, #4]
 801321c:	80b1      	strh	r1, [r6, #4]
 801321e:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8013222:	0076      	lsls	r6, r6, #1
 8013224:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8013228:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 801322c:	4316      	orrs	r6, r2
 801322e:	f640 6213 	movw	r2, #3603	@ 0xe13
 8013232:	4293      	cmp	r3, r2
 8013234:	bf1a      	itte	ne
 8013236:	f103 33ff 	addne.w	r3, r3, #4294967295
 801323a:	b29b      	uxthne	r3, r3
 801323c:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8013240:	4662      	mov	r2, ip
 8013242:	4671      	mov	r1, lr
 8013244:	4628      	mov	r0, r5
 8013246:	4674      	mov	r4, lr
 8013248:	f7ff fed9 	bl	8012ffe <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801324c:	7b43      	ldrb	r3, [r0, #13]
 801324e:	7a82      	ldrb	r2, [r0, #10]
 8013250:	005b      	lsls	r3, r3, #1
 8013252:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013256:	4313      	orrs	r3, r2
 8013258:	1af6      	subs	r6, r6, r3
 801325a:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 801325e:	7b61      	ldrb	r1, [r4, #13]
 8013260:	00cb      	lsls	r3, r1, #3
 8013262:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013266:	7a23      	ldrb	r3, [r4, #8]
 8013268:	4313      	orrs	r3, r2
 801326a:	064a      	lsls	r2, r1, #25
 801326c:	bf44      	itt	mi
 801326e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013272:	b21b      	sxthmi	r3, r3
 8013274:	1bdb      	subs	r3, r3, r7
 8013276:	e71c      	b.n	80130b2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8013278:	2300      	movs	r3, #0
 801327a:	e7a6      	b.n	80131ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 801327c:	3fc00079 	.word	0x3fc00079

08013280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8013280:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013284:	4604      	mov	r4, r0
 8013286:	b942      	cbnz	r2, 801329a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8013288:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801328c:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8013290:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8013294:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8013298:	e047      	b.n	801332a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801329a:	7b51      	ldrb	r1, [r2, #13]
 801329c:	8893      	ldrh	r3, [r2, #4]
 801329e:	010d      	lsls	r5, r1, #4
 80132a0:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 80132a4:	79d5      	ldrb	r5, [r2, #7]
 80132a6:	4305      	orrs	r5, r0
 80132a8:	2d04      	cmp	r5, #4
 80132aa:	bfcc      	ite	gt
 80132ac:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80132b0:	f04f 0e01 	movle.w	lr, #1
 80132b4:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 80132b8:	f200 80ab 	bhi.w	8013412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80132bc:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 80132c0:	4283      	cmp	r3, r0
 80132c2:	d216      	bcs.n	80132f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80132c4:	f240 605b 	movw	r0, #1627	@ 0x65b
 80132c8:	4283      	cmp	r3, r0
 80132ca:	d859      	bhi.n	8013380 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80132cc:	f240 6057 	movw	r0, #1623	@ 0x657
 80132d0:	4283      	cmp	r3, r0
 80132d2:	d20e      	bcs.n	80132f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80132d4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80132d8:	d24a      	bcs.n	8013370 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80132da:	f240 604e 	movw	r0, #1614	@ 0x64e
 80132de:	4283      	cmp	r3, r0
 80132e0:	d207      	bcs.n	80132f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80132e2:	f240 601a 	movw	r0, #1562	@ 0x61a
 80132e6:	4283      	cmp	r3, r0
 80132e8:	d02a      	beq.n	8013340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80132ea:	d821      	bhi.n	8013330 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80132ec:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 80132f0:	d35b      	bcc.n	80133aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80132f2:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 80132f6:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80132fa:	f040 80d0 	bne.w	801349e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80132fe:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8013302:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8013306:	f040 80ca 	bne.w	801349e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801330a:	00cb      	lsls	r3, r1, #3
 801330c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8013310:	7a13      	ldrb	r3, [r2, #8]
 8013312:	0649      	lsls	r1, r1, #25
 8013314:	ea43 0300 	orr.w	r3, r3, r0
 8013318:	bf44      	itt	mi
 801331a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801331e:	b21b      	sxthmi	r3, r3
 8013320:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8013324:	1b5d      	subs	r5, r3, r5
 8013326:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801332a:	4610      	mov	r0, r2
 801332c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013330:	f240 604b 	movw	r0, #1611	@ 0x64b
 8013334:	4283      	cmp	r3, r0
 8013336:	d338      	bcc.n	80133aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013338:	f240 604c 	movw	r0, #1612	@ 0x64c
 801333c:	4283      	cmp	r3, r0
 801333e:	d9d8      	bls.n	80132f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013340:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8013344:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8013348:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801334c:	f040 80f2 	bne.w	8013534 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8013350:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8013354:	f040 80ee 	bne.w	8013534 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8013358:	00cb      	lsls	r3, r1, #3
 801335a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801335e:	7a13      	ldrb	r3, [r2, #8]
 8013360:	064e      	lsls	r6, r1, #25
 8013362:	ea43 0300 	orr.w	r3, r3, r0
 8013366:	bf44      	itt	mi
 8013368:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801336c:	b21b      	sxthmi	r3, r3
 801336e:	e7d9      	b.n	8013324 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8013370:	f240 6054 	movw	r0, #1620	@ 0x654
 8013374:	4283      	cmp	r3, r0
 8013376:	d8e3      	bhi.n	8013340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013378:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 801337c:	d9e0      	bls.n	8013340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801337e:	e7b8      	b.n	80132f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013380:	f240 6074 	movw	r0, #1652	@ 0x674
 8013384:	4283      	cmp	r3, r0
 8013386:	d0b4      	beq.n	80132f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013388:	d82d      	bhi.n	80133e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801338a:	f240 605e 	movw	r0, #1630	@ 0x65e
 801338e:	4283      	cmp	r3, r0
 8013390:	d804      	bhi.n	801339c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8013392:	f240 605d 	movw	r0, #1629	@ 0x65d
 8013396:	4283      	cmp	r3, r0
 8013398:	d3d2      	bcc.n	8013340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801339a:	e7aa      	b.n	80132f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801339c:	f240 605f 	movw	r0, #1631	@ 0x65f
 80133a0:	4283      	cmp	r3, r0
 80133a2:	d0cd      	beq.n	8013340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80133a4:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 80133a8:	d0a3      	beq.n	80132f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80133aa:	00cb      	lsls	r3, r1, #3
 80133ac:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80133b0:	7a13      	ldrb	r3, [r2, #8]
 80133b2:	0649      	lsls	r1, r1, #25
 80133b4:	ea43 0300 	orr.w	r3, r3, r0
 80133b8:	bf44      	itt	mi
 80133ba:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80133be:	b21b      	sxthmi	r3, r3
 80133c0:	1b5d      	subs	r5, r3, r5
 80133c2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80133c6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80133ca:	7b53      	ldrb	r3, [r2, #13]
 80133cc:	015b      	lsls	r3, r3, #5
 80133ce:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80133d2:	7993      	ldrb	r3, [r2, #6]
 80133d4:	430b      	orrs	r3, r1
 80133d6:	005b      	lsls	r3, r3, #1
 80133d8:	2105      	movs	r1, #5
 80133da:	fb93 f3f1 	sdiv	r3, r3, r1
 80133de:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80133e2:	440b      	add	r3, r1
 80133e4:	e756      	b.n	8013294 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80133e6:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 80133ea:	4283      	cmp	r3, r0
 80133ec:	d809      	bhi.n	8013402 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80133ee:	f240 60df 	movw	r0, #1759	@ 0x6df
 80133f2:	4283      	cmp	r3, r0
 80133f4:	f4bf af7d 	bcs.w	80132f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80133f8:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 80133fc:	2b05      	cmp	r3, #5
 80133fe:	d8d4      	bhi.n	80133aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013400:	e777      	b.n	80132f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013402:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8013406:	4283      	cmp	r3, r0
 8013408:	d09a      	beq.n	8013340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801340a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 801340e:	4283      	cmp	r3, r0
 8013410:	e7ca      	b.n	80133a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8013412:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8013416:	d22b      	bcs.n	8013470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8013418:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 801341c:	4283      	cmp	r3, r0
 801341e:	d28f      	bcs.n	8013340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013420:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8013424:	4283      	cmp	r3, r0
 8013426:	d816      	bhi.n	8013456 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8013428:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 801342c:	4283      	cmp	r3, r0
 801342e:	f4bf af60 	bcs.w	80132f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013432:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8013436:	4283      	cmp	r3, r0
 8013438:	d80a      	bhi.n	8013450 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801343a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801343e:	4283      	cmp	r3, r0
 8013440:	f4bf af57 	bcs.w	80132f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013444:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8013448:	4283      	cmp	r3, r0
 801344a:	f43f af79 	beq.w	8013340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801344e:	e7ac      	b.n	80133aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013450:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8013454:	e7f8      	b.n	8013448 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8013456:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 801345a:	4283      	cmp	r3, r0
 801345c:	d802      	bhi.n	8013464 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801345e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8013462:	e798      	b.n	8013396 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8013464:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8013468:	4283      	cmp	r3, r0
 801346a:	f47f af42 	bne.w	80132f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801346e:	e767      	b.n	8013340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013470:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8013474:	4283      	cmp	r3, r0
 8013476:	f43f af63 	beq.w	8013340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801347a:	d802      	bhi.n	8013482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801347c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8013480:	e7f2      	b.n	8013468 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8013482:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8013486:	4283      	cmp	r3, r0
 8013488:	d805      	bhi.n	8013496 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801348a:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 801348e:	4283      	cmp	r3, r0
 8013490:	f4ff af2f 	bcc.w	80132f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013494:	e754      	b.n	8013340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013496:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 801349a:	4283      	cmp	r3, r0
 801349c:	e7af      	b.n	80133fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801349e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80134a2:	4617      	mov	r7, r2
 80134a4:	f102 0808 	add.w	r8, r2, #8
 80134a8:	4666      	mov	r6, ip
 80134aa:	6838      	ldr	r0, [r7, #0]
 80134ac:	6879      	ldr	r1, [r7, #4]
 80134ae:	46e6      	mov	lr, ip
 80134b0:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80134b4:	3708      	adds	r7, #8
 80134b6:	4547      	cmp	r7, r8
 80134b8:	46f4      	mov	ip, lr
 80134ba:	d1f6      	bne.n	80134aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80134bc:	6838      	ldr	r0, [r7, #0]
 80134be:	f8ce 0000 	str.w	r0, [lr]
 80134c2:	88b9      	ldrh	r1, [r7, #4]
 80134c4:	f8ae 1004 	strh.w	r1, [lr, #4]
 80134c8:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80134cc:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80134d0:	d009      	beq.n	80134e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80134d2:	7b51      	ldrb	r1, [r2, #13]
 80134d4:	7992      	ldrb	r2, [r2, #6]
 80134d6:	0149      	lsls	r1, r1, #5
 80134d8:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80134dc:	4311      	orrs	r1, r2
 80134de:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80134e2:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80134e6:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80134ea:	b2ad      	uxth	r5, r5
 80134ec:	d00d      	beq.n	801350a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80134ee:	442b      	add	r3, r5
 80134f0:	b29b      	uxth	r3, r3
 80134f2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80134f6:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80134fa:	10db      	asrs	r3, r3, #3
 80134fc:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8013500:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8013504:	4313      	orrs	r3, r2
 8013506:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801350a:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801350e:	00cb      	lsls	r3, r1, #3
 8013510:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013514:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8013518:	064f      	lsls	r7, r1, #25
 801351a:	ea43 0302 	orr.w	r3, r3, r2
 801351e:	bf44      	itt	mi
 8013520:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013524:	b21b      	sxthmi	r3, r3
 8013526:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801352a:	1b5b      	subs	r3, r3, r5
 801352c:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8013530:	4632      	mov	r2, r6
 8013532:	e6fa      	b.n	801332a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013534:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8013538:	4617      	mov	r7, r2
 801353a:	f102 0908 	add.w	r9, r2, #8
 801353e:	4666      	mov	r6, ip
 8013540:	6838      	ldr	r0, [r7, #0]
 8013542:	6879      	ldr	r1, [r7, #4]
 8013544:	46e0      	mov	r8, ip
 8013546:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801354a:	3708      	adds	r7, #8
 801354c:	454f      	cmp	r7, r9
 801354e:	46c4      	mov	ip, r8
 8013550:	d1f6      	bne.n	8013540 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8013552:	6838      	ldr	r0, [r7, #0]
 8013554:	f8c8 0000 	str.w	r0, [r8]
 8013558:	88b9      	ldrh	r1, [r7, #4]
 801355a:	f8a8 1004 	strh.w	r1, [r8, #4]
 801355e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8013562:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8013566:	d009      	beq.n	801357c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8013568:	7b51      	ldrb	r1, [r2, #13]
 801356a:	7992      	ldrb	r2, [r2, #6]
 801356c:	0149      	lsls	r1, r1, #5
 801356e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8013572:	4311      	orrs	r1, r2
 8013574:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013578:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 801357c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8013580:	d00e      	beq.n	80135a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8013582:	eba3 030e 	sub.w	r3, r3, lr
 8013586:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801358a:	b29b      	uxth	r3, r3
 801358c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8013590:	10db      	asrs	r3, r3, #3
 8013592:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8013596:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801359a:	4313      	orrs	r3, r2
 801359c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80135a0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80135a4:	00cb      	lsls	r3, r1, #3
 80135a6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80135aa:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80135ae:	0648      	lsls	r0, r1, #25
 80135b0:	ea43 0302 	orr.w	r3, r3, r2
 80135b4:	bf44      	itt	mi
 80135b6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80135ba:	b21b      	sxthmi	r3, r3
 80135bc:	1b5d      	subs	r5, r3, r5
 80135be:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80135c2:	e7b5      	b.n	8013530 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080135c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80135c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80135c8:	461e      	mov	r6, r3
 80135ca:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80135cc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80135d0:	4604      	mov	r4, r0
 80135d2:	4617      	mov	r7, r2
 80135d4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80135d8:	f7f1 f924 	bl	8004824 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80135dc:	4605      	mov	r5, r0
 80135de:	b918      	cbnz	r0, 80135e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80135e0:	6030      	str	r0, [r6, #0]
 80135e2:	4628      	mov	r0, r5
 80135e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80135e8:	683b      	ldr	r3, [r7, #0]
 80135ea:	4601      	mov	r1, r0
 80135ec:	68db      	ldr	r3, [r3, #12]
 80135ee:	4638      	mov	r0, r7
 80135f0:	4798      	blx	r3
 80135f2:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80135f6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80135fa:	4602      	mov	r2, r0
 80135fc:	6030      	str	r0, [r6, #0]
 80135fe:	d213      	bcs.n	8013628 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8013600:	4643      	mov	r3, r8
 8013602:	4639      	mov	r1, r7
 8013604:	4620      	mov	r0, r4
 8013606:	f7ff fe3b 	bl	8013280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801360a:	6030      	str	r0, [r6, #0]
 801360c:	6833      	ldr	r3, [r6, #0]
 801360e:	b143      	cbz	r3, 8013622 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8013610:	7b5a      	ldrb	r2, [r3, #13]
 8013612:	7a9b      	ldrb	r3, [r3, #10]
 8013614:	0052      	lsls	r2, r2, #1
 8013616:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801361a:	4313      	orrs	r3, r2
 801361c:	bf0c      	ite	eq
 801361e:	2301      	moveq	r3, #1
 8013620:	2300      	movne	r3, #0
 8013622:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8013626:	e7dc      	b.n	80135e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8013628:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 801362c:	b29b      	uxth	r3, r3
 801362e:	2b7f      	cmp	r3, #127	@ 0x7f
 8013630:	d804      	bhi.n	801363c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8013632:	4639      	mov	r1, r7
 8013634:	4620      	mov	r0, r4
 8013636:	f7ff fced 	bl	8013014 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801363a:	e7e6      	b.n	801360a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801363c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8013640:	2b00      	cmp	r3, #0
 8013642:	d0e3      	beq.n	801360c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013644:	f640 1302 	movw	r3, #2306	@ 0x902
 8013648:	429d      	cmp	r5, r3
 801364a:	d1df      	bne.n	801360c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801364c:	4601      	mov	r1, r0
 801364e:	4620      	mov	r0, r4
 8013650:	f7ff fcb2 	bl	8012fb8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013654:	e7d9      	b.n	801360a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08013656 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8013656:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801365a:	461e      	mov	r6, r3
 801365c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801365e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013662:	4604      	mov	r4, r0
 8013664:	4617      	mov	r7, r2
 8013666:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801366a:	f7f1 f8db 	bl	8004824 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801366e:	4605      	mov	r5, r0
 8013670:	b918      	cbnz	r0, 801367a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8013672:	6030      	str	r0, [r6, #0]
 8013674:	4628      	mov	r0, r5
 8013676:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801367a:	683b      	ldr	r3, [r7, #0]
 801367c:	4601      	mov	r1, r0
 801367e:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8013682:	4638      	mov	r0, r7
 8013684:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8013688:	47c8      	blx	r9
 801368a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801368e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8013692:	4602      	mov	r2, r0
 8013694:	6030      	str	r0, [r6, #0]
 8013696:	d213      	bcs.n	80136c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8013698:	4643      	mov	r3, r8
 801369a:	4639      	mov	r1, r7
 801369c:	4620      	mov	r0, r4
 801369e:	f7ff fdef 	bl	8013280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80136a2:	6030      	str	r0, [r6, #0]
 80136a4:	6833      	ldr	r3, [r6, #0]
 80136a6:	b143      	cbz	r3, 80136ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80136a8:	7b5a      	ldrb	r2, [r3, #13]
 80136aa:	7a9b      	ldrb	r3, [r3, #10]
 80136ac:	0052      	lsls	r2, r2, #1
 80136ae:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80136b2:	4313      	orrs	r3, r2
 80136b4:	bf0c      	ite	eq
 80136b6:	2301      	moveq	r3, #1
 80136b8:	2300      	movne	r3, #0
 80136ba:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80136be:	e7d9      	b.n	8013674 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80136c0:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80136c4:	b29b      	uxth	r3, r3
 80136c6:	2b7f      	cmp	r3, #127	@ 0x7f
 80136c8:	d804      	bhi.n	80136d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80136ca:	4639      	mov	r1, r7
 80136cc:	4620      	mov	r0, r4
 80136ce:	f7ff fca1 	bl	8013014 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80136d2:	e7e6      	b.n	80136a2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80136d4:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80136d8:	2b00      	cmp	r3, #0
 80136da:	d0e3      	beq.n	80136a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80136dc:	f640 1302 	movw	r3, #2306	@ 0x902
 80136e0:	429d      	cmp	r5, r3
 80136e2:	d1df      	bne.n	80136a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80136e4:	4601      	mov	r1, r0
 80136e6:	4620      	mov	r0, r4
 80136e8:	f7ff fc66 	bl	8012fb8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80136ec:	e7d9      	b.n	80136a2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080136ee <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80136ee:	b510      	push	{r4, lr}
 80136f0:	4604      	mov	r4, r0
 80136f2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 80136f6:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80136f8:	b1f1      	cbz	r1, 8013738 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80136fa:	2b0a      	cmp	r3, #10
 80136fc:	d02f      	beq.n	801375e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80136fe:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8013700:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013704:	3901      	subs	r1, #1
 8013706:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8013708:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 801370c:	1c51      	adds	r1, r2, #1
 801370e:	b289      	uxth	r1, r1
 8013710:	2901      	cmp	r1, #1
 8013712:	bf84      	itt	hi
 8013714:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8013718:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 801371a:	f103 0201 	add.w	r2, r3, #1
 801371e:	8722      	strh	r2, [r4, #56]	@ 0x38
 8013720:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8013722:	bf98      	it	ls
 8013724:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8013726:	4413      	add	r3, r2
 8013728:	b29b      	uxth	r3, r3
 801372a:	2b09      	cmp	r3, #9
 801372c:	bf88      	it	hi
 801372e:	3b0a      	subhi	r3, #10
 8013730:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013734:	8458      	strh	r0, [r3, #34]	@ 0x22
 8013736:	e7dc      	b.n	80136f2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8013738:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801373a:	2b0a      	cmp	r3, #10
 801373c:	d00f      	beq.n	801375e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801373e:	4620      	mov	r0, r4
 8013740:	f7ff fbe8 	bl	8012f14 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8013744:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8013746:	1c5a      	adds	r2, r3, #1
 8013748:	8722      	strh	r2, [r4, #56]	@ 0x38
 801374a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801374c:	4413      	add	r3, r2
 801374e:	b29b      	uxth	r3, r3
 8013750:	2b09      	cmp	r3, #9
 8013752:	bf88      	it	hi
 8013754:	3b0a      	subhi	r3, #10
 8013756:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801375a:	8458      	strh	r0, [r3, #34]	@ 0x22
 801375c:	e7ec      	b.n	8013738 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801375e:	bd10      	pop	{r4, pc}

08013760 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8013760:	b538      	push	{r3, r4, r5, lr}
 8013762:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8013764:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8013768:	4604      	mov	r4, r0
 801376a:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 801376c:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801376e:	3a01      	subs	r2, #1
 8013770:	8702      	strh	r2, [r0, #56]	@ 0x38
 8013772:	1c5a      	adds	r2, r3, #1
 8013774:	b292      	uxth	r2, r2
 8013776:	2a09      	cmp	r2, #9
 8013778:	bf86      	itte	hi
 801377a:	3b09      	subhi	r3, #9
 801377c:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 801377e:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8013780:	f7ff ffb5 	bl	80136ee <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8013784:	8c23      	ldrh	r3, [r4, #32]
 8013786:	2b01      	cmp	r3, #1
 8013788:	bf9c      	itt	ls
 801378a:	3301      	addls	r3, #1
 801378c:	8423      	strhls	r3, [r4, #32]
 801378e:	8be3      	ldrh	r3, [r4, #30]
 8013790:	b90b      	cbnz	r3, 8013796 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8013792:	2302      	movs	r3, #2
 8013794:	83e3      	strh	r3, [r4, #30]
 8013796:	8be3      	ldrh	r3, [r4, #30]
 8013798:	3b01      	subs	r3, #1
 801379a:	b29b      	uxth	r3, r3
 801379c:	83e3      	strh	r3, [r4, #30]
 801379e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80137a2:	4628      	mov	r0, r5
 80137a4:	8365      	strh	r5, [r4, #26]
 80137a6:	bd38      	pop	{r3, r4, r5, pc}

080137a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80137a8:	428a      	cmp	r2, r1
 80137aa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80137ae:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 80137b0:	d931      	bls.n	8013816 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80137b2:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 80137b4:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80137b8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80137bc:	19ee      	adds	r6, r5, r7
 80137be:	1a54      	subs	r4, r2, r1
 80137c0:	3e01      	subs	r6, #1
 80137c2:	fa1f fe84 	uxth.w	lr, r4
 80137c6:	b2b4      	uxth	r4, r6
 80137c8:	eba4 090e 	sub.w	r9, r4, lr
 80137cc:	fa1f f989 	uxth.w	r9, r9
 80137d0:	2c09      	cmp	r4, #9
 80137d2:	4626      	mov	r6, r4
 80137d4:	bf88      	it	hi
 80137d6:	f1a4 060a 	subhi.w	r6, r4, #10
 80137da:	f1bc 0f00 	cmp.w	ip, #0
 80137de:	bf08      	it	eq
 80137e0:	f04f 0c02 	moveq.w	ip, #2
 80137e4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80137e8:	f10c 3cff 	add.w	ip, ip, #4294967295
 80137ec:	fa1f fc8c 	uxth.w	ip, ip
 80137f0:	3c01      	subs	r4, #1
 80137f2:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 80137f6:	b2a4      	uxth	r4, r4
 80137f8:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80137fc:	454c      	cmp	r4, r9
 80137fe:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8013802:	d1e5      	bne.n	80137d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013804:	eba5 050e 	sub.w	r5, r5, lr
 8013808:	eb0e 0408 	add.w	r4, lr, r8
 801380c:	8705      	strh	r5, [r0, #56]	@ 0x38
 801380e:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8013812:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8013816:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8013818:	1a64      	subs	r4, r4, r1
 801381a:	4439      	add	r1, r7
 801381c:	b289      	uxth	r1, r1
 801381e:	2909      	cmp	r1, #9
 8013820:	bf88      	it	hi
 8013822:	390a      	subhi	r1, #10
 8013824:	8704      	strh	r4, [r0, #56]	@ 0x38
 8013826:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8013828:	250a      	movs	r5, #10
 801382a:	b18a      	cbz	r2, 8013850 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801382c:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801382e:	3a01      	subs	r2, #1
 8013830:	b292      	uxth	r2, r2
 8013832:	3101      	adds	r1, #1
 8013834:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8013838:	8701      	strh	r1, [r0, #56]	@ 0x38
 801383a:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801383c:	b901      	cbnz	r1, 8013840 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801383e:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8013840:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8013842:	3901      	subs	r1, #1
 8013844:	b289      	uxth	r1, r1
 8013846:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8013848:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801384c:	844c      	strh	r4, [r1, #34]	@ 0x22
 801384e:	e7ec      	b.n	801382a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8013850:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013854:	f7ff bf4b 	b.w	80136ee <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08013858 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8013858:	b570      	push	{r4, r5, r6, lr}
 801385a:	2500      	movs	r5, #0
 801385c:	4295      	cmp	r5, r2
 801385e:	d011      	beq.n	8013884 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8013860:	8bc4      	ldrh	r4, [r0, #30]
 8013862:	f831 6b02 	ldrh.w	r6, [r1], #2
 8013866:	4414      	add	r4, r2
 8013868:	3c01      	subs	r4, #1
 801386a:	1b64      	subs	r4, r4, r5
 801386c:	b2a4      	uxth	r4, r4
 801386e:	2c01      	cmp	r4, #1
 8013870:	bf88      	it	hi
 8013872:	3c02      	subhi	r4, #2
 8013874:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013878:	8b64      	ldrh	r4, [r4, #26]
 801387a:	42b4      	cmp	r4, r6
 801387c:	d117      	bne.n	80138ae <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801387e:	3501      	adds	r5, #1
 8013880:	b2ad      	uxth	r5, r5
 8013882:	e7eb      	b.n	801385c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8013884:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013888:	2400      	movs	r4, #0
 801388a:	4413      	add	r3, r2
 801388c:	b2a2      	uxth	r2, r4
 801388e:	429a      	cmp	r2, r3
 8013890:	da0f      	bge.n	80138b2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8013892:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8013894:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8013898:	4432      	add	r2, r6
 801389a:	b292      	uxth	r2, r2
 801389c:	2a09      	cmp	r2, #9
 801389e:	bf88      	it	hi
 80138a0:	3a0a      	subhi	r2, #10
 80138a2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80138a6:	3401      	adds	r4, #1
 80138a8:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 80138aa:	42aa      	cmp	r2, r5
 80138ac:	d0ee      	beq.n	801388c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80138ae:	2000      	movs	r0, #0
 80138b0:	bd70      	pop	{r4, r5, r6, pc}
 80138b2:	2001      	movs	r0, #1
 80138b4:	e7fc      	b.n	80138b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080138b6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80138b6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138ba:	4605      	mov	r5, r0
 80138bc:	4616      	mov	r6, r2
 80138be:	1c8c      	adds	r4, r1, #2
 80138c0:	8809      	ldrh	r1, [r1, #0]
 80138c2:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80138c6:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80138ca:	42b3      	cmp	r3, r6
 80138cc:	d124      	bne.n	8013918 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80138ce:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80138d2:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80138d6:	f001 070f 	and.w	r7, r1, #15
 80138da:	f8cd 8000 	str.w	r8, [sp]
 80138de:	464b      	mov	r3, r9
 80138e0:	4652      	mov	r2, sl
 80138e2:	4621      	mov	r1, r4
 80138e4:	4628      	mov	r0, r5
 80138e6:	f7ff ffb7 	bl	8013858 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80138ea:	4683      	mov	fp, r0
 80138ec:	b168      	cbz	r0, 801390a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80138ee:	eb0a 0109 	add.w	r1, sl, r9
 80138f2:	4441      	add	r1, r8
 80138f4:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80138f8:	463a      	mov	r2, r7
 80138fa:	4649      	mov	r1, r9
 80138fc:	4628      	mov	r0, r5
 80138fe:	f7ff ff53 	bl	80137a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013902:	4658      	mov	r0, fp
 8013904:	b003      	add	sp, #12
 8013906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801390a:	eb07 010a 	add.w	r1, r7, sl
 801390e:	4449      	add	r1, r9
 8013910:	4441      	add	r1, r8
 8013912:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8013916:	e7d2      	b.n	80138be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8013918:	f04f 0b00 	mov.w	fp, #0
 801391c:	e7f1      	b.n	8013902 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801391e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801391e:	b570      	push	{r4, r5, r6, lr}
 8013920:	8810      	ldrh	r0, [r2, #0]
 8013922:	4298      	cmp	r0, r3
 8013924:	d817      	bhi.n	8013956 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013926:	1e48      	subs	r0, r1, #1
 8013928:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801392c:	4298      	cmp	r0, r3
 801392e:	d312      	bcc.n	8013956 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013930:	2400      	movs	r4, #0
 8013932:	428c      	cmp	r4, r1
 8013934:	d20f      	bcs.n	8013956 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013936:	1860      	adds	r0, r4, r1
 8013938:	1040      	asrs	r0, r0, #1
 801393a:	0085      	lsls	r5, r0, #2
 801393c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8013940:	42b3      	cmp	r3, r6
 8013942:	d902      	bls.n	801394a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013944:	3001      	adds	r0, #1
 8013946:	b284      	uxth	r4, r0
 8013948:	e7f3      	b.n	8013932 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801394a:	d201      	bcs.n	8013950 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801394c:	b281      	uxth	r1, r0
 801394e:	e7f0      	b.n	8013932 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013950:	442a      	add	r2, r5
 8013952:	8850      	ldrh	r0, [r2, #2]
 8013954:	bd70      	pop	{r4, r5, r6, pc}
 8013956:	2000      	movs	r0, #0
 8013958:	e7fc      	b.n	8013954 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801395a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801395a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801395e:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8013960:	886f      	ldrh	r7, [r5, #2]
 8013962:	4604      	mov	r4, r0
 8013964:	087f      	lsrs	r7, r7, #1
 8013966:	260b      	movs	r6, #11
 8013968:	3e01      	subs	r6, #1
 801396a:	d013      	beq.n	8013994 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801396c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801396e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013972:	462a      	mov	r2, r5
 8013974:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8013978:	4639      	mov	r1, r7
 801397a:	4643      	mov	r3, r8
 801397c:	4620      	mov	r0, r4
 801397e:	f7ff ffce 	bl	801391e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8013982:	b138      	cbz	r0, 8013994 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013984:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8013988:	4642      	mov	r2, r8
 801398a:	4620      	mov	r0, r4
 801398c:	f7ff ff93 	bl	80138b6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8013990:	2800      	cmp	r0, #0
 8013992:	d1e9      	bne.n	8013968 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8013994:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013998 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8013998:	b570      	push	{r4, r5, r6, lr}
 801399a:	694a      	ldr	r2, [r1, #20]
 801399c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 801399e:	684b      	ldr	r3, [r1, #4]
 80139a0:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 80139a2:	1b54      	subs	r4, r2, r5
 80139a4:	f000 8106 	beq.w	8013bb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80139a8:	1b9b      	subs	r3, r3, r6
 80139aa:	d003      	beq.n	80139b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80139ac:	4363      	muls	r3, r4
 80139ae:	2210      	movs	r2, #16
 80139b0:	fb93 f3f2 	sdiv	r3, r3, r2
 80139b4:	680c      	ldr	r4, [r1, #0]
 80139b6:	698a      	ldr	r2, [r1, #24]
 80139b8:	1b65      	subs	r5, r4, r5
 80139ba:	f000 80fd 	beq.w	8013bb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80139be:	1b92      	subs	r2, r2, r6
 80139c0:	d003      	beq.n	80139ca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80139c2:	436a      	muls	r2, r5
 80139c4:	2410      	movs	r4, #16
 80139c6:	fb92 f2f4 	sdiv	r2, r2, r4
 80139ca:	1a9b      	subs	r3, r3, r2
 80139cc:	ee07 3a90 	vmov	s15, r3
 80139d0:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8013bf4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80139d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80139d8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80139dc:	ee67 7a84 	vmul.f32	s15, s15, s8
 80139e0:	460a      	mov	r2, r1
 80139e2:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80139e6:	4603      	mov	r3, r0
 80139e8:	f100 040c 	add.w	r4, r0, #12
 80139ec:	eeb1 6a43 	vneg.f32	s12, s6
 80139f0:	edd2 7a02 	vldr	s15, [r2, #8]
 80139f4:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80139f8:	3214      	adds	r2, #20
 80139fa:	ece3 6a01 	vstmia	r3!, {s13}
 80139fe:	ed52 7a02 	vldr	s15, [r2, #-8]
 8013a02:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013a06:	429c      	cmp	r4, r3
 8013a08:	edc3 7a02 	vstr	s15, [r3, #8]
 8013a0c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013a10:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013a14:	edc3 7a05 	vstr	s15, [r3, #20]
 8013a18:	d1ea      	bne.n	80139f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8013a1a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8013a1c:	698b      	ldr	r3, [r1, #24]
 8013a1e:	edd0 4a02 	vldr	s9, [r0, #8]
 8013a22:	edd0 3a00 	vldr	s7, [r0]
 8013a26:	edd0 6a01 	vldr	s13, [r0, #4]
 8013a2a:	ed90 5a05 	vldr	s10, [r0, #20]
 8013a2e:	ed90 2a03 	vldr	s4, [r0, #12]
 8013a32:	edd0 5a04 	vldr	s11, [r0, #16]
 8013a36:	ed90 1a07 	vldr	s2, [r0, #28]
 8013a3a:	edd0 2a06 	vldr	s5, [r0, #24]
 8013a3e:	1a9b      	subs	r3, r3, r2
 8013a40:	ee07 3a90 	vmov	s15, r3
 8013a44:	684b      	ldr	r3, [r1, #4]
 8013a46:	1a9b      	subs	r3, r3, r2
 8013a48:	ee07 3a10 	vmov	s14, r3
 8013a4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013a50:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8013a54:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013a58:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8013a5c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013a60:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8013a64:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013a68:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8013a6c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013a70:	ee32 5a45 	vsub.f32	s10, s4, s10
 8013a74:	ee67 7a83 	vmul.f32	s15, s15, s6
 8013a78:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8013a7c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8013a7e:	694a      	ldr	r2, [r1, #20]
 8013a80:	1b13      	subs	r3, r2, r4
 8013a82:	ee07 3a10 	vmov	s14, r3
 8013a86:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013a8a:	680b      	ldr	r3, [r1, #0]
 8013a8c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013a90:	1b1b      	subs	r3, r3, r4
 8013a92:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8013a96:	ee07 3a10 	vmov	s14, r3
 8013a9a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013a9e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013aa2:	eee6 4a87 	vfma.f32	s9, s13, s14
 8013aa6:	ee64 4a86 	vmul.f32	s9, s9, s12
 8013aaa:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8013aae:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8013ab0:	698b      	ldr	r3, [r1, #24]
 8013ab2:	1a9b      	subs	r3, r3, r2
 8013ab4:	ee06 3a90 	vmov	s13, r3
 8013ab8:	684b      	ldr	r3, [r1, #4]
 8013aba:	1a9b      	subs	r3, r3, r2
 8013abc:	ee07 3a10 	vmov	s14, r3
 8013ac0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013ac4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013ac8:	ee66 6a84 	vmul.f32	s13, s13, s8
 8013acc:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013ad0:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8013ad4:	eee5 6a87 	vfma.f32	s13, s11, s14
 8013ad8:	ee66 6a83 	vmul.f32	s13, s13, s6
 8013adc:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8013ae0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8013ae2:	694a      	ldr	r2, [r1, #20]
 8013ae4:	1b13      	subs	r3, r2, r4
 8013ae6:	ee07 3a10 	vmov	s14, r3
 8013aea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013aee:	680b      	ldr	r3, [r1, #0]
 8013af0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013af4:	1b1b      	subs	r3, r3, r4
 8013af6:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8013afa:	ee07 3a10 	vmov	s14, r3
 8013afe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013b02:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013b06:	eea5 5a87 	vfma.f32	s10, s11, s14
 8013b0a:	edd0 5a08 	vldr	s11, [r0, #32]
 8013b0e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013b12:	ee31 1a65 	vsub.f32	s2, s2, s11
 8013b16:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8013b1a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8013b1c:	698b      	ldr	r3, [r1, #24]
 8013b1e:	1a9b      	subs	r3, r3, r2
 8013b20:	ee07 3a10 	vmov	s14, r3
 8013b24:	684b      	ldr	r3, [r1, #4]
 8013b26:	1a9b      	subs	r3, r3, r2
 8013b28:	ee01 3a90 	vmov	s3, r3
 8013b2c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013b30:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013b34:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013b38:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8013b3c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8013b40:	ee61 1a84 	vmul.f32	s3, s3, s8
 8013b44:	eea1 7a21 	vfma.f32	s14, s2, s3
 8013b48:	ee27 7a03 	vmul.f32	s14, s14, s6
 8013b4c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8013b50:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8013b52:	694a      	ldr	r2, [r1, #20]
 8013b54:	1b13      	subs	r3, r2, r4
 8013b56:	ee03 3a10 	vmov	s6, r3
 8013b5a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013b5e:	680b      	ldr	r3, [r1, #0]
 8013b60:	ee23 3a04 	vmul.f32	s6, s6, s8
 8013b64:	1b1b      	subs	r3, r3, r4
 8013b66:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8013b6a:	ee03 3a10 	vmov	s6, r3
 8013b6e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013b72:	ee23 4a04 	vmul.f32	s8, s6, s8
 8013b76:	eee1 5a04 	vfma.f32	s11, s2, s8
 8013b7a:	ee25 6a86 	vmul.f32	s12, s11, s12
 8013b7e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8013b82:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8013b86:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8013b8a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8013b8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013b92:	dd13      	ble.n	8013bbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8013b94:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8013b98:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8013b9c:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8013b9e:	eee3 7a87 	vfma.f32	s15, s7, s14
 8013ba2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013ba6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013baa:	dd15      	ble.n	8013bd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8013bac:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8013bb0:	6403      	str	r3, [r0, #64]	@ 0x40
 8013bb2:	bd70      	pop	{r4, r5, r6, pc}
 8013bb4:	4623      	mov	r3, r4
 8013bb6:	e6fd      	b.n	80139b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013bb8:	462a      	mov	r2, r5
 8013bba:	e706      	b.n	80139ca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013bbc:	d502      	bpl.n	8013bc4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8013bbe:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8013bc2:	e7e9      	b.n	8013b98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8013bc4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8013bc8:	eea3 2a85 	vfma.f32	s4, s7, s10
 8013bcc:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8013bd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013bd4:	dade      	bge.n	8013b94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8013bd6:	e7f2      	b.n	8013bbe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8013bd8:	d502      	bpl.n	8013be0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8013bda:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8013bde:	e7e7      	b.n	8013bb0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8013be0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8013be4:	eee3 4a86 	vfma.f32	s9, s7, s12
 8013be8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8013bec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013bf0:	dadc      	bge.n	8013bac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013bf2:	e7f2      	b.n	8013bda <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013bf4:	3d800000 	.word	0x3d800000

08013bf8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8013bf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013bfc:	2714      	movs	r7, #20
 8013bfe:	435f      	muls	r7, r3
 8013c00:	eb02 0c07 	add.w	ip, r2, r7
 8013c04:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8013c08:	f115 0e0f 	adds.w	lr, r5, #15
 8013c0c:	f100 80a2 	bmi.w	8013d54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013c10:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013c14:	9c08      	ldr	r4, [sp, #32]
 8013c16:	f8c0 e014 	str.w	lr, [r0, #20]
 8013c1a:	2614      	movs	r6, #20
 8013c1c:	4366      	muls	r6, r4
 8013c1e:	eb02 0806 	add.w	r8, r2, r6
 8013c22:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8013c26:	f115 040f 	adds.w	r4, r5, #15
 8013c2a:	f100 809f 	bmi.w	8013d6c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8013c2e:	1124      	asrs	r4, r4, #4
 8013c30:	eba4 040e 	sub.w	r4, r4, lr
 8013c34:	6184      	str	r4, [r0, #24]
 8013c36:	2c00      	cmp	r4, #0
 8013c38:	f000 808a 	beq.w	8013d50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8013c3c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013c40:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013c44:	5995      	ldr	r5, [r2, r6]
 8013c46:	eba4 0809 	sub.w	r8, r4, r9
 8013c4a:	59d4      	ldr	r4, [r2, r7]
 8013c4c:	eba5 0a04 	sub.w	sl, r5, r4
 8013c50:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8013c54:	fb0e fe05 	mul.w	lr, lr, r5
 8013c58:	fb0a ee19 	mls	lr, sl, r9, lr
 8013c5c:	fb08 e404 	mla	r4, r8, r4, lr
 8013c60:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8013c64:	3c01      	subs	r4, #1
 8013c66:	19a4      	adds	r4, r4, r6
 8013c68:	f100 808c 	bmi.w	8013d84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8013c6c:	fb94 fef6 	sdiv	lr, r4, r6
 8013c70:	f8c0 e000 	str.w	lr, [r0]
 8013c74:	fb06 441e 	mls	r4, r6, lr, r4
 8013c78:	6104      	str	r4, [r0, #16]
 8013c7a:	2d00      	cmp	r5, #0
 8013c7c:	f2c0 8095 	blt.w	8013daa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8013c80:	fb95 f4f6 	sdiv	r4, r5, r6
 8013c84:	6044      	str	r4, [r0, #4]
 8013c86:	fb06 5514 	mls	r5, r6, r4, r5
 8013c8a:	6085      	str	r5, [r0, #8]
 8013c8c:	60c6      	str	r6, [r0, #12]
 8013c8e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8013c92:	6945      	ldr	r5, [r0, #20]
 8013c94:	59d2      	ldr	r2, [r2, r7]
 8013c96:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8013dcc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8013c9a:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8013c9e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8013ca2:	ee07 4a10 	vmov	s14, r4
 8013ca6:	6804      	ldr	r4, [r0, #0]
 8013ca8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8013cac:	ee07 2a90 	vmov	s15, r2
 8013cb0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013cb4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013cb8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013cbc:	ee27 7a26 	vmul.f32	s14, s14, s13
 8013cc0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013cc4:	edd3 6a00 	vldr	s13, [r3]
 8013cc8:	eee6 6a07 	vfma.f32	s13, s12, s14
 8013ccc:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8013cd0:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013cd4:	edc0 6a07 	vstr	s13, [r0, #28]
 8013cd8:	edd0 6a01 	vldr	s13, [r0, #4]
 8013cdc:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8013ce0:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8013ce4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013ce8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013cec:	ed80 6a08 	vstr	s12, [r0, #32]
 8013cf0:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8013cf2:	6242      	str	r2, [r0, #36]	@ 0x24
 8013cf4:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8013cf8:	ed93 6a03 	vldr	s12, [r3, #12]
 8013cfc:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013d00:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8013d04:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8013d08:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8013d0c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8013d10:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8013d14:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013d18:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8013d1c:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8013d1e:	6302      	str	r2, [r0, #48]	@ 0x30
 8013d20:	ed93 6a06 	vldr	s12, [r3, #24]
 8013d24:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8013d28:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013d2c:	eeb0 7a46 	vmov.f32	s14, s12
 8013d30:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8013d34:	eea6 7a27 	vfma.f32	s14, s12, s15
 8013d38:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8013d3c:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8013d40:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8013d44:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013d48:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8013d4c:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8013d4e:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8013d50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013d54:	f1c5 0501 	rsb	r5, r5, #1
 8013d58:	f015 050f 	ands.w	r5, r5, #15
 8013d5c:	bf18      	it	ne
 8013d5e:	2501      	movne	r5, #1
 8013d60:	2410      	movs	r4, #16
 8013d62:	fb9e fef4 	sdiv	lr, lr, r4
 8013d66:	ebae 0e05 	sub.w	lr, lr, r5
 8013d6a:	e753      	b.n	8013c14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8013d6c:	f1c5 0501 	rsb	r5, r5, #1
 8013d70:	f015 050f 	ands.w	r5, r5, #15
 8013d74:	bf18      	it	ne
 8013d76:	2501      	movne	r5, #1
 8013d78:	f04f 0910 	mov.w	r9, #16
 8013d7c:	fb94 f4f9 	sdiv	r4, r4, r9
 8013d80:	1b64      	subs	r4, r4, r5
 8013d82:	e755      	b.n	8013c30 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8013d84:	4264      	negs	r4, r4
 8013d86:	fb94 fef6 	sdiv	lr, r4, r6
 8013d8a:	f1ce 0800 	rsb	r8, lr, #0
 8013d8e:	fb06 441e 	mls	r4, r6, lr, r4
 8013d92:	f8c0 8000 	str.w	r8, [r0]
 8013d96:	6104      	str	r4, [r0, #16]
 8013d98:	2c00      	cmp	r4, #0
 8013d9a:	f43f af6e 	beq.w	8013c7a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8013d9e:	ea6f 0e0e 	mvn.w	lr, lr
 8013da2:	f8c0 e000 	str.w	lr, [r0]
 8013da6:	1b34      	subs	r4, r6, r4
 8013da8:	e766      	b.n	8013c78 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8013daa:	426d      	negs	r5, r5
 8013dac:	fb95 f4f6 	sdiv	r4, r5, r6
 8013db0:	f1c4 0e00 	rsb	lr, r4, #0
 8013db4:	fb06 5514 	mls	r5, r6, r4, r5
 8013db8:	f8c0 e004 	str.w	lr, [r0, #4]
 8013dbc:	6085      	str	r5, [r0, #8]
 8013dbe:	2d00      	cmp	r5, #0
 8013dc0:	f43f af64 	beq.w	8013c8c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8013dc4:	43e4      	mvns	r4, r4
 8013dc6:	6044      	str	r4, [r0, #4]
 8013dc8:	1b75      	subs	r5, r6, r5
 8013dca:	e75e      	b.n	8013c8a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8013dcc:	3d800000 	.word	0x3d800000

08013dd0 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8013dd0:	4602      	mov	r2, r0
 8013dd2:	b148      	cbz	r0, 8013de8 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8013dd4:	2300      	movs	r3, #0
 8013dd6:	b298      	uxth	r0, r3
 8013dd8:	3301      	adds	r3, #1
 8013dda:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8013dde:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8013de2:	2900      	cmp	r1, #0
 8013de4:	d1f7      	bne.n	8013dd6 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8013de6:	4770      	bx	lr
 8013de8:	4770      	bx	lr

08013dea <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8013dea:	b530      	push	{r4, r5, lr}
 8013dec:	4604      	mov	r4, r0
 8013dee:	b159      	cbz	r1, 8013e08 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8013df0:	b148      	cbz	r0, 8013e06 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013df2:	2300      	movs	r3, #0
 8013df4:	b298      	uxth	r0, r3
 8013df6:	4282      	cmp	r2, r0
 8013df8:	d905      	bls.n	8013e06 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013dfa:	5ccd      	ldrb	r5, [r1, r3]
 8013dfc:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013e00:	3301      	adds	r3, #1
 8013e02:	2d00      	cmp	r5, #0
 8013e04:	d1f6      	bne.n	8013df4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8013e06:	bd30      	pop	{r4, r5, pc}
 8013e08:	4608      	mov	r0, r1
 8013e0a:	e7fc      	b.n	8013e06 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08013e0c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8013e0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013e0e:	b08b      	sub	sp, #44	@ 0x2c
 8013e10:	468c      	mov	ip, r1
 8013e12:	2100      	movs	r1, #0
 8013e14:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8013e18:	4604      	mov	r4, r0
 8013e1a:	261f      	movs	r6, #31
 8013e1c:	af01      	add	r7, sp, #4
 8013e1e:	fb94 fef3 	sdiv	lr, r4, r3
 8013e22:	fb03 441e 	mls	r4, r3, lr, r4
 8013e26:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8013e2a:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8013e2e:	b2ec      	uxtb	r4, r5
 8013e30:	2d09      	cmp	r5, #9
 8013e32:	bfd4      	ite	le
 8013e34:	3430      	addle	r4, #48	@ 0x30
 8013e36:	3457      	addgt	r4, #87	@ 0x57
 8013e38:	b2e4      	uxtb	r4, r4
 8013e3a:	55bc      	strb	r4, [r7, r6]
 8013e3c:	4674      	mov	r4, lr
 8013e3e:	1e71      	subs	r1, r6, #1
 8013e40:	b974      	cbnz	r4, 8013e60 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8013e42:	2800      	cmp	r0, #0
 8013e44:	da05      	bge.n	8013e52 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8013e46:	ab0a      	add	r3, sp, #40	@ 0x28
 8013e48:	4419      	add	r1, r3
 8013e4a:	232d      	movs	r3, #45	@ 0x2d
 8013e4c:	f801 3c24 	strb.w	r3, [r1, #-36]
 8013e50:	1eb1      	subs	r1, r6, #2
 8013e52:	3101      	adds	r1, #1
 8013e54:	4439      	add	r1, r7
 8013e56:	4660      	mov	r0, ip
 8013e58:	f7ff ffc7 	bl	8013dea <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013e5c:	b00b      	add	sp, #44	@ 0x2c
 8013e5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013e60:	460e      	mov	r6, r1
 8013e62:	e7dc      	b.n	8013e1e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08013e64 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8013e64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013e66:	b08b      	sub	sp, #44	@ 0x2c
 8013e68:	468c      	mov	ip, r1
 8013e6a:	2100      	movs	r1, #0
 8013e6c:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8013e70:	ae01      	add	r6, sp, #4
 8013e72:	211f      	movs	r1, #31
 8013e74:	fbb0 f7f3 	udiv	r7, r0, r3
 8013e78:	fb03 0517 	mls	r5, r3, r7, r0
 8013e7c:	b2ec      	uxtb	r4, r5
 8013e7e:	2d09      	cmp	r5, #9
 8013e80:	bfd4      	ite	le
 8013e82:	3430      	addle	r4, #48	@ 0x30
 8013e84:	3457      	addgt	r4, #87	@ 0x57
 8013e86:	b2e4      	uxtb	r4, r4
 8013e88:	558c      	strb	r4, [r1, r6]
 8013e8a:	4638      	mov	r0, r7
 8013e8c:	1e4c      	subs	r4, r1, #1
 8013e8e:	b92f      	cbnz	r7, 8013e9c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8013e90:	4431      	add	r1, r6
 8013e92:	4660      	mov	r0, ip
 8013e94:	f7ff ffa9 	bl	8013dea <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013e98:	b00b      	add	sp, #44	@ 0x2c
 8013e9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013e9c:	4621      	mov	r1, r4
 8013e9e:	e7e9      	b.n	8013e74 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08013ea0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8013ea0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ea4:	4691      	mov	r9, r2
 8013ea6:	b085      	sub	sp, #20
 8013ea8:	6802      	ldr	r2, [r0, #0]
 8013eaa:	9201      	str	r2, [sp, #4]
 8013eac:	4688      	mov	r8, r1
 8013eae:	4683      	mov	fp, r0
 8013eb0:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 8013eb4:	9103      	str	r1, [sp, #12]
 8013eb6:	4610      	mov	r0, r2
 8013eb8:	461c      	mov	r4, r3
 8013eba:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8013ebe:	9302      	str	r3, [sp, #8]
 8013ec0:	f7ff ff86 	bl	8013dd0 <_ZN8touchgfx7Unicode6strlenEPKt>
 8013ec4:	f1b8 0f00 	cmp.w	r8, #0
 8013ec8:	bf0c      	ite	eq
 8013eca:	4684      	moveq	ip, r0
 8013ecc:	f100 0c01 	addne.w	ip, r0, #1
 8013ed0:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 8013ed4:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8013ed8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8013eda:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013edc:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8013ee0:	9903      	ldr	r1, [sp, #12]
 8013ee2:	fa1f fc8c 	uxth.w	ip, ip
 8013ee6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8013eea:	d041      	beq.n	8013f70 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013eec:	d834      	bhi.n	8013f58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8013eee:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8013ef2:	d059      	beq.n	8013fa8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013ef4:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8013ef8:	d03a      	beq.n	8013f70 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013efa:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8013efe:	d034      	beq.n	8013f6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013f00:	2400      	movs	r4, #0
 8013f02:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8013f06:	3a01      	subs	r2, #1
 8013f08:	b169      	cbz	r1, 8013f26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013f0a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8013f0c:	458c      	cmp	ip, r1
 8013f0e:	da09      	bge.n	8013f24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013f10:	eba1 010c 	sub.w	r1, r1, ip
 8013f14:	b289      	uxth	r1, r1
 8013f16:	b933      	cbnz	r3, 8013f26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013f18:	2e00      	cmp	r6, #0
 8013f1a:	d051      	beq.n	8013fc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013f1c:	2800      	cmp	r0, #0
 8013f1e:	d04f      	beq.n	8013fc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013f20:	440c      	add	r4, r1
 8013f22:	b2a4      	uxth	r4, r4
 8013f24:	2100      	movs	r1, #0
 8013f26:	682b      	ldr	r3, [r5, #0]
 8013f28:	4293      	cmp	r3, r2
 8013f2a:	da07      	bge.n	8013f3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013f2c:	f1b8 0f00 	cmp.w	r8, #0
 8013f30:	d004      	beq.n	8013f3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013f32:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013f36:	682b      	ldr	r3, [r5, #0]
 8013f38:	3301      	adds	r3, #1
 8013f3a:	602b      	str	r3, [r5, #0]
 8013f3c:	2730      	movs	r7, #48	@ 0x30
 8013f3e:	2c00      	cmp	r4, #0
 8013f40:	d04e      	beq.n	8013fe0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013f42:	682e      	ldr	r6, [r5, #0]
 8013f44:	3c01      	subs	r4, #1
 8013f46:	42b2      	cmp	r2, r6
 8013f48:	b2a4      	uxth	r4, r4
 8013f4a:	dd49      	ble.n	8013fe0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013f4c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013f50:	682b      	ldr	r3, [r5, #0]
 8013f52:	3301      	adds	r3, #1
 8013f54:	602b      	str	r3, [r5, #0]
 8013f56:	e7f2      	b.n	8013f3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013f58:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8013f5c:	d01d      	beq.n	8013f9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8013f5e:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8013f62:	d002      	beq.n	8013f6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013f64:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8013f68:	e7c9      	b.n	8013efe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8013f6a:	4684      	mov	ip, r0
 8013f6c:	f04f 0800 	mov.w	r8, #0
 8013f70:	2c00      	cmp	r4, #0
 8013f72:	d0c6      	beq.n	8013f02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013f74:	b947      	cbnz	r7, 8013f88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013f76:	2801      	cmp	r0, #1
 8013f78:	d106      	bne.n	8013f88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013f7a:	8814      	ldrh	r4, [r2, #0]
 8013f7c:	2c30      	cmp	r4, #48	@ 0x30
 8013f7e:	bf02      	ittt	eq
 8013f80:	3202      	addeq	r2, #2
 8013f82:	f8cb 2000 	streq.w	r2, [fp]
 8013f86:	4638      	moveq	r0, r7
 8013f88:	45bc      	cmp	ip, r7
 8013f8a:	da14      	bge.n	8013fb6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013f8c:	b2bf      	uxth	r7, r7
 8013f8e:	eba7 040c 	sub.w	r4, r7, ip
 8013f92:	b2a4      	uxth	r4, r4
 8013f94:	46bc      	mov	ip, r7
 8013f96:	2600      	movs	r6, #0
 8013f98:	e7b3      	b.n	8013f02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013f9a:	4684      	mov	ip, r0
 8013f9c:	b16c      	cbz	r4, 8013fba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8013f9e:	42b8      	cmp	r0, r7
 8013fa0:	dd00      	ble.n	8013fa4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8013fa2:	b2b8      	uxth	r0, r7
 8013fa4:	2400      	movs	r4, #0
 8013fa6:	e003      	b.n	8013fb0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8013fa8:	f04f 0c01 	mov.w	ip, #1
 8013fac:	2400      	movs	r4, #0
 8013fae:	4660      	mov	r0, ip
 8013fb0:	4626      	mov	r6, r4
 8013fb2:	46a0      	mov	r8, r4
 8013fb4:	e7a5      	b.n	8013f02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013fb6:	2400      	movs	r4, #0
 8013fb8:	e7ed      	b.n	8013f96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8013fba:	4626      	mov	r6, r4
 8013fbc:	46a0      	mov	r8, r4
 8013fbe:	e7a0      	b.n	8013f02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013fc0:	2900      	cmp	r1, #0
 8013fc2:	d0b0      	beq.n	8013f26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013fc4:	2720      	movs	r7, #32
 8013fc6:	682e      	ldr	r6, [r5, #0]
 8013fc8:	2900      	cmp	r1, #0
 8013fca:	d0ac      	beq.n	8013f26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013fcc:	3901      	subs	r1, #1
 8013fce:	4296      	cmp	r6, r2
 8013fd0:	b289      	uxth	r1, r1
 8013fd2:	daa7      	bge.n	8013f24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013fd4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013fd8:	682b      	ldr	r3, [r5, #0]
 8013fda:	3301      	adds	r3, #1
 8013fdc:	602b      	str	r3, [r5, #0]
 8013fde:	e7f2      	b.n	8013fc6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8013fe0:	b188      	cbz	r0, 8014006 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013fe2:	682b      	ldr	r3, [r5, #0]
 8013fe4:	3801      	subs	r0, #1
 8013fe6:	429a      	cmp	r2, r3
 8013fe8:	b280      	uxth	r0, r0
 8013fea:	dd0c      	ble.n	8014006 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013fec:	f8db 3000 	ldr.w	r3, [fp]
 8013ff0:	1c9c      	adds	r4, r3, #2
 8013ff2:	f8cb 4000 	str.w	r4, [fp]
 8013ff6:	881c      	ldrh	r4, [r3, #0]
 8013ff8:	682b      	ldr	r3, [r5, #0]
 8013ffa:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8013ffe:	682b      	ldr	r3, [r5, #0]
 8014000:	3301      	adds	r3, #1
 8014002:	602b      	str	r3, [r5, #0]
 8014004:	e7ec      	b.n	8013fe0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8014006:	2620      	movs	r6, #32
 8014008:	b151      	cbz	r1, 8014020 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801400a:	6828      	ldr	r0, [r5, #0]
 801400c:	3901      	subs	r1, #1
 801400e:	4282      	cmp	r2, r0
 8014010:	b289      	uxth	r1, r1
 8014012:	dd05      	ble.n	8014020 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8014014:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8014018:	682b      	ldr	r3, [r5, #0]
 801401a:	3301      	adds	r3, #1
 801401c:	602b      	str	r3, [r5, #0]
 801401e:	e7f3      	b.n	8014008 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8014020:	b005      	add	sp, #20
 8014022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014026 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8014026:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801402a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801402e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8014032:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8014036:	2400      	movs	r4, #0
 8014038:	8014      	strh	r4, [r2, #0]
 801403a:	701c      	strb	r4, [r3, #0]
 801403c:	f888 4000 	strb.w	r4, [r8]
 8014040:	f88c 4000 	strb.w	r4, [ip]
 8014044:	f88e 4000 	strb.w	r4, [lr]
 8014048:	703c      	strb	r4, [r7, #0]
 801404a:	6804      	ldr	r4, [r0, #0]
 801404c:	b1a4      	cbz	r4, 8014078 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801404e:	8824      	ldrh	r4, [r4, #0]
 8014050:	f04f 0901 	mov.w	r9, #1
 8014054:	b314      	cbz	r4, 801409c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014056:	2c2b      	cmp	r4, #43	@ 0x2b
 8014058:	d001      	beq.n	801405e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801405a:	2c20      	cmp	r4, #32
 801405c:	d110      	bne.n	8014080 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801405e:	8014      	strh	r4, [r2, #0]
 8014060:	6804      	ldr	r4, [r0, #0]
 8014062:	b10c      	cbz	r4, 8014068 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8014064:	3402      	adds	r4, #2
 8014066:	6004      	str	r4, [r0, #0]
 8014068:	680c      	ldr	r4, [r1, #0]
 801406a:	b10c      	cbz	r4, 8014070 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801406c:	3401      	adds	r4, #1
 801406e:	600c      	str	r4, [r1, #0]
 8014070:	6804      	ldr	r4, [r0, #0]
 8014072:	b17c      	cbz	r4, 8014094 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8014074:	8824      	ldrh	r4, [r4, #0]
 8014076:	e7ed      	b.n	8014054 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8014078:	680c      	ldr	r4, [r1, #0]
 801407a:	b17c      	cbz	r4, 801409c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801407c:	7824      	ldrb	r4, [r4, #0]
 801407e:	e7e7      	b.n	8014050 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8014080:	2c2d      	cmp	r4, #45	@ 0x2d
 8014082:	d102      	bne.n	801408a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8014084:	f883 9000 	strb.w	r9, [r3]
 8014088:	e7ea      	b.n	8014060 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801408a:	2c23      	cmp	r4, #35	@ 0x23
 801408c:	d107      	bne.n	801409e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801408e:	f888 9000 	strb.w	r9, [r8]
 8014092:	e7e5      	b.n	8014060 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8014094:	680c      	ldr	r4, [r1, #0]
 8014096:	b10c      	cbz	r4, 801409c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014098:	7824      	ldrb	r4, [r4, #0]
 801409a:	e7db      	b.n	8014054 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801409c:	2400      	movs	r4, #0
 801409e:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 80140a2:	2b09      	cmp	r3, #9
 80140a4:	d901      	bls.n	80140aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80140a6:	2c2a      	cmp	r4, #42	@ 0x2a
 80140a8:	d122      	bne.n	80140f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80140aa:	2301      	movs	r3, #1
 80140ac:	2c30      	cmp	r4, #48	@ 0x30
 80140ae:	f88e 3000 	strb.w	r3, [lr]
 80140b2:	d10d      	bne.n	80140d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80140b4:	f88c 3000 	strb.w	r3, [ip]
 80140b8:	6803      	ldr	r3, [r0, #0]
 80140ba:	b10b      	cbz	r3, 80140c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80140bc:	3302      	adds	r3, #2
 80140be:	6003      	str	r3, [r0, #0]
 80140c0:	680b      	ldr	r3, [r1, #0]
 80140c2:	b10b      	cbz	r3, 80140c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80140c4:	3301      	adds	r3, #1
 80140c6:	600b      	str	r3, [r1, #0]
 80140c8:	6803      	ldr	r3, [r0, #0]
 80140ca:	2b00      	cmp	r3, #0
 80140cc:	d02f      	beq.n	801412e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80140ce:	881c      	ldrh	r4, [r3, #0]
 80140d0:	2c2a      	cmp	r4, #42	@ 0x2a
 80140d2:	d135      	bne.n	8014140 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80140d4:	f04f 33ff 	mov.w	r3, #4294967295
 80140d8:	6033      	str	r3, [r6, #0]
 80140da:	6803      	ldr	r3, [r0, #0]
 80140dc:	b10b      	cbz	r3, 80140e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80140de:	3302      	adds	r3, #2
 80140e0:	6003      	str	r3, [r0, #0]
 80140e2:	680b      	ldr	r3, [r1, #0]
 80140e4:	b10b      	cbz	r3, 80140ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80140e6:	3301      	adds	r3, #1
 80140e8:	600b      	str	r3, [r1, #0]
 80140ea:	6803      	ldr	r3, [r0, #0]
 80140ec:	b31b      	cbz	r3, 8014136 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80140ee:	881c      	ldrh	r4, [r3, #0]
 80140f0:	2c2e      	cmp	r4, #46	@ 0x2e
 80140f2:	d11a      	bne.n	801412a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80140f4:	2301      	movs	r3, #1
 80140f6:	703b      	strb	r3, [r7, #0]
 80140f8:	6803      	ldr	r3, [r0, #0]
 80140fa:	b10b      	cbz	r3, 8014100 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 80140fc:	3302      	adds	r3, #2
 80140fe:	6003      	str	r3, [r0, #0]
 8014100:	680b      	ldr	r3, [r1, #0]
 8014102:	b10b      	cbz	r3, 8014108 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8014104:	3301      	adds	r3, #1
 8014106:	600b      	str	r3, [r1, #0]
 8014108:	6803      	ldr	r3, [r0, #0]
 801410a:	2b00      	cmp	r3, #0
 801410c:	d036      	beq.n	801417c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801410e:	881b      	ldrh	r3, [r3, #0]
 8014110:	2b2a      	cmp	r3, #42	@ 0x2a
 8014112:	d137      	bne.n	8014184 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8014114:	f04f 33ff 	mov.w	r3, #4294967295
 8014118:	602b      	str	r3, [r5, #0]
 801411a:	6803      	ldr	r3, [r0, #0]
 801411c:	b10b      	cbz	r3, 8014122 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801411e:	3302      	adds	r3, #2
 8014120:	6003      	str	r3, [r0, #0]
 8014122:	680b      	ldr	r3, [r1, #0]
 8014124:	b10b      	cbz	r3, 801412a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014126:	3301      	adds	r3, #1
 8014128:	600b      	str	r3, [r1, #0]
 801412a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801412e:	680c      	ldr	r4, [r1, #0]
 8014130:	b134      	cbz	r4, 8014140 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8014132:	7824      	ldrb	r4, [r4, #0]
 8014134:	e7cc      	b.n	80140d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8014136:	680b      	ldr	r3, [r1, #0]
 8014138:	2b00      	cmp	r3, #0
 801413a:	d0f6      	beq.n	801412a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801413c:	781c      	ldrb	r4, [r3, #0]
 801413e:	e7d7      	b.n	80140f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014140:	2300      	movs	r3, #0
 8014142:	6033      	str	r3, [r6, #0]
 8014144:	220a      	movs	r2, #10
 8014146:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 801414a:	fa1f f38c 	uxth.w	r3, ip
 801414e:	2b09      	cmp	r3, #9
 8014150:	d8ce      	bhi.n	80140f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014152:	6833      	ldr	r3, [r6, #0]
 8014154:	fb02 c303 	mla	r3, r2, r3, ip
 8014158:	6033      	str	r3, [r6, #0]
 801415a:	6803      	ldr	r3, [r0, #0]
 801415c:	b10b      	cbz	r3, 8014162 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801415e:	3302      	adds	r3, #2
 8014160:	6003      	str	r3, [r0, #0]
 8014162:	680b      	ldr	r3, [r1, #0]
 8014164:	b10b      	cbz	r3, 801416a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8014166:	3301      	adds	r3, #1
 8014168:	600b      	str	r3, [r1, #0]
 801416a:	6803      	ldr	r3, [r0, #0]
 801416c:	b10b      	cbz	r3, 8014172 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801416e:	881c      	ldrh	r4, [r3, #0]
 8014170:	e7e9      	b.n	8014146 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014172:	680c      	ldr	r4, [r1, #0]
 8014174:	2c00      	cmp	r4, #0
 8014176:	d0e6      	beq.n	8014146 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014178:	7824      	ldrb	r4, [r4, #0]
 801417a:	e7e4      	b.n	8014146 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801417c:	680b      	ldr	r3, [r1, #0]
 801417e:	b10b      	cbz	r3, 8014184 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8014180:	781b      	ldrb	r3, [r3, #0]
 8014182:	e7c5      	b.n	8014110 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8014184:	2200      	movs	r2, #0
 8014186:	602a      	str	r2, [r5, #0]
 8014188:	240a      	movs	r4, #10
 801418a:	3b30      	subs	r3, #48	@ 0x30
 801418c:	b29e      	uxth	r6, r3
 801418e:	2e09      	cmp	r6, #9
 8014190:	682a      	ldr	r2, [r5, #0]
 8014192:	d813      	bhi.n	80141bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8014194:	fb04 3302 	mla	r3, r4, r2, r3
 8014198:	602b      	str	r3, [r5, #0]
 801419a:	6803      	ldr	r3, [r0, #0]
 801419c:	b10b      	cbz	r3, 80141a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801419e:	3302      	adds	r3, #2
 80141a0:	6003      	str	r3, [r0, #0]
 80141a2:	680b      	ldr	r3, [r1, #0]
 80141a4:	b10b      	cbz	r3, 80141aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80141a6:	3301      	adds	r3, #1
 80141a8:	600b      	str	r3, [r1, #0]
 80141aa:	6803      	ldr	r3, [r0, #0]
 80141ac:	b10b      	cbz	r3, 80141b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80141ae:	881b      	ldrh	r3, [r3, #0]
 80141b0:	e7eb      	b.n	801418a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80141b2:	680b      	ldr	r3, [r1, #0]
 80141b4:	2b00      	cmp	r3, #0
 80141b6:	d0e8      	beq.n	801418a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80141b8:	781b      	ldrb	r3, [r3, #0]
 80141ba:	e7e6      	b.n	801418a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80141bc:	2a06      	cmp	r2, #6
 80141be:	bfa8      	it	ge
 80141c0:	2206      	movge	r2, #6
 80141c2:	602a      	str	r2, [r5, #0]
 80141c4:	e7b1      	b.n	801412a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080141c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80141c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141ca:	b0a3      	sub	sp, #140	@ 0x8c
 80141cc:	2600      	movs	r6, #0
 80141ce:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 80141d2:	4607      	mov	r7, r0
 80141d4:	4688      	mov	r8, r1
 80141d6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80141da:	4631      	mov	r1, r6
 80141dc:	2242      	movs	r2, #66	@ 0x42
 80141de:	4648      	mov	r0, r9
 80141e0:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 80141e2:	960d      	str	r6, [sp, #52]	@ 0x34
 80141e4:	f010 fbfd 	bl	80249e2 <memset>
 80141e8:	b15f      	cbz	r7, 8014202 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 80141ea:	f108 3aff 	add.w	sl, r8, #4294967295
 80141ee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80141f0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80141f2:	b152      	cbz	r2, 801420a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 80141f4:	8812      	ldrh	r2, [r2, #0]
 80141f6:	b10a      	cbz	r2, 80141fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80141f8:	459a      	cmp	sl, r3
 80141fa:	dc2e      	bgt.n	801425a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 80141fc:	2200      	movs	r2, #0
 80141fe:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014202:	4638      	mov	r0, r7
 8014204:	b023      	add	sp, #140	@ 0x8c
 8014206:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801420a:	9a08      	ldr	r2, [sp, #32]
 801420c:	2a00      	cmp	r2, #0
 801420e:	d0f5      	beq.n	80141fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014210:	7812      	ldrb	r2, [r2, #0]
 8014212:	e7f0      	b.n	80141f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8014214:	2d00      	cmp	r5, #0
 8014216:	d0ea      	beq.n	80141ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014218:	782a      	ldrb	r2, [r5, #0]
 801421a:	b142      	cbz	r2, 801422e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801421c:	2a25      	cmp	r2, #37	@ 0x25
 801421e:	d001      	beq.n	8014224 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8014220:	459a      	cmp	sl, r3
 8014222:	dc08      	bgt.n	8014236 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8014224:	f1bb 0f00 	cmp.w	fp, #0
 8014228:	d121      	bne.n	801426e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801422a:	2d00      	cmp	r5, #0
 801422c:	d0df      	beq.n	80141ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801422e:	782a      	ldrb	r2, [r5, #0]
 8014230:	f04f 0b00 	mov.w	fp, #0
 8014234:	e01d      	b.n	8014272 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8014236:	f1bb 0f00 	cmp.w	fp, #0
 801423a:	d078      	beq.n	801432e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801423c:	f8bb 2000 	ldrh.w	r2, [fp]
 8014240:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014244:	f1bb 0f00 	cmp.w	fp, #0
 8014248:	d002      	beq.n	8014250 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801424a:	f10b 0202 	add.w	r2, fp, #2
 801424e:	9209      	str	r2, [sp, #36]	@ 0x24
 8014250:	b10d      	cbz	r5, 8014256 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8014252:	3501      	adds	r5, #1
 8014254:	9508      	str	r5, [sp, #32]
 8014256:	3301      	adds	r3, #1
 8014258:	930d      	str	r3, [sp, #52]	@ 0x34
 801425a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801425e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014260:	f1bb 0f00 	cmp.w	fp, #0
 8014264:	d0d6      	beq.n	8014214 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8014266:	f8bb 2000 	ldrh.w	r2, [fp]
 801426a:	2a00      	cmp	r2, #0
 801426c:	d1d6      	bne.n	801421c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801426e:	f8bb 2000 	ldrh.w	r2, [fp]
 8014272:	2a00      	cmp	r2, #0
 8014274:	d0bb      	beq.n	80141ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014276:	459a      	cmp	sl, r3
 8014278:	ddb9      	ble.n	80141ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801427a:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 801427e:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8014282:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8014286:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 801428a:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 801428e:	960e      	str	r6, [sp, #56]	@ 0x38
 8014290:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 8014294:	960f      	str	r6, [sp, #60]	@ 0x3c
 8014296:	f1bb 0f00 	cmp.w	fp, #0
 801429a:	d002      	beq.n	80142a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801429c:	f10b 0302 	add.w	r3, fp, #2
 80142a0:	9309      	str	r3, [sp, #36]	@ 0x24
 80142a2:	b10d      	cbz	r5, 80142a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80142a4:	1c6b      	adds	r3, r5, #1
 80142a6:	9308      	str	r3, [sp, #32]
 80142a8:	ab0f      	add	r3, sp, #60	@ 0x3c
 80142aa:	9305      	str	r3, [sp, #20]
 80142ac:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 80142b0:	9304      	str	r3, [sp, #16]
 80142b2:	ab0e      	add	r3, sp, #56	@ 0x38
 80142b4:	9303      	str	r3, [sp, #12]
 80142b6:	ab0c      	add	r3, sp, #48	@ 0x30
 80142b8:	9302      	str	r3, [sp, #8]
 80142ba:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 80142be:	9301      	str	r3, [sp, #4]
 80142c0:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 80142c4:	9300      	str	r3, [sp, #0]
 80142c6:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 80142ca:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 80142ce:	a908      	add	r1, sp, #32
 80142d0:	a809      	add	r0, sp, #36	@ 0x24
 80142d2:	f7ff fea8 	bl	8014026 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80142d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80142d8:	2b00      	cmp	r3, #0
 80142da:	bfbe      	ittt	lt
 80142dc:	6823      	ldrlt	r3, [r4, #0]
 80142de:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80142e2:	930e      	strlt	r3, [sp, #56]	@ 0x38
 80142e4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80142e6:	bfb8      	it	lt
 80142e8:	3404      	addlt	r4, #4
 80142ea:	2b00      	cmp	r3, #0
 80142ec:	bfb8      	it	lt
 80142ee:	6823      	ldrlt	r3, [r4, #0]
 80142f0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80142f4:	bfbe      	ittt	lt
 80142f6:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80142fa:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 80142fc:	3404      	addlt	r4, #4
 80142fe:	b1d9      	cbz	r1, 8014338 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8014300:	880b      	ldrh	r3, [r1, #0]
 8014302:	2b69      	cmp	r3, #105	@ 0x69
 8014304:	d01f      	beq.n	8014346 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014306:	d82f      	bhi.n	8014368 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8014308:	2b58      	cmp	r3, #88	@ 0x58
 801430a:	d01c      	beq.n	8014346 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801430c:	d818      	bhi.n	8014340 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801430e:	2b25      	cmp	r3, #37	@ 0x25
 8014310:	d034      	beq.n	801437c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8014312:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8014316:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014318:	f1bb 0f00 	cmp.w	fp, #0
 801431c:	f000 80b8 	beq.w	8014490 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8014320:	f8bb 5000 	ldrh.w	r5, [fp]
 8014324:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8014328:	3301      	adds	r3, #1
 801432a:	930d      	str	r3, [sp, #52]	@ 0x34
 801432c:	e029      	b.n	8014382 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801432e:	b10d      	cbz	r5, 8014334 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8014330:	782a      	ldrb	r2, [r5, #0]
 8014332:	e785      	b.n	8014240 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8014334:	462a      	mov	r2, r5
 8014336:	e783      	b.n	8014240 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8014338:	2a00      	cmp	r2, #0
 801433a:	d0ea      	beq.n	8014312 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801433c:	7813      	ldrb	r3, [r2, #0]
 801433e:	e7e0      	b.n	8014302 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8014340:	3b63      	subs	r3, #99	@ 0x63
 8014342:	2b01      	cmp	r3, #1
 8014344:	d8e5      	bhi.n	8014312 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8014346:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 801434a:	b329      	cbz	r1, 8014398 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801434c:	880b      	ldrh	r3, [r1, #0]
 801434e:	2b69      	cmp	r3, #105	@ 0x69
 8014350:	d063      	beq.n	801441a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8014352:	d825      	bhi.n	80143a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8014354:	2b63      	cmp	r3, #99	@ 0x63
 8014356:	d038      	beq.n	80143ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8014358:	2b64      	cmp	r3, #100	@ 0x64
 801435a:	d05e      	beq.n	801441a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801435c:	2b58      	cmp	r3, #88	@ 0x58
 801435e:	d07b      	beq.n	8014458 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8014360:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8014364:	4625      	mov	r5, r4
 8014366:	e036      	b.n	80143d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014368:	2b73      	cmp	r3, #115	@ 0x73
 801436a:	d0ec      	beq.n	8014346 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801436c:	d802      	bhi.n	8014374 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801436e:	2b6f      	cmp	r3, #111	@ 0x6f
 8014370:	d1cf      	bne.n	8014312 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8014372:	e7e8      	b.n	8014346 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014374:	2b75      	cmp	r3, #117	@ 0x75
 8014376:	d0e6      	beq.n	8014346 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014378:	2b78      	cmp	r3, #120	@ 0x78
 801437a:	e7f9      	b.n	8014370 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801437c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801437e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8014382:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014384:	b10b      	cbz	r3, 801438a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8014386:	3302      	adds	r3, #2
 8014388:	9309      	str	r3, [sp, #36]	@ 0x24
 801438a:	9b08      	ldr	r3, [sp, #32]
 801438c:	2b00      	cmp	r3, #0
 801438e:	f43f af2e 	beq.w	80141ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014392:	3301      	adds	r3, #1
 8014394:	9308      	str	r3, [sp, #32]
 8014396:	e72a      	b.n	80141ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014398:	2a00      	cmp	r2, #0
 801439a:	d0e1      	beq.n	8014360 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801439c:	7813      	ldrb	r3, [r2, #0]
 801439e:	e7d6      	b.n	801434e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80143a0:	2b73      	cmp	r3, #115	@ 0x73
 80143a2:	d036      	beq.n	8014412 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80143a4:	d807      	bhi.n	80143b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80143a6:	2b6f      	cmp	r3, #111	@ 0x6f
 80143a8:	d1da      	bne.n	8014360 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80143aa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80143ac:	1d25      	adds	r5, r4, #4
 80143ae:	eba8 0202 	sub.w	r2, r8, r2
 80143b2:	2308      	movs	r3, #8
 80143b4:	e04a      	b.n	801444c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80143b6:	2b75      	cmp	r3, #117	@ 0x75
 80143b8:	d043      	beq.n	8014442 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80143ba:	2b78      	cmp	r3, #120	@ 0x78
 80143bc:	d1d0      	bne.n	8014360 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80143be:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80143c0:	1d25      	adds	r5, r4, #4
 80143c2:	eba8 0202 	sub.w	r2, r8, r2
 80143c6:	2310      	movs	r3, #16
 80143c8:	e040      	b.n	801444c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80143ca:	6823      	ldr	r3, [r4, #0]
 80143cc:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80143d0:	1d25      	adds	r5, r4, #4
 80143d2:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 80143d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80143d8:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 80143dc:	2b00      	cmp	r3, #0
 80143de:	d052      	beq.n	8014486 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80143e0:	881a      	ldrh	r2, [r3, #0]
 80143e2:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 80143e6:	a80d      	add	r0, sp, #52	@ 0x34
 80143e8:	9005      	str	r0, [sp, #20]
 80143ea:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 80143ee:	9004      	str	r0, [sp, #16]
 80143f0:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80143f2:	9003      	str	r0, [sp, #12]
 80143f4:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 80143f8:	9002      	str	r0, [sp, #8]
 80143fa:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80143fc:	9001      	str	r0, [sp, #4]
 80143fe:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8014402:	9000      	str	r0, [sp, #0]
 8014404:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8014408:	a810      	add	r0, sp, #64	@ 0x40
 801440a:	f7ff fd49 	bl	8013ea0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801440e:	462c      	mov	r4, r5
 8014410:	e7b7      	b.n	8014382 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8014412:	6823      	ldr	r3, [r4, #0]
 8014414:	1d25      	adds	r5, r4, #4
 8014416:	9310      	str	r3, [sp, #64]	@ 0x40
 8014418:	e7dd      	b.n	80143d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801441a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801441c:	6820      	ldr	r0, [r4, #0]
 801441e:	eba8 0202 	sub.w	r2, r8, r2
 8014422:	230a      	movs	r3, #10
 8014424:	b292      	uxth	r2, r2
 8014426:	4649      	mov	r1, r9
 8014428:	f7ff fcf0 	bl	8013e0c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801442c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8014430:	2b2d      	cmp	r3, #45	@ 0x2d
 8014432:	f104 0504 	add.w	r5, r4, #4
 8014436:	d1ce      	bne.n	80143d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014438:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801443c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801443e:	3302      	adds	r3, #2
 8014440:	e7e9      	b.n	8014416 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8014442:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8014444:	1d25      	adds	r5, r4, #4
 8014446:	eba8 0202 	sub.w	r2, r8, r2
 801444a:	230a      	movs	r3, #10
 801444c:	b292      	uxth	r2, r2
 801444e:	4649      	mov	r1, r9
 8014450:	6820      	ldr	r0, [r4, #0]
 8014452:	f7ff fd07 	bl	8013e64 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8014456:	e7be      	b.n	80143d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014458:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801445a:	6820      	ldr	r0, [r4, #0]
 801445c:	eba8 0202 	sub.w	r2, r8, r2
 8014460:	b292      	uxth	r2, r2
 8014462:	2310      	movs	r3, #16
 8014464:	4649      	mov	r1, r9
 8014466:	f7ff fcfd 	bl	8013e64 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801446a:	1d25      	adds	r5, r4, #4
 801446c:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 8014470:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8014474:	2b00      	cmp	r3, #0
 8014476:	d0ae      	beq.n	80143d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014478:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 801447c:	2919      	cmp	r1, #25
 801447e:	d8f7      	bhi.n	8014470 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8014480:	3b20      	subs	r3, #32
 8014482:	8013      	strh	r3, [r2, #0]
 8014484:	e7f4      	b.n	8014470 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8014486:	9a08      	ldr	r2, [sp, #32]
 8014488:	2a00      	cmp	r2, #0
 801448a:	d0aa      	beq.n	80143e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801448c:	7812      	ldrb	r2, [r2, #0]
 801448e:	e7a8      	b.n	80143e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8014490:	2d00      	cmp	r5, #0
 8014492:	f43f af47 	beq.w	8014324 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8014496:	782d      	ldrb	r5, [r5, #0]
 8014498:	e744      	b.n	8014324 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801449a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801449a:	b507      	push	{r0, r1, r2, lr}
 801449c:	9300      	str	r3, [sp, #0]
 801449e:	4613      	mov	r3, r2
 80144a0:	2200      	movs	r2, #0
 80144a2:	f7ff fe90 	bl	80141c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80144a6:	b003      	add	sp, #12
 80144a8:	f85d fb04 	ldr.w	pc, [sp], #4

080144ac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80144ac:	b40c      	push	{r2, r3}
 80144ae:	b507      	push	{r0, r1, r2, lr}
 80144b0:	ab04      	add	r3, sp, #16
 80144b2:	f853 2b04 	ldr.w	r2, [r3], #4
 80144b6:	9301      	str	r3, [sp, #4]
 80144b8:	f7ff ffef 	bl	801449a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80144bc:	b003      	add	sp, #12
 80144be:	f85d eb04 	ldr.w	lr, [sp], #4
 80144c2:	b002      	add	sp, #8
 80144c4:	4770      	bx	lr
	...

080144c8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80144c8:	4b01      	ldr	r3, [pc, #4]	@ (80144d0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80144ca:	6018      	str	r0, [r3, #0]
 80144cc:	4770      	bx	lr
 80144ce:	bf00      	nop
 80144d0:	20015828 	.word	0x20015828

080144d4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80144d4:	4b06      	ldr	r3, [pc, #24]	@ (80144f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80144d6:	881a      	ldrh	r2, [r3, #0]
 80144d8:	4282      	cmp	r2, r0
 80144da:	d807      	bhi.n	80144ec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80144dc:	4b05      	ldr	r3, [pc, #20]	@ (80144f4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80144de:	881b      	ldrh	r3, [r3, #0]
 80144e0:	4413      	add	r3, r2
 80144e2:	4298      	cmp	r0, r3
 80144e4:	bfac      	ite	ge
 80144e6:	2000      	movge	r0, #0
 80144e8:	2001      	movlt	r0, #1
 80144ea:	4770      	bx	lr
 80144ec:	2000      	movs	r0, #0
 80144ee:	4770      	bx	lr
 80144f0:	20015848 	.word	0x20015848
 80144f4:	2001584c 	.word	0x2001584c

080144f8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80144f8:	b508      	push	{r3, lr}
 80144fa:	4601      	mov	r1, r0
 80144fc:	f7ff ffea 	bl	80144d4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8014500:	b118      	cbz	r0, 801450a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8014502:	4b02      	ldr	r3, [pc, #8]	@ (801450c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8014504:	681b      	ldr	r3, [r3, #0]
 8014506:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801450a:	bd08      	pop	{r3, pc}
 801450c:	2001582c 	.word	0x2001582c

08014510 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8014510:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014512:	4c24      	ldr	r4, [pc, #144]	@ (80145a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8014514:	6823      	ldr	r3, [r4, #0]
 8014516:	2b00      	cmp	r3, #0
 8014518:	d042      	beq.n	80145a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801451a:	4a23      	ldr	r2, [pc, #140]	@ (80145a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801451c:	4d23      	ldr	r5, [pc, #140]	@ (80145ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801451e:	8811      	ldrh	r1, [r2, #0]
 8014520:	f8b5 c000 	ldrh.w	ip, [r5]
 8014524:	4822      	ldr	r0, [pc, #136]	@ (80145b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8014526:	4461      	add	r1, ip
 8014528:	1c4a      	adds	r2, r1, #1
 801452a:	f022 0201 	bic.w	r2, r2, #1
 801452e:	008f      	lsls	r7, r1, #2
 8014530:	0412      	lsls	r2, r2, #16
 8014532:	19de      	adds	r6, r3, r7
 8014534:	0c12      	lsrs	r2, r2, #16
 8014536:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801453a:	6006      	str	r6, [r0, #0]
 801453c:	4e1d      	ldr	r6, [pc, #116]	@ (80145b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801453e:	19da      	adds	r2, r3, r7
 8014540:	6032      	str	r2, [r6, #0]
 8014542:	220e      	movs	r2, #14
 8014544:	fb02 f20c 	mul.w	r2, r2, ip
 8014548:	3203      	adds	r2, #3
 801454a:	f022 0203 	bic.w	r2, r2, #3
 801454e:	443a      	add	r2, r7
 8014550:	4f19      	ldr	r7, [pc, #100]	@ (80145b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8014552:	4413      	add	r3, r2
 8014554:	603b      	str	r3, [r7, #0]
 8014556:	4f19      	ldr	r7, [pc, #100]	@ (80145bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8014558:	2300      	movs	r3, #0
 801455a:	803b      	strh	r3, [r7, #0]
 801455c:	4f18      	ldr	r7, [pc, #96]	@ (80145c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801455e:	683f      	ldr	r7, [r7, #0]
 8014560:	1aba      	subs	r2, r7, r2
 8014562:	4f18      	ldr	r7, [pc, #96]	@ (80145c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8014564:	603a      	str	r2, [r7, #0]
 8014566:	4a18      	ldr	r2, [pc, #96]	@ (80145c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014568:	469c      	mov	ip, r3
 801456a:	8013      	strh	r3, [r2, #0]
 801456c:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8014570:	428b      	cmp	r3, r1
 8014572:	d10d      	bne.n	8014590 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014574:	882d      	ldrh	r5, [r5, #0]
 8014576:	6830      	ldr	r0, [r6, #0]
 8014578:	2300      	movs	r3, #0
 801457a:	240e      	movs	r4, #14
 801457c:	429d      	cmp	r5, r3
 801457e:	d90f      	bls.n	80145a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014580:	fb04 0203 	mla	r2, r4, r3, r0
 8014584:	3301      	adds	r3, #1
 8014586:	7b11      	ldrb	r1, [r2, #12]
 8014588:	f36f 1145 	bfc	r1, #5, #1
 801458c:	7311      	strb	r1, [r2, #12]
 801458e:	e7f5      	b.n	801457c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014590:	6822      	ldr	r2, [r4, #0]
 8014592:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014596:	6802      	ldr	r2, [r0, #0]
 8014598:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801459c:	3301      	adds	r3, #1
 801459e:	e7e7      	b.n	8014570 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80145a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80145a2:	bf00      	nop
 80145a4:	2001582c 	.word	0x2001582c
 80145a8:	20015848 	.word	0x20015848
 80145ac:	2001584c 	.word	0x2001584c
 80145b0:	20015840 	.word	0x20015840
 80145b4:	20015830 	.word	0x20015830
 80145b8:	20015838 	.word	0x20015838
 80145bc:	2001584a 	.word	0x2001584a
 80145c0:	20015834 	.word	0x20015834
 80145c4:	20015844 	.word	0x20015844
 80145c8:	2001583c 	.word	0x2001583c

080145cc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80145cc:	4b06      	ldr	r3, [pc, #24]	@ (80145e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80145ce:	681b      	ldr	r3, [r3, #0]
 80145d0:	b943      	cbnz	r3, 80145e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80145d2:	b139      	cbz	r1, 80145e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80145d4:	4b05      	ldr	r3, [pc, #20]	@ (80145ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80145d6:	801a      	strh	r2, [r3, #0]
 80145d8:	4b05      	ldr	r3, [pc, #20]	@ (80145f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80145da:	6019      	str	r1, [r3, #0]
 80145dc:	4b05      	ldr	r3, [pc, #20]	@ (80145f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80145de:	6018      	str	r0, [r3, #0]
 80145e0:	f7ff bf96 	b.w	8014510 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80145e4:	4770      	bx	lr
 80145e6:	bf00      	nop
 80145e8:	20015838 	.word	0x20015838
 80145ec:	2001584c 	.word	0x2001584c
 80145f0:	20015834 	.word	0x20015834
 80145f4:	2001582c 	.word	0x2001582c

080145f8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80145f8:	b470      	push	{r4, r5, r6}
 80145fa:	4c07      	ldr	r4, [pc, #28]	@ (8014618 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80145fc:	6826      	ldr	r6, [r4, #0]
 80145fe:	4605      	mov	r5, r0
 8014600:	4610      	mov	r0, r2
 8014602:	9a03      	ldr	r2, [sp, #12]
 8014604:	b936      	cbnz	r6, 8014614 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8014606:	6025      	str	r5, [r4, #0]
 8014608:	4c04      	ldr	r4, [pc, #16]	@ (801461c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801460a:	8021      	strh	r1, [r4, #0]
 801460c:	bc70      	pop	{r4, r5, r6}
 801460e:	4619      	mov	r1, r3
 8014610:	f7ff bfdc 	b.w	80145cc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8014614:	bc70      	pop	{r4, r5, r6}
 8014616:	4770      	bx	lr
 8014618:	20015850 	.word	0x20015850
 801461c:	20015848 	.word	0x20015848

08014620 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8014620:	4a12      	ldr	r2, [pc, #72]	@ (801466c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8014622:	8803      	ldrh	r3, [r0, #0]
 8014624:	8812      	ldrh	r2, [r2, #0]
 8014626:	4293      	cmp	r3, r2
 8014628:	d207      	bcs.n	801463a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801462a:	4a11      	ldr	r2, [pc, #68]	@ (8014670 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801462c:	6812      	ldr	r2, [r2, #0]
 801462e:	2114      	movs	r1, #20
 8014630:	fb01 2303 	mla	r3, r1, r3, r2
 8014634:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8014638:	4770      	bx	lr
 801463a:	490e      	ldr	r1, [pc, #56]	@ (8014674 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801463c:	8809      	ldrh	r1, [r1, #0]
 801463e:	4411      	add	r1, r2
 8014640:	428b      	cmp	r3, r1
 8014642:	da04      	bge.n	801464e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8014644:	1a9b      	subs	r3, r3, r2
 8014646:	4a0c      	ldr	r2, [pc, #48]	@ (8014678 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8014648:	210e      	movs	r1, #14
 801464a:	6812      	ldr	r2, [r2, #0]
 801464c:	e7f0      	b.n	8014630 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801464e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8014652:	4293      	cmp	r3, r2
 8014654:	d108      	bne.n	8014668 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8014656:	4b09      	ldr	r3, [pc, #36]	@ (801467c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8014658:	781b      	ldrb	r3, [r3, #0]
 801465a:	b91b      	cbnz	r3, 8014664 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801465c:	4b08      	ldr	r3, [pc, #32]	@ (8014680 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801465e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014662:	4770      	bx	lr
 8014664:	4b07      	ldr	r3, [pc, #28]	@ (8014684 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8014666:	e7fa      	b.n	801465e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8014668:	2000      	movs	r0, #0
 801466a:	4770      	bx	lr
 801466c:	20015848 	.word	0x20015848
 8014670:	20015850 	.word	0x20015850
 8014674:	2001584c 	.word	0x2001584c
 8014678:	20015830 	.word	0x20015830
 801467c:	200157b8 	.word	0x200157b8
 8014680:	200157ba 	.word	0x200157ba
 8014684:	200157bc 	.word	0x200157bc

08014688 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014688:	4a12      	ldr	r2, [pc, #72]	@ (80146d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801468a:	8803      	ldrh	r3, [r0, #0]
 801468c:	8812      	ldrh	r2, [r2, #0]
 801468e:	4293      	cmp	r3, r2
 8014690:	d207      	bcs.n	80146a2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8014692:	4a11      	ldr	r2, [pc, #68]	@ (80146d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8014694:	6812      	ldr	r2, [r2, #0]
 8014696:	2114      	movs	r1, #20
 8014698:	fb01 2303 	mla	r3, r1, r3, r2
 801469c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80146a0:	4770      	bx	lr
 80146a2:	490e      	ldr	r1, [pc, #56]	@ (80146dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80146a4:	8809      	ldrh	r1, [r1, #0]
 80146a6:	4411      	add	r1, r2
 80146a8:	428b      	cmp	r3, r1
 80146aa:	da04      	bge.n	80146b6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80146ac:	1a9b      	subs	r3, r3, r2
 80146ae:	4a0c      	ldr	r2, [pc, #48]	@ (80146e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80146b0:	210e      	movs	r1, #14
 80146b2:	6812      	ldr	r2, [r2, #0]
 80146b4:	e7f0      	b.n	8014698 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80146b6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80146ba:	4293      	cmp	r3, r2
 80146bc:	d108      	bne.n	80146d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80146be:	4b09      	ldr	r3, [pc, #36]	@ (80146e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80146c0:	781b      	ldrb	r3, [r3, #0]
 80146c2:	b91b      	cbnz	r3, 80146cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80146c4:	4b08      	ldr	r3, [pc, #32]	@ (80146e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80146c6:	f9b3 0000 	ldrsh.w	r0, [r3]
 80146ca:	4770      	bx	lr
 80146cc:	4b07      	ldr	r3, [pc, #28]	@ (80146ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80146ce:	e7fa      	b.n	80146c6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80146d0:	2000      	movs	r0, #0
 80146d2:	4770      	bx	lr
 80146d4:	20015848 	.word	0x20015848
 80146d8:	20015850 	.word	0x20015850
 80146dc:	2001584c 	.word	0x2001584c
 80146e0:	20015830 	.word	0x20015830
 80146e4:	200157b8 	.word	0x200157b8
 80146e8:	200157bc 	.word	0x200157bc
 80146ec:	200157ba 	.word	0x200157ba

080146f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80146f0:	b530      	push	{r4, r5, lr}
 80146f2:	4a22      	ldr	r2, [pc, #136]	@ (801477c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80146f4:	880b      	ldrh	r3, [r1, #0]
 80146f6:	8812      	ldrh	r2, [r2, #0]
 80146f8:	4293      	cmp	r3, r2
 80146fa:	d213      	bcs.n	8014724 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80146fc:	4a20      	ldr	r2, [pc, #128]	@ (8014780 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80146fe:	6812      	ldr	r2, [r2, #0]
 8014700:	2114      	movs	r1, #20
 8014702:	fb01 2303 	mla	r3, r1, r3, r2
 8014706:	8a1a      	ldrh	r2, [r3, #16]
 8014708:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801470c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8014710:	8a5b      	ldrh	r3, [r3, #18]
 8014712:	8004      	strh	r4, [r0, #0]
 8014714:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014718:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801471c:	8041      	strh	r1, [r0, #2]
 801471e:	8082      	strh	r2, [r0, #4]
 8014720:	80c3      	strh	r3, [r0, #6]
 8014722:	e024      	b.n	801476e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8014724:	4917      	ldr	r1, [pc, #92]	@ (8014784 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8014726:	8809      	ldrh	r1, [r1, #0]
 8014728:	4411      	add	r1, r2
 801472a:	428b      	cmp	r3, r1
 801472c:	da10      	bge.n	8014750 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801472e:	1a9b      	subs	r3, r3, r2
 8014730:	220e      	movs	r2, #14
 8014732:	4353      	muls	r3, r2
 8014734:	4a14      	ldr	r2, [pc, #80]	@ (8014788 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8014736:	6811      	ldr	r1, [r2, #0]
 8014738:	18ca      	adds	r2, r1, r3
 801473a:	5ecd      	ldrsh	r5, [r1, r3]
 801473c:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8014740:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8014744:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8014748:	8005      	strh	r5, [r0, #0]
 801474a:	8044      	strh	r4, [r0, #2]
 801474c:	8081      	strh	r1, [r0, #4]
 801474e:	e7e7      	b.n	8014720 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8014750:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8014754:	4293      	cmp	r3, r2
 8014756:	d10b      	bne.n	8014770 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8014758:	4b0c      	ldr	r3, [pc, #48]	@ (801478c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801475a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801475e:	4b0c      	ldr	r3, [pc, #48]	@ (8014790 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8014760:	8081      	strh	r1, [r0, #4]
 8014762:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014766:	80c2      	strh	r2, [r0, #6]
 8014768:	2300      	movs	r3, #0
 801476a:	8003      	strh	r3, [r0, #0]
 801476c:	8043      	strh	r3, [r0, #2]
 801476e:	bd30      	pop	{r4, r5, pc}
 8014770:	2300      	movs	r3, #0
 8014772:	8003      	strh	r3, [r0, #0]
 8014774:	8043      	strh	r3, [r0, #2]
 8014776:	8083      	strh	r3, [r0, #4]
 8014778:	e7d2      	b.n	8014720 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801477a:	bf00      	nop
 801477c:	20015848 	.word	0x20015848
 8014780:	20015850 	.word	0x20015850
 8014784:	2001584c 	.word	0x2001584c
 8014788:	20015830 	.word	0x20015830
 801478c:	200157b4 	.word	0x200157b4
 8014790:	200157b6 	.word	0x200157b6

08014794 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014794:	4a17      	ldr	r2, [pc, #92]	@ (80147f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8014796:	8803      	ldrh	r3, [r0, #0]
 8014798:	8812      	ldrh	r2, [r2, #0]
 801479a:	4293      	cmp	r3, r2
 801479c:	d213      	bcs.n	80147c6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801479e:	4a16      	ldr	r2, [pc, #88]	@ (80147f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80147a0:	6812      	ldr	r2, [r2, #0]
 80147a2:	2114      	movs	r1, #20
 80147a4:	fb01 2303 	mla	r3, r1, r3, r2
 80147a8:	8a1a      	ldrh	r2, [r3, #16]
 80147aa:	8919      	ldrh	r1, [r3, #8]
 80147ac:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80147b0:	428a      	cmp	r2, r1
 80147b2:	db1d      	blt.n	80147f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80147b4:	8a58      	ldrh	r0, [r3, #18]
 80147b6:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80147ba:	895b      	ldrh	r3, [r3, #10]
 80147bc:	4298      	cmp	r0, r3
 80147be:	bfac      	ite	ge
 80147c0:	2000      	movge	r0, #0
 80147c2:	2001      	movlt	r0, #1
 80147c4:	4770      	bx	lr
 80147c6:	490d      	ldr	r1, [pc, #52]	@ (80147fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80147c8:	8809      	ldrh	r1, [r1, #0]
 80147ca:	4411      	add	r1, r2
 80147cc:	428b      	cmp	r3, r1
 80147ce:	da0d      	bge.n	80147ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80147d0:	1a9b      	subs	r3, r3, r2
 80147d2:	4a0b      	ldr	r2, [pc, #44]	@ (8014800 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80147d4:	6812      	ldr	r2, [r2, #0]
 80147d6:	210e      	movs	r1, #14
 80147d8:	fb01 2303 	mla	r3, r1, r3, r2
 80147dc:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80147e0:	891a      	ldrh	r2, [r3, #8]
 80147e2:	4291      	cmp	r1, r2
 80147e4:	db04      	blt.n	80147f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80147e6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80147ea:	e7e6      	b.n	80147ba <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80147ec:	2000      	movs	r0, #0
 80147ee:	4770      	bx	lr
 80147f0:	2001      	movs	r0, #1
 80147f2:	4770      	bx	lr
 80147f4:	20015848 	.word	0x20015848
 80147f8:	20015850 	.word	0x20015850
 80147fc:	2001584c 	.word	0x2001584c
 8014800:	20015830 	.word	0x20015830

08014804 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8014804:	4a12      	ldr	r2, [pc, #72]	@ (8014850 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8014806:	8803      	ldrh	r3, [r0, #0]
 8014808:	8811      	ldrh	r1, [r2, #0]
 801480a:	428b      	cmp	r3, r1
 801480c:	d20b      	bcs.n	8014826 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801480e:	4a11      	ldr	r2, [pc, #68]	@ (8014854 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014810:	6812      	ldr	r2, [r2, #0]
 8014812:	b112      	cbz	r2, 801481a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8014814:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014818:	b9c0      	cbnz	r0, 801484c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801481a:	4a0f      	ldr	r2, [pc, #60]	@ (8014858 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801481c:	6811      	ldr	r1, [r2, #0]
 801481e:	2214      	movs	r2, #20
 8014820:	4353      	muls	r3, r2
 8014822:	58c8      	ldr	r0, [r1, r3]
 8014824:	4770      	bx	lr
 8014826:	4a0d      	ldr	r2, [pc, #52]	@ (801485c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8014828:	8812      	ldrh	r2, [r2, #0]
 801482a:	440a      	add	r2, r1
 801482c:	4293      	cmp	r3, r2
 801482e:	da04      	bge.n	801483a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8014830:	4a08      	ldr	r2, [pc, #32]	@ (8014854 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014832:	6812      	ldr	r2, [r2, #0]
 8014834:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014838:	4770      	bx	lr
 801483a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801483e:	4293      	cmp	r3, r2
 8014840:	d103      	bne.n	801484a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8014842:	4b07      	ldr	r3, [pc, #28]	@ (8014860 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8014844:	681b      	ldr	r3, [r3, #0]
 8014846:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8014848:	4770      	bx	lr
 801484a:	2000      	movs	r0, #0
 801484c:	4770      	bx	lr
 801484e:	bf00      	nop
 8014850:	20015848 	.word	0x20015848
 8014854:	2001582c 	.word	0x2001582c
 8014858:	20015850 	.word	0x20015850
 801485c:	2001584c 	.word	0x2001584c
 8014860:	200157c0 	.word	0x200157c0

08014864 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8014864:	4b24      	ldr	r3, [pc, #144]	@ (80148f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8014866:	8802      	ldrh	r2, [r0, #0]
 8014868:	8818      	ldrh	r0, [r3, #0]
 801486a:	4282      	cmp	r2, r0
 801486c:	d221      	bcs.n	80148b2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801486e:	4b23      	ldr	r3, [pc, #140]	@ (80148fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8014870:	6819      	ldr	r1, [r3, #0]
 8014872:	2314      	movs	r3, #20
 8014874:	fb03 1302 	mla	r3, r3, r2, r1
 8014878:	6858      	ldr	r0, [r3, #4]
 801487a:	2800      	cmp	r0, #0
 801487c:	d03a      	beq.n	80148f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801487e:	4920      	ldr	r1, [pc, #128]	@ (8014900 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014880:	6809      	ldr	r1, [r1, #0]
 8014882:	2900      	cmp	r1, #0
 8014884:	d036      	beq.n	80148f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014886:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801488a:	2900      	cmp	r1, #0
 801488c:	d032      	beq.n	80148f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801488e:	891a      	ldrh	r2, [r3, #8]
 8014890:	8958      	ldrh	r0, [r3, #10]
 8014892:	4350      	muls	r0, r2
 8014894:	7c5a      	ldrb	r2, [r3, #17]
 8014896:	7cdb      	ldrb	r3, [r3, #19]
 8014898:	0952      	lsrs	r2, r2, #5
 801489a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801489e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80148a2:	2b0b      	cmp	r3, #11
 80148a4:	bf18      	it	ne
 80148a6:	0040      	lslne	r0, r0, #1
 80148a8:	3003      	adds	r0, #3
 80148aa:	f020 0003 	bic.w	r0, r0, #3
 80148ae:	4408      	add	r0, r1
 80148b0:	4770      	bx	lr
 80148b2:	4b14      	ldr	r3, [pc, #80]	@ (8014904 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80148b4:	881b      	ldrh	r3, [r3, #0]
 80148b6:	4403      	add	r3, r0
 80148b8:	429a      	cmp	r2, r3
 80148ba:	da1a      	bge.n	80148f2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80148bc:	4b12      	ldr	r3, [pc, #72]	@ (8014908 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80148be:	681b      	ldr	r3, [r3, #0]
 80148c0:	1a10      	subs	r0, r2, r0
 80148c2:	210e      	movs	r1, #14
 80148c4:	fb01 3000 	mla	r0, r1, r0, r3
 80148c8:	7b03      	ldrb	r3, [r0, #12]
 80148ca:	f003 031f 	and.w	r3, r3, #31
 80148ce:	2b0b      	cmp	r3, #11
 80148d0:	d10b      	bne.n	80148ea <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80148d2:	8903      	ldrh	r3, [r0, #8]
 80148d4:	8940      	ldrh	r0, [r0, #10]
 80148d6:	4358      	muls	r0, r3
 80148d8:	4b09      	ldr	r3, [pc, #36]	@ (8014900 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80148da:	6819      	ldr	r1, [r3, #0]
 80148dc:	3003      	adds	r0, #3
 80148de:	f020 0303 	bic.w	r3, r0, #3
 80148e2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80148e6:	4418      	add	r0, r3
 80148e8:	4770      	bx	lr
 80148ea:	2b0d      	cmp	r3, #13
 80148ec:	d101      	bne.n	80148f2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80148ee:	300d      	adds	r0, #13
 80148f0:	4770      	bx	lr
 80148f2:	2000      	movs	r0, #0
 80148f4:	4770      	bx	lr
 80148f6:	bf00      	nop
 80148f8:	20015848 	.word	0x20015848
 80148fc:	20015850 	.word	0x20015850
 8014900:	2001582c 	.word	0x2001582c
 8014904:	2001584c 	.word	0x2001584c
 8014908:	20015830 	.word	0x20015830

0801490c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801490c:	b510      	push	{r4, lr}
 801490e:	4b1f      	ldr	r3, [pc, #124]	@ (801498c <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8014910:	8802      	ldrh	r2, [r0, #0]
 8014912:	881b      	ldrh	r3, [r3, #0]
 8014914:	429a      	cmp	r2, r3
 8014916:	d21a      	bcs.n	801494e <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8014918:	4b1d      	ldr	r3, [pc, #116]	@ (8014990 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 801491a:	681b      	ldr	r3, [r3, #0]
 801491c:	2114      	movs	r1, #20
 801491e:	fb01 3102 	mla	r1, r1, r2, r3
 8014922:	7c4b      	ldrb	r3, [r1, #17]
 8014924:	0958      	lsrs	r0, r3, #5
 8014926:	7ccb      	ldrb	r3, [r1, #19]
 8014928:	491a      	ldr	r1, [pc, #104]	@ (8014994 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 801492a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801492e:	6809      	ldr	r1, [r1, #0]
 8014930:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8014934:	b2d8      	uxtb	r0, r3
 8014936:	b149      	cbz	r1, 801494c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8014938:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 801493c:	b132      	cbz	r2, 801494c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801493e:	2b0e      	cmp	r3, #14
 8014940:	d021      	beq.n	8014986 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8014942:	280f      	cmp	r0, #15
 8014944:	d01d      	beq.n	8014982 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8014946:	2810      	cmp	r0, #16
 8014948:	bf08      	it	eq
 801494a:	2002      	moveq	r0, #2
 801494c:	bd10      	pop	{r4, pc}
 801494e:	4912      	ldr	r1, [pc, #72]	@ (8014998 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8014950:	8809      	ldrh	r1, [r1, #0]
 8014952:	4419      	add	r1, r3
 8014954:	428a      	cmp	r2, r1
 8014956:	da09      	bge.n	801496c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8014958:	1ad3      	subs	r3, r2, r3
 801495a:	4a10      	ldr	r2, [pc, #64]	@ (801499c <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 801495c:	6812      	ldr	r2, [r2, #0]
 801495e:	210e      	movs	r1, #14
 8014960:	fb01 2303 	mla	r3, r1, r3, r2
 8014964:	7b18      	ldrb	r0, [r3, #12]
 8014966:	f000 001f 	and.w	r0, r0, #31
 801496a:	e7ef      	b.n	801494c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801496c:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8014970:	429a      	cmp	r2, r3
 8014972:	d108      	bne.n	8014986 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8014974:	f7ee fba0 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 8014978:	6803      	ldr	r3, [r0, #0]
 801497a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801497e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014980:	4718      	bx	r3
 8014982:	2001      	movs	r0, #1
 8014984:	e7e2      	b.n	801494c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8014986:	2000      	movs	r0, #0
 8014988:	e7e0      	b.n	801494c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801498a:	bf00      	nop
 801498c:	20015848 	.word	0x20015848
 8014990:	20015850 	.word	0x20015850
 8014994:	2001582c 	.word	0x2001582c
 8014998:	2001584c 	.word	0x2001584c
 801499c:	20015830 	.word	0x20015830

080149a0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80149a0:	2010      	movs	r0, #16
 80149a2:	4770      	bx	lr

080149a4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80149a4:	2000      	movs	r0, #0
 80149a6:	4770      	bx	lr

080149a8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80149a8:	4b02      	ldr	r3, [pc, #8]	@ (80149b4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80149aa:	8818      	ldrh	r0, [r3, #0]
 80149ac:	0040      	lsls	r0, r0, #1
 80149ae:	b280      	uxth	r0, r0
 80149b0:	4770      	bx	lr
 80149b2:	bf00      	nop
 80149b4:	200157ba 	.word	0x200157ba

080149b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80149b8:	2bff      	cmp	r3, #255	@ 0xff
 80149ba:	d05e      	beq.n	8014a7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 80149bc:	2a0b      	cmp	r2, #11
 80149be:	d058      	beq.n	8014a72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 80149c0:	d80e      	bhi.n	80149e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80149c2:	2a03      	cmp	r2, #3
 80149c4:	d04d      	beq.n	8014a62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 80149c6:	d804      	bhi.n	80149d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80149c8:	2a01      	cmp	r2, #1
 80149ca:	d04c      	beq.n	8014a66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 80149cc:	d94d      	bls.n	8014a6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 80149ce:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 80149d0:	e031      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80149d2:	2a09      	cmp	r2, #9
 80149d4:	d04d      	beq.n	8014a72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 80149d6:	d84a      	bhi.n	8014a6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 80149d8:	2a08      	cmp	r2, #8
 80149da:	d048      	beq.n	8014a6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 80149dc:	2300      	movs	r3, #0
 80149de:	e02a      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80149e0:	2a2f      	cmp	r2, #47	@ 0x2f
 80149e2:	d02c      	beq.n	8014a3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 80149e4:	d811      	bhi.n	8014a0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 80149e6:	2a2d      	cmp	r2, #45	@ 0x2d
 80149e8:	d018      	beq.n	8014a1c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 80149ea:	d831      	bhi.n	8014a50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 80149ec:	2a2c      	cmp	r2, #44	@ 0x2c
 80149ee:	d1f5      	bne.n	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80149f0:	684a      	ldr	r2, [r1, #4]
 80149f2:	7813      	ldrb	r3, [r2, #0]
 80149f4:	7852      	ldrb	r2, [r2, #1]
 80149f6:	2a00      	cmp	r2, #0
 80149f8:	d1f0      	bne.n	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80149fa:	2b01      	cmp	r3, #1
 80149fc:	d01d      	beq.n	8014a3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80149fe:	2b00      	cmp	r3, #0
 8014a00:	d02d      	beq.n	8014a5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8014a02:	2b02      	cmp	r3, #2
 8014a04:	d1ea      	bne.n	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a06:	68c3      	ldr	r3, [r0, #12]
 8014a08:	e015      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a0a:	2a31      	cmp	r2, #49	@ 0x31
 8014a0c:	d004      	beq.n	8014a18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8014a0e:	d332      	bcc.n	8014a76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8014a10:	2a32      	cmp	r2, #50	@ 0x32
 8014a12:	d030      	beq.n	8014a76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8014a14:	2a33      	cmp	r2, #51	@ 0x33
 8014a16:	d1e1      	bne.n	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a18:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8014a1a:	e00c      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a1c:	684a      	ldr	r2, [r1, #4]
 8014a1e:	7813      	ldrb	r3, [r2, #0]
 8014a20:	7852      	ldrb	r2, [r2, #1]
 8014a22:	2a00      	cmp	r2, #0
 8014a24:	d1da      	bne.n	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a26:	2b01      	cmp	r3, #1
 8014a28:	d004      	beq.n	8014a34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8014a2a:	d30f      	bcc.n	8014a4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8014a2c:	2b02      	cmp	r3, #2
 8014a2e:	d1d5      	bne.n	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a30:	6943      	ldr	r3, [r0, #20]
 8014a32:	e000      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a34:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8014a36:	4618      	mov	r0, r3
 8014a38:	4770      	bx	lr
 8014a3a:	69c3      	ldr	r3, [r0, #28]
 8014a3c:	e7fb      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a3e:	684b      	ldr	r3, [r1, #4]
 8014a40:	781a      	ldrb	r2, [r3, #0]
 8014a42:	785b      	ldrb	r3, [r3, #1]
 8014a44:	2b00      	cmp	r3, #0
 8014a46:	d1c9      	bne.n	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a48:	2a00      	cmp	r2, #0
 8014a4a:	d1f4      	bne.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a4c:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8014a4e:	e7f2      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a50:	684b      	ldr	r3, [r1, #4]
 8014a52:	781a      	ldrb	r2, [r3, #0]
 8014a54:	785b      	ldrb	r3, [r3, #1]
 8014a56:	2b00      	cmp	r3, #0
 8014a58:	d1c0      	bne.n	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a5a:	2a00      	cmp	r2, #0
 8014a5c:	d1eb      	bne.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a5e:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8014a60:	e7e9      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a62:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8014a64:	e7e7      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a66:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8014a68:	e7e5      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a6a:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8014a6c:	e7e3      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a6e:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8014a70:	e7e1      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a72:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8014a74:	e7df      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a76:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8014a78:	e7dd      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a7a:	2a0b      	cmp	r2, #11
 8014a7c:	d059      	beq.n	8014b32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8014a7e:	d80e      	bhi.n	8014a9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 8014a80:	2a03      	cmp	r2, #3
 8014a82:	d050      	beq.n	8014b26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8014a84:	d804      	bhi.n	8014a90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8014a86:	2a01      	cmp	r2, #1
 8014a88:	d04f      	beq.n	8014b2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8014a8a:	d950      	bls.n	8014b2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8014a8c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8014a8e:	e7d2      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a90:	2a09      	cmp	r2, #9
 8014a92:	d04e      	beq.n	8014b32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8014a94:	d801      	bhi.n	8014a9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8014a96:	2a08      	cmp	r2, #8
 8014a98:	d1a0      	bne.n	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a9a:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8014a9c:	e7cb      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a9e:	2a2f      	cmp	r2, #47	@ 0x2f
 8014aa0:	d02d      	beq.n	8014afe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 8014aa2:	d811      	bhi.n	8014ac8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8014aa4:	2a2d      	cmp	r2, #45	@ 0x2d
 8014aa6:	d018      	beq.n	8014ada <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8014aa8:	d833      	bhi.n	8014b12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8014aaa:	2a2c      	cmp	r2, #44	@ 0x2c
 8014aac:	d196      	bne.n	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014aae:	684a      	ldr	r2, [r1, #4]
 8014ab0:	7813      	ldrb	r3, [r2, #0]
 8014ab2:	7852      	ldrb	r2, [r2, #1]
 8014ab4:	2a00      	cmp	r2, #0
 8014ab6:	d191      	bne.n	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014ab8:	2b01      	cmp	r3, #1
 8014aba:	d01e      	beq.n	8014afa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014abc:	2b00      	cmp	r3, #0
 8014abe:	d030      	beq.n	8014b22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8014ac0:	2b02      	cmp	r3, #2
 8014ac2:	d18b      	bne.n	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014ac4:	6903      	ldr	r3, [r0, #16]
 8014ac6:	e7b6      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014ac8:	2a31      	cmp	r2, #49	@ 0x31
 8014aca:	d004      	beq.n	8014ad6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8014acc:	d333      	bcc.n	8014b36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8014ace:	2a32      	cmp	r2, #50	@ 0x32
 8014ad0:	d031      	beq.n	8014b36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8014ad2:	2a33      	cmp	r2, #51	@ 0x33
 8014ad4:	d182      	bne.n	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014ad6:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8014ad8:	e7ad      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014ada:	684a      	ldr	r2, [r1, #4]
 8014adc:	7813      	ldrb	r3, [r2, #0]
 8014ade:	7852      	ldrb	r2, [r2, #1]
 8014ae0:	2a00      	cmp	r2, #0
 8014ae2:	f47f af7b 	bne.w	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014ae6:	2b01      	cmp	r3, #1
 8014ae8:	d005      	beq.n	8014af6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014aea:	d310      	bcc.n	8014b0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8014aec:	2b02      	cmp	r3, #2
 8014aee:	f47f af75 	bne.w	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014af2:	6983      	ldr	r3, [r0, #24]
 8014af4:	e79f      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014af6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8014af8:	e79d      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014afa:	6a03      	ldr	r3, [r0, #32]
 8014afc:	e79b      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014afe:	684b      	ldr	r3, [r1, #4]
 8014b00:	781a      	ldrb	r2, [r3, #0]
 8014b02:	785b      	ldrb	r3, [r3, #1]
 8014b04:	2b00      	cmp	r3, #0
 8014b06:	f47f af69 	bne.w	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014b0a:	2a00      	cmp	r2, #0
 8014b0c:	d193      	bne.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014b0e:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8014b10:	e791      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014b12:	684b      	ldr	r3, [r1, #4]
 8014b14:	781a      	ldrb	r2, [r3, #0]
 8014b16:	785b      	ldrb	r3, [r3, #1]
 8014b18:	2b00      	cmp	r3, #0
 8014b1a:	f47f af5f 	bne.w	80149dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014b1e:	2a00      	cmp	r2, #0
 8014b20:	d189      	bne.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014b22:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8014b24:	e787      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014b26:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8014b28:	e785      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014b2a:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8014b2c:	e783      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014b2e:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8014b30:	e781      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014b32:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8014b34:	e77f      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014b36:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8014b38:	e77d      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08014b3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014b3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b3e:	b087      	sub	sp, #28
 8014b40:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014b42:	9205      	str	r2, [sp, #20]
 8014b44:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014b48:	9202      	str	r2, [sp, #8]
 8014b4a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014b4e:	9101      	str	r1, [sp, #4]
 8014b50:	6841      	ldr	r1, [r0, #4]
 8014b52:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8014b56:	fb01 2404 	mla	r4, r1, r4, r2
 8014b5a:	6802      	ldr	r2, [r0, #0]
 8014b5c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014b60:	f8de 2000 	ldr.w	r2, [lr]
 8014b64:	9203      	str	r2, [sp, #12]
 8014b66:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014b6a:	3204      	adds	r2, #4
 8014b6c:	9204      	str	r2, [sp, #16]
 8014b6e:	9a02      	ldr	r2, [sp, #8]
 8014b70:	43d6      	mvns	r6, r2
 8014b72:	b2f6      	uxtb	r6, r6
 8014b74:	9a01      	ldr	r2, [sp, #4]
 8014b76:	2a00      	cmp	r2, #0
 8014b78:	dc03      	bgt.n	8014b82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8014b7a:	9a05      	ldr	r2, [sp, #20]
 8014b7c:	2a00      	cmp	r2, #0
 8014b7e:	f340 8129 	ble.w	8014dd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014b82:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014b84:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014b88:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014b8c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014b90:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014b92:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014b96:	2b00      	cmp	r3, #0
 8014b98:	dd0e      	ble.n	8014bb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014b9a:	1408      	asrs	r0, r1, #16
 8014b9c:	d405      	bmi.n	8014baa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014b9e:	4560      	cmp	r0, ip
 8014ba0:	da03      	bge.n	8014baa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014ba2:	1410      	asrs	r0, r2, #16
 8014ba4:	d401      	bmi.n	8014baa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014ba6:	42b8      	cmp	r0, r7
 8014ba8:	db07      	blt.n	8014bba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014baa:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014bac:	4401      	add	r1, r0
 8014bae:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8014bb0:	3b01      	subs	r3, #1
 8014bb2:	4402      	add	r2, r0
 8014bb4:	3402      	adds	r4, #2
 8014bb6:	e7ee      	b.n	8014b96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014bb8:	d071      	beq.n	8014c9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014bba:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014bbc:	1e58      	subs	r0, r3, #1
 8014bbe:	fb05 1500 	mla	r5, r5, r0, r1
 8014bc2:	142d      	asrs	r5, r5, #16
 8014bc4:	d45f      	bmi.n	8014c86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014bc6:	4565      	cmp	r5, ip
 8014bc8:	da5d      	bge.n	8014c86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014bca:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014bcc:	fb05 2000 	mla	r0, r5, r0, r2
 8014bd0:	1400      	asrs	r0, r0, #16
 8014bd2:	d458      	bmi.n	8014c86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014bd4:	42b8      	cmp	r0, r7
 8014bd6:	da56      	bge.n	8014c86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014bd8:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8014bdc:	4699      	mov	r9, r3
 8014bde:	46a2      	mov	sl, r4
 8014be0:	f1b9 0f00 	cmp.w	r9, #0
 8014be4:	dd57      	ble.n	8014c96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014be6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014bea:	9803      	ldr	r0, [sp, #12]
 8014bec:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014bf0:	140d      	asrs	r5, r1, #16
 8014bf2:	fb07 000c 	mla	r0, r7, ip, r0
 8014bf6:	f109 39ff 	add.w	r9, r9, #4294967295
 8014bfa:	5d40      	ldrb	r0, [r0, r5]
 8014bfc:	9d04      	ldr	r5, [sp, #16]
 8014bfe:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014c02:	f8ba 5000 	ldrh.w	r5, [sl]
 8014c06:	122f      	asrs	r7, r5, #8
 8014c08:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014c0c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014c10:	fb17 f706 	smulbb	r7, r7, r6
 8014c14:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014c18:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014c1c:	00ed      	lsls	r5, r5, #3
 8014c1e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014c22:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8014c26:	10c7      	asrs	r7, r0, #3
 8014c28:	b2ed      	uxtb	r5, r5
 8014c2a:	00c0      	lsls	r0, r0, #3
 8014c2c:	fb18 f806 	smulbb	r8, r8, r6
 8014c30:	fb15 f506 	smulbb	r5, r5, r6
 8014c34:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014c38:	b2c0      	uxtb	r0, r0
 8014c3a:	fa1f fc8c 	uxth.w	ip, ip
 8014c3e:	fb07 870b 	mla	r7, r7, fp, r8
 8014c42:	fb00 500b 	mla	r0, r0, fp, r5
 8014c46:	b280      	uxth	r0, r0
 8014c48:	b2bf      	uxth	r7, r7
 8014c4a:	f10c 0501 	add.w	r5, ip, #1
 8014c4e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014c52:	f107 0801 	add.w	r8, r7, #1
 8014c56:	1c45      	adds	r5, r0, #1
 8014c58:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014c5c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014c60:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014c62:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014c66:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014c6a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014c6e:	ea45 0c0c 	orr.w	ip, r5, ip
 8014c72:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8014c76:	4401      	add	r1, r0
 8014c78:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8014c7a:	ea4c 0c08 	orr.w	ip, ip, r8
 8014c7e:	f82a cb02 	strh.w	ip, [sl], #2
 8014c82:	4402      	add	r2, r0
 8014c84:	e7ac      	b.n	8014be0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014c86:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8014c8a:	f04f 0800 	mov.w	r8, #0
 8014c8e:	eb03 0008 	add.w	r0, r3, r8
 8014c92:	2800      	cmp	r0, #0
 8014c94:	dc41      	bgt.n	8014d1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014c96:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014c9a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014c9e:	9b01      	ldr	r3, [sp, #4]
 8014ca0:	2b00      	cmp	r3, #0
 8014ca2:	f340 8097 	ble.w	8014dd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014ca6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014caa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8014cae:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014cb2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014cb4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014cb8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014cbc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014cc0:	eef0 6a62 	vmov.f32	s13, s5
 8014cc4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014cc8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014ccc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014cd0:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8014cd4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014cd8:	eef0 6a43 	vmov.f32	s13, s6
 8014cdc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014ce0:	ee12 2a90 	vmov	r2, s5
 8014ce4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014ce8:	fb92 f3f3 	sdiv	r3, r2, r3
 8014cec:	ee13 2a10 	vmov	r2, s6
 8014cf0:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014cf2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014cf4:	fb92 f3f3 	sdiv	r3, r2, r3
 8014cf8:	9314      	str	r3, [sp, #80]	@ 0x50
 8014cfa:	9b01      	ldr	r3, [sp, #4]
 8014cfc:	9a05      	ldr	r2, [sp, #20]
 8014cfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d02:	3b01      	subs	r3, #1
 8014d04:	9301      	str	r3, [sp, #4]
 8014d06:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8014d0a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d0c:	eeb0 3a67 	vmov.f32	s6, s15
 8014d10:	bf08      	it	eq
 8014d12:	4613      	moveq	r3, r2
 8014d14:	eef0 2a47 	vmov.f32	s5, s14
 8014d18:	e72c      	b.n	8014b74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8014d1a:	140f      	asrs	r7, r1, #16
 8014d1c:	d453      	bmi.n	8014dc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014d1e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014d22:	42bd      	cmp	r5, r7
 8014d24:	dd4f      	ble.n	8014dc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014d26:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014d2a:	d44c      	bmi.n	8014dc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014d2c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014d30:	4560      	cmp	r0, ip
 8014d32:	dd48      	ble.n	8014dc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014d34:	9803      	ldr	r0, [sp, #12]
 8014d36:	b22d      	sxth	r5, r5
 8014d38:	fb0c 0505 	mla	r5, ip, r5, r0
 8014d3c:	5de8      	ldrb	r0, [r5, r7]
 8014d3e:	9d04      	ldr	r5, [sp, #16]
 8014d40:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014d44:	f06f 0501 	mvn.w	r5, #1
 8014d48:	fb05 fb08 	mul.w	fp, r5, r8
 8014d4c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014d50:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014d54:	122f      	asrs	r7, r5, #8
 8014d56:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014d5a:	fb17 f706 	smulbb	r7, r7, r6
 8014d5e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014d62:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014d66:	00ed      	lsls	r5, r5, #3
 8014d68:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014d6c:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8014d70:	10c7      	asrs	r7, r0, #3
 8014d72:	b2ed      	uxtb	r5, r5
 8014d74:	00c0      	lsls	r0, r0, #3
 8014d76:	fb19 f906 	smulbb	r9, r9, r6
 8014d7a:	fb15 f506 	smulbb	r5, r5, r6
 8014d7e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014d82:	b2c0      	uxtb	r0, r0
 8014d84:	fa1f fc8c 	uxth.w	ip, ip
 8014d88:	fb07 970a 	mla	r7, r7, sl, r9
 8014d8c:	fb00 500a 	mla	r0, r0, sl, r5
 8014d90:	b2bf      	uxth	r7, r7
 8014d92:	b280      	uxth	r0, r0
 8014d94:	f10c 0501 	add.w	r5, ip, #1
 8014d98:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014d9c:	f107 0901 	add.w	r9, r7, #1
 8014da0:	1c45      	adds	r5, r0, #1
 8014da2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014da6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014daa:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014dae:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014db2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014db6:	ea45 0c0c 	orr.w	ip, r5, ip
 8014dba:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8014dbe:	ea4c 0c09 	orr.w	ip, ip, r9
 8014dc2:	f824 c00b 	strh.w	ip, [r4, fp]
 8014dc6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014dc8:	4401      	add	r1, r0
 8014dca:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8014dcc:	f108 38ff 	add.w	r8, r8, #4294967295
 8014dd0:	4402      	add	r2, r0
 8014dd2:	e75c      	b.n	8014c8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014dd4:	b007      	add	sp, #28
 8014dd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014dda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014dda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014dde:	b085      	sub	sp, #20
 8014de0:	4693      	mov	fp, r2
 8014de2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8014de4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8014de6:	6870      	ldr	r0, [r6, #4]
 8014de8:	9100      	str	r1, [sp, #0]
 8014dea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014dee:	fb00 2404 	mla	r4, r0, r4, r2
 8014df2:	6832      	ldr	r2, [r6, #0]
 8014df4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014df8:	682a      	ldr	r2, [r5, #0]
 8014dfa:	9201      	str	r2, [sp, #4]
 8014dfc:	686a      	ldr	r2, [r5, #4]
 8014dfe:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8014e02:	3204      	adds	r2, #4
 8014e04:	9202      	str	r2, [sp, #8]
 8014e06:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014e0a:	9a00      	ldr	r2, [sp, #0]
 8014e0c:	2a00      	cmp	r2, #0
 8014e0e:	dc03      	bgt.n	8014e18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014e10:	f1bb 0f00 	cmp.w	fp, #0
 8014e14:	f340 80a0 	ble.w	8014f58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014e18:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014e1a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014e1e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014e22:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014e26:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014e28:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014e2c:	2b00      	cmp	r3, #0
 8014e2e:	dd0c      	ble.n	8014e4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014e30:	1406      	asrs	r6, r0, #16
 8014e32:	d405      	bmi.n	8014e40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014e34:	454e      	cmp	r6, r9
 8014e36:	da03      	bge.n	8014e40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014e38:	1416      	asrs	r6, r2, #16
 8014e3a:	d401      	bmi.n	8014e40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014e3c:	4546      	cmp	r6, r8
 8014e3e:	db05      	blt.n	8014e4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014e40:	4470      	add	r0, lr
 8014e42:	4462      	add	r2, ip
 8014e44:	3b01      	subs	r3, #1
 8014e46:	3402      	adds	r4, #2
 8014e48:	e7f0      	b.n	8014e2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014e4a:	d00f      	beq.n	8014e6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014e4c:	1e5e      	subs	r6, r3, #1
 8014e4e:	fb0e 0706 	mla	r7, lr, r6, r0
 8014e52:	143f      	asrs	r7, r7, #16
 8014e54:	d541      	bpl.n	8014eda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8014e56:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014e5a:	4698      	mov	r8, r3
 8014e5c:	9603      	str	r6, [sp, #12]
 8014e5e:	f1b8 0f00 	cmp.w	r8, #0
 8014e62:	dc59      	bgt.n	8014f18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014e64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014e68:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014e6c:	9b00      	ldr	r3, [sp, #0]
 8014e6e:	2b00      	cmp	r3, #0
 8014e70:	dd72      	ble.n	8014f58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014e72:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014e76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014e7a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014e7e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014e80:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014e84:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014e88:	eeb0 6a62 	vmov.f32	s12, s5
 8014e8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014e90:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014e94:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014e98:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014e9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014ea0:	eeb0 6a43 	vmov.f32	s12, s6
 8014ea4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014ea8:	ee12 2a90 	vmov	r2, s5
 8014eac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014eb0:	fb92 fef3 	sdiv	lr, r2, r3
 8014eb4:	ee13 2a10 	vmov	r2, s6
 8014eb8:	fb92 fcf3 	sdiv	ip, r2, r3
 8014ebc:	9b00      	ldr	r3, [sp, #0]
 8014ebe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ec2:	3b01      	subs	r3, #1
 8014ec4:	9300      	str	r3, [sp, #0]
 8014ec6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014eca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014ecc:	eeb0 3a67 	vmov.f32	s6, s15
 8014ed0:	bf08      	it	eq
 8014ed2:	465b      	moveq	r3, fp
 8014ed4:	eef0 2a47 	vmov.f32	s5, s14
 8014ed8:	e797      	b.n	8014e0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014eda:	454f      	cmp	r7, r9
 8014edc:	dabb      	bge.n	8014e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014ede:	fb0c 2606 	mla	r6, ip, r6, r2
 8014ee2:	1436      	asrs	r6, r6, #16
 8014ee4:	d4b7      	bmi.n	8014e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014ee6:	4546      	cmp	r6, r8
 8014ee8:	dab5      	bge.n	8014e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014eea:	461e      	mov	r6, r3
 8014eec:	46a0      	mov	r8, r4
 8014eee:	2e00      	cmp	r6, #0
 8014ef0:	ddb8      	ble.n	8014e64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014ef2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014ef6:	9901      	ldr	r1, [sp, #4]
 8014ef8:	1417      	asrs	r7, r2, #16
 8014efa:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014efe:	fb0a 1707 	mla	r7, sl, r7, r1
 8014f02:	9902      	ldr	r1, [sp, #8]
 8014f04:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014f08:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014f0c:	f828 7b02 	strh.w	r7, [r8], #2
 8014f10:	4470      	add	r0, lr
 8014f12:	4462      	add	r2, ip
 8014f14:	3e01      	subs	r6, #1
 8014f16:	e7ea      	b.n	8014eee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014f18:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014f1c:	d417      	bmi.n	8014f4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014f1e:	68ae      	ldr	r6, [r5, #8]
 8014f20:	454e      	cmp	r6, r9
 8014f22:	dd14      	ble.n	8014f4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014f24:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014f28:	d411      	bmi.n	8014f4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014f2a:	68ef      	ldr	r7, [r5, #12]
 8014f2c:	4557      	cmp	r7, sl
 8014f2e:	dd0e      	ble.n	8014f4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014f30:	9f01      	ldr	r7, [sp, #4]
 8014f32:	b236      	sxth	r6, r6
 8014f34:	fb0a 7606 	mla	r6, sl, r6, r7
 8014f38:	9f02      	ldr	r7, [sp, #8]
 8014f3a:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014f3e:	f06f 0101 	mvn.w	r1, #1
 8014f42:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014f46:	fb01 f608 	mul.w	r6, r1, r8
 8014f4a:	9903      	ldr	r1, [sp, #12]
 8014f4c:	538f      	strh	r7, [r1, r6]
 8014f4e:	4470      	add	r0, lr
 8014f50:	4462      	add	r2, ip
 8014f52:	f108 38ff 	add.w	r8, r8, #4294967295
 8014f56:	e782      	b.n	8014e5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014f58:	b005      	add	sp, #20
 8014f5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014f5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014f5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f62:	b087      	sub	sp, #28
 8014f64:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8014f66:	9205      	str	r2, [sp, #20]
 8014f68:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014f6c:	9203      	str	r2, [sp, #12]
 8014f6e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8014f72:	9102      	str	r1, [sp, #8]
 8014f74:	6861      	ldr	r1, [r4, #4]
 8014f76:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8014f7a:	fb01 2000 	mla	r0, r1, r0, r2
 8014f7e:	6822      	ldr	r2, [r4, #0]
 8014f80:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8014f84:	9200      	str	r2, [sp, #0]
 8014f86:	f8dc 2000 	ldr.w	r2, [ip]
 8014f8a:	9204      	str	r2, [sp, #16]
 8014f8c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014f90:	3204      	adds	r2, #4
 8014f92:	9201      	str	r2, [sp, #4]
 8014f94:	9a03      	ldr	r2, [sp, #12]
 8014f96:	43d5      	mvns	r5, r2
 8014f98:	b2ed      	uxtb	r5, r5
 8014f9a:	9a02      	ldr	r2, [sp, #8]
 8014f9c:	2a00      	cmp	r2, #0
 8014f9e:	dc03      	bgt.n	8014fa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014fa0:	9a05      	ldr	r2, [sp, #20]
 8014fa2:	2a00      	cmp	r2, #0
 8014fa4:	f340 812c 	ble.w	8015200 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014fa8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014faa:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8014fae:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014fb2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014fb6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014fb8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014fbc:	2b00      	cmp	r3, #0
 8014fbe:	dd10      	ble.n	8014fe2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014fc0:	140c      	asrs	r4, r1, #16
 8014fc2:	d405      	bmi.n	8014fd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014fc4:	4574      	cmp	r4, lr
 8014fc6:	da03      	bge.n	8014fd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014fc8:	1414      	asrs	r4, r2, #16
 8014fca:	d401      	bmi.n	8014fd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014fcc:	42bc      	cmp	r4, r7
 8014fce:	db09      	blt.n	8014fe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014fd0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014fd2:	9800      	ldr	r0, [sp, #0]
 8014fd4:	4421      	add	r1, r4
 8014fd6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014fd8:	3002      	adds	r0, #2
 8014fda:	4422      	add	r2, r4
 8014fdc:	3b01      	subs	r3, #1
 8014fde:	9000      	str	r0, [sp, #0]
 8014fe0:	e7ec      	b.n	8014fbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014fe2:	d071      	beq.n	80150c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014fe4:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8014fe6:	1e5c      	subs	r4, r3, #1
 8014fe8:	fb06 1604 	mla	r6, r6, r4, r1
 8014fec:	1436      	asrs	r6, r6, #16
 8014fee:	d45d      	bmi.n	80150ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014ff0:	4576      	cmp	r6, lr
 8014ff2:	da5b      	bge.n	80150ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014ff4:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8014ff6:	fb06 2404 	mla	r4, r6, r4, r2
 8014ffa:	1424      	asrs	r4, r4, #16
 8014ffc:	d456      	bmi.n	80150ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014ffe:	42bc      	cmp	r4, r7
 8015000:	da54      	bge.n	80150ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015002:	f8dd 9000 	ldr.w	r9, [sp]
 8015006:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801500a:	4698      	mov	r8, r3
 801500c:	f1b8 0f00 	cmp.w	r8, #0
 8015010:	dd54      	ble.n	80150bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015012:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015016:	9804      	ldr	r0, [sp, #16]
 8015018:	1414      	asrs	r4, r2, #16
 801501a:	fb07 0404 	mla	r4, r7, r4, r0
 801501e:	140e      	asrs	r6, r1, #16
 8015020:	9801      	ldr	r0, [sp, #4]
 8015022:	f814 e006 	ldrb.w	lr, [r4, r6]
 8015026:	f8b9 4000 	ldrh.w	r4, [r9]
 801502a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801502e:	eb00 0b0e 	add.w	fp, r0, lr
 8015032:	1227      	asrs	r7, r4, #8
 8015034:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8015038:	f89b b001 	ldrb.w	fp, [fp, #1]
 801503c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8015040:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015042:	fb16 f60a 	smulbb	r6, r6, sl
 8015046:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801504a:	fb07 6705 	mla	r7, r7, r5, r6
 801504e:	10e6      	asrs	r6, r4, #3
 8015050:	00e4      	lsls	r4, r4, #3
 8015052:	b2e4      	uxtb	r4, r4
 8015054:	fb1b fb0a 	smulbb	fp, fp, sl
 8015058:	fb14 f405 	smulbb	r4, r4, r5
 801505c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015060:	b2bf      	uxth	r7, r7
 8015062:	fb06 b605 	mla	r6, r6, r5, fp
 8015066:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801506a:	b2b6      	uxth	r6, r6
 801506c:	fa1f fe8e 	uxth.w	lr, lr
 8015070:	1c7c      	adds	r4, r7, #1
 8015072:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8015076:	f106 0b01 	add.w	fp, r6, #1
 801507a:	f10e 0401 	add.w	r4, lr, #1
 801507e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8015082:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8015086:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801508a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801508e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015092:	4327      	orrs	r7, r4
 8015094:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8015098:	4401      	add	r1, r0
 801509a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801509c:	ea47 070b 	orr.w	r7, r7, fp
 80150a0:	f829 7b02 	strh.w	r7, [r9], #2
 80150a4:	4402      	add	r2, r0
 80150a6:	f108 38ff 	add.w	r8, r8, #4294967295
 80150aa:	e7af      	b.n	801500c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80150ac:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80150b0:	f04f 0e00 	mov.w	lr, #0
 80150b4:	eb03 040e 	add.w	r4, r3, lr
 80150b8:	2c00      	cmp	r4, #0
 80150ba:	dc43      	bgt.n	8015144 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80150bc:	9a00      	ldr	r2, [sp, #0]
 80150be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80150c2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80150c6:	9300      	str	r3, [sp, #0]
 80150c8:	9b02      	ldr	r3, [sp, #8]
 80150ca:	2b00      	cmp	r3, #0
 80150cc:	f340 8098 	ble.w	8015200 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80150d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80150d4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80150d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80150dc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80150de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80150e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80150e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80150ea:	eef0 6a62 	vmov.f32	s13, s5
 80150ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80150f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80150f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80150fa:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80150fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015102:	eef0 6a43 	vmov.f32	s13, s6
 8015106:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801510a:	ee12 2a90 	vmov	r2, s5
 801510e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015112:	fb92 f3f3 	sdiv	r3, r2, r3
 8015116:	ee13 2a10 	vmov	r2, s6
 801511a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801511c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801511e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015122:	9314      	str	r3, [sp, #80]	@ 0x50
 8015124:	9b02      	ldr	r3, [sp, #8]
 8015126:	9a05      	ldr	r2, [sp, #20]
 8015128:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801512c:	3b01      	subs	r3, #1
 801512e:	9302      	str	r3, [sp, #8]
 8015130:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8015134:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015136:	eeb0 3a67 	vmov.f32	s6, s15
 801513a:	bf08      	it	eq
 801513c:	4613      	moveq	r3, r2
 801513e:	eef0 2a47 	vmov.f32	s5, s14
 8015142:	e72a      	b.n	8014f9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015144:	140f      	asrs	r7, r1, #16
 8015146:	d454      	bmi.n	80151f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015148:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801514c:	42be      	cmp	r6, r7
 801514e:	dd50      	ble.n	80151f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015150:	ea5f 4822 	movs.w	r8, r2, asr #16
 8015154:	d44d      	bmi.n	80151f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015156:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801515a:	4544      	cmp	r4, r8
 801515c:	dd49      	ble.n	80151f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801515e:	9c04      	ldr	r4, [sp, #16]
 8015160:	b236      	sxth	r6, r6
 8015162:	fb08 4606 	mla	r6, r8, r6, r4
 8015166:	f06f 0001 	mvn.w	r0, #1
 801516a:	f816 8007 	ldrb.w	r8, [r6, r7]
 801516e:	9c01      	ldr	r4, [sp, #4]
 8015170:	fb00 fa0e 	mul.w	sl, r0, lr
 8015174:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015178:	9800      	ldr	r0, [sp, #0]
 801517a:	eb04 0b08 	add.w	fp, r4, r8
 801517e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8015182:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8015186:	9801      	ldr	r0, [sp, #4]
 8015188:	f89b b001 	ldrb.w	fp, [fp, #1]
 801518c:	f810 8008 	ldrb.w	r8, [r0, r8]
 8015190:	9800      	ldr	r0, [sp, #0]
 8015192:	1227      	asrs	r7, r4, #8
 8015194:	fb16 f609 	smulbb	r6, r6, r9
 8015198:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801519c:	fb07 6705 	mla	r7, r7, r5, r6
 80151a0:	10e6      	asrs	r6, r4, #3
 80151a2:	00e4      	lsls	r4, r4, #3
 80151a4:	b2e4      	uxtb	r4, r4
 80151a6:	fb1b fb09 	smulbb	fp, fp, r9
 80151aa:	fb14 f405 	smulbb	r4, r4, r5
 80151ae:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80151b2:	b2bf      	uxth	r7, r7
 80151b4:	fb06 b605 	mla	r6, r6, r5, fp
 80151b8:	fb08 4809 	mla	r8, r8, r9, r4
 80151bc:	b2b6      	uxth	r6, r6
 80151be:	fa1f f888 	uxth.w	r8, r8
 80151c2:	1c7c      	adds	r4, r7, #1
 80151c4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80151c8:	f106 0b01 	add.w	fp, r6, #1
 80151cc:	f108 0401 	add.w	r4, r8, #1
 80151d0:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80151d4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80151d8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80151dc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80151e0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80151e4:	4327      	orrs	r7, r4
 80151e6:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80151ea:	ea47 070b 	orr.w	r7, r7, fp
 80151ee:	f820 700a 	strh.w	r7, [r0, sl]
 80151f2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80151f4:	4401      	add	r1, r0
 80151f6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80151f8:	f10e 3eff 	add.w	lr, lr, #4294967295
 80151fc:	4402      	add	r2, r0
 80151fe:	e759      	b.n	80150b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015200:	b007      	add	sp, #28
 8015202:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015208 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801520c:	b085      	sub	sp, #20
 801520e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015212:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8015214:	9203      	str	r2, [sp, #12]
 8015216:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801521a:	6870      	ldr	r0, [r6, #4]
 801521c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801521e:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8015222:	686f      	ldr	r7, [r5, #4]
 8015224:	9101      	str	r1, [sp, #4]
 8015226:	fb00 2404 	mla	r4, r0, r4, r2
 801522a:	6832      	ldr	r2, [r6, #0]
 801522c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015230:	682a      	ldr	r2, [r5, #0]
 8015232:	9202      	str	r2, [sp, #8]
 8015234:	3704      	adds	r7, #4
 8015236:	9a01      	ldr	r2, [sp, #4]
 8015238:	2a00      	cmp	r2, #0
 801523a:	dc03      	bgt.n	8015244 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801523c:	9a03      	ldr	r2, [sp, #12]
 801523e:	2a00      	cmp	r2, #0
 8015240:	f340 80cc 	ble.w	80153dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015244:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015246:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801524a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801524e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015252:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015254:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015258:	2b00      	cmp	r3, #0
 801525a:	dd0d      	ble.n	8015278 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801525c:	1406      	asrs	r6, r0, #16
 801525e:	d405      	bmi.n	801526c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015260:	454e      	cmp	r6, r9
 8015262:	da03      	bge.n	801526c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015264:	1416      	asrs	r6, r2, #16
 8015266:	d401      	bmi.n	801526c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015268:	4546      	cmp	r6, r8
 801526a:	db06      	blt.n	801527a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801526c:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 801526e:	4460      	add	r0, ip
 8015270:	4432      	add	r2, r6
 8015272:	3b01      	subs	r3, #1
 8015274:	3402      	adds	r4, #2
 8015276:	e7ef      	b.n	8015258 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8015278:	d00f      	beq.n	801529a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801527a:	1e5e      	subs	r6, r3, #1
 801527c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8015280:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8015284:	d543      	bpl.n	801530e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8015286:	4698      	mov	r8, r3
 8015288:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801528c:	f1b8 0f00 	cmp.w	r8, #0
 8015290:	dc71      	bgt.n	8015376 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8015292:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015296:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801529a:	9b01      	ldr	r3, [sp, #4]
 801529c:	2b00      	cmp	r3, #0
 801529e:	f340 809d 	ble.w	80153dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80152a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80152a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80152aa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80152ae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80152b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80152b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80152b8:	eeb0 6a62 	vmov.f32	s12, s5
 80152bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80152c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80152c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80152c8:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80152cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80152d0:	eeb0 6a43 	vmov.f32	s12, s6
 80152d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80152d8:	ee12 2a90 	vmov	r2, s5
 80152dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80152e0:	fb92 fcf3 	sdiv	ip, r2, r3
 80152e4:	ee13 2a10 	vmov	r2, s6
 80152e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80152ec:	9312      	str	r3, [sp, #72]	@ 0x48
 80152ee:	9b01      	ldr	r3, [sp, #4]
 80152f0:	9a03      	ldr	r2, [sp, #12]
 80152f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80152f6:	3b01      	subs	r3, #1
 80152f8:	9301      	str	r3, [sp, #4]
 80152fa:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80152fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015300:	eeb0 3a67 	vmov.f32	s6, s15
 8015304:	bf08      	it	eq
 8015306:	4613      	moveq	r3, r2
 8015308:	eef0 2a47 	vmov.f32	s5, s14
 801530c:	e793      	b.n	8015236 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801530e:	45ce      	cmp	lr, r9
 8015310:	dab9      	bge.n	8015286 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015312:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8015314:	fb01 2606 	mla	r6, r1, r6, r2
 8015318:	1436      	asrs	r6, r6, #16
 801531a:	d4b4      	bmi.n	8015286 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801531c:	4546      	cmp	r6, r8
 801531e:	dab2      	bge.n	8015286 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015320:	4698      	mov	r8, r3
 8015322:	46a2      	mov	sl, r4
 8015324:	f1b8 0f00 	cmp.w	r8, #0
 8015328:	ddb3      	ble.n	8015292 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801532a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801532e:	9902      	ldr	r1, [sp, #8]
 8015330:	1416      	asrs	r6, r2, #16
 8015332:	fb09 1606 	mla	r6, r9, r6, r1
 8015336:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801533a:	492a      	ldr	r1, [pc, #168]	@ (80153e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801533c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8015340:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015344:	eb07 0b0e 	add.w	fp, r7, lr
 8015348:	4460      	add	r0, ip
 801534a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801534e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8015352:	00f6      	lsls	r6, r6, #3
 8015354:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8015358:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801535c:	ea49 0606 	orr.w	r6, r9, r6
 8015360:	f817 900e 	ldrb.w	r9, [r7, lr]
 8015364:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8015366:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801536a:	f82a 6b02 	strh.w	r6, [sl], #2
 801536e:	440a      	add	r2, r1
 8015370:	f108 38ff 	add.w	r8, r8, #4294967295
 8015374:	e7d6      	b.n	8015324 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015376:	ea5f 4920 	movs.w	r9, r0, asr #16
 801537a:	d429      	bmi.n	80153d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801537c:	68ae      	ldr	r6, [r5, #8]
 801537e:	454e      	cmp	r6, r9
 8015380:	dd26      	ble.n	80153d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015382:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8015386:	d423      	bmi.n	80153d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015388:	68e9      	ldr	r1, [r5, #12]
 801538a:	4559      	cmp	r1, fp
 801538c:	dd20      	ble.n	80153d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801538e:	9902      	ldr	r1, [sp, #8]
 8015390:	fa0f fe86 	sxth.w	lr, r6
 8015394:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8015398:	f06f 0101 	mvn.w	r1, #1
 801539c:	f81e e009 	ldrb.w	lr, [lr, r9]
 80153a0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80153a4:	eb07 060e 	add.w	r6, r7, lr
 80153a8:	fb01 f908 	mul.w	r9, r1, r8
 80153ac:	f896 b002 	ldrb.w	fp, [r6, #2]
 80153b0:	7876      	ldrb	r6, [r6, #1]
 80153b2:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 80153b6:	00f6      	lsls	r6, r6, #3
 80153b8:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80153bc:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80153c0:	ea4b 0606 	orr.w	r6, fp, r6
 80153c4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80153c8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80153cc:	f82a 6009 	strh.w	r6, [sl, r9]
 80153d0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80153d2:	4460      	add	r0, ip
 80153d4:	440a      	add	r2, r1
 80153d6:	f108 38ff 	add.w	r8, r8, #4294967295
 80153da:	e757      	b.n	801528c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80153dc:	b005      	add	sp, #20
 80153de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80153e2:	bf00      	nop
 80153e4:	fffff800 	.word	0xfffff800

080153e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80153e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153ec:	b087      	sub	sp, #28
 80153ee:	468b      	mov	fp, r1
 80153f0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80153f2:	9204      	str	r2, [sp, #16]
 80153f4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80153f8:	9205      	str	r2, [sp, #20]
 80153fa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80153fe:	6841      	ldr	r1, [r0, #4]
 8015400:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8015404:	fb01 2404 	mla	r4, r1, r4, r2
 8015408:	6802      	ldr	r2, [r0, #0]
 801540a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801540e:	f8dc 2000 	ldr.w	r2, [ip]
 8015412:	9201      	str	r2, [sp, #4]
 8015414:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015418:	3204      	adds	r2, #4
 801541a:	9202      	str	r2, [sp, #8]
 801541c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015420:	f1bb 0f00 	cmp.w	fp, #0
 8015424:	dc03      	bgt.n	801542e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8015426:	9a04      	ldr	r2, [sp, #16]
 8015428:	2a00      	cmp	r2, #0
 801542a:	f340 8138 	ble.w	801569e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801542e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015430:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015434:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8015438:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801543c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801543e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015442:	2b00      	cmp	r3, #0
 8015444:	dd0e      	ble.n	8015464 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015446:	1402      	asrs	r2, r0, #16
 8015448:	d405      	bmi.n	8015456 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801544a:	42ba      	cmp	r2, r7
 801544c:	da03      	bge.n	8015456 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801544e:	140a      	asrs	r2, r1, #16
 8015450:	d401      	bmi.n	8015456 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015452:	42b2      	cmp	r2, r6
 8015454:	db07      	blt.n	8015466 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015456:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015458:	4410      	add	r0, r2
 801545a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801545c:	3b01      	subs	r3, #1
 801545e:	4411      	add	r1, r2
 8015460:	3402      	adds	r4, #2
 8015462:	e7ee      	b.n	8015442 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8015464:	d019      	beq.n	801549a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015466:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8015468:	1e5a      	subs	r2, r3, #1
 801546a:	fb05 0502 	mla	r5, r5, r2, r0
 801546e:	142d      	asrs	r5, r5, #16
 8015470:	d409      	bmi.n	8015486 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015472:	42bd      	cmp	r5, r7
 8015474:	da07      	bge.n	8015486 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015476:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8015478:	fb05 1202 	mla	r2, r5, r2, r1
 801547c:	1412      	asrs	r2, r2, #16
 801547e:	d402      	bmi.n	8015486 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015480:	42b2      	cmp	r2, r6
 8015482:	f2c0 80ac 	blt.w	80155de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8015486:	f04f 0e00 	mov.w	lr, #0
 801548a:	eb03 020e 	add.w	r2, r3, lr
 801548e:	2a00      	cmp	r2, #0
 8015490:	dc3e      	bgt.n	8015510 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015492:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015496:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801549a:	f1bb 0f00 	cmp.w	fp, #0
 801549e:	f340 80fe 	ble.w	801569e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80154a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80154a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80154aa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80154ae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80154b0:	f1bb 0b01 	subs.w	fp, fp, #1
 80154b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80154b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80154bc:	eeb0 6a62 	vmov.f32	s12, s5
 80154c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80154c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80154c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80154cc:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80154d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80154d4:	eeb0 6a43 	vmov.f32	s12, s6
 80154d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80154dc:	ee12 2a90 	vmov	r2, s5
 80154e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80154e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80154e8:	ee13 2a10 	vmov	r2, s6
 80154ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80154f0:	9313      	str	r3, [sp, #76]	@ 0x4c
 80154f2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80154f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80154f8:	9a04      	ldr	r2, [sp, #16]
 80154fa:	9314      	str	r3, [sp, #80]	@ 0x50
 80154fc:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015500:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015502:	eeb0 3a67 	vmov.f32	s6, s15
 8015506:	bf08      	it	eq
 8015508:	4613      	moveq	r3, r2
 801550a:	eef0 2a47 	vmov.f32	s5, s14
 801550e:	e787      	b.n	8015420 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015510:	1406      	asrs	r6, r0, #16
 8015512:	d45d      	bmi.n	80155d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015514:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8015518:	42b5      	cmp	r5, r6
 801551a:	dd59      	ble.n	80155d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801551c:	140f      	asrs	r7, r1, #16
 801551e:	d457      	bmi.n	80155d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015520:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015524:	42ba      	cmp	r2, r7
 8015526:	dd53      	ble.n	80155d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015528:	9a01      	ldr	r2, [sp, #4]
 801552a:	b22d      	sxth	r5, r5
 801552c:	fb07 2505 	mla	r5, r7, r5, r2
 8015530:	5daa      	ldrb	r2, [r5, r6]
 8015532:	9d02      	ldr	r5, [sp, #8]
 8015534:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015538:	0e2e      	lsrs	r6, r5, #24
 801553a:	d049      	beq.n	80155d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801553c:	f06f 0201 	mvn.w	r2, #1
 8015540:	fb02 f20e 	mul.w	r2, r2, lr
 8015544:	9203      	str	r2, [sp, #12]
 8015546:	f834 8002 	ldrh.w	r8, [r4, r2]
 801554a:	9a05      	ldr	r2, [sp, #20]
 801554c:	4356      	muls	r6, r2
 801554e:	1c72      	adds	r2, r6, #1
 8015550:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015554:	1212      	asrs	r2, r2, #8
 8015556:	fa1f f982 	uxth.w	r9, r2
 801555a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801555e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015562:	43d2      	mvns	r2, r2
 8015564:	b2d2      	uxtb	r2, r2
 8015566:	fb16 f609 	smulbb	r6, r6, r9
 801556a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801556e:	fb07 6702 	mla	r7, r7, r2, r6
 8015572:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015576:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801557a:	b2ed      	uxtb	r5, r5
 801557c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015580:	fa5f f888 	uxtb.w	r8, r8
 8015584:	fb15 f509 	smulbb	r5, r5, r9
 8015588:	fb08 5502 	mla	r5, r8, r2, r5
 801558c:	b2bf      	uxth	r7, r7
 801558e:	fb1a fa09 	smulbb	sl, sl, r9
 8015592:	b2ad      	uxth	r5, r5
 8015594:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015598:	fb06 a602 	mla	r6, r6, r2, sl
 801559c:	1c7a      	adds	r2, r7, #1
 801559e:	f105 0a01 	add.w	sl, r5, #1
 80155a2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80155a6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80155aa:	b2b6      	uxth	r6, r6
 80155ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80155b0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80155b4:	ea4a 0707 	orr.w	r7, sl, r7
 80155b8:	f106 0a01 	add.w	sl, r6, #1
 80155bc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80155c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80155c4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80155c8:	9a03      	ldr	r2, [sp, #12]
 80155ca:	ea47 070a 	orr.w	r7, r7, sl
 80155ce:	52a7      	strh	r7, [r4, r2]
 80155d0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80155d2:	4410      	add	r0, r2
 80155d4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80155d6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80155da:	4411      	add	r1, r2
 80155dc:	e755      	b.n	801548a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80155de:	f04f 0800 	mov.w	r8, #0
 80155e2:	eba3 0208 	sub.w	r2, r3, r8
 80155e6:	2a00      	cmp	r2, #0
 80155e8:	f77f af53 	ble.w	8015492 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80155ec:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80155f0:	9f01      	ldr	r7, [sp, #4]
 80155f2:	140a      	asrs	r2, r1, #16
 80155f4:	1405      	asrs	r5, r0, #16
 80155f6:	fb06 7202 	mla	r2, r6, r2, r7
 80155fa:	5d52      	ldrb	r2, [r2, r5]
 80155fc:	9d02      	ldr	r5, [sp, #8]
 80155fe:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015602:	0e2e      	lsrs	r6, r5, #24
 8015604:	d044      	beq.n	8015690 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8015606:	9a05      	ldr	r2, [sp, #20]
 8015608:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801560c:	4356      	muls	r6, r2
 801560e:	1c72      	adds	r2, r6, #1
 8015610:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015614:	1212      	asrs	r2, r2, #8
 8015616:	fa1f f982 	uxth.w	r9, r2
 801561a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801561e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015622:	43d2      	mvns	r2, r2
 8015624:	b2d2      	uxtb	r2, r2
 8015626:	fb16 f609 	smulbb	r6, r6, r9
 801562a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801562e:	fb07 6702 	mla	r7, r7, r2, r6
 8015632:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015636:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801563a:	b2ed      	uxtb	r5, r5
 801563c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015640:	fa5f fe8e 	uxtb.w	lr, lr
 8015644:	fb15 f509 	smulbb	r5, r5, r9
 8015648:	fb0e 5502 	mla	r5, lr, r2, r5
 801564c:	b2bf      	uxth	r7, r7
 801564e:	fb1a fa09 	smulbb	sl, sl, r9
 8015652:	b2ad      	uxth	r5, r5
 8015654:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015658:	fb06 a602 	mla	r6, r6, r2, sl
 801565c:	1c7a      	adds	r2, r7, #1
 801565e:	f105 0a01 	add.w	sl, r5, #1
 8015662:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015666:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801566a:	b2b6      	uxth	r6, r6
 801566c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015670:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015674:	ea4a 0707 	orr.w	r7, sl, r7
 8015678:	f106 0a01 	add.w	sl, r6, #1
 801567c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015680:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015684:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015688:	ea47 070a 	orr.w	r7, r7, sl
 801568c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8015690:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015692:	4410      	add	r0, r2
 8015694:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015696:	f108 0801 	add.w	r8, r8, #1
 801569a:	4411      	add	r1, r2
 801569c:	e7a1      	b.n	80155e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801569e:	b007      	add	sp, #28
 80156a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080156a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80156a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156a8:	b085      	sub	sp, #20
 80156aa:	468b      	mov	fp, r1
 80156ac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80156ae:	9203      	str	r2, [sp, #12]
 80156b0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80156b4:	6841      	ldr	r1, [r0, #4]
 80156b6:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80156ba:	fb01 2404 	mla	r4, r1, r4, r2
 80156be:	6802      	ldr	r2, [r0, #0]
 80156c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80156c4:	f8de 2000 	ldr.w	r2, [lr]
 80156c8:	9200      	str	r2, [sp, #0]
 80156ca:	f8de 2004 	ldr.w	r2, [lr, #4]
 80156ce:	3204      	adds	r2, #4
 80156d0:	9201      	str	r2, [sp, #4]
 80156d2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80156d6:	f1bb 0f00 	cmp.w	fp, #0
 80156da:	dc03      	bgt.n	80156e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80156dc:	9a03      	ldr	r2, [sp, #12]
 80156de:	2a00      	cmp	r2, #0
 80156e0:	f340 8153 	ble.w	801598a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80156e4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80156e6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80156ea:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80156ee:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80156f2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80156f4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80156f8:	2b00      	cmp	r3, #0
 80156fa:	dd0e      	ble.n	801571a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80156fc:	1408      	asrs	r0, r1, #16
 80156fe:	d405      	bmi.n	801570c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015700:	42b8      	cmp	r0, r7
 8015702:	da03      	bge.n	801570c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015704:	1410      	asrs	r0, r2, #16
 8015706:	d401      	bmi.n	801570c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015708:	42b0      	cmp	r0, r6
 801570a:	db07      	blt.n	801571c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801570c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801570e:	4401      	add	r1, r0
 8015710:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015712:	3b01      	subs	r3, #1
 8015714:	4402      	add	r2, r0
 8015716:	3402      	adds	r4, #2
 8015718:	e7ee      	b.n	80156f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801571a:	d017      	beq.n	801574c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801571c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801571e:	1e58      	subs	r0, r3, #1
 8015720:	fb05 1500 	mla	r5, r5, r0, r1
 8015724:	142d      	asrs	r5, r5, #16
 8015726:	d409      	bmi.n	801573c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015728:	42bd      	cmp	r5, r7
 801572a:	da07      	bge.n	801573c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801572c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801572e:	fb05 2000 	mla	r0, r5, r0, r2
 8015732:	1400      	asrs	r0, r0, #16
 8015734:	d402      	bmi.n	801573c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015736:	42b0      	cmp	r0, r6
 8015738:	f2c0 80bc 	blt.w	80158b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801573c:	2600      	movs	r6, #0
 801573e:	1998      	adds	r0, r3, r6
 8015740:	2800      	cmp	r0, #0
 8015742:	dc3e      	bgt.n	80157c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8015744:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015748:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801574c:	f1bb 0f00 	cmp.w	fp, #0
 8015750:	f340 811b 	ble.w	801598a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015754:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015758:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801575c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015760:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015762:	f1bb 0b01 	subs.w	fp, fp, #1
 8015766:	ee31 1a05 	vadd.f32	s2, s2, s10
 801576a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801576e:	eeb0 6a62 	vmov.f32	s12, s5
 8015772:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015776:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801577a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801577e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8015782:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015786:	eeb0 6a43 	vmov.f32	s12, s6
 801578a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801578e:	ee12 2a90 	vmov	r2, s5
 8015792:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015796:	fb92 f3f3 	sdiv	r3, r2, r3
 801579a:	ee13 2a10 	vmov	r2, s6
 801579e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80157a2:	9311      	str	r3, [sp, #68]	@ 0x44
 80157a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80157a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80157aa:	9a03      	ldr	r2, [sp, #12]
 80157ac:	9312      	str	r3, [sp, #72]	@ 0x48
 80157ae:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80157b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80157b4:	eeb0 3a67 	vmov.f32	s6, s15
 80157b8:	bf08      	it	eq
 80157ba:	4613      	moveq	r3, r2
 80157bc:	eef0 2a47 	vmov.f32	s5, s14
 80157c0:	e789      	b.n	80156d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80157c2:	140f      	asrs	r7, r1, #16
 80157c4:	d426      	bmi.n	8015814 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80157c6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80157ca:	42bd      	cmp	r5, r7
 80157cc:	dd22      	ble.n	8015814 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80157ce:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80157d2:	d41f      	bmi.n	8015814 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80157d4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80157d8:	4560      	cmp	r0, ip
 80157da:	dd1b      	ble.n	8015814 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80157dc:	9800      	ldr	r0, [sp, #0]
 80157de:	b22d      	sxth	r5, r5
 80157e0:	fb0c 0505 	mla	r5, ip, r5, r0
 80157e4:	5de8      	ldrb	r0, [r5, r7]
 80157e6:	9d01      	ldr	r5, [sp, #4]
 80157e8:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80157ec:	0e07      	lsrs	r7, r0, #24
 80157ee:	2fff      	cmp	r7, #255	@ 0xff
 80157f0:	d116      	bne.n	8015820 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80157f2:	f06f 0501 	mvn.w	r5, #1
 80157f6:	fb05 f706 	mul.w	r7, r5, r6
 80157fa:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80157fe:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015802:	0945      	lsrs	r5, r0, #5
 8015804:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015808:	ea4c 0505 	orr.w	r5, ip, r5
 801580c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015810:	4305      	orrs	r5, r0
 8015812:	53e5      	strh	r5, [r4, r7]
 8015814:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015816:	4401      	add	r1, r0
 8015818:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801581a:	3e01      	subs	r6, #1
 801581c:	4402      	add	r2, r0
 801581e:	e78e      	b.n	801573e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015820:	b2fd      	uxtb	r5, r7
 8015822:	2f00      	cmp	r7, #0
 8015824:	d0f6      	beq.n	8015814 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015826:	f06f 0701 	mvn.w	r7, #1
 801582a:	4377      	muls	r7, r6
 801582c:	fa1f f985 	uxth.w	r9, r5
 8015830:	f834 8007 	ldrh.w	r8, [r4, r7]
 8015834:	9702      	str	r7, [sp, #8]
 8015836:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801583a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801583e:	43ed      	mvns	r5, r5
 8015840:	b2ed      	uxtb	r5, r5
 8015842:	fb17 f709 	smulbb	r7, r7, r9
 8015846:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801584a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801584e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015852:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8015856:	b2c0      	uxtb	r0, r0
 8015858:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801585c:	fa5f f888 	uxtb.w	r8, r8
 8015860:	fb10 f009 	smulbb	r0, r0, r9
 8015864:	fb08 0005 	mla	r0, r8, r5, r0
 8015868:	b280      	uxth	r0, r0
 801586a:	fa1f fc8c 	uxth.w	ip, ip
 801586e:	fb1a fa09 	smulbb	sl, sl, r9
 8015872:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015876:	fb07 a705 	mla	r7, r7, r5, sl
 801587a:	f100 0a01 	add.w	sl, r0, #1
 801587e:	f10c 0501 	add.w	r5, ip, #1
 8015882:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8015886:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801588a:	b2bf      	uxth	r7, r7
 801588c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015890:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015894:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015898:	f107 0a01 	add.w	sl, r7, #1
 801589c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80158a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80158a4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80158a8:	9802      	ldr	r0, [sp, #8]
 80158aa:	ea4c 0c0a 	orr.w	ip, ip, sl
 80158ae:	f824 c000 	strh.w	ip, [r4, r0]
 80158b2:	e7af      	b.n	8015814 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80158b4:	f04f 0800 	mov.w	r8, #0
 80158b8:	eba3 0008 	sub.w	r0, r3, r8
 80158bc:	2800      	cmp	r0, #0
 80158be:	f77f af41 	ble.w	8015744 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80158c2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80158c6:	9f00      	ldr	r7, [sp, #0]
 80158c8:	1410      	asrs	r0, r2, #16
 80158ca:	140d      	asrs	r5, r1, #16
 80158cc:	fb06 7000 	mla	r0, r6, r0, r7
 80158d0:	5d40      	ldrb	r0, [r0, r5]
 80158d2:	9d01      	ldr	r5, [sp, #4]
 80158d4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80158d8:	0e2e      	lsrs	r6, r5, #24
 80158da:	2eff      	cmp	r6, #255	@ 0xff
 80158dc:	d112      	bne.n	8015904 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80158de:	482c      	ldr	r0, [pc, #176]	@ (8015990 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80158e0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80158e4:	0968      	lsrs	r0, r5, #5
 80158e6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80158ea:	4330      	orrs	r0, r6
 80158ec:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80158f0:	4328      	orrs	r0, r5
 80158f2:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80158f6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80158f8:	4401      	add	r1, r0
 80158fa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80158fc:	f108 0801 	add.w	r8, r8, #1
 8015900:	4402      	add	r2, r0
 8015902:	e7d9      	b.n	80158b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015904:	b2f0      	uxtb	r0, r6
 8015906:	2e00      	cmp	r6, #0
 8015908:	d0f5      	beq.n	80158f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801590a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801590e:	fa1f f980 	uxth.w	r9, r0
 8015912:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015916:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801591a:	43c0      	mvns	r0, r0
 801591c:	b2c0      	uxtb	r0, r0
 801591e:	fb16 f609 	smulbb	r6, r6, r9
 8015922:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015926:	fb07 6700 	mla	r7, r7, r0, r6
 801592a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801592e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015932:	b2ed      	uxtb	r5, r5
 8015934:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015938:	fa5f fc8c 	uxtb.w	ip, ip
 801593c:	fb15 f509 	smulbb	r5, r5, r9
 8015940:	fb0c 5500 	mla	r5, ip, r0, r5
 8015944:	b2bf      	uxth	r7, r7
 8015946:	fb1a fa09 	smulbb	sl, sl, r9
 801594a:	b2ad      	uxth	r5, r5
 801594c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015950:	fb06 a600 	mla	r6, r6, r0, sl
 8015954:	1c78      	adds	r0, r7, #1
 8015956:	f105 0a01 	add.w	sl, r5, #1
 801595a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801595e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015962:	b2b6      	uxth	r6, r6
 8015964:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015968:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801596c:	ea4a 0707 	orr.w	r7, sl, r7
 8015970:	f106 0a01 	add.w	sl, r6, #1
 8015974:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015978:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801597c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015980:	ea47 070a 	orr.w	r7, r7, sl
 8015984:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8015988:	e7b5      	b.n	80158f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801598a:	b005      	add	sp, #20
 801598c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015990:	fffff800 	.word	0xfffff800

08015994 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015998:	b087      	sub	sp, #28
 801599a:	468b      	mov	fp, r1
 801599c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801599e:	9204      	str	r2, [sp, #16]
 80159a0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80159a4:	9205      	str	r2, [sp, #20]
 80159a6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80159aa:	6861      	ldr	r1, [r4, #4]
 80159ac:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80159b0:	fb01 2000 	mla	r0, r1, r0, r2
 80159b4:	6822      	ldr	r2, [r4, #0]
 80159b6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80159ba:	f8de 2000 	ldr.w	r2, [lr]
 80159be:	9201      	str	r2, [sp, #4]
 80159c0:	f8de 2004 	ldr.w	r2, [lr, #4]
 80159c4:	9202      	str	r2, [sp, #8]
 80159c6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80159ca:	f1bb 0f00 	cmp.w	fp, #0
 80159ce:	dc03      	bgt.n	80159d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80159d0:	9a04      	ldr	r2, [sp, #16]
 80159d2:	2a00      	cmp	r2, #0
 80159d4:	f340 8142 	ble.w	8015c5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80159d8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80159da:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80159de:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80159e2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80159e6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80159e8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80159ec:	2b00      	cmp	r3, #0
 80159ee:	dd0e      	ble.n	8015a0e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80159f0:	140c      	asrs	r4, r1, #16
 80159f2:	d405      	bmi.n	8015a00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80159f4:	42bc      	cmp	r4, r7
 80159f6:	da03      	bge.n	8015a00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80159f8:	1414      	asrs	r4, r2, #16
 80159fa:	d401      	bmi.n	8015a00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80159fc:	42b4      	cmp	r4, r6
 80159fe:	db07      	blt.n	8015a10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015a00:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015a02:	4421      	add	r1, r4
 8015a04:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8015a06:	3b01      	subs	r3, #1
 8015a08:	4422      	add	r2, r4
 8015a0a:	3002      	adds	r0, #2
 8015a0c:	e7ee      	b.n	80159ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015a0e:	d019      	beq.n	8015a44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015a10:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8015a12:	1e5c      	subs	r4, r3, #1
 8015a14:	fb05 1504 	mla	r5, r5, r4, r1
 8015a18:	142d      	asrs	r5, r5, #16
 8015a1a:	d409      	bmi.n	8015a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015a1c:	42bd      	cmp	r5, r7
 8015a1e:	da07      	bge.n	8015a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015a20:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8015a22:	fb05 2404 	mla	r4, r5, r4, r2
 8015a26:	1424      	asrs	r4, r4, #16
 8015a28:	d402      	bmi.n	8015a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015a2a:	42b4      	cmp	r4, r6
 8015a2c:	f2c0 80b1 	blt.w	8015b92 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015a30:	f04f 0800 	mov.w	r8, #0
 8015a34:	eb03 0408 	add.w	r4, r3, r8
 8015a38:	2c00      	cmp	r4, #0
 8015a3a:	dc3e      	bgt.n	8015aba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8015a3c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015a40:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015a44:	f1bb 0f00 	cmp.w	fp, #0
 8015a48:	f340 8108 	ble.w	8015c5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015a4c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015a50:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015a54:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015a58:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015a5a:	f1bb 0b01 	subs.w	fp, fp, #1
 8015a5e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015a62:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015a66:	eeb0 6a62 	vmov.f32	s12, s5
 8015a6a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015a6e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015a72:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015a76:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8015a7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015a7e:	eeb0 6a43 	vmov.f32	s12, s6
 8015a82:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015a86:	ee12 2a90 	vmov	r2, s5
 8015a8a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015a8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a92:	ee13 2a10 	vmov	r2, s6
 8015a96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015a9a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015a9c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015a9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015aa2:	9a04      	ldr	r2, [sp, #16]
 8015aa4:	9314      	str	r3, [sp, #80]	@ 0x50
 8015aa6:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015aaa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015aac:	eeb0 3a67 	vmov.f32	s6, s15
 8015ab0:	bf08      	it	eq
 8015ab2:	4613      	moveq	r3, r2
 8015ab4:	eef0 2a47 	vmov.f32	s5, s14
 8015ab8:	e787      	b.n	80159ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8015aba:	140e      	asrs	r6, r1, #16
 8015abc:	d462      	bmi.n	8015b84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015abe:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015ac2:	42b5      	cmp	r5, r6
 8015ac4:	dd5e      	ble.n	8015b84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015ac6:	1417      	asrs	r7, r2, #16
 8015ac8:	d45c      	bmi.n	8015b84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015aca:	f8de 400c 	ldr.w	r4, [lr, #12]
 8015ace:	42bc      	cmp	r4, r7
 8015ad0:	dd58      	ble.n	8015b84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015ad2:	b22d      	sxth	r5, r5
 8015ad4:	fb07 6505 	mla	r5, r7, r5, r6
 8015ad8:	9c02      	ldr	r4, [sp, #8]
 8015ada:	5d66      	ldrb	r6, [r4, r5]
 8015adc:	2e00      	cmp	r6, #0
 8015ade:	d051      	beq.n	8015b84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015ae0:	9c01      	ldr	r4, [sp, #4]
 8015ae2:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8015ae6:	f06f 0401 	mvn.w	r4, #1
 8015aea:	fb04 f408 	mul.w	r4, r4, r8
 8015aee:	9403      	str	r4, [sp, #12]
 8015af0:	5b05      	ldrh	r5, [r0, r4]
 8015af2:	9c05      	ldr	r4, [sp, #20]
 8015af4:	4366      	muls	r6, r4
 8015af6:	1c74      	adds	r4, r6, #1
 8015af8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015afc:	1224      	asrs	r4, r4, #8
 8015afe:	b2a7      	uxth	r7, r4
 8015b00:	122e      	asrs	r6, r5, #8
 8015b02:	43e4      	mvns	r4, r4
 8015b04:	b2e4      	uxtb	r4, r4
 8015b06:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8015b0a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015b0e:	fb16 f604 	smulbb	r6, r6, r4
 8015b12:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015b16:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015b1a:	00ed      	lsls	r5, r5, #3
 8015b1c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015b20:	b2ed      	uxtb	r5, r5
 8015b22:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8015b26:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015b2a:	fb15 f504 	smulbb	r5, r5, r4
 8015b2e:	fa5f f989 	uxtb.w	r9, r9
 8015b32:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8015b36:	fb09 5507 	mla	r5, r9, r7, r5
 8015b3a:	fb1a fa04 	smulbb	sl, sl, r4
 8015b3e:	fa1f fc8c 	uxth.w	ip, ip
 8015b42:	b2ad      	uxth	r5, r5
 8015b44:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015b48:	fb06 a607 	mla	r6, r6, r7, sl
 8015b4c:	f10c 0401 	add.w	r4, ip, #1
 8015b50:	f105 0a01 	add.w	sl, r5, #1
 8015b54:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015b58:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015b5c:	b2b6      	uxth	r6, r6
 8015b5e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015b62:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015b66:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015b6a:	f106 0a01 	add.w	sl, r6, #1
 8015b6e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015b72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015b76:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015b7a:	9c03      	ldr	r4, [sp, #12]
 8015b7c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015b80:	f820 c004 	strh.w	ip, [r0, r4]
 8015b84:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015b86:	4421      	add	r1, r4
 8015b88:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8015b8a:	f108 38ff 	add.w	r8, r8, #4294967295
 8015b8e:	4422      	add	r2, r4
 8015b90:	e750      	b.n	8015a34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015b92:	f04f 0900 	mov.w	r9, #0
 8015b96:	eba3 0409 	sub.w	r4, r3, r9
 8015b9a:	2c00      	cmp	r4, #0
 8015b9c:	f77f af4e 	ble.w	8015a3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015ba0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015ba4:	140d      	asrs	r5, r1, #16
 8015ba6:	1414      	asrs	r4, r2, #16
 8015ba8:	fb06 5404 	mla	r4, r6, r4, r5
 8015bac:	9d02      	ldr	r5, [sp, #8]
 8015bae:	5d2e      	ldrb	r6, [r5, r4]
 8015bb0:	2e00      	cmp	r6, #0
 8015bb2:	d04c      	beq.n	8015c4e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015bb4:	9d01      	ldr	r5, [sp, #4]
 8015bb6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8015bba:	9c05      	ldr	r4, [sp, #20]
 8015bbc:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015bc0:	4366      	muls	r6, r4
 8015bc2:	1c74      	adds	r4, r6, #1
 8015bc4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015bc8:	1224      	asrs	r4, r4, #8
 8015bca:	b2a7      	uxth	r7, r4
 8015bcc:	122e      	asrs	r6, r5, #8
 8015bce:	43e4      	mvns	r4, r4
 8015bd0:	b2e4      	uxtb	r4, r4
 8015bd2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015bd6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015bda:	fb16 f604 	smulbb	r6, r6, r4
 8015bde:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015be2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015be6:	00ed      	lsls	r5, r5, #3
 8015be8:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015bec:	b2ed      	uxtb	r5, r5
 8015bee:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015bf2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015bf6:	fb15 f504 	smulbb	r5, r5, r4
 8015bfa:	fa5f f888 	uxtb.w	r8, r8
 8015bfe:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8015c02:	fb08 5507 	mla	r5, r8, r7, r5
 8015c06:	fb1a fa04 	smulbb	sl, sl, r4
 8015c0a:	fa1f fc8c 	uxth.w	ip, ip
 8015c0e:	b2ad      	uxth	r5, r5
 8015c10:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015c14:	fb06 a607 	mla	r6, r6, r7, sl
 8015c18:	f10c 0401 	add.w	r4, ip, #1
 8015c1c:	f105 0a01 	add.w	sl, r5, #1
 8015c20:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015c24:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015c28:	b2b6      	uxth	r6, r6
 8015c2a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015c2e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015c32:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015c36:	f106 0a01 	add.w	sl, r6, #1
 8015c3a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015c3e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015c42:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015c46:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015c4a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015c4e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015c50:	4421      	add	r1, r4
 8015c52:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8015c54:	f109 0901 	add.w	r9, r9, #1
 8015c58:	4422      	add	r2, r4
 8015c5a:	e79c      	b.n	8015b96 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015c5c:	b007      	add	sp, #28
 8015c5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015c62 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015c62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c66:	b085      	sub	sp, #20
 8015c68:	468b      	mov	fp, r1
 8015c6a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015c6c:	9203      	str	r2, [sp, #12]
 8015c6e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8015c72:	6861      	ldr	r1, [r4, #4]
 8015c74:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8015c78:	fb01 2000 	mla	r0, r1, r0, r2
 8015c7c:	6822      	ldr	r2, [r4, #0]
 8015c7e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015c82:	f8d8 2000 	ldr.w	r2, [r8]
 8015c86:	9200      	str	r2, [sp, #0]
 8015c88:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8015c8c:	9201      	str	r2, [sp, #4]
 8015c8e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015c92:	f1bb 0f00 	cmp.w	fp, #0
 8015c96:	dc03      	bgt.n	8015ca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015c98:	9a03      	ldr	r2, [sp, #12]
 8015c9a:	2a00      	cmp	r2, #0
 8015c9c:	f340 8146 	ble.w	8015f2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015ca0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015ca2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015ca6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015caa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015cae:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015cb0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015cb4:	2b00      	cmp	r3, #0
 8015cb6:	dd0e      	ble.n	8015cd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015cb8:	140c      	asrs	r4, r1, #16
 8015cba:	d405      	bmi.n	8015cc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015cbc:	42bc      	cmp	r4, r7
 8015cbe:	da03      	bge.n	8015cc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015cc0:	1414      	asrs	r4, r2, #16
 8015cc2:	d401      	bmi.n	8015cc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015cc4:	42b4      	cmp	r4, r6
 8015cc6:	db07      	blt.n	8015cd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015cc8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8015cca:	4421      	add	r1, r4
 8015ccc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8015cce:	3b01      	subs	r3, #1
 8015cd0:	4422      	add	r2, r4
 8015cd2:	3002      	adds	r0, #2
 8015cd4:	e7ee      	b.n	8015cb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015cd6:	d017      	beq.n	8015d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015cd8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8015cda:	1e5c      	subs	r4, r3, #1
 8015cdc:	fb05 1504 	mla	r5, r5, r4, r1
 8015ce0:	142d      	asrs	r5, r5, #16
 8015ce2:	d409      	bmi.n	8015cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015ce4:	42bd      	cmp	r5, r7
 8015ce6:	da07      	bge.n	8015cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015ce8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8015cea:	fb05 2404 	mla	r4, r5, r4, r2
 8015cee:	1424      	asrs	r4, r4, #16
 8015cf0:	d402      	bmi.n	8015cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015cf2:	42b4      	cmp	r4, r6
 8015cf4:	f2c0 80b3 	blt.w	8015e5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015cf8:	2600      	movs	r6, #0
 8015cfa:	199c      	adds	r4, r3, r6
 8015cfc:	2c00      	cmp	r4, #0
 8015cfe:	dc3e      	bgt.n	8015d7e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015d00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015d04:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015d08:	f1bb 0f00 	cmp.w	fp, #0
 8015d0c:	f340 810e 	ble.w	8015f2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015d10:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015d14:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015d18:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015d1c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015d1e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015d22:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015d26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015d2a:	eeb0 6a62 	vmov.f32	s12, s5
 8015d2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015d32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015d36:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015d3a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8015d3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015d42:	eeb0 6a43 	vmov.f32	s12, s6
 8015d46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015d4a:	ee12 2a90 	vmov	r2, s5
 8015d4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015d52:	fb92 f3f3 	sdiv	r3, r2, r3
 8015d56:	ee13 2a10 	vmov	r2, s6
 8015d5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015d5e:	9311      	str	r3, [sp, #68]	@ 0x44
 8015d60:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015d62:	fb92 f3f3 	sdiv	r3, r2, r3
 8015d66:	9a03      	ldr	r2, [sp, #12]
 8015d68:	9312      	str	r3, [sp, #72]	@ 0x48
 8015d6a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8015d6e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015d70:	eeb0 3a67 	vmov.f32	s6, s15
 8015d74:	bf08      	it	eq
 8015d76:	4613      	moveq	r3, r2
 8015d78:	eef0 2a47 	vmov.f32	s5, s14
 8015d7c:	e789      	b.n	8015c92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015d7e:	140f      	asrs	r7, r1, #16
 8015d80:	d418      	bmi.n	8015db4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015d82:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015d86:	42bd      	cmp	r5, r7
 8015d88:	dd14      	ble.n	8015db4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015d8a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015d8e:	d411      	bmi.n	8015db4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015d90:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8015d94:	4564      	cmp	r4, ip
 8015d96:	dd0d      	ble.n	8015db4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015d98:	b22d      	sxth	r5, r5
 8015d9a:	fb0c 7505 	mla	r5, ip, r5, r7
 8015d9e:	9c01      	ldr	r4, [sp, #4]
 8015da0:	5d64      	ldrb	r4, [r4, r5]
 8015da2:	2cff      	cmp	r4, #255	@ 0xff
 8015da4:	d10c      	bne.n	8015dc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015da6:	9c00      	ldr	r4, [sp, #0]
 8015da8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8015dac:	f06f 0401 	mvn.w	r4, #1
 8015db0:	4374      	muls	r4, r6
 8015db2:	5305      	strh	r5, [r0, r4]
 8015db4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8015db6:	4421      	add	r1, r4
 8015db8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8015dba:	3e01      	subs	r6, #1
 8015dbc:	4422      	add	r2, r4
 8015dbe:	e79c      	b.n	8015cfa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015dc0:	2c00      	cmp	r4, #0
 8015dc2:	d0f7      	beq.n	8015db4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015dc4:	9f00      	ldr	r7, [sp, #0]
 8015dc6:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8015dca:	f06f 0501 	mvn.w	r5, #1
 8015dce:	4375      	muls	r5, r6
 8015dd0:	9502      	str	r5, [sp, #8]
 8015dd2:	5b45      	ldrh	r5, [r0, r5]
 8015dd4:	fa1f fc84 	uxth.w	ip, r4
 8015dd8:	122f      	asrs	r7, r5, #8
 8015dda:	43e4      	mvns	r4, r4
 8015ddc:	b2e4      	uxtb	r4, r4
 8015dde:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015de2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015de6:	fb17 f704 	smulbb	r7, r7, r4
 8015dea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015dee:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8015df2:	00ed      	lsls	r5, r5, #3
 8015df4:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015df8:	b2ed      	uxtb	r5, r5
 8015dfa:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8015dfe:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015e02:	fb15 f504 	smulbb	r5, r5, r4
 8015e06:	fa5f f989 	uxtb.w	r9, r9
 8015e0a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8015e0e:	fb09 550c 	mla	r5, r9, ip, r5
 8015e12:	fb1a fa04 	smulbb	sl, sl, r4
 8015e16:	fa1f fe8e 	uxth.w	lr, lr
 8015e1a:	b2ad      	uxth	r5, r5
 8015e1c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015e20:	fb07 a70c 	mla	r7, r7, ip, sl
 8015e24:	f10e 0401 	add.w	r4, lr, #1
 8015e28:	f105 0a01 	add.w	sl, r5, #1
 8015e2c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8015e30:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015e34:	b2bf      	uxth	r7, r7
 8015e36:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015e3a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8015e3e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015e42:	f107 0a01 	add.w	sl, r7, #1
 8015e46:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015e4a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015e4e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015e52:	9c02      	ldr	r4, [sp, #8]
 8015e54:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015e58:	f820 e004 	strh.w	lr, [r0, r4]
 8015e5c:	e7aa      	b.n	8015db4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015e5e:	f04f 0900 	mov.w	r9, #0
 8015e62:	eba3 0409 	sub.w	r4, r3, r9
 8015e66:	2c00      	cmp	r4, #0
 8015e68:	f77f af4a 	ble.w	8015d00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015e6c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015e70:	1414      	asrs	r4, r2, #16
 8015e72:	140d      	asrs	r5, r1, #16
 8015e74:	fb06 5504 	mla	r5, r6, r4, r5
 8015e78:	9c01      	ldr	r4, [sp, #4]
 8015e7a:	5d64      	ldrb	r4, [r4, r5]
 8015e7c:	2cff      	cmp	r4, #255	@ 0xff
 8015e7e:	d10b      	bne.n	8015e98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015e80:	9c00      	ldr	r4, [sp, #0]
 8015e82:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8015e86:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015e8a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8015e8c:	4421      	add	r1, r4
 8015e8e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8015e90:	f109 0901 	add.w	r9, r9, #1
 8015e94:	4422      	add	r2, r4
 8015e96:	e7e4      	b.n	8015e62 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015e98:	2c00      	cmp	r4, #0
 8015e9a:	d0f6      	beq.n	8015e8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015e9c:	9e00      	ldr	r6, [sp, #0]
 8015e9e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015ea2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015ea6:	b2a7      	uxth	r7, r4
 8015ea8:	122e      	asrs	r6, r5, #8
 8015eaa:	43e4      	mvns	r4, r4
 8015eac:	b2e4      	uxtb	r4, r4
 8015eae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015eb2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015eb6:	fb16 f604 	smulbb	r6, r6, r4
 8015eba:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015ebe:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015ec2:	00ed      	lsls	r5, r5, #3
 8015ec4:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015ec8:	b2ed      	uxtb	r5, r5
 8015eca:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015ece:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015ed2:	fb15 f504 	smulbb	r5, r5, r4
 8015ed6:	fa5f fe8e 	uxtb.w	lr, lr
 8015eda:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8015ede:	fb0e 5507 	mla	r5, lr, r7, r5
 8015ee2:	fb1a fa04 	smulbb	sl, sl, r4
 8015ee6:	fa1f fc8c 	uxth.w	ip, ip
 8015eea:	b2ad      	uxth	r5, r5
 8015eec:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015ef0:	fb06 a607 	mla	r6, r6, r7, sl
 8015ef4:	f10c 0401 	add.w	r4, ip, #1
 8015ef8:	f105 0a01 	add.w	sl, r5, #1
 8015efc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015f00:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015f04:	b2b6      	uxth	r6, r6
 8015f06:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015f0a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015f0e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015f12:	f106 0a01 	add.w	sl, r6, #1
 8015f16:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015f1a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015f1e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015f22:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015f26:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015f2a:	e7ae      	b.n	8015e8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015f2c:	b005      	add	sp, #20
 8015f2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015f32 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015f32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f36:	b085      	sub	sp, #20
 8015f38:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015f3a:	9203      	str	r2, [sp, #12]
 8015f3c:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8015f40:	9201      	str	r2, [sp, #4]
 8015f42:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015f46:	9100      	str	r1, [sp, #0]
 8015f48:	6841      	ldr	r1, [r0, #4]
 8015f4a:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8015f4e:	fb01 2404 	mla	r4, r1, r4, r2
 8015f52:	6802      	ldr	r2, [r0, #0]
 8015f54:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015f58:	f8de 2000 	ldr.w	r2, [lr]
 8015f5c:	9202      	str	r2, [sp, #8]
 8015f5e:	9a01      	ldr	r2, [sp, #4]
 8015f60:	43d6      	mvns	r6, r2
 8015f62:	b2f6      	uxtb	r6, r6
 8015f64:	9a00      	ldr	r2, [sp, #0]
 8015f66:	2a00      	cmp	r2, #0
 8015f68:	dc03      	bgt.n	8015f72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015f6a:	9a03      	ldr	r2, [sp, #12]
 8015f6c:	2a00      	cmp	r2, #0
 8015f6e:	f340 8124 	ble.w	80161ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015f72:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015f74:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015f78:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015f7c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015f80:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015f82:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015f86:	2b00      	cmp	r3, #0
 8015f88:	dd0e      	ble.n	8015fa8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015f8a:	1408      	asrs	r0, r1, #16
 8015f8c:	d405      	bmi.n	8015f9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015f8e:	4560      	cmp	r0, ip
 8015f90:	da03      	bge.n	8015f9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015f92:	1410      	asrs	r0, r2, #16
 8015f94:	d401      	bmi.n	8015f9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015f96:	42b8      	cmp	r0, r7
 8015f98:	db07      	blt.n	8015faa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015f9a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015f9c:	4401      	add	r1, r0
 8015f9e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015fa0:	3b01      	subs	r3, #1
 8015fa2:	4402      	add	r2, r0
 8015fa4:	3402      	adds	r4, #2
 8015fa6:	e7ee      	b.n	8015f86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015fa8:	d06e      	beq.n	8016088 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015faa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8015fac:	1e58      	subs	r0, r3, #1
 8015fae:	fb05 1500 	mla	r5, r5, r0, r1
 8015fb2:	142d      	asrs	r5, r5, #16
 8015fb4:	d45c      	bmi.n	8016070 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015fb6:	4565      	cmp	r5, ip
 8015fb8:	da5a      	bge.n	8016070 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015fba:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8015fbc:	fb05 2000 	mla	r0, r5, r0, r2
 8015fc0:	1400      	asrs	r0, r0, #16
 8015fc2:	d455      	bmi.n	8016070 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015fc4:	42b8      	cmp	r0, r7
 8015fc6:	da53      	bge.n	8016070 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015fc8:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8015fcc:	4699      	mov	r9, r3
 8015fce:	46a2      	mov	sl, r4
 8015fd0:	f1b9 0f00 	cmp.w	r9, #0
 8015fd4:	dd54      	ble.n	8016080 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015fd6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015fda:	140d      	asrs	r5, r1, #16
 8015fdc:	1410      	asrs	r0, r2, #16
 8015fde:	fb07 5000 	mla	r0, r7, r0, r5
 8015fe2:	9d02      	ldr	r5, [sp, #8]
 8015fe4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015fe8:	f8ba 5000 	ldrh.w	r5, [sl]
 8015fec:	122f      	asrs	r7, r5, #8
 8015fee:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015ff2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015ff6:	fb17 f706 	smulbb	r7, r7, r6
 8015ffa:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015ffe:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016002:	00ed      	lsls	r5, r5, #3
 8016004:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8016008:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801600c:	10c7      	asrs	r7, r0, #3
 801600e:	b2ed      	uxtb	r5, r5
 8016010:	00c0      	lsls	r0, r0, #3
 8016012:	fb18 f806 	smulbb	r8, r8, r6
 8016016:	fb15 f506 	smulbb	r5, r5, r6
 801601a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801601e:	b2c0      	uxtb	r0, r0
 8016020:	fa1f fc8c 	uxth.w	ip, ip
 8016024:	fb07 870b 	mla	r7, r7, fp, r8
 8016028:	fb00 500b 	mla	r0, r0, fp, r5
 801602c:	b280      	uxth	r0, r0
 801602e:	b2bf      	uxth	r7, r7
 8016030:	f10c 0501 	add.w	r5, ip, #1
 8016034:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016038:	f107 0801 	add.w	r8, r7, #1
 801603c:	1c45      	adds	r5, r0, #1
 801603e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016042:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8016046:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8016048:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801604c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016050:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016054:	ea45 0c0c 	orr.w	ip, r5, ip
 8016058:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801605c:	4401      	add	r1, r0
 801605e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016060:	ea4c 0c08 	orr.w	ip, ip, r8
 8016064:	f82a cb02 	strh.w	ip, [sl], #2
 8016068:	4402      	add	r2, r0
 801606a:	f109 39ff 	add.w	r9, r9, #4294967295
 801606e:	e7af      	b.n	8015fd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016070:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8016074:	f04f 0800 	mov.w	r8, #0
 8016078:	eb03 0008 	add.w	r0, r3, r8
 801607c:	2800      	cmp	r0, #0
 801607e:	dc41      	bgt.n	8016104 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016080:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016084:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016088:	9b00      	ldr	r3, [sp, #0]
 801608a:	2b00      	cmp	r3, #0
 801608c:	f340 8095 	ble.w	80161ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8016090:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016094:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8016098:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801609c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801609e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80160a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80160a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80160aa:	eef0 6a62 	vmov.f32	s13, s5
 80160ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80160b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80160b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80160ba:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80160be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80160c2:	eef0 6a43 	vmov.f32	s13, s6
 80160c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80160ca:	ee12 2a90 	vmov	r2, s5
 80160ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80160d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80160d6:	ee13 2a10 	vmov	r2, s6
 80160da:	9311      	str	r3, [sp, #68]	@ 0x44
 80160dc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80160de:	fb92 f3f3 	sdiv	r3, r2, r3
 80160e2:	9312      	str	r3, [sp, #72]	@ 0x48
 80160e4:	9b00      	ldr	r3, [sp, #0]
 80160e6:	9a03      	ldr	r2, [sp, #12]
 80160e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80160ec:	3b01      	subs	r3, #1
 80160ee:	9300      	str	r3, [sp, #0]
 80160f0:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 80160f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80160f6:	eeb0 3a67 	vmov.f32	s6, s15
 80160fa:	bf08      	it	eq
 80160fc:	4613      	moveq	r3, r2
 80160fe:	eef0 2a47 	vmov.f32	s5, s14
 8016102:	e72f      	b.n	8015f64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016104:	140f      	asrs	r7, r1, #16
 8016106:	d451      	bmi.n	80161ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016108:	f8de 5008 	ldr.w	r5, [lr, #8]
 801610c:	42bd      	cmp	r5, r7
 801610e:	dd4d      	ble.n	80161ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016110:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016114:	d44a      	bmi.n	80161ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016116:	f8de 000c 	ldr.w	r0, [lr, #12]
 801611a:	4560      	cmp	r0, ip
 801611c:	dd46      	ble.n	80161ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801611e:	b22d      	sxth	r5, r5
 8016120:	fb0c 7505 	mla	r5, ip, r5, r7
 8016124:	9802      	ldr	r0, [sp, #8]
 8016126:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801612a:	f06f 0501 	mvn.w	r5, #1
 801612e:	fb05 fb08 	mul.w	fp, r5, r8
 8016132:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016136:	f834 500b 	ldrh.w	r5, [r4, fp]
 801613a:	122f      	asrs	r7, r5, #8
 801613c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016140:	fb17 f706 	smulbb	r7, r7, r6
 8016144:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8016148:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801614c:	00ed      	lsls	r5, r5, #3
 801614e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8016152:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8016156:	10c7      	asrs	r7, r0, #3
 8016158:	b2ed      	uxtb	r5, r5
 801615a:	00c0      	lsls	r0, r0, #3
 801615c:	fb19 f906 	smulbb	r9, r9, r6
 8016160:	fb15 f506 	smulbb	r5, r5, r6
 8016164:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016168:	b2c0      	uxtb	r0, r0
 801616a:	fa1f fc8c 	uxth.w	ip, ip
 801616e:	fb07 970a 	mla	r7, r7, sl, r9
 8016172:	fb00 500a 	mla	r0, r0, sl, r5
 8016176:	b2bf      	uxth	r7, r7
 8016178:	b280      	uxth	r0, r0
 801617a:	f10c 0501 	add.w	r5, ip, #1
 801617e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016182:	f107 0901 	add.w	r9, r7, #1
 8016186:	1c45      	adds	r5, r0, #1
 8016188:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801618c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8016190:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016194:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016198:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801619c:	ea45 0c0c 	orr.w	ip, r5, ip
 80161a0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80161a4:	ea4c 0c09 	orr.w	ip, ip, r9
 80161a8:	f824 c00b 	strh.w	ip, [r4, fp]
 80161ac:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80161ae:	4401      	add	r1, r0
 80161b0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80161b2:	f108 38ff 	add.w	r8, r8, #4294967295
 80161b6:	4402      	add	r2, r0
 80161b8:	e75e      	b.n	8016078 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80161ba:	b005      	add	sp, #20
 80161bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080161c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80161c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80161c4:	b085      	sub	sp, #20
 80161c6:	4693      	mov	fp, r2
 80161c8:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80161ca:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80161cc:	6870      	ldr	r0, [r6, #4]
 80161ce:	9101      	str	r1, [sp, #4]
 80161d0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80161d4:	fb00 2404 	mla	r4, r0, r4, r2
 80161d8:	6832      	ldr	r2, [r6, #0]
 80161da:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80161de:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80161e2:	682a      	ldr	r2, [r5, #0]
 80161e4:	9202      	str	r2, [sp, #8]
 80161e6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80161ea:	9a01      	ldr	r2, [sp, #4]
 80161ec:	2a00      	cmp	r2, #0
 80161ee:	dc03      	bgt.n	80161f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80161f0:	f1bb 0f00 	cmp.w	fp, #0
 80161f4:	f340 809a 	ble.w	801632c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80161f8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80161fa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80161fe:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016202:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8016206:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016208:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801620c:	2b00      	cmp	r3, #0
 801620e:	dd0c      	ble.n	801622a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016210:	1406      	asrs	r6, r0, #16
 8016212:	d405      	bmi.n	8016220 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016214:	454e      	cmp	r6, r9
 8016216:	da03      	bge.n	8016220 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016218:	1416      	asrs	r6, r2, #16
 801621a:	d401      	bmi.n	8016220 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801621c:	4546      	cmp	r6, r8
 801621e:	db05      	blt.n	801622c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016220:	4470      	add	r0, lr
 8016222:	4462      	add	r2, ip
 8016224:	3b01      	subs	r3, #1
 8016226:	3402      	adds	r4, #2
 8016228:	e7f0      	b.n	801620c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801622a:	d00f      	beq.n	801624c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801622c:	1e5e      	subs	r6, r3, #1
 801622e:	fb0e 0706 	mla	r7, lr, r6, r0
 8016232:	143f      	asrs	r7, r7, #16
 8016234:	d541      	bpl.n	80162ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8016236:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801623a:	4698      	mov	r8, r3
 801623c:	9603      	str	r6, [sp, #12]
 801623e:	f1b8 0f00 	cmp.w	r8, #0
 8016242:	dc56      	bgt.n	80162f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8016244:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016248:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801624c:	9b01      	ldr	r3, [sp, #4]
 801624e:	2b00      	cmp	r3, #0
 8016250:	dd6c      	ble.n	801632c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016252:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016256:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801625a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801625e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016260:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016264:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016268:	eeb0 6a62 	vmov.f32	s12, s5
 801626c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016270:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016274:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016278:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801627c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016280:	eeb0 6a43 	vmov.f32	s12, s6
 8016284:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016288:	ee12 2a90 	vmov	r2, s5
 801628c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016290:	fb92 fef3 	sdiv	lr, r2, r3
 8016294:	ee13 2a10 	vmov	r2, s6
 8016298:	fb92 fcf3 	sdiv	ip, r2, r3
 801629c:	9b01      	ldr	r3, [sp, #4]
 801629e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80162a2:	3b01      	subs	r3, #1
 80162a4:	9301      	str	r3, [sp, #4]
 80162a6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80162aa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80162ac:	eeb0 3a67 	vmov.f32	s6, s15
 80162b0:	bf08      	it	eq
 80162b2:	465b      	moveq	r3, fp
 80162b4:	eef0 2a47 	vmov.f32	s5, s14
 80162b8:	e797      	b.n	80161ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80162ba:	454f      	cmp	r7, r9
 80162bc:	dabb      	bge.n	8016236 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80162be:	fb0c 2606 	mla	r6, ip, r6, r2
 80162c2:	1436      	asrs	r6, r6, #16
 80162c4:	d4b7      	bmi.n	8016236 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80162c6:	4546      	cmp	r6, r8
 80162c8:	dab5      	bge.n	8016236 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80162ca:	461e      	mov	r6, r3
 80162cc:	46a0      	mov	r8, r4
 80162ce:	2e00      	cmp	r6, #0
 80162d0:	ddb8      	ble.n	8016244 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80162d2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80162d6:	9902      	ldr	r1, [sp, #8]
 80162d8:	1417      	asrs	r7, r2, #16
 80162da:	ea4f 4920 	mov.w	r9, r0, asr #16
 80162de:	fb0a 9707 	mla	r7, sl, r7, r9
 80162e2:	4470      	add	r0, lr
 80162e4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80162e8:	f828 7b02 	strh.w	r7, [r8], #2
 80162ec:	4462      	add	r2, ip
 80162ee:	3e01      	subs	r6, #1
 80162f0:	e7ed      	b.n	80162ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80162f2:	ea5f 4920 	movs.w	r9, r0, asr #16
 80162f6:	d414      	bmi.n	8016322 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80162f8:	68ae      	ldr	r6, [r5, #8]
 80162fa:	454e      	cmp	r6, r9
 80162fc:	dd11      	ble.n	8016322 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80162fe:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016302:	d40e      	bmi.n	8016322 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016304:	68ef      	ldr	r7, [r5, #12]
 8016306:	4557      	cmp	r7, sl
 8016308:	dd0b      	ble.n	8016322 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801630a:	b236      	sxth	r6, r6
 801630c:	fb0a 9606 	mla	r6, sl, r6, r9
 8016310:	9f02      	ldr	r7, [sp, #8]
 8016312:	f06f 0101 	mvn.w	r1, #1
 8016316:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801631a:	fb01 f608 	mul.w	r6, r1, r8
 801631e:	9903      	ldr	r1, [sp, #12]
 8016320:	538f      	strh	r7, [r1, r6]
 8016322:	4470      	add	r0, lr
 8016324:	4462      	add	r2, ip
 8016326:	f108 38ff 	add.w	r8, r8, #4294967295
 801632a:	e788      	b.n	801623e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801632c:	b005      	add	sp, #20
 801632e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016332 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016332:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016336:	b087      	sub	sp, #28
 8016338:	468b      	mov	fp, r1
 801633a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801633c:	9203      	str	r2, [sp, #12]
 801633e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016342:	9204      	str	r2, [sp, #16]
 8016344:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8016348:	6841      	ldr	r1, [r0, #4]
 801634a:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801634e:	fb01 2505 	mla	r5, r1, r5, r2
 8016352:	6802      	ldr	r2, [r0, #0]
 8016354:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8016358:	f8d9 2000 	ldr.w	r2, [r9]
 801635c:	9201      	str	r2, [sp, #4]
 801635e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016362:	f1bb 0f00 	cmp.w	fp, #0
 8016366:	dc03      	bgt.n	8016370 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8016368:	9a03      	ldr	r2, [sp, #12]
 801636a:	2a00      	cmp	r2, #0
 801636c:	f340 8159 	ble.w	8016622 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016370:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8016372:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8016376:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801637a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801637e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016380:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016384:	2b00      	cmp	r3, #0
 8016386:	dd0e      	ble.n	80163a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8016388:	1402      	asrs	r2, r0, #16
 801638a:	d405      	bmi.n	8016398 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801638c:	42ba      	cmp	r2, r7
 801638e:	da03      	bge.n	8016398 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016390:	140a      	asrs	r2, r1, #16
 8016392:	d401      	bmi.n	8016398 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016394:	42b2      	cmp	r2, r6
 8016396:	db07      	blt.n	80163a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016398:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801639a:	4410      	add	r0, r2
 801639c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801639e:	3b01      	subs	r3, #1
 80163a0:	4411      	add	r1, r2
 80163a2:	3502      	adds	r5, #2
 80163a4:	e7ee      	b.n	8016384 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80163a6:	d017      	beq.n	80163d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80163a8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80163aa:	1e5a      	subs	r2, r3, #1
 80163ac:	fb04 0402 	mla	r4, r4, r2, r0
 80163b0:	1424      	asrs	r4, r4, #16
 80163b2:	d409      	bmi.n	80163c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80163b4:	42bc      	cmp	r4, r7
 80163b6:	da07      	bge.n	80163c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80163b8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80163ba:	fb04 1202 	mla	r2, r4, r2, r1
 80163be:	1412      	asrs	r2, r2, #16
 80163c0:	d402      	bmi.n	80163c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80163c2:	42b2      	cmp	r2, r6
 80163c4:	f2c0 80bf 	blt.w	8016546 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80163c8:	2700      	movs	r7, #0
 80163ca:	19da      	adds	r2, r3, r7
 80163cc:	2a00      	cmp	r2, #0
 80163ce:	dc3e      	bgt.n	801644e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80163d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80163d4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80163d8:	f1bb 0f00 	cmp.w	fp, #0
 80163dc:	f340 8121 	ble.w	8016622 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80163e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80163e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80163e8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80163ec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80163ee:	f1bb 0b01 	subs.w	fp, fp, #1
 80163f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80163f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80163fa:	eeb0 6a62 	vmov.f32	s12, s5
 80163fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016402:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016406:	ee77 2a62 	vsub.f32	s5, s14, s5
 801640a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801640e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016412:	eeb0 6a43 	vmov.f32	s12, s6
 8016416:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801641a:	ee12 2a90 	vmov	r2, s5
 801641e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016422:	fb92 f3f3 	sdiv	r3, r2, r3
 8016426:	ee13 2a10 	vmov	r2, s6
 801642a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801642e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8016430:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016432:	fb92 f3f3 	sdiv	r3, r2, r3
 8016436:	9a03      	ldr	r2, [sp, #12]
 8016438:	9314      	str	r3, [sp, #80]	@ 0x50
 801643a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801643e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016440:	eeb0 3a67 	vmov.f32	s6, s15
 8016444:	bf08      	it	eq
 8016446:	4613      	moveq	r3, r2
 8016448:	eef0 2a47 	vmov.f32	s5, s14
 801644c:	e789      	b.n	8016362 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801644e:	1406      	asrs	r6, r0, #16
 8016450:	d42d      	bmi.n	80164ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016452:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8016456:	42b4      	cmp	r4, r6
 8016458:	dd29      	ble.n	80164ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801645a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801645e:	d426      	bmi.n	80164ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016460:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016464:	4562      	cmp	r2, ip
 8016466:	dd22      	ble.n	80164ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016468:	b224      	sxth	r4, r4
 801646a:	9a01      	ldr	r2, [sp, #4]
 801646c:	fb0c 6404 	mla	r4, ip, r4, r6
 8016470:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8016474:	0e22      	lsrs	r2, r4, #24
 8016476:	d01a      	beq.n	80164ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016478:	9e04      	ldr	r6, [sp, #16]
 801647a:	4372      	muls	r2, r6
 801647c:	1c56      	adds	r6, r2, #1
 801647e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016482:	1212      	asrs	r2, r2, #8
 8016484:	0a26      	lsrs	r6, r4, #8
 8016486:	2aff      	cmp	r2, #255	@ 0xff
 8016488:	9605      	str	r6, [sp, #20]
 801648a:	d116      	bne.n	80164ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801648c:	f06f 0201 	mvn.w	r2, #1
 8016490:	fb02 fc07 	mul.w	ip, r2, r7
 8016494:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8016498:	0962      	lsrs	r2, r4, #5
 801649a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801649e:	f026 0607 	bic.w	r6, r6, #7
 80164a2:	4316      	orrs	r6, r2
 80164a4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80164a8:	4326      	orrs	r6, r4
 80164aa:	f825 600c 	strh.w	r6, [r5, ip]
 80164ae:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80164b0:	4410      	add	r0, r2
 80164b2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80164b4:	3f01      	subs	r7, #1
 80164b6:	4411      	add	r1, r2
 80164b8:	e787      	b.n	80163ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80164ba:	f06f 0601 	mvn.w	r6, #1
 80164be:	437e      	muls	r6, r7
 80164c0:	fa1f fa82 	uxth.w	sl, r2
 80164c4:	f835 8006 	ldrh.w	r8, [r5, r6]
 80164c8:	9602      	str	r6, [sp, #8]
 80164ca:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80164ce:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80164d2:	43d2      	mvns	r2, r2
 80164d4:	b2d2      	uxtb	r2, r2
 80164d6:	fb1c fc0a 	smulbb	ip, ip, sl
 80164da:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80164de:	fb0e ce02 	mla	lr, lr, r2, ip
 80164e2:	b2e4      	uxtb	r4, r4
 80164e4:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80164e8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80164ec:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80164f0:	fa5f f888 	uxtb.w	r8, r8
 80164f4:	fb14 f40a 	smulbb	r4, r4, sl
 80164f8:	fb08 4402 	mla	r4, r8, r2, r4
 80164fc:	fa1f fe8e 	uxth.w	lr, lr
 8016500:	fb16 f60a 	smulbb	r6, r6, sl
 8016504:	b2a4      	uxth	r4, r4
 8016506:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801650a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801650e:	f10e 0201 	add.w	r2, lr, #1
 8016512:	1c66      	adds	r6, r4, #1
 8016514:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016518:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801651c:	fa1f fc8c 	uxth.w	ip, ip
 8016520:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016524:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8016528:	ea46 0e0e 	orr.w	lr, r6, lr
 801652c:	f10c 0601 	add.w	r6, ip, #1
 8016530:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016534:	0976      	lsrs	r6, r6, #5
 8016536:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801653a:	9a02      	ldr	r2, [sp, #8]
 801653c:	ea4e 0e06 	orr.w	lr, lr, r6
 8016540:	f825 e002 	strh.w	lr, [r5, r2]
 8016544:	e7b3      	b.n	80164ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016546:	f04f 0800 	mov.w	r8, #0
 801654a:	eba3 0208 	sub.w	r2, r3, r8
 801654e:	2a00      	cmp	r2, #0
 8016550:	f77f af3e 	ble.w	80163d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016554:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8016558:	1404      	asrs	r4, r0, #16
 801655a:	140a      	asrs	r2, r1, #16
 801655c:	fb06 4202 	mla	r2, r6, r2, r4
 8016560:	9c01      	ldr	r4, [sp, #4]
 8016562:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8016566:	0e22      	lsrs	r2, r4, #24
 8016568:	d016      	beq.n	8016598 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801656a:	9e04      	ldr	r6, [sp, #16]
 801656c:	4372      	muls	r2, r6
 801656e:	1c56      	adds	r6, r2, #1
 8016570:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016574:	1212      	asrs	r2, r2, #8
 8016576:	2aff      	cmp	r2, #255	@ 0xff
 8016578:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801657c:	d113      	bne.n	80165a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801657e:	0962      	lsrs	r2, r4, #5
 8016580:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8016584:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016588:	f026 0607 	bic.w	r6, r6, #7
 801658c:	4316      	orrs	r6, r2
 801658e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016592:	4326      	orrs	r6, r4
 8016594:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8016598:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801659a:	4410      	add	r0, r2
 801659c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801659e:	f108 0801 	add.w	r8, r8, #1
 80165a2:	4411      	add	r1, r2
 80165a4:	e7d1      	b.n	801654a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80165a6:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80165aa:	fa1f fa82 	uxth.w	sl, r2
 80165ae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80165b2:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80165b6:	43d2      	mvns	r2, r2
 80165b8:	b2d2      	uxtb	r2, r2
 80165ba:	fb17 f70a 	smulbb	r7, r7, sl
 80165be:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80165c2:	fb0c 7c02 	mla	ip, ip, r2, r7
 80165c6:	b2e4      	uxtb	r4, r4
 80165c8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80165cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80165d0:	fa5f fe8e 	uxtb.w	lr, lr
 80165d4:	fb14 f40a 	smulbb	r4, r4, sl
 80165d8:	fb0e 4402 	mla	r4, lr, r2, r4
 80165dc:	b2f6      	uxtb	r6, r6
 80165de:	fa1f fc8c 	uxth.w	ip, ip
 80165e2:	fb16 f60a 	smulbb	r6, r6, sl
 80165e6:	b2a4      	uxth	r4, r4
 80165e8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80165ec:	fb07 6702 	mla	r7, r7, r2, r6
 80165f0:	f10c 0201 	add.w	r2, ip, #1
 80165f4:	1c66      	adds	r6, r4, #1
 80165f6:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80165fa:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80165fe:	b2bf      	uxth	r7, r7
 8016600:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016604:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016608:	ea46 0c0c 	orr.w	ip, r6, ip
 801660c:	1c7e      	adds	r6, r7, #1
 801660e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016612:	0976      	lsrs	r6, r6, #5
 8016614:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8016618:	ea4c 0c06 	orr.w	ip, ip, r6
 801661c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016620:	e7ba      	b.n	8016598 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016622:	b007      	add	sp, #28
 8016624:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016628 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016628:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801662c:	b085      	sub	sp, #20
 801662e:	468b      	mov	fp, r1
 8016630:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016632:	9203      	str	r2, [sp, #12]
 8016634:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8016638:	6841      	ldr	r1, [r0, #4]
 801663a:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801663e:	fb01 2404 	mla	r4, r1, r4, r2
 8016642:	6802      	ldr	r2, [r0, #0]
 8016644:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016648:	f8d8 2000 	ldr.w	r2, [r8]
 801664c:	9201      	str	r2, [sp, #4]
 801664e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016652:	f1bb 0f00 	cmp.w	fp, #0
 8016656:	dc03      	bgt.n	8016660 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016658:	9a03      	ldr	r2, [sp, #12]
 801665a:	2a00      	cmp	r2, #0
 801665c:	f340 814f 	ble.w	80168fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016660:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016662:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8016666:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801666a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801666e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016670:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016674:	2b00      	cmp	r3, #0
 8016676:	dd0e      	ble.n	8016696 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016678:	1408      	asrs	r0, r1, #16
 801667a:	d405      	bmi.n	8016688 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801667c:	42b8      	cmp	r0, r7
 801667e:	da03      	bge.n	8016688 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016680:	1410      	asrs	r0, r2, #16
 8016682:	d401      	bmi.n	8016688 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016684:	42b0      	cmp	r0, r6
 8016686:	db07      	blt.n	8016698 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016688:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801668a:	4401      	add	r1, r0
 801668c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801668e:	3b01      	subs	r3, #1
 8016690:	4402      	add	r2, r0
 8016692:	3402      	adds	r4, #2
 8016694:	e7ee      	b.n	8016674 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8016696:	d017      	beq.n	80166c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016698:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801669a:	1e58      	subs	r0, r3, #1
 801669c:	fb05 1500 	mla	r5, r5, r0, r1
 80166a0:	142d      	asrs	r5, r5, #16
 80166a2:	d409      	bmi.n	80166b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80166a4:	42bd      	cmp	r5, r7
 80166a6:	da07      	bge.n	80166b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80166a8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80166aa:	fb05 2000 	mla	r0, r5, r0, r2
 80166ae:	1400      	asrs	r0, r0, #16
 80166b0:	d402      	bmi.n	80166b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80166b2:	42b0      	cmp	r0, r6
 80166b4:	f2c0 80ba 	blt.w	801682c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80166b8:	2600      	movs	r6, #0
 80166ba:	1998      	adds	r0, r3, r6
 80166bc:	2800      	cmp	r0, #0
 80166be:	dc3e      	bgt.n	801673e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80166c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80166c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80166c8:	f1bb 0f00 	cmp.w	fp, #0
 80166cc:	f340 8117 	ble.w	80168fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80166d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80166d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80166d8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80166dc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80166de:	f1bb 0b01 	subs.w	fp, fp, #1
 80166e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80166e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80166ea:	eeb0 6a62 	vmov.f32	s12, s5
 80166ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80166f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80166f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80166fa:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80166fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016702:	eeb0 6a43 	vmov.f32	s12, s6
 8016706:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801670a:	ee12 2a90 	vmov	r2, s5
 801670e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016712:	fb92 f3f3 	sdiv	r3, r2, r3
 8016716:	ee13 2a10 	vmov	r2, s6
 801671a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801671e:	9311      	str	r3, [sp, #68]	@ 0x44
 8016720:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016722:	fb92 f3f3 	sdiv	r3, r2, r3
 8016726:	9a03      	ldr	r2, [sp, #12]
 8016728:	9312      	str	r3, [sp, #72]	@ 0x48
 801672a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801672e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016730:	eeb0 3a67 	vmov.f32	s6, s15
 8016734:	bf08      	it	eq
 8016736:	4613      	moveq	r3, r2
 8016738:	eef0 2a47 	vmov.f32	s5, s14
 801673c:	e789      	b.n	8016652 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801673e:	140f      	asrs	r7, r1, #16
 8016740:	d424      	bmi.n	801678c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016742:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8016746:	42bd      	cmp	r5, r7
 8016748:	dd20      	ble.n	801678c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801674a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801674e:	d41d      	bmi.n	801678c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016750:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8016754:	4560      	cmp	r0, ip
 8016756:	dd19      	ble.n	801678c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016758:	b22d      	sxth	r5, r5
 801675a:	fb0c 7505 	mla	r5, ip, r5, r7
 801675e:	9801      	ldr	r0, [sp, #4]
 8016760:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8016764:	0e07      	lsrs	r7, r0, #24
 8016766:	2fff      	cmp	r7, #255	@ 0xff
 8016768:	d116      	bne.n	8016798 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801676a:	f06f 0501 	mvn.w	r5, #1
 801676e:	fb05 f706 	mul.w	r7, r5, r6
 8016772:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8016776:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801677a:	0945      	lsrs	r5, r0, #5
 801677c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016780:	ea4c 0505 	orr.w	r5, ip, r5
 8016784:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016788:	4305      	orrs	r5, r0
 801678a:	53e5      	strh	r5, [r4, r7]
 801678c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801678e:	4401      	add	r1, r0
 8016790:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016792:	3e01      	subs	r6, #1
 8016794:	4402      	add	r2, r0
 8016796:	e790      	b.n	80166ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016798:	b2fd      	uxtb	r5, r7
 801679a:	2f00      	cmp	r7, #0
 801679c:	d0f6      	beq.n	801678c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801679e:	f06f 0701 	mvn.w	r7, #1
 80167a2:	4377      	muls	r7, r6
 80167a4:	fa1f f985 	uxth.w	r9, r5
 80167a8:	f834 e007 	ldrh.w	lr, [r4, r7]
 80167ac:	9702      	str	r7, [sp, #8]
 80167ae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80167b2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80167b6:	43ed      	mvns	r5, r5
 80167b8:	b2ed      	uxtb	r5, r5
 80167ba:	fb17 f709 	smulbb	r7, r7, r9
 80167be:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80167c2:	fb0c 7c05 	mla	ip, ip, r5, r7
 80167c6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80167ca:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80167ce:	b2c0      	uxtb	r0, r0
 80167d0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80167d4:	fa5f fe8e 	uxtb.w	lr, lr
 80167d8:	fb10 f009 	smulbb	r0, r0, r9
 80167dc:	fb0e 0005 	mla	r0, lr, r5, r0
 80167e0:	b280      	uxth	r0, r0
 80167e2:	fa1f fc8c 	uxth.w	ip, ip
 80167e6:	fb1a fa09 	smulbb	sl, sl, r9
 80167ea:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80167ee:	fb07 a705 	mla	r7, r7, r5, sl
 80167f2:	f100 0a01 	add.w	sl, r0, #1
 80167f6:	f10c 0501 	add.w	r5, ip, #1
 80167fa:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80167fe:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016802:	b2bf      	uxth	r7, r7
 8016804:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016808:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801680c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016810:	f107 0a01 	add.w	sl, r7, #1
 8016814:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016818:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801681c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016820:	9802      	ldr	r0, [sp, #8]
 8016822:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016826:	f824 c000 	strh.w	ip, [r4, r0]
 801682a:	e7af      	b.n	801678c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801682c:	f04f 0e00 	mov.w	lr, #0
 8016830:	eba3 000e 	sub.w	r0, r3, lr
 8016834:	2800      	cmp	r0, #0
 8016836:	f77f af43 	ble.w	80166c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801683a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801683e:	140d      	asrs	r5, r1, #16
 8016840:	1410      	asrs	r0, r2, #16
 8016842:	fb06 5000 	mla	r0, r6, r0, r5
 8016846:	9d01      	ldr	r5, [sp, #4]
 8016848:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801684c:	0e2e      	lsrs	r6, r5, #24
 801684e:	2eff      	cmp	r6, #255	@ 0xff
 8016850:	d112      	bne.n	8016878 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016852:	482c      	ldr	r0, [pc, #176]	@ (8016904 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8016854:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8016858:	0968      	lsrs	r0, r5, #5
 801685a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801685e:	4330      	orrs	r0, r6
 8016860:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016864:	4328      	orrs	r0, r5
 8016866:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801686a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801686c:	4401      	add	r1, r0
 801686e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016870:	f10e 0e01 	add.w	lr, lr, #1
 8016874:	4402      	add	r2, r0
 8016876:	e7db      	b.n	8016830 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8016878:	b2f0      	uxtb	r0, r6
 801687a:	2e00      	cmp	r6, #0
 801687c:	d0f5      	beq.n	801686a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801687e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016882:	fa1f f980 	uxth.w	r9, r0
 8016886:	ea4f 272c 	mov.w	r7, ip, asr #8
 801688a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801688e:	43c0      	mvns	r0, r0
 8016890:	b2c0      	uxtb	r0, r0
 8016892:	fb16 f609 	smulbb	r6, r6, r9
 8016896:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801689a:	fb07 6700 	mla	r7, r7, r0, r6
 801689e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80168a2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80168a6:	b2ed      	uxtb	r5, r5
 80168a8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80168ac:	fa5f fc8c 	uxtb.w	ip, ip
 80168b0:	fb15 f509 	smulbb	r5, r5, r9
 80168b4:	fb0c 5500 	mla	r5, ip, r0, r5
 80168b8:	b2bf      	uxth	r7, r7
 80168ba:	fb1a fa09 	smulbb	sl, sl, r9
 80168be:	b2ad      	uxth	r5, r5
 80168c0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80168c4:	fb06 a600 	mla	r6, r6, r0, sl
 80168c8:	1c78      	adds	r0, r7, #1
 80168ca:	f105 0a01 	add.w	sl, r5, #1
 80168ce:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80168d2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80168d6:	b2b6      	uxth	r6, r6
 80168d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80168dc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80168e0:	ea4a 0707 	orr.w	r7, sl, r7
 80168e4:	f106 0a01 	add.w	sl, r6, #1
 80168e8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80168ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80168f0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80168f4:	ea47 070a 	orr.w	r7, r7, sl
 80168f8:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80168fc:	e7b5      	b.n	801686a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80168fe:	b005      	add	sp, #20
 8016900:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016904:	fffff800 	.word	0xfffff800

08016908 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801690c:	b087      	sub	sp, #28
 801690e:	468b      	mov	fp, r1
 8016910:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8016912:	9203      	str	r2, [sp, #12]
 8016914:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016918:	9204      	str	r2, [sp, #16]
 801691a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801691e:	6841      	ldr	r1, [r0, #4]
 8016920:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8016924:	fb01 2404 	mla	r4, r1, r4, r2
 8016928:	6802      	ldr	r2, [r0, #0]
 801692a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801692e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016932:	3201      	adds	r2, #1
 8016934:	f022 0201 	bic.w	r2, r2, #1
 8016938:	9200      	str	r2, [sp, #0]
 801693a:	f8d9 2000 	ldr.w	r2, [r9]
 801693e:	9201      	str	r2, [sp, #4]
 8016940:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016944:	f1bb 0f00 	cmp.w	fp, #0
 8016948:	dc03      	bgt.n	8016952 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801694a:	9a03      	ldr	r2, [sp, #12]
 801694c:	2a00      	cmp	r2, #0
 801694e:	f340 8169 	ble.w	8016c24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016952:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8016954:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8016958:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801695c:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8016960:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016962:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016966:	2b00      	cmp	r3, #0
 8016968:	dd0e      	ble.n	8016988 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801696a:	1402      	asrs	r2, r0, #16
 801696c:	d405      	bmi.n	801697a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801696e:	42ba      	cmp	r2, r7
 8016970:	da03      	bge.n	801697a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016972:	140a      	asrs	r2, r1, #16
 8016974:	d401      	bmi.n	801697a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016976:	42b2      	cmp	r2, r6
 8016978:	db07      	blt.n	801698a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801697a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801697c:	4410      	add	r0, r2
 801697e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016980:	3b01      	subs	r3, #1
 8016982:	4411      	add	r1, r2
 8016984:	3402      	adds	r4, #2
 8016986:	e7ee      	b.n	8016966 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8016988:	d017      	beq.n	80169ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801698a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801698c:	1e5a      	subs	r2, r3, #1
 801698e:	fb05 0502 	mla	r5, r5, r2, r0
 8016992:	142d      	asrs	r5, r5, #16
 8016994:	d409      	bmi.n	80169aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016996:	42bd      	cmp	r5, r7
 8016998:	da07      	bge.n	80169aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801699a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801699c:	fb05 1202 	mla	r2, r5, r2, r1
 80169a0:	1412      	asrs	r2, r2, #16
 80169a2:	d402      	bmi.n	80169aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80169a4:	42b2      	cmp	r2, r6
 80169a6:	f2c0 80c7 	blt.w	8016b38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80169aa:	2700      	movs	r7, #0
 80169ac:	19da      	adds	r2, r3, r7
 80169ae:	2a00      	cmp	r2, #0
 80169b0:	dc3e      	bgt.n	8016a30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80169b2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80169b6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80169ba:	f1bb 0f00 	cmp.w	fp, #0
 80169be:	f340 8131 	ble.w	8016c24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80169c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80169c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80169ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80169ce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80169d0:	f1bb 0b01 	subs.w	fp, fp, #1
 80169d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80169d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80169dc:	eeb0 6a62 	vmov.f32	s12, s5
 80169e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80169e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80169e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80169ec:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80169f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80169f4:	eeb0 6a43 	vmov.f32	s12, s6
 80169f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80169fc:	ee12 2a90 	vmov	r2, s5
 8016a00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016a04:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a08:	ee13 2a10 	vmov	r2, s6
 8016a0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016a10:	9313      	str	r3, [sp, #76]	@ 0x4c
 8016a12:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016a14:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a18:	9a03      	ldr	r2, [sp, #12]
 8016a1a:	9314      	str	r3, [sp, #80]	@ 0x50
 8016a1c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8016a20:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016a22:	eeb0 3a67 	vmov.f32	s6, s15
 8016a26:	bf08      	it	eq
 8016a28:	4613      	moveq	r3, r2
 8016a2a:	eef0 2a47 	vmov.f32	s5, s14
 8016a2e:	e789      	b.n	8016944 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016a30:	1405      	asrs	r5, r0, #16
 8016a32:	d435      	bmi.n	8016aa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016a34:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016a38:	42aa      	cmp	r2, r5
 8016a3a:	dd31      	ble.n	8016aa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016a3c:	140e      	asrs	r6, r1, #16
 8016a3e:	d42f      	bmi.n	8016aa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016a40:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016a44:	42b2      	cmp	r2, r6
 8016a46:	dd2b      	ble.n	8016aa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016a48:	9a00      	ldr	r2, [sp, #0]
 8016a4a:	fb06 5502 	mla	r5, r6, r2, r5
 8016a4e:	086a      	lsrs	r2, r5, #1
 8016a50:	9e01      	ldr	r6, [sp, #4]
 8016a52:	5cb2      	ldrb	r2, [r6, r2]
 8016a54:	07ee      	lsls	r6, r5, #31
 8016a56:	bf54      	ite	pl
 8016a58:	f002 020f 	andpl.w	r2, r2, #15
 8016a5c:	1112      	asrmi	r2, r2, #4
 8016a5e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016a62:	b2d2      	uxtb	r2, r2
 8016a64:	b1e2      	cbz	r2, 8016aa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016a66:	9d04      	ldr	r5, [sp, #16]
 8016a68:	436a      	muls	r2, r5
 8016a6a:	1c55      	adds	r5, r2, #1
 8016a6c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016a70:	4d6e      	ldr	r5, [pc, #440]	@ (8016c2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016a72:	682d      	ldr	r5, [r5, #0]
 8016a74:	1212      	asrs	r2, r2, #8
 8016a76:	0a2e      	lsrs	r6, r5, #8
 8016a78:	2aff      	cmp	r2, #255	@ 0xff
 8016a7a:	9605      	str	r6, [sp, #20]
 8016a7c:	d116      	bne.n	8016aac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8016a7e:	f06f 0201 	mvn.w	r2, #1
 8016a82:	fb02 fc07 	mul.w	ip, r2, r7
 8016a86:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8016a8a:	096a      	lsrs	r2, r5, #5
 8016a8c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016a90:	f026 0607 	bic.w	r6, r6, #7
 8016a94:	4316      	orrs	r6, r2
 8016a96:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016a9a:	432e      	orrs	r6, r5
 8016a9c:	f824 600c 	strh.w	r6, [r4, ip]
 8016aa0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016aa2:	4410      	add	r0, r2
 8016aa4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016aa6:	3f01      	subs	r7, #1
 8016aa8:	4411      	add	r1, r2
 8016aaa:	e77f      	b.n	80169ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8016aac:	f06f 0601 	mvn.w	r6, #1
 8016ab0:	437e      	muls	r6, r7
 8016ab2:	fa1f fa82 	uxth.w	sl, r2
 8016ab6:	f834 8006 	ldrh.w	r8, [r4, r6]
 8016aba:	9602      	str	r6, [sp, #8]
 8016abc:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016ac0:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8016ac4:	43d2      	mvns	r2, r2
 8016ac6:	b2d2      	uxtb	r2, r2
 8016ac8:	fb1c fc0a 	smulbb	ip, ip, sl
 8016acc:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8016ad0:	fb0e ce02 	mla	lr, lr, r2, ip
 8016ad4:	b2ed      	uxtb	r5, r5
 8016ad6:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016ada:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016ade:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016ae2:	fa5f f888 	uxtb.w	r8, r8
 8016ae6:	fb15 f50a 	smulbb	r5, r5, sl
 8016aea:	fb08 5502 	mla	r5, r8, r2, r5
 8016aee:	fa1f fe8e 	uxth.w	lr, lr
 8016af2:	fb16 f60a 	smulbb	r6, r6, sl
 8016af6:	b2ad      	uxth	r5, r5
 8016af8:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8016afc:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016b00:	f10e 0201 	add.w	r2, lr, #1
 8016b04:	1c6e      	adds	r6, r5, #1
 8016b06:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016b0a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8016b0e:	fa1f fc8c 	uxth.w	ip, ip
 8016b12:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016b16:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8016b1a:	ea46 0e0e 	orr.w	lr, r6, lr
 8016b1e:	f10c 0601 	add.w	r6, ip, #1
 8016b22:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016b26:	0976      	lsrs	r6, r6, #5
 8016b28:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8016b2c:	9a02      	ldr	r2, [sp, #8]
 8016b2e:	ea4e 0e06 	orr.w	lr, lr, r6
 8016b32:	f824 e002 	strh.w	lr, [r4, r2]
 8016b36:	e7b3      	b.n	8016aa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016b38:	f04f 0800 	mov.w	r8, #0
 8016b3c:	eba3 0208 	sub.w	r2, r3, r8
 8016b40:	2a00      	cmp	r2, #0
 8016b42:	f77f af36 	ble.w	80169b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016b46:	9e00      	ldr	r6, [sp, #0]
 8016b48:	1402      	asrs	r2, r0, #16
 8016b4a:	140d      	asrs	r5, r1, #16
 8016b4c:	fb06 2505 	mla	r5, r6, r5, r2
 8016b50:	086a      	lsrs	r2, r5, #1
 8016b52:	9e01      	ldr	r6, [sp, #4]
 8016b54:	5cb2      	ldrb	r2, [r6, r2]
 8016b56:	07ed      	lsls	r5, r5, #31
 8016b58:	bf54      	ite	pl
 8016b5a:	f002 020f 	andpl.w	r2, r2, #15
 8016b5e:	1112      	asrmi	r2, r2, #4
 8016b60:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016b64:	b2d2      	uxtb	r2, r2
 8016b66:	b1c2      	cbz	r2, 8016b9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016b68:	9d04      	ldr	r5, [sp, #16]
 8016b6a:	436a      	muls	r2, r5
 8016b6c:	1c55      	adds	r5, r2, #1
 8016b6e:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016b72:	4d2e      	ldr	r5, [pc, #184]	@ (8016c2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016b74:	1212      	asrs	r2, r2, #8
 8016b76:	682e      	ldr	r6, [r5, #0]
 8016b78:	2aff      	cmp	r2, #255	@ 0xff
 8016b7a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8016b7e:	d113      	bne.n	8016ba8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016b80:	0972      	lsrs	r2, r6, #5
 8016b82:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8016b86:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016b8a:	f025 0507 	bic.w	r5, r5, #7
 8016b8e:	4315      	orrs	r5, r2
 8016b90:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016b94:	4335      	orrs	r5, r6
 8016b96:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8016b9a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016b9c:	4410      	add	r0, r2
 8016b9e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016ba0:	f108 0801 	add.w	r8, r8, #1
 8016ba4:	4411      	add	r1, r2
 8016ba6:	e7c9      	b.n	8016b3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016ba8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016bac:	fa1f fa82 	uxth.w	sl, r2
 8016bb0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016bb4:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8016bb8:	43d2      	mvns	r2, r2
 8016bba:	b2d2      	uxtb	r2, r2
 8016bbc:	fb17 f70a 	smulbb	r7, r7, sl
 8016bc0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016bc4:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016bc8:	b2f6      	uxtb	r6, r6
 8016bca:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016bce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016bd2:	fa5f fe8e 	uxtb.w	lr, lr
 8016bd6:	fb16 f60a 	smulbb	r6, r6, sl
 8016bda:	fb0e 6602 	mla	r6, lr, r2, r6
 8016bde:	b2ed      	uxtb	r5, r5
 8016be0:	fa1f fc8c 	uxth.w	ip, ip
 8016be4:	fb15 f50a 	smulbb	r5, r5, sl
 8016be8:	b2b6      	uxth	r6, r6
 8016bea:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016bee:	fb07 5702 	mla	r7, r7, r2, r5
 8016bf2:	f10c 0201 	add.w	r2, ip, #1
 8016bf6:	1c75      	adds	r5, r6, #1
 8016bf8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016bfc:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016c00:	b2bf      	uxth	r7, r7
 8016c02:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016c06:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016c0a:	ea45 0c0c 	orr.w	ip, r5, ip
 8016c0e:	1c7d      	adds	r5, r7, #1
 8016c10:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016c14:	096d      	lsrs	r5, r5, #5
 8016c16:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016c1a:	ea4c 0c05 	orr.w	ip, ip, r5
 8016c1e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016c22:	e7ba      	b.n	8016b9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016c24:	b007      	add	sp, #28
 8016c26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c2a:	bf00      	nop
 8016c2c:	200157d0 	.word	0x200157d0

08016c30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016c30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c34:	b087      	sub	sp, #28
 8016c36:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8016f44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016c3a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8016c3c:	9205      	str	r2, [sp, #20]
 8016c3e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8016c42:	9101      	str	r1, [sp, #4]
 8016c44:	6841      	ldr	r1, [r0, #4]
 8016c46:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8016c4a:	fb01 2404 	mla	r4, r1, r4, r2
 8016c4e:	6802      	ldr	r2, [r0, #0]
 8016c50:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016c54:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016c58:	3201      	adds	r2, #1
 8016c5a:	f022 0201 	bic.w	r2, r2, #1
 8016c5e:	9202      	str	r2, [sp, #8]
 8016c60:	f8db 2000 	ldr.w	r2, [fp]
 8016c64:	9203      	str	r2, [sp, #12]
 8016c66:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016c6a:	9a01      	ldr	r2, [sp, #4]
 8016c6c:	2a00      	cmp	r2, #0
 8016c6e:	dc03      	bgt.n	8016c78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016c70:	9a05      	ldr	r2, [sp, #20]
 8016c72:	2a00      	cmp	r2, #0
 8016c74:	f340 8162 	ble.w	8016f3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016c78:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8016c7a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8016c7e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8016c82:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8016c86:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016c88:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016c8c:	2b00      	cmp	r3, #0
 8016c8e:	dd0e      	ble.n	8016cae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016c90:	1402      	asrs	r2, r0, #16
 8016c92:	d405      	bmi.n	8016ca0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016c94:	42ba      	cmp	r2, r7
 8016c96:	da03      	bge.n	8016ca0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016c98:	140a      	asrs	r2, r1, #16
 8016c9a:	d401      	bmi.n	8016ca0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016c9c:	42b2      	cmp	r2, r6
 8016c9e:	db07      	blt.n	8016cb0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016ca0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016ca2:	4410      	add	r0, r2
 8016ca4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016ca6:	3b01      	subs	r3, #1
 8016ca8:	4411      	add	r1, r2
 8016caa:	3402      	adds	r4, #2
 8016cac:	e7ee      	b.n	8016c8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016cae:	d017      	beq.n	8016ce0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016cb0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8016cb2:	1e5a      	subs	r2, r3, #1
 8016cb4:	fb05 0502 	mla	r5, r5, r2, r0
 8016cb8:	142d      	asrs	r5, r5, #16
 8016cba:	d409      	bmi.n	8016cd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016cbc:	42bd      	cmp	r5, r7
 8016cbe:	da07      	bge.n	8016cd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016cc0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8016cc2:	fb05 1202 	mla	r2, r5, r2, r1
 8016cc6:	1412      	asrs	r2, r2, #16
 8016cc8:	d402      	bmi.n	8016cd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016cca:	42b2      	cmp	r2, r6
 8016ccc:	f2c0 80c3 	blt.w	8016e56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016cd0:	2500      	movs	r5, #0
 8016cd2:	195a      	adds	r2, r3, r5
 8016cd4:	2a00      	cmp	r2, #0
 8016cd6:	dc3f      	bgt.n	8016d58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016cd8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016cdc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016ce0:	9b01      	ldr	r3, [sp, #4]
 8016ce2:	2b00      	cmp	r3, #0
 8016ce4:	f340 812a 	ble.w	8016f3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016ce8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016cec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016cf0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016cf4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016cf6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016cfa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016cfe:	eeb0 6a62 	vmov.f32	s12, s5
 8016d02:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016d06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016d0a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016d0e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8016d12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016d16:	eeb0 6a43 	vmov.f32	s12, s6
 8016d1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016d1e:	ee12 2a90 	vmov	r2, s5
 8016d22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016d26:	fb92 f3f3 	sdiv	r3, r2, r3
 8016d2a:	ee13 2a10 	vmov	r2, s6
 8016d2e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8016d30:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016d32:	fb92 f3f3 	sdiv	r3, r2, r3
 8016d36:	9314      	str	r3, [sp, #80]	@ 0x50
 8016d38:	9b01      	ldr	r3, [sp, #4]
 8016d3a:	9a05      	ldr	r2, [sp, #20]
 8016d3c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016d40:	3b01      	subs	r3, #1
 8016d42:	9301      	str	r3, [sp, #4]
 8016d44:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8016d48:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016d4a:	eeb0 3a67 	vmov.f32	s6, s15
 8016d4e:	bf08      	it	eq
 8016d50:	4613      	moveq	r3, r2
 8016d52:	eef0 2a47 	vmov.f32	s5, s14
 8016d56:	e788      	b.n	8016c6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016d58:	1406      	asrs	r6, r0, #16
 8016d5a:	d42c      	bmi.n	8016db6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016d5c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016d60:	42b2      	cmp	r2, r6
 8016d62:	dd28      	ble.n	8016db6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016d64:	140f      	asrs	r7, r1, #16
 8016d66:	d426      	bmi.n	8016db6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016d68:	f8db 200c 	ldr.w	r2, [fp, #12]
 8016d6c:	42ba      	cmp	r2, r7
 8016d6e:	dd22      	ble.n	8016db6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016d70:	9a02      	ldr	r2, [sp, #8]
 8016d72:	fb07 6602 	mla	r6, r7, r2, r6
 8016d76:	0872      	lsrs	r2, r6, #1
 8016d78:	9f03      	ldr	r7, [sp, #12]
 8016d7a:	5cba      	ldrb	r2, [r7, r2]
 8016d7c:	07f6      	lsls	r6, r6, #31
 8016d7e:	bf54      	ite	pl
 8016d80:	f002 020f 	andpl.w	r2, r2, #15
 8016d84:	1112      	asrmi	r2, r2, #4
 8016d86:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016d8a:	b2d2      	uxtb	r2, r2
 8016d8c:	2aff      	cmp	r2, #255	@ 0xff
 8016d8e:	d118      	bne.n	8016dc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8016d90:	f8d8 2000 	ldr.w	r2, [r8]
 8016d94:	f06f 0601 	mvn.w	r6, #1
 8016d98:	fb06 f705 	mul.w	r7, r6, r5
 8016d9c:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8016da0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8016da4:	0956      	lsrs	r6, r2, #5
 8016da6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8016daa:	ea4c 0606 	orr.w	r6, ip, r6
 8016dae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016db2:	4316      	orrs	r6, r2
 8016db4:	53e6      	strh	r6, [r4, r7]
 8016db6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016db8:	4410      	add	r0, r2
 8016dba:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016dbc:	3d01      	subs	r5, #1
 8016dbe:	4411      	add	r1, r2
 8016dc0:	e787      	b.n	8016cd2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016dc2:	2a00      	cmp	r2, #0
 8016dc4:	d0f7      	beq.n	8016db6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016dc6:	f06f 0601 	mvn.w	r6, #1
 8016dca:	436e      	muls	r6, r5
 8016dcc:	f8d8 c000 	ldr.w	ip, [r8]
 8016dd0:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016dd4:	9604      	str	r6, [sp, #16]
 8016dd6:	fa1f f982 	uxth.w	r9, r2
 8016dda:	ea4f 272e 	mov.w	r7, lr, asr #8
 8016dde:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8016de2:	43d2      	mvns	r2, r2
 8016de4:	b2d2      	uxtb	r2, r2
 8016de6:	fb16 f609 	smulbb	r6, r6, r9
 8016dea:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016dee:	fb07 6702 	mla	r7, r7, r2, r6
 8016df2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016df6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016dfa:	fa5f fc8c 	uxtb.w	ip, ip
 8016dfe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016e02:	fa5f fe8e 	uxtb.w	lr, lr
 8016e06:	fb1c fc09 	smulbb	ip, ip, r9
 8016e0a:	fb0e cc02 	mla	ip, lr, r2, ip
 8016e0e:	b2bf      	uxth	r7, r7
 8016e10:	fb1a fa09 	smulbb	sl, sl, r9
 8016e14:	fa1f fc8c 	uxth.w	ip, ip
 8016e18:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016e1c:	fb06 a602 	mla	r6, r6, r2, sl
 8016e20:	1c7a      	adds	r2, r7, #1
 8016e22:	f10c 0a01 	add.w	sl, ip, #1
 8016e26:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016e2a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8016e2e:	b2b6      	uxth	r6, r6
 8016e30:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016e34:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016e38:	ea4a 0707 	orr.w	r7, sl, r7
 8016e3c:	f106 0a01 	add.w	sl, r6, #1
 8016e40:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016e44:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016e48:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016e4c:	9a04      	ldr	r2, [sp, #16]
 8016e4e:	ea47 070a 	orr.w	r7, r7, sl
 8016e52:	52a7      	strh	r7, [r4, r2]
 8016e54:	e7af      	b.n	8016db6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016e56:	f04f 0e00 	mov.w	lr, #0
 8016e5a:	eba3 020e 	sub.w	r2, r3, lr
 8016e5e:	2a00      	cmp	r2, #0
 8016e60:	f77f af3a 	ble.w	8016cd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016e64:	9e02      	ldr	r6, [sp, #8]
 8016e66:	1402      	asrs	r2, r0, #16
 8016e68:	140d      	asrs	r5, r1, #16
 8016e6a:	fb06 2505 	mla	r5, r6, r5, r2
 8016e6e:	086a      	lsrs	r2, r5, #1
 8016e70:	9e03      	ldr	r6, [sp, #12]
 8016e72:	5cb2      	ldrb	r2, [r6, r2]
 8016e74:	07ed      	lsls	r5, r5, #31
 8016e76:	bf54      	ite	pl
 8016e78:	f002 020f 	andpl.w	r2, r2, #15
 8016e7c:	1112      	asrmi	r2, r2, #4
 8016e7e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016e82:	b2d2      	uxtb	r2, r2
 8016e84:	2aff      	cmp	r2, #255	@ 0xff
 8016e86:	d115      	bne.n	8016eb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016e88:	f8d8 5000 	ldr.w	r5, [r8]
 8016e8c:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8016e90:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8016e94:	096a      	lsrs	r2, r5, #5
 8016e96:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016e9a:	4332      	orrs	r2, r6
 8016e9c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016ea0:	432a      	orrs	r2, r5
 8016ea2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8016ea6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016ea8:	4410      	add	r0, r2
 8016eaa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016eac:	f10e 0e01 	add.w	lr, lr, #1
 8016eb0:	4411      	add	r1, r2
 8016eb2:	e7d2      	b.n	8016e5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016eb4:	2a00      	cmp	r2, #0
 8016eb6:	d0f6      	beq.n	8016ea6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016eb8:	f8d8 7000 	ldr.w	r7, [r8]
 8016ebc:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016ec0:	fa1f f982 	uxth.w	r9, r2
 8016ec4:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016ec8:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8016ecc:	43d2      	mvns	r2, r2
 8016ece:	b2d2      	uxtb	r2, r2
 8016ed0:	fb15 f509 	smulbb	r5, r5, r9
 8016ed4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016ed8:	fb06 5602 	mla	r6, r6, r2, r5
 8016edc:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016ee0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016ee4:	b2ff      	uxtb	r7, r7
 8016ee6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016eea:	fa5f fc8c 	uxtb.w	ip, ip
 8016eee:	fb17 f709 	smulbb	r7, r7, r9
 8016ef2:	fb0c 7702 	mla	r7, ip, r2, r7
 8016ef6:	b2b6      	uxth	r6, r6
 8016ef8:	fb1a fa09 	smulbb	sl, sl, r9
 8016efc:	b2bf      	uxth	r7, r7
 8016efe:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016f02:	fb05 a502 	mla	r5, r5, r2, sl
 8016f06:	1c72      	adds	r2, r6, #1
 8016f08:	f107 0a01 	add.w	sl, r7, #1
 8016f0c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016f10:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016f14:	b2ad      	uxth	r5, r5
 8016f16:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016f1a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016f1e:	ea4a 0606 	orr.w	r6, sl, r6
 8016f22:	f105 0a01 	add.w	sl, r5, #1
 8016f26:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016f2a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016f2e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016f32:	ea46 060a 	orr.w	r6, r6, sl
 8016f36:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8016f3a:	e7b4      	b.n	8016ea6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016f3c:	b007      	add	sp, #28
 8016f3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f42:	bf00      	nop
 8016f44:	200157d0 	.word	0x200157d0

08016f48 <_ZN8touchgfx8LCD16bppD1Ev>:
 8016f48:	4770      	bx	lr

08016f4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8016f4a:	4770      	bx	lr

08016f4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8016f4c:	4770      	bx	lr

08016f4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8016f4e:	4770      	bx	lr

08016f50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8016f50:	4770      	bx	lr

08016f52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016f52:	4770      	bx	lr

08016f54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8016f54:	4770      	bx	lr

08016f56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8016f56:	4770      	bx	lr

08016f58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016f58:	4770      	bx	lr

08016f5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016f5a:	4770      	bx	lr

08016f5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016f5c:	4770      	bx	lr

08016f5e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016f5e:	4770      	bx	lr

08016f60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016f60:	4770      	bx	lr

08016f62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016f62:	4770      	bx	lr

08016f64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016f64:	4770      	bx	lr

08016f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016f66:	4770      	bx	lr

08016f68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016f68:	4770      	bx	lr

08016f6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016f6a:	4770      	bx	lr

08016f6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016f6c:	4770      	bx	lr

08016f6e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016f6e:	4770      	bx	lr

08016f70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016f70:	4770      	bx	lr

08016f72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016f72:	4770      	bx	lr

08016f74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016f74:	4770      	bx	lr

08016f76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016f76:	4770      	bx	lr

08016f78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016f78:	4770      	bx	lr

08016f7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016f7a:	4770      	bx	lr

08016f7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016f7c:	4770      	bx	lr

08016f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016f7e:	4770      	bx	lr

08016f80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016f80:	4770      	bx	lr

08016f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016f82:	4770      	bx	lr

08016f84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016f84:	4770      	bx	lr

08016f86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016f86:	4770      	bx	lr

08016f88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016f88:	4770      	bx	lr

08016f8a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016f8a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016f8e:	b088      	sub	sp, #32
 8016f90:	ac08      	add	r4, sp, #32
 8016f92:	4606      	mov	r6, r0
 8016f94:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8016f98:	4620      	mov	r0, r4
 8016f9a:	4688      	mov	r8, r1
 8016f9c:	4691      	mov	r9, r2
 8016f9e:	f7fd fc31 	bl	8014804 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016fa2:	6833      	ldr	r3, [r6, #0]
 8016fa4:	4605      	mov	r5, r0
 8016fa6:	4620      	mov	r0, r4
 8016fa8:	699f      	ldr	r7, [r3, #24]
 8016faa:	f7fd fb39 	bl	8014620 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016fae:	4682      	mov	sl, r0
 8016fb0:	4620      	mov	r0, r4
 8016fb2:	f7fd fb69 	bl	8014688 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016fb6:	9500      	str	r5, [sp, #0]
 8016fb8:	e9cd a001 	strd	sl, r0, [sp, #4]
 8016fbc:	464b      	mov	r3, r9
 8016fbe:	a806      	add	r0, sp, #24
 8016fc0:	4642      	mov	r2, r8
 8016fc2:	4631      	mov	r1, r6
 8016fc4:	47b8      	blx	r7
 8016fc6:	4628      	mov	r0, r5
 8016fc8:	b008      	add	sp, #32
 8016fca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08016fd0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016fd0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016fd4:	2300      	movs	r3, #0
 8016fd6:	9300      	str	r3, [sp, #0]
 8016fd8:	4b3d      	ldr	r3, [pc, #244]	@ (80170d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8016fda:	781b      	ldrb	r3, [r3, #0]
 8016fdc:	2b00      	cmp	r3, #0
 8016fde:	d137      	bne.n	8017050 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8016fe0:	4a3c      	ldr	r2, [pc, #240]	@ (80170d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016fe2:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016fe6:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016fea:	2b00      	cmp	r3, #0
 8016fec:	d132      	bne.n	8017054 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8016fee:	4b3a      	ldr	r3, [pc, #232]	@ (80170d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016ff0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016ff4:	6808      	ldr	r0, [r1, #0]
 8016ff6:	6849      	ldr	r1, [r1, #4]
 8016ff8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016ffc:	ac02      	add	r4, sp, #8
 8016ffe:	ab02      	add	r3, sp, #8
 8017000:	c303      	stmia	r3!, {r0, r1}
 8017002:	4669      	mov	r1, sp
 8017004:	4620      	mov	r0, r4
 8017006:	f7f9 fbd5 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801700a:	4668      	mov	r0, sp
 801700c:	f7f9 fbaa 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017010:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017014:	f8bd 2000 	ldrh.w	r2, [sp]
 8017018:	4d30      	ldr	r5, [pc, #192]	@ (80170dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801701a:	4413      	add	r3, r2
 801701c:	f8ad 3008 	strh.w	r3, [sp, #8]
 8017020:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017024:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017028:	6828      	ldr	r0, [r5, #0]
 801702a:	4413      	add	r3, r2
 801702c:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017030:	6803      	ldr	r3, [r0, #0]
 8017032:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017034:	4798      	blx	r3
 8017036:	f010 0f01 	tst.w	r0, #1
 801703a:	462f      	mov	r7, r5
 801703c:	d00c      	beq.n	8017058 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801703e:	6828      	ldr	r0, [r5, #0]
 8017040:	6803      	ldr	r3, [r0, #0]
 8017042:	e894 0006 	ldmia.w	r4, {r1, r2}
 8017046:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8017048:	4798      	blx	r3
 801704a:	b004      	add	sp, #16
 801704c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017050:	4a21      	ldr	r2, [pc, #132]	@ (80170d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8017052:	e7c6      	b.n	8016fe2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8017054:	4b1f      	ldr	r3, [pc, #124]	@ (80170d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8017056:	e7cb      	b.n	8016ff0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8017058:	6838      	ldr	r0, [r7, #0]
 801705a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801705e:	6803      	ldr	r3, [r0, #0]
 8017060:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8017064:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8017066:	4798      	blx	r3
 8017068:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801706c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017070:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8017074:	fb16 3602 	smlabb	r6, r6, r2, r3
 8017078:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801707c:	6838      	ldr	r0, [r7, #0]
 801707e:	6803      	ldr	r3, [r0, #0]
 8017080:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017082:	4798      	blx	r3
 8017084:	4a13      	ldr	r2, [pc, #76]	@ (80170d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8017086:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801708a:	8813      	ldrh	r3, [r2, #0]
 801708c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017090:	fb03 1404 	mla	r4, r3, r4, r1
 8017094:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017098:	435d      	muls	r5, r3
 801709a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801709e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80170a2:	4691      	mov	r9, r2
 80170a4:	6838      	ldr	r0, [r7, #0]
 80170a6:	42ac      	cmp	r4, r5
 80170a8:	6803      	ldr	r3, [r0, #0]
 80170aa:	d20e      	bcs.n	80170ca <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80170ac:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 80170b0:	4632      	mov	r2, r6
 80170b2:	4643      	mov	r3, r8
 80170b4:	4621      	mov	r1, r4
 80170b6:	47d0      	blx	sl
 80170b8:	f8b9 3000 	ldrh.w	r3, [r9]
 80170bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80170c0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80170c4:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80170c8:	e7ec      	b.n	80170a4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80170ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80170cc:	4798      	blx	r3
 80170ce:	e7bc      	b.n	801704a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80170d0:	200157b8 	.word	0x200157b8
 80170d4:	200157ba 	.word	0x200157ba
 80170d8:	200157bc 	.word	0x200157bc
 80170dc:	200157c0 	.word	0x200157c0

080170e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80170e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170e4:	b08b      	sub	sp, #44	@ 0x2c
 80170e6:	460f      	mov	r7, r1
 80170e8:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 80170ec:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 80170f0:	4616      	mov	r6, r2
 80170f2:	f1bb 0f00 	cmp.w	fp, #0
 80170f6:	d04a      	beq.n	801718e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80170f8:	6810      	ldr	r0, [r2, #0]
 80170fa:	6851      	ldr	r1, [r2, #4]
 80170fc:	ad06      	add	r5, sp, #24
 80170fe:	c503      	stmia	r5!, {r0, r1}
 8017100:	6818      	ldr	r0, [r3, #0]
 8017102:	6859      	ldr	r1, [r3, #4]
 8017104:	ad08      	add	r5, sp, #32
 8017106:	c503      	stmia	r5!, {r0, r1}
 8017108:	a806      	add	r0, sp, #24
 801710a:	f7f9 fb2b 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801710e:	4631      	mov	r1, r6
 8017110:	a808      	add	r0, sp, #32
 8017112:	f7f9 fb4f 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017116:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801711a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801711e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8017122:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8017126:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 801712a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801712e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8017132:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8017136:	4f5f      	ldr	r7, [pc, #380]	@ (80172b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017138:	440a      	add	r2, r1
 801713a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801713e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8017142:	6838      	ldr	r0, [r7, #0]
 8017144:	4413      	add	r3, r2
 8017146:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801714a:	6803      	ldr	r3, [r0, #0]
 801714c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801714e:	4798      	blx	r3
 8017150:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8017154:	46b9      	mov	r9, r7
 8017156:	d11d      	bne.n	8017194 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8017158:	b9fc      	cbnz	r4, 801719a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801715a:	f010 0f01 	tst.w	r0, #1
 801715e:	d01c      	beq.n	801719a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8017160:	f8d9 0000 	ldr.w	r0, [r9]
 8017164:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8017168:	6801      	ldr	r1, [r0, #0]
 801716a:	f8cd b00c 	str.w	fp, [sp, #12]
 801716e:	2700      	movs	r7, #0
 8017170:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8017174:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8017178:	9402      	str	r4, [sp, #8]
 801717a:	b2ad      	uxth	r5, r5
 801717c:	fa1f f488 	uxth.w	r4, r8
 8017180:	9501      	str	r5, [sp, #4]
 8017182:	9400      	str	r4, [sp, #0]
 8017184:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 8017186:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801718a:	4631      	mov	r1, r6
 801718c:	47a0      	blx	r4
 801718e:	b00b      	add	sp, #44	@ 0x2c
 8017190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017194:	f010 0f04 	tst.w	r0, #4
 8017198:	e7e1      	b.n	801715e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801719a:	f8d9 0000 	ldr.w	r0, [r9]
 801719e:	6803      	ldr	r3, [r0, #0]
 80171a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80171a2:	4798      	blx	r3
 80171a4:	4b44      	ldr	r3, [pc, #272]	@ (80172b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80171a6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 80171aa:	881a      	ldrh	r2, [r3, #0]
 80171ac:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80171b0:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80171b4:	fb02 1404 	mla	r4, r2, r4, r1
 80171b8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80171bc:	469a      	mov	sl, r3
 80171be:	fb05 f502 	mul.w	r5, r5, r2
 80171c2:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80171c6:	d059      	beq.n	801727c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80171c8:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 80171cc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80171d0:	fa1f f28b 	uxth.w	r2, fp
 80171d4:	fa1f f989 	uxth.w	r9, r9
 80171d8:	469e      	mov	lr, r3
 80171da:	42ac      	cmp	r4, r5
 80171dc:	d264      	bcs.n	80172a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80171de:	eb04 0a07 	add.w	sl, r4, r7
 80171e2:	4554      	cmp	r4, sl
 80171e4:	d23d      	bcs.n	8017262 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80171e6:	8821      	ldrh	r1, [r4, #0]
 80171e8:	f836 3b02 	ldrh.w	r3, [r6], #2
 80171ec:	1208      	asrs	r0, r1, #8
 80171ee:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80171f2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80171f6:	fb10 f009 	smulbb	r0, r0, r9
 80171fa:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80171fe:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017202:	00c9      	lsls	r1, r1, #3
 8017204:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017208:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801720c:	10d8      	asrs	r0, r3, #3
 801720e:	b2c9      	uxtb	r1, r1
 8017210:	00db      	lsls	r3, r3, #3
 8017212:	fa1f fc8c 	uxth.w	ip, ip
 8017216:	fb1b fb09 	smulbb	fp, fp, r9
 801721a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801721e:	b2db      	uxtb	r3, r3
 8017220:	fb11 f109 	smulbb	r1, r1, r9
 8017224:	fb00 b002 	mla	r0, r0, r2, fp
 8017228:	fb03 1302 	mla	r3, r3, r2, r1
 801722c:	f10c 0b01 	add.w	fp, ip, #1
 8017230:	b29b      	uxth	r3, r3
 8017232:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8017236:	b280      	uxth	r0, r0
 8017238:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 801723c:	f103 0c01 	add.w	ip, r3, #1
 8017240:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017244:	1c43      	adds	r3, r0, #1
 8017246:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801724a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801724e:	0940      	lsrs	r0, r0, #5
 8017250:	ea4c 0c0b 	orr.w	ip, ip, fp
 8017254:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8017258:	ea4c 0c00 	orr.w	ip, ip, r0
 801725c:	f824 cb02 	strh.w	ip, [r4], #2
 8017260:	e7bf      	b.n	80171e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8017262:	f8be 3000 	ldrh.w	r3, [lr]
 8017266:	eba3 0308 	sub.w	r3, r3, r8
 801726a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801726e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8017272:	eba3 0308 	sub.w	r3, r3, r8
 8017276:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801727a:	e7ae      	b.n	80171da <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801727c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017280:	f8d9 0000 	ldr.w	r0, [r9]
 8017284:	42ac      	cmp	r4, r5
 8017286:	6803      	ldr	r3, [r0, #0]
 8017288:	d20e      	bcs.n	80172a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801728a:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 801728e:	4632      	mov	r2, r6
 8017290:	463b      	mov	r3, r7
 8017292:	4621      	mov	r1, r4
 8017294:	47c0      	blx	r8
 8017296:	f8ba 3000 	ldrh.w	r3, [sl]
 801729a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801729e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80172a2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80172a6:	e7eb      	b.n	8017280 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80172a8:	4b02      	ldr	r3, [pc, #8]	@ (80172b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80172aa:	6818      	ldr	r0, [r3, #0]
 80172ac:	6803      	ldr	r3, [r0, #0]
 80172ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80172b0:	4798      	blx	r3
 80172b2:	e76c      	b.n	801718e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80172b4:	200157c0 	.word	0x200157c0
 80172b8:	200157ba 	.word	0x200157ba

080172bc <_ZN8touchgfx8LCD16bppD0Ev>:
 80172bc:	b510      	push	{r4, lr}
 80172be:	218c      	movs	r1, #140	@ 0x8c
 80172c0:	4604      	mov	r4, r0
 80172c2:	f00c fa4b 	bl	802375c <_ZdlPvj>
 80172c6:	4620      	mov	r0, r4
 80172c8:	bd10      	pop	{r4, pc}

080172ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 80172ca:	b510      	push	{r4, lr}
 80172cc:	2104      	movs	r1, #4
 80172ce:	4604      	mov	r4, r0
 80172d0:	f00c fa44 	bl	802375c <_ZdlPvj>
 80172d4:	4620      	mov	r0, r4
 80172d6:	bd10      	pop	{r4, pc}

080172d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 80172d8:	b510      	push	{r4, lr}
 80172da:	2104      	movs	r1, #4
 80172dc:	4604      	mov	r4, r0
 80172de:	f00c fa3d 	bl	802375c <_ZdlPvj>
 80172e2:	4620      	mov	r0, r4
 80172e4:	bd10      	pop	{r4, pc}

080172e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 80172e6:	b510      	push	{r4, lr}
 80172e8:	f640 0144 	movw	r1, #2116	@ 0x844
 80172ec:	4604      	mov	r4, r0
 80172ee:	f00c fa35 	bl	802375c <_ZdlPvj>
 80172f2:	4620      	mov	r0, r4
 80172f4:	bd10      	pop	{r4, pc}

080172f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 80172f6:	b510      	push	{r4, lr}
 80172f8:	f44f 7182 	mov.w	r1, #260	@ 0x104
 80172fc:	4604      	mov	r4, r0
 80172fe:	f00c fa2d 	bl	802375c <_ZdlPvj>
 8017302:	4620      	mov	r0, r4
 8017304:	bd10      	pop	{r4, pc}

08017306 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017306:	b510      	push	{r4, lr}
 8017308:	2104      	movs	r1, #4
 801730a:	4604      	mov	r4, r0
 801730c:	f00c fa26 	bl	802375c <_ZdlPvj>
 8017310:	4620      	mov	r0, r4
 8017312:	bd10      	pop	{r4, pc}

08017314 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017314:	b510      	push	{r4, lr}
 8017316:	2104      	movs	r1, #4
 8017318:	4604      	mov	r4, r0
 801731a:	f00c fa1f 	bl	802375c <_ZdlPvj>
 801731e:	4620      	mov	r0, r4
 8017320:	bd10      	pop	{r4, pc}

08017322 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017322:	b510      	push	{r4, lr}
 8017324:	2104      	movs	r1, #4
 8017326:	4604      	mov	r4, r0
 8017328:	f00c fa18 	bl	802375c <_ZdlPvj>
 801732c:	4620      	mov	r0, r4
 801732e:	bd10      	pop	{r4, pc}

08017330 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017330:	b510      	push	{r4, lr}
 8017332:	2104      	movs	r1, #4
 8017334:	4604      	mov	r4, r0
 8017336:	f00c fa11 	bl	802375c <_ZdlPvj>
 801733a:	4620      	mov	r0, r4
 801733c:	bd10      	pop	{r4, pc}

0801733e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801733e:	b510      	push	{r4, lr}
 8017340:	2104      	movs	r1, #4
 8017342:	4604      	mov	r4, r0
 8017344:	f00c fa0a 	bl	802375c <_ZdlPvj>
 8017348:	4620      	mov	r0, r4
 801734a:	bd10      	pop	{r4, pc}

0801734c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801734c:	b510      	push	{r4, lr}
 801734e:	2104      	movs	r1, #4
 8017350:	4604      	mov	r4, r0
 8017352:	f00c fa03 	bl	802375c <_ZdlPvj>
 8017356:	4620      	mov	r0, r4
 8017358:	bd10      	pop	{r4, pc}

0801735a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801735a:	b510      	push	{r4, lr}
 801735c:	2104      	movs	r1, #4
 801735e:	4604      	mov	r4, r0
 8017360:	f00c f9fc 	bl	802375c <_ZdlPvj>
 8017364:	4620      	mov	r0, r4
 8017366:	bd10      	pop	{r4, pc}

08017368 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017368:	b510      	push	{r4, lr}
 801736a:	2104      	movs	r1, #4
 801736c:	4604      	mov	r4, r0
 801736e:	f00c f9f5 	bl	802375c <_ZdlPvj>
 8017372:	4620      	mov	r0, r4
 8017374:	bd10      	pop	{r4, pc}

08017376 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017376:	b510      	push	{r4, lr}
 8017378:	2104      	movs	r1, #4
 801737a:	4604      	mov	r4, r0
 801737c:	f00c f9ee 	bl	802375c <_ZdlPvj>
 8017380:	4620      	mov	r0, r4
 8017382:	bd10      	pop	{r4, pc}

08017384 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017384:	b510      	push	{r4, lr}
 8017386:	2104      	movs	r1, #4
 8017388:	4604      	mov	r4, r0
 801738a:	f00c f9e7 	bl	802375c <_ZdlPvj>
 801738e:	4620      	mov	r0, r4
 8017390:	bd10      	pop	{r4, pc}

08017392 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017392:	b510      	push	{r4, lr}
 8017394:	2104      	movs	r1, #4
 8017396:	4604      	mov	r4, r0
 8017398:	f00c f9e0 	bl	802375c <_ZdlPvj>
 801739c:	4620      	mov	r0, r4
 801739e:	bd10      	pop	{r4, pc}

080173a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80173a0:	b510      	push	{r4, lr}
 80173a2:	2104      	movs	r1, #4
 80173a4:	4604      	mov	r4, r0
 80173a6:	f00c f9d9 	bl	802375c <_ZdlPvj>
 80173aa:	4620      	mov	r0, r4
 80173ac:	bd10      	pop	{r4, pc}

080173ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80173ae:	b510      	push	{r4, lr}
 80173b0:	2104      	movs	r1, #4
 80173b2:	4604      	mov	r4, r0
 80173b4:	f00c f9d2 	bl	802375c <_ZdlPvj>
 80173b8:	4620      	mov	r0, r4
 80173ba:	bd10      	pop	{r4, pc}

080173bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80173bc:	b510      	push	{r4, lr}
 80173be:	2104      	movs	r1, #4
 80173c0:	4604      	mov	r4, r0
 80173c2:	f00c f9cb 	bl	802375c <_ZdlPvj>
 80173c6:	4620      	mov	r0, r4
 80173c8:	bd10      	pop	{r4, pc}

080173ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80173ca:	b510      	push	{r4, lr}
 80173cc:	2104      	movs	r1, #4
 80173ce:	4604      	mov	r4, r0
 80173d0:	f00c f9c4 	bl	802375c <_ZdlPvj>
 80173d4:	4620      	mov	r0, r4
 80173d6:	bd10      	pop	{r4, pc}

080173d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80173d8:	b510      	push	{r4, lr}
 80173da:	2104      	movs	r1, #4
 80173dc:	4604      	mov	r4, r0
 80173de:	f00c f9bd 	bl	802375c <_ZdlPvj>
 80173e2:	4620      	mov	r0, r4
 80173e4:	bd10      	pop	{r4, pc}

080173e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80173e6:	b510      	push	{r4, lr}
 80173e8:	2104      	movs	r1, #4
 80173ea:	4604      	mov	r4, r0
 80173ec:	f00c f9b6 	bl	802375c <_ZdlPvj>
 80173f0:	4620      	mov	r0, r4
 80173f2:	bd10      	pop	{r4, pc}

080173f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80173f4:	b510      	push	{r4, lr}
 80173f6:	2104      	movs	r1, #4
 80173f8:	4604      	mov	r4, r0
 80173fa:	f00c f9af 	bl	802375c <_ZdlPvj>
 80173fe:	4620      	mov	r0, r4
 8017400:	bd10      	pop	{r4, pc}

08017402 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017402:	b510      	push	{r4, lr}
 8017404:	2104      	movs	r1, #4
 8017406:	4604      	mov	r4, r0
 8017408:	f00c f9a8 	bl	802375c <_ZdlPvj>
 801740c:	4620      	mov	r0, r4
 801740e:	bd10      	pop	{r4, pc}

08017410 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017410:	b510      	push	{r4, lr}
 8017412:	2104      	movs	r1, #4
 8017414:	4604      	mov	r4, r0
 8017416:	f00c f9a1 	bl	802375c <_ZdlPvj>
 801741a:	4620      	mov	r0, r4
 801741c:	bd10      	pop	{r4, pc}

0801741e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801741e:	b510      	push	{r4, lr}
 8017420:	2104      	movs	r1, #4
 8017422:	4604      	mov	r4, r0
 8017424:	f00c f99a 	bl	802375c <_ZdlPvj>
 8017428:	4620      	mov	r0, r4
 801742a:	bd10      	pop	{r4, pc}

0801742c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801742c:	b510      	push	{r4, lr}
 801742e:	2104      	movs	r1, #4
 8017430:	4604      	mov	r4, r0
 8017432:	f00c f993 	bl	802375c <_ZdlPvj>
 8017436:	4620      	mov	r0, r4
 8017438:	bd10      	pop	{r4, pc}

0801743a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801743a:	b510      	push	{r4, lr}
 801743c:	2104      	movs	r1, #4
 801743e:	4604      	mov	r4, r0
 8017440:	f00c f98c 	bl	802375c <_ZdlPvj>
 8017444:	4620      	mov	r0, r4
 8017446:	bd10      	pop	{r4, pc}

08017448 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017448:	b510      	push	{r4, lr}
 801744a:	2104      	movs	r1, #4
 801744c:	4604      	mov	r4, r0
 801744e:	f00c f985 	bl	802375c <_ZdlPvj>
 8017452:	4620      	mov	r0, r4
 8017454:	bd10      	pop	{r4, pc}

08017456 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017456:	b510      	push	{r4, lr}
 8017458:	2104      	movs	r1, #4
 801745a:	4604      	mov	r4, r0
 801745c:	f00c f97e 	bl	802375c <_ZdlPvj>
 8017460:	4620      	mov	r0, r4
 8017462:	bd10      	pop	{r4, pc}

08017464 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017464:	b510      	push	{r4, lr}
 8017466:	2104      	movs	r1, #4
 8017468:	4604      	mov	r4, r0
 801746a:	f00c f977 	bl	802375c <_ZdlPvj>
 801746e:	4620      	mov	r0, r4
 8017470:	bd10      	pop	{r4, pc}

08017472 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8017472:	b510      	push	{r4, lr}
 8017474:	2104      	movs	r1, #4
 8017476:	4604      	mov	r4, r0
 8017478:	f00c f970 	bl	802375c <_ZdlPvj>
 801747c:	4620      	mov	r0, r4
 801747e:	bd10      	pop	{r4, pc}

08017480 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8017480:	b510      	push	{r4, lr}
 8017482:	2104      	movs	r1, #4
 8017484:	4604      	mov	r4, r0
 8017486:	f00c f969 	bl	802375c <_ZdlPvj>
 801748a:	4620      	mov	r0, r4
 801748c:	bd10      	pop	{r4, pc}
	...

08017490 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 8017490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017494:	b08f      	sub	sp, #60	@ 0x3c
 8017496:	4616      	mov	r6, r2
 8017498:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 801749c:	9205      	str	r2, [sp, #20]
 801749e:	4682      	mov	sl, r0
 80174a0:	460d      	mov	r5, r1
 80174a2:	2a00      	cmp	r2, #0
 80174a4:	f000 82b7 	beq.w	8017a16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 80174a8:	6830      	ldr	r0, [r6, #0]
 80174aa:	6871      	ldr	r1, [r6, #4]
 80174ac:	ac0a      	add	r4, sp, #40	@ 0x28
 80174ae:	c403      	stmia	r4!, {r0, r1}
 80174b0:	6818      	ldr	r0, [r3, #0]
 80174b2:	6859      	ldr	r1, [r3, #4]
 80174b4:	ac0c      	add	r4, sp, #48	@ 0x30
 80174b6:	c403      	stmia	r4!, {r0, r1}
 80174b8:	a80a      	add	r0, sp, #40	@ 0x28
 80174ba:	f7f9 f953 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80174be:	4631      	mov	r1, r6
 80174c0:	a80c      	add	r0, sp, #48	@ 0x30
 80174c2:	f7f9 f977 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80174c6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80174ca:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80174ce:	bfd7      	itett	le
 80174d0:	b293      	uxthle	r3, r2
 80174d2:	2301      	movgt	r3, #1
 80174d4:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80174d8:	fb91 f3f3 	sdivle	r3, r1, r3
 80174dc:	9300      	str	r3, [sp, #0]
 80174de:	f105 0308 	add.w	r3, r5, #8
 80174e2:	9900      	ldr	r1, [sp, #0]
 80174e4:	9306      	str	r3, [sp, #24]
 80174e6:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80174ea:	440b      	add	r3, r1
 80174ec:	3b01      	subs	r3, #1
 80174ee:	fb93 f3f1 	sdiv	r3, r3, r1
 80174f2:	9906      	ldr	r1, [sp, #24]
 80174f4:	3b01      	subs	r3, #1
 80174f6:	b29b      	uxth	r3, r3
 80174f8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80174fc:	9307      	str	r3, [sp, #28]
 80174fe:	9900      	ldr	r1, [sp, #0]
 8017500:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8017504:	fb93 f0f1 	sdiv	r0, r3, r1
 8017508:	b284      	uxth	r4, r0
 801750a:	9402      	str	r4, [sp, #8]
 801750c:	9d02      	ldr	r5, [sp, #8]
 801750e:	9c00      	ldr	r4, [sp, #0]
 8017510:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8017514:	fb05 3414 	mls	r4, r5, r4, r3
 8017518:	fb14 f402 	smulbb	r4, r4, r2
 801751c:	440c      	add	r4, r1
 801751e:	b2a4      	uxth	r4, r4
 8017520:	2d00      	cmp	r5, #0
 8017522:	d06c      	beq.n	80175fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 8017524:	1e6a      	subs	r2, r5, #1
 8017526:	9806      	ldr	r0, [sp, #24]
 8017528:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 801752c:	9a07      	ldr	r2, [sp, #28]
 801752e:	ba36      	rev	r6, r6
 8017530:	4416      	add	r6, r2
 8017532:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8017536:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801753a:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 8017870 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801753e:	4411      	add	r1, r2
 8017540:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8017544:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8017548:	4413      	add	r3, r2
 801754a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801754e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8017552:	9301      	str	r3, [sp, #4]
 8017554:	4bc4      	ldr	r3, [pc, #784]	@ (8017868 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 8017556:	6818      	ldr	r0, [r3, #0]
 8017558:	6803      	ldr	r3, [r0, #0]
 801755a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801755c:	4798      	blx	r3
 801755e:	4bc3      	ldr	r3, [pc, #780]	@ (801786c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 8017560:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8017564:	881b      	ldrh	r3, [r3, #0]
 8017566:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 801756a:	fb03 2808 	mla	r8, r3, r8, r2
 801756e:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 8017572:	436b      	muls	r3, r5
 8017574:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 8017578:	9309      	str	r3, [sp, #36]	@ 0x24
 801757a:	2500      	movs	r5, #0
 801757c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8017580:	fb94 f3f3 	sdiv	r3, r4, r3
 8017584:	9304      	str	r3, [sp, #16]
 8017586:	f10a 0304 	add.w	r3, sl, #4
 801758a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801758e:	4629      	mov	r1, r5
 8017590:	4618      	mov	r0, r3
 8017592:	9308      	str	r3, [sp, #32]
 8017594:	f00d fa25 	bl	80249e2 <memset>
 8017598:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801759a:	4543      	cmp	r3, r8
 801759c:	f240 8236 	bls.w	8017a0c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 80175a0:	2203      	movs	r2, #3
 80175a2:	2107      	movs	r1, #7
 80175a4:	200b      	movs	r0, #11
 80175a6:	2c00      	cmp	r4, #0
 80175a8:	f000 8131 	beq.w	801780e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 80175ac:	7833      	ldrb	r3, [r6, #0]
 80175ae:	b2db      	uxtb	r3, r3
 80175b0:	2bfe      	cmp	r3, #254	@ 0xfe
 80175b2:	d126      	bne.n	8017602 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 80175b4:	f896 e001 	ldrb.w	lr, [r6, #1]
 80175b8:	f896 c002 	ldrb.w	ip, [r6, #2]
 80175bc:	f896 b003 	ldrb.w	fp, [r6, #3]
 80175c0:	fa5f fe8e 	uxtb.w	lr, lr
 80175c4:	fa5f fc8c 	uxtb.w	ip, ip
 80175c8:	f36e 0507 	bfi	r5, lr, #0, #8
 80175cc:	f36c 250f 	bfi	r5, ip, #8, #8
 80175d0:	fa5f fb8b 	uxtb.w	fp, fp
 80175d4:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80175d8:	f36b 4517 	bfi	r5, fp, #16, #8
 80175dc:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 80175e0:	0e2b      	lsrs	r3, r5, #24
 80175e2:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80175e6:	fb10 c303 	smlabb	r3, r0, r3, ip
 80175ea:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80175ee:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80175f2:	3c01      	subs	r4, #1
 80175f4:	1d37      	adds	r7, r6, #4
 80175f6:	b2a4      	uxth	r4, r4
 80175f8:	605d      	str	r5, [r3, #4]
 80175fa:	463e      	mov	r6, r7
 80175fc:	e7d3      	b.n	80175a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 80175fe:	9e07      	ldr	r6, [sp, #28]
 8017600:	e797      	b.n	8017532 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 8017602:	2bff      	cmp	r3, #255	@ 0xff
 8017604:	d127      	bne.n	8017656 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 8017606:	f896 c001 	ldrb.w	ip, [r6, #1]
 801760a:	78b3      	ldrb	r3, [r6, #2]
 801760c:	f896 e003 	ldrb.w	lr, [r6, #3]
 8017610:	f896 b004 	ldrb.w	fp, [r6, #4]
 8017614:	fa5f fc8c 	uxtb.w	ip, ip
 8017618:	b2db      	uxtb	r3, r3
 801761a:	f36c 0507 	bfi	r5, ip, #0, #8
 801761e:	f363 250f 	bfi	r5, r3, #8, #8
 8017622:	fa5f fe8e 	uxtb.w	lr, lr
 8017626:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801762a:	fb12 330e 	smlabb	r3, r2, lr, r3
 801762e:	fa5f fb8b 	uxtb.w	fp, fp
 8017632:	f36e 4517 	bfi	r5, lr, #16, #8
 8017636:	fb11 330c 	smlabb	r3, r1, ip, r3
 801763a:	f36b 651f 	bfi	r5, fp, #24, #8
 801763e:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 8017642:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 8017646:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 801764a:	3c01      	subs	r4, #1
 801764c:	1d77      	adds	r7, r6, #5
 801764e:	b2a4      	uxth	r4, r4
 8017650:	f8cb 5004 	str.w	r5, [fp, #4]
 8017654:	e7d1      	b.n	80175fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8017656:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 801765a:	f106 0701 	add.w	r7, r6, #1
 801765e:	d107      	bne.n	8017670 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 8017660:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8017664:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8017668:	685d      	ldr	r5, [r3, #4]
 801766a:	3c01      	subs	r4, #1
 801766c:	b2a4      	uxth	r4, r4
 801766e:	e7c4      	b.n	80175fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8017670:	f1bc 0f01 	cmp.w	ip, #1
 8017674:	d12c      	bne.n	80176d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 8017676:	f003 0e03 	and.w	lr, r3, #3
 801767a:	f1ae 0e02 	sub.w	lr, lr, #2
 801767e:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 8017682:	fa5f fe8e 	uxtb.w	lr, lr
 8017686:	f003 0c0c 	and.w	ip, r3, #12
 801768a:	f36e 0507 	bfi	r5, lr, #0, #8
 801768e:	f1ac 0c08 	sub.w	ip, ip, #8
 8017692:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8017696:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 801769a:	f36c 250f 	bfi	r5, ip, #8, #8
 801769e:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80176a2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80176a6:	3b02      	subs	r3, #2
 80176a8:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80176ac:	b2db      	uxtb	r3, r3
 80176ae:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80176b2:	f363 4517 	bfi	r5, r3, #16, #8
 80176b6:	fb12 cc03 	smlabb	ip, r2, r3, ip
 80176ba:	0e2e      	lsrs	r6, r5, #24
 80176bc:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80176c0:	fb10 c606 	smlabb	r6, r0, r6, ip
 80176c4:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 80176c8:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 80176cc:	6075      	str	r5, [r6, #4]
 80176ce:	e7cc      	b.n	801766a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 80176d0:	f1bc 0f02 	cmp.w	ip, #2
 80176d4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80176d8:	d12a      	bne.n	8017730 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 80176da:	1cb7      	adds	r7, r6, #2
 80176dc:	7876      	ldrb	r6, [r6, #1]
 80176de:	b2f6      	uxtb	r6, r6
 80176e0:	f006 0c0f 	and.w	ip, r6, #15
 80176e4:	3b20      	subs	r3, #32
 80176e6:	f1ac 0c08 	sub.w	ip, ip, #8
 80176ea:	449c      	add	ip, r3
 80176ec:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 80176f0:	fa5f fc8c 	uxtb.w	ip, ip
 80176f4:	f36c 0507 	bfi	r5, ip, #0, #8
 80176f8:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 80176fc:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8017700:	fa5f fe8e 	uxtb.w	lr, lr
 8017704:	1136      	asrs	r6, r6, #4
 8017706:	f36e 250f 	bfi	r5, lr, #8, #8
 801770a:	3e08      	subs	r6, #8
 801770c:	4433      	add	r3, r6
 801770e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8017712:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8017716:	b2db      	uxtb	r3, r3
 8017718:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 801771c:	f363 4517 	bfi	r5, r3, #16, #8
 8017720:	fb12 ee03 	smlabb	lr, r2, r3, lr
 8017724:	0e2e      	lsrs	r6, r5, #24
 8017726:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 801772a:	fb10 e606 	smlabb	r6, r0, r6, lr
 801772e:	e7c9      	b.n	80176c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8017730:	1c5e      	adds	r6, r3, #1
 8017732:	42a6      	cmp	r6, r4
 8017734:	dd4e      	ble.n	80177d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 8017736:	1b36      	subs	r6, r6, r4
 8017738:	2e00      	cmp	r6, #0
 801773a:	dc4e      	bgt.n	80177da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 801773c:	f8dd b004 	ldr.w	fp, [sp, #4]
 8017740:	2400      	movs	r4, #0
 8017742:	f1bb 0f00 	cmp.w	fp, #0
 8017746:	f340 8122 	ble.w	801798e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 801774a:	1c7b      	adds	r3, r7, #1
 801774c:	9303      	str	r3, [sp, #12]
 801774e:	783b      	ldrb	r3, [r7, #0]
 8017750:	b2db      	uxtb	r3, r3
 8017752:	2bfe      	cmp	r3, #254	@ 0xfe
 8017754:	d160      	bne.n	8017818 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 8017756:	7879      	ldrb	r1, [r7, #1]
 8017758:	78ba      	ldrb	r2, [r7, #2]
 801775a:	78f8      	ldrb	r0, [r7, #3]
 801775c:	b2c9      	uxtb	r1, r1
 801775e:	f361 0507 	bfi	r5, r1, #0, #8
 8017762:	b2d2      	uxtb	r2, r2
 8017764:	1d3b      	adds	r3, r7, #4
 8017766:	f362 250f 	bfi	r5, r2, #8, #8
 801776a:	b2c0      	uxtb	r0, r0
 801776c:	9303      	str	r3, [sp, #12]
 801776e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8017772:	2303      	movs	r3, #3
 8017774:	fb13 2200 	smlabb	r2, r3, r0, r2
 8017778:	f360 4517 	bfi	r5, r0, #16, #8
 801777c:	2307      	movs	r3, #7
 801777e:	fb13 2101 	smlabb	r1, r3, r1, r2
 8017782:	0e2e      	lsrs	r6, r5, #24
 8017784:	230b      	movs	r3, #11
 8017786:	fb13 1306 	smlabb	r3, r3, r6, r1
 801778a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801778e:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8017792:	605d      	str	r5, [r3, #4]
 8017794:	2601      	movs	r6, #1
 8017796:	4637      	mov	r7, r6
 8017798:	0e2b      	lsrs	r3, r5, #24
 801779a:	ebab 0b07 	sub.w	fp, fp, r7
 801779e:	eba6 0607 	sub.w	r6, r6, r7
 80177a2:	f040 80d3 	bne.w	801794c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 80177a6:	b18c      	cbz	r4, 80177cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 80177a8:	4648      	mov	r0, r9
 80177aa:	00a1      	lsls	r1, r4, #2
 80177ac:	f7ea ff42 	bl	8002634 <_ZN8touchgfx5paint9flushLineEPmi>
 80177b0:	9b05      	ldr	r3, [sp, #20]
 80177b2:	4622      	mov	r2, r4
 80177b4:	4649      	mov	r1, r9
 80177b6:	4640      	mov	r0, r8
 80177b8:	f7ea ff8a 	bl	80026d0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80177bc:	4b2c      	ldr	r3, [pc, #176]	@ (8017870 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 80177be:	4a2d      	ldr	r2, [pc, #180]	@ (8017874 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 80177c0:	4599      	cmp	r9, r3
 80177c2:	bf08      	it	eq
 80177c4:	4613      	moveq	r3, r2
 80177c6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80177ca:	4699      	mov	r9, r3
 80177cc:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 80177d0:	2400      	movs	r4, #0
 80177d2:	e0da      	b.n	801798a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 80177d4:	1ba6      	subs	r6, r4, r6
 80177d6:	b2b4      	uxth	r4, r6
 80177d8:	e70f      	b.n	80175fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80177da:	9b01      	ldr	r3, [sp, #4]
 80177dc:	9a01      	ldr	r2, [sp, #4]
 80177de:	42b3      	cmp	r3, r6
 80177e0:	bfa8      	it	ge
 80177e2:	4633      	movge	r3, r6
 80177e4:	0e2c      	lsrs	r4, r5, #24
 80177e6:	eba2 0b03 	sub.w	fp, r2, r3
 80177ea:	eba6 0603 	sub.w	r6, r6, r3
 80177ee:	d00b      	beq.n	8017808 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 80177f0:	f1a9 0104 	sub.w	r1, r9, #4
 80177f4:	461a      	mov	r2, r3
 80177f6:	2a00      	cmp	r2, #0
 80177f8:	dc02      	bgt.n	8017800 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 80177fa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80177fe:	e7a0      	b.n	8017742 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8017800:	f841 5f04 	str.w	r5, [r1, #4]!
 8017804:	3a01      	subs	r2, #1
 8017806:	e7f6      	b.n	80177f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8017808:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801780c:	e799      	b.n	8017742 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801780e:	4637      	mov	r7, r6
 8017810:	f8dd b004 	ldr.w	fp, [sp, #4]
 8017814:	4626      	mov	r6, r4
 8017816:	e794      	b.n	8017742 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8017818:	2bff      	cmp	r3, #255	@ 0xff
 801781a:	d11d      	bne.n	8017858 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 801781c:	7878      	ldrb	r0, [r7, #1]
 801781e:	78ba      	ldrb	r2, [r7, #2]
 8017820:	78fe      	ldrb	r6, [r7, #3]
 8017822:	1d7b      	adds	r3, r7, #5
 8017824:	b2c0      	uxtb	r0, r0
 8017826:	9303      	str	r3, [sp, #12]
 8017828:	793b      	ldrb	r3, [r7, #4]
 801782a:	f360 0507 	bfi	r5, r0, #0, #8
 801782e:	b2d2      	uxtb	r2, r2
 8017830:	b2d9      	uxtb	r1, r3
 8017832:	f362 250f 	bfi	r5, r2, #8, #8
 8017836:	b2f6      	uxtb	r6, r6
 8017838:	2303      	movs	r3, #3
 801783a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801783e:	fb13 2206 	smlabb	r2, r3, r6, r2
 8017842:	2307      	movs	r3, #7
 8017844:	fb13 2000 	smlabb	r0, r3, r0, r2
 8017848:	f366 4517 	bfi	r5, r6, #16, #8
 801784c:	230b      	movs	r3, #11
 801784e:	f361 651f 	bfi	r5, r1, #24, #8
 8017852:	fb13 0301 	smlabb	r3, r3, r1, r0
 8017856:	e798      	b.n	801778a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8017858:	119e      	asrs	r6, r3, #6
 801785a:	d10d      	bne.n	8017878 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 801785c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8017860:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8017864:	685d      	ldr	r5, [r3, #4]
 8017866:	e795      	b.n	8017794 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8017868:	200157c0 	.word	0x200157c0
 801786c:	200157ba 	.word	0x200157ba
 8017870:	20000180 	.word	0x20000180
 8017874:	20000280 	.word	0x20000280
 8017878:	2e01      	cmp	r6, #1
 801787a:	ea4f 6115 	mov.w	r1, r5, lsr #24
 801787e:	d12b      	bne.n	80178d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8017880:	f003 0003 	and.w	r0, r3, #3
 8017884:	3802      	subs	r0, #2
 8017886:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 801788a:	b2c0      	uxtb	r0, r0
 801788c:	f003 020c 	and.w	r2, r3, #12
 8017890:	f360 0507 	bfi	r5, r0, #0, #8
 8017894:	3a08      	subs	r2, #8
 8017896:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801789a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801789e:	f362 250f 	bfi	r5, r2, #8, #8
 80178a2:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80178a6:	1e9f      	subs	r7, r3, #2
 80178a8:	f3c5 4307 	ubfx	r3, r5, #16, #8
 80178ac:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80178b0:	b2db      	uxtb	r3, r3
 80178b2:	2703      	movs	r7, #3
 80178b4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80178b8:	fb17 2203 	smlabb	r2, r7, r3, r2
 80178bc:	2707      	movs	r7, #7
 80178be:	f363 4517 	bfi	r5, r3, #16, #8
 80178c2:	fb17 2000 	smlabb	r0, r7, r0, r2
 80178c6:	230b      	movs	r3, #11
 80178c8:	fb13 0101 	smlabb	r1, r3, r1, r0
 80178cc:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 80178d0:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 80178d4:	604d      	str	r5, [r1, #4]
 80178d6:	e75e      	b.n	8017796 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 80178d8:	2e02      	cmp	r6, #2
 80178da:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80178de:	d12f      	bne.n	8017940 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 80178e0:	7878      	ldrb	r0, [r7, #1]
 80178e2:	1cba      	adds	r2, r7, #2
 80178e4:	b2c0      	uxtb	r0, r0
 80178e6:	9203      	str	r2, [sp, #12]
 80178e8:	f000 020f 	and.w	r2, r0, #15
 80178ec:	3b20      	subs	r3, #32
 80178ee:	3a08      	subs	r2, #8
 80178f0:	441a      	add	r2, r3
 80178f2:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 80178f6:	b2d2      	uxtb	r2, r2
 80178f8:	f362 0507 	bfi	r5, r2, #0, #8
 80178fc:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8017900:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8017904:	b2f6      	uxtb	r6, r6
 8017906:	1100      	asrs	r0, r0, #4
 8017908:	f366 250f 	bfi	r5, r6, #8, #8
 801790c:	3808      	subs	r0, #8
 801790e:	4403      	add	r3, r0
 8017910:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8017914:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8017918:	b2db      	uxtb	r3, r3
 801791a:	2003      	movs	r0, #3
 801791c:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8017920:	fb10 6603 	smlabb	r6, r0, r3, r6
 8017924:	2007      	movs	r0, #7
 8017926:	f363 4517 	bfi	r5, r3, #16, #8
 801792a:	fb10 6202 	smlabb	r2, r0, r2, r6
 801792e:	230b      	movs	r3, #11
 8017930:	fb13 2101 	smlabb	r1, r3, r1, r2
 8017934:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8017938:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801793c:	604d      	str	r5, [r1, #4]
 801793e:	e729      	b.n	8017794 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8017940:	1c5e      	adds	r6, r3, #1
 8017942:	45b3      	cmp	fp, r6
 8017944:	465f      	mov	r7, fp
 8017946:	bfa8      	it	ge
 8017948:	4637      	movge	r7, r6
 801794a:	e725      	b.n	8017798 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 801794c:	193b      	adds	r3, r7, r4
 801794e:	2b40      	cmp	r3, #64	@ 0x40
 8017950:	dd13      	ble.n	801797a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 8017952:	4648      	mov	r0, r9
 8017954:	00a1      	lsls	r1, r4, #2
 8017956:	f7ea fe6d 	bl	8002634 <_ZN8touchgfx5paint9flushLineEPmi>
 801795a:	4649      	mov	r1, r9
 801795c:	9b05      	ldr	r3, [sp, #20]
 801795e:	4622      	mov	r2, r4
 8017960:	4640      	mov	r0, r8
 8017962:	f7ea feb5 	bl	80026d0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8017966:	4b2d      	ldr	r3, [pc, #180]	@ (8017a1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8017968:	4599      	cmp	r9, r3
 801796a:	bf0c      	ite	eq
 801796c:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8017a28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 8017970:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8017a1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 8017974:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8017978:	2400      	movs	r4, #0
 801797a:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 801797e:	463b      	mov	r3, r7
 8017980:	3b01      	subs	r3, #1
 8017982:	f842 5b04 	str.w	r5, [r2], #4
 8017986:	d1fb      	bne.n	8017980 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 8017988:	443c      	add	r4, r7
 801798a:	9f03      	ldr	r7, [sp, #12]
 801798c:	e6d9      	b.n	8017742 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801798e:	b15c      	cbz	r4, 80179a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 8017990:	00a1      	lsls	r1, r4, #2
 8017992:	4648      	mov	r0, r9
 8017994:	f7ea fe4e 	bl	8002634 <_ZN8touchgfx5paint9flushLineEPmi>
 8017998:	4640      	mov	r0, r8
 801799a:	9b05      	ldr	r3, [sp, #20]
 801799c:	4622      	mov	r2, r4
 801799e:	4649      	mov	r1, r9
 80179a0:	f7ea fe96 	bl	80026d0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80179a4:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80179a8:	4b1d      	ldr	r3, [pc, #116]	@ (8017a20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 80179aa:	9a01      	ldr	r2, [sp, #4]
 80179ac:	881b      	ldrh	r3, [r3, #0]
 80179ae:	1a9b      	subs	r3, r3, r2
 80179b0:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 80179b4:	9b04      	ldr	r3, [sp, #16]
 80179b6:	3301      	adds	r3, #1
 80179b8:	9304      	str	r3, [sp, #16]
 80179ba:	9a04      	ldr	r2, [sp, #16]
 80179bc:	9b00      	ldr	r3, [sp, #0]
 80179be:	4293      	cmp	r3, r2
 80179c0:	d11d      	bne.n	80179fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 80179c2:	9b02      	ldr	r3, [sp, #8]
 80179c4:	9a02      	ldr	r2, [sp, #8]
 80179c6:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 80179ca:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 80179ce:	9808      	ldr	r0, [sp, #32]
 80179d0:	f103 0b01 	add.w	fp, r3, #1
 80179d4:	9b06      	ldr	r3, [sp, #24]
 80179d6:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 80179da:	9b07      	ldr	r3, [sp, #28]
 80179dc:	2500      	movs	r5, #0
 80179de:	ba3f      	rev	r7, r7
 80179e0:	1ba4      	subs	r4, r4, r6
 80179e2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80179e6:	4629      	mov	r1, r5
 80179e8:	441f      	add	r7, r3
 80179ea:	b2a4      	uxth	r4, r4
 80179ec:	f00c fff9 	bl	80249e2 <memset>
 80179f0:	f8cd b008 	str.w	fp, [sp, #8]
 80179f4:	9504      	str	r5, [sp, #16]
 80179f6:	f7ea fe13 	bl	8002620 <_ZN8touchgfx5paint8tearDownEv>
 80179fa:	463e      	mov	r6, r7
 80179fc:	e5cc      	b.n	8017598 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 80179fe:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8017a02:	9b01      	ldr	r3, [sp, #4]
 8017a04:	1ae4      	subs	r4, r4, r3
 8017a06:	1ba4      	subs	r4, r4, r6
 8017a08:	b2a4      	uxth	r4, r4
 8017a0a:	e7f4      	b.n	80179f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8017a0c:	4b05      	ldr	r3, [pc, #20]	@ (8017a24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8017a0e:	6818      	ldr	r0, [r3, #0]
 8017a10:	6803      	ldr	r3, [r0, #0]
 8017a12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017a14:	4798      	blx	r3
 8017a16:	b00f      	add	sp, #60	@ 0x3c
 8017a18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a1c:	20000180 	.word	0x20000180
 8017a20:	200157ba 	.word	0x200157ba
 8017a24:	200157c0 	.word	0x200157c0
 8017a28:	20000280 	.word	0x20000280

08017a2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8017a2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a30:	b08f      	sub	sp, #60	@ 0x3c
 8017a32:	461c      	mov	r4, r3
 8017a34:	9205      	str	r2, [sp, #20]
 8017a36:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017a3a:	9100      	str	r1, [sp, #0]
 8017a3c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8017a3e:	9201      	str	r2, [sp, #4]
 8017a40:	2a00      	cmp	r2, #0
 8017a42:	f000 8115 	beq.w	8017c70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8017a46:	6820      	ldr	r0, [r4, #0]
 8017a48:	6861      	ldr	r1, [r4, #4]
 8017a4a:	aa0a      	add	r2, sp, #40	@ 0x28
 8017a4c:	c203      	stmia	r2!, {r0, r1}
 8017a4e:	6818      	ldr	r0, [r3, #0]
 8017a50:	6859      	ldr	r1, [r3, #4]
 8017a52:	aa0c      	add	r2, sp, #48	@ 0x30
 8017a54:	c203      	stmia	r2!, {r0, r1}
 8017a56:	a80a      	add	r0, sp, #40	@ 0x28
 8017a58:	f7f8 fe84 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a5c:	4621      	mov	r1, r4
 8017a5e:	a80c      	add	r0, sp, #48	@ 0x30
 8017a60:	f7f8 fea8 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017a64:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8017a68:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8017a6c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8017a70:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8017a74:	bfde      	ittt	le
 8017a76:	b2b3      	uxthle	r3, r6
 8017a78:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8017a7c:	fb92 f3f3 	sdivle	r3, r2, r3
 8017a80:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017a84:	bfc8      	it	gt
 8017a86:	2301      	movgt	r3, #1
 8017a88:	fb92 f1f3 	sdiv	r1, r2, r3
 8017a8c:	fa1f fc81 	uxth.w	ip, r1
 8017a90:	fb0c 2413 	mls	r4, ip, r3, r2
 8017a94:	fb14 f406 	smulbb	r4, r4, r6
 8017a98:	441d      	add	r5, r3
 8017a9a:	4404      	add	r4, r0
 8017a9c:	4661      	mov	r1, ip
 8017a9e:	3d01      	subs	r5, #1
 8017aa0:	b2a4      	uxth	r4, r4
 8017aa2:	fb95 f5f3 	sdiv	r5, r5, r3
 8017aa6:	b131      	cbz	r1, 8017ab6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8017aa8:	9b05      	ldr	r3, [sp, #20]
 8017aaa:	9900      	ldr	r1, [sp, #0]
 8017aac:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8017ab0:	ba1b      	rev	r3, r3
 8017ab2:	4419      	add	r1, r3
 8017ab4:	9100      	str	r1, [sp, #0]
 8017ab6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8017aba:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8017abe:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8017ac2:	4418      	add	r0, r3
 8017ac4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8017ac8:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8017acc:	441a      	add	r2, r3
 8017ace:	4b6a      	ldr	r3, [pc, #424]	@ (8017c78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8017ad0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8017ad4:	6818      	ldr	r0, [r3, #0]
 8017ad6:	6803      	ldr	r3, [r0, #0]
 8017ad8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017ada:	4798      	blx	r3
 8017adc:	4967      	ldr	r1, [pc, #412]	@ (8017c7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8017ade:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017ae2:	880b      	ldrh	r3, [r1, #0]
 8017ae4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8017ae8:	9109      	str	r1, [sp, #36]	@ 0x24
 8017aea:	fb03 c202 	mla	r2, r3, r2, ip
 8017aee:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017af2:	4373      	muls	r3, r6
 8017af4:	b2ad      	uxth	r5, r5
 8017af6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017afa:	00ad      	lsls	r5, r5, #2
 8017afc:	9306      	str	r3, [sp, #24]
 8017afe:	1d2b      	adds	r3, r5, #4
 8017b00:	9307      	str	r3, [sp, #28]
 8017b02:	9b01      	ldr	r3, [sp, #4]
 8017b04:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017b08:	9103      	str	r1, [sp, #12]
 8017b0a:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8017b0e:	2c00      	cmp	r4, #0
 8017b10:	bf0c      	ite	eq
 8017b12:	46c6      	moveq	lr, r8
 8017b14:	f04f 0e00 	movne.w	lr, #0
 8017b18:	2300      	movs	r3, #0
 8017b1a:	b292      	uxth	r2, r2
 8017b1c:	fa1f fe8e 	uxth.w	lr, lr
 8017b20:	9302      	str	r3, [sp, #8]
 8017b22:	9204      	str	r2, [sp, #16]
 8017b24:	9a06      	ldr	r2, [sp, #24]
 8017b26:	4282      	cmp	r2, r0
 8017b28:	f240 809d 	bls.w	8017c66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8017b2c:	b963      	cbnz	r3, 8017b48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8017b2e:	9b00      	ldr	r3, [sp, #0]
 8017b30:	781a      	ldrb	r2, [r3, #0]
 8017b32:	0993      	lsrs	r3, r2, #6
 8017b34:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8017b38:	9202      	str	r2, [sp, #8]
 8017b3a:	1e5a      	subs	r2, r3, #1
 8017b3c:	2a02      	cmp	r2, #2
 8017b3e:	d815      	bhi.n	8017b6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8017b40:	9a00      	ldr	r2, [sp, #0]
 8017b42:	3201      	adds	r2, #1
 8017b44:	9200      	str	r2, [sp, #0]
 8017b46:	b29b      	uxth	r3, r3
 8017b48:	b1b4      	cbz	r4, 8017b78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8017b4a:	429c      	cmp	r4, r3
 8017b4c:	bf95      	itete	ls
 8017b4e:	1b1c      	subls	r4, r3, r4
 8017b50:	1ae4      	subhi	r4, r4, r3
 8017b52:	fa1f fa84 	uxthls.w	sl, r4
 8017b56:	b2a4      	uxthhi	r4, r4
 8017b58:	bf87      	ittee	hi
 8017b5a:	4671      	movhi	r1, lr
 8017b5c:	f04f 0a00 	movhi.w	sl, #0
 8017b60:	fa1f f188 	uxthls.w	r1, r8
 8017b64:	2400      	movls	r4, #0
 8017b66:	4653      	mov	r3, sl
 8017b68:	468e      	mov	lr, r1
 8017b6a:	e7db      	b.n	8017b24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8017b6c:	9a00      	ldr	r2, [sp, #0]
 8017b6e:	9b00      	ldr	r3, [sp, #0]
 8017b70:	3202      	adds	r2, #2
 8017b72:	785b      	ldrb	r3, [r3, #1]
 8017b74:	9200      	str	r2, [sp, #0]
 8017b76:	e7e7      	b.n	8017b48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8017b78:	2202      	movs	r2, #2
 8017b7a:	4615      	mov	r5, r2
 8017b7c:	9907      	ldr	r1, [sp, #28]
 8017b7e:	9a02      	ldr	r2, [sp, #8]
 8017b80:	fb15 1202 	smlabb	r2, r5, r2, r1
 8017b84:	9905      	ldr	r1, [sp, #20]
 8017b86:	4573      	cmp	r3, lr
 8017b88:	f831 c002 	ldrh.w	ip, [r1, r2]
 8017b8c:	9a01      	ldr	r2, [sp, #4]
 8017b8e:	bf2b      	itete	cs
 8017b90:	eba3 0a0e 	subcs.w	sl, r3, lr
 8017b94:	ebae 0103 	subcc.w	r1, lr, r3
 8017b98:	46f1      	movcs	r9, lr
 8017b9a:	4699      	movcc	r9, r3
 8017b9c:	bf27      	ittee	cs
 8017b9e:	fa1f fa8a 	uxthcs.w	sl, sl
 8017ba2:	4621      	movcs	r1, r4
 8017ba4:	b289      	uxthcc	r1, r1
 8017ba6:	46a2      	movcc	sl, r4
 8017ba8:	2aff      	cmp	r2, #255	@ 0xff
 8017baa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017bae:	d105      	bne.n	8017bbc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8017bb0:	4481      	add	r9, r0
 8017bb2:	4581      	cmp	r9, r0
 8017bb4:	d045      	beq.n	8017c42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8017bb6:	f820 cb02 	strh.w	ip, [r0], #2
 8017bba:	e7fa      	b.n	8017bb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8017bbc:	9d03      	ldr	r5, [sp, #12]
 8017bbe:	ea4f 222c 	mov.w	r2, ip, asr #8
 8017bc2:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8017bc6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8017bca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017bce:	436a      	muls	r2, r5
 8017bd0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8017bd4:	fa5f fc8c 	uxtb.w	ip, ip
 8017bd8:	9208      	str	r2, [sp, #32]
 8017bda:	fb0b fb05 	mul.w	fp, fp, r5
 8017bde:	fb0c fc05 	mul.w	ip, ip, r5
 8017be2:	4481      	add	r9, r0
 8017be4:	4581      	cmp	r9, r0
 8017be6:	d02c      	beq.n	8017c42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8017be8:	8802      	ldrh	r2, [r0, #0]
 8017bea:	9d04      	ldr	r5, [sp, #16]
 8017bec:	9f04      	ldr	r7, [sp, #16]
 8017bee:	1216      	asrs	r6, r2, #8
 8017bf0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017bf4:	fb16 f605 	smulbb	r6, r6, r5
 8017bf8:	9d08      	ldr	r5, [sp, #32]
 8017bfa:	442e      	add	r6, r5
 8017bfc:	10d5      	asrs	r5, r2, #3
 8017bfe:	00d2      	lsls	r2, r2, #3
 8017c00:	b2d2      	uxtb	r2, r2
 8017c02:	fb12 f207 	smulbb	r2, r2, r7
 8017c06:	b2b6      	uxth	r6, r6
 8017c08:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017c0c:	4462      	add	r2, ip
 8017c0e:	fb15 f507 	smulbb	r5, r5, r7
 8017c12:	b292      	uxth	r2, r2
 8017c14:	1c77      	adds	r7, r6, #1
 8017c16:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8017c1a:	1c57      	adds	r7, r2, #1
 8017c1c:	445d      	add	r5, fp
 8017c1e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8017c22:	b2ad      	uxth	r5, r5
 8017c24:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017c28:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017c2c:	4316      	orrs	r6, r2
 8017c2e:	1c6a      	adds	r2, r5, #1
 8017c30:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017c34:	096d      	lsrs	r5, r5, #5
 8017c36:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017c3a:	432e      	orrs	r6, r5
 8017c3c:	f820 6b02 	strh.w	r6, [r0], #2
 8017c40:	e7d0      	b.n	8017be4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8017c42:	4573      	cmp	r3, lr
 8017c44:	d38f      	bcc.n	8017b66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8017c46:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8017c4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017c4c:	fa1f f188 	uxth.w	r1, r8
 8017c50:	1a64      	subs	r4, r4, r1
 8017c52:	881b      	ldrh	r3, [r3, #0]
 8017c54:	b2a4      	uxth	r4, r4
 8017c56:	2c00      	cmp	r4, #0
 8017c58:	eba3 0308 	sub.w	r3, r3, r8
 8017c5c:	bf18      	it	ne
 8017c5e:	2100      	movne	r1, #0
 8017c60:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017c64:	e77f      	b.n	8017b66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8017c66:	4b04      	ldr	r3, [pc, #16]	@ (8017c78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8017c68:	6818      	ldr	r0, [r3, #0]
 8017c6a:	6803      	ldr	r3, [r0, #0]
 8017c6c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017c6e:	4798      	blx	r3
 8017c70:	b00f      	add	sp, #60	@ 0x3c
 8017c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c76:	bf00      	nop
 8017c78:	200157c0 	.word	0x200157c0
 8017c7c:	200157ba 	.word	0x200157ba

08017c80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8017c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c84:	b09f      	sub	sp, #124	@ 0x7c
 8017c86:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8017c8a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8017c8e:	9209      	str	r2, [sp, #36]	@ 0x24
 8017c90:	461d      	mov	r5, r3
 8017c92:	4604      	mov	r4, r0
 8017c94:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017c96:	2a00      	cmp	r2, #0
 8017c98:	f000 81eb 	beq.w	8018072 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8017c9c:	6828      	ldr	r0, [r5, #0]
 8017c9e:	6869      	ldr	r1, [r5, #4]
 8017ca0:	aa1a      	add	r2, sp, #104	@ 0x68
 8017ca2:	c203      	stmia	r2!, {r0, r1}
 8017ca4:	6818      	ldr	r0, [r3, #0]
 8017ca6:	6859      	ldr	r1, [r3, #4]
 8017ca8:	aa1c      	add	r2, sp, #112	@ 0x70
 8017caa:	c203      	stmia	r2!, {r0, r1}
 8017cac:	a81a      	add	r0, sp, #104	@ 0x68
 8017cae:	f7f8 fd59 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017cb2:	4629      	mov	r1, r5
 8017cb4:	a81c      	add	r0, sp, #112	@ 0x70
 8017cb6:	f7f8 fd7d 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017cba:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8017cbe:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8017cc2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8017cc6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8017cca:	bfd7      	itett	le
 8017ccc:	b29a      	uxthle	r2, r3
 8017cce:	2201      	movgt	r2, #1
 8017cd0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017cd4:	fb91 f2f2 	sdivle	r2, r1, r2
 8017cd8:	9202      	str	r2, [sp, #8]
 8017cda:	9802      	ldr	r0, [sp, #8]
 8017cdc:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8017ce0:	fb92 f0f0 	sdiv	r0, r2, r0
 8017ce4:	b280      	uxth	r0, r0
 8017ce6:	9010      	str	r0, [sp, #64]	@ 0x40
 8017ce8:	9902      	ldr	r1, [sp, #8]
 8017cea:	9802      	ldr	r0, [sp, #8]
 8017cec:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8017cee:	4488      	add	r8, r1
 8017cf0:	fb05 2510 	mls	r5, r5, r0, r2
 8017cf4:	fb15 f503 	smulbb	r5, r5, r3
 8017cf8:	f108 38ff 	add.w	r8, r8, #4294967295
 8017cfc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8017d00:	fb98 f8f1 	sdiv	r8, r8, r1
 8017d04:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8017d08:	440d      	add	r5, r1
 8017d0a:	4419      	add	r1, r3
 8017d0c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8017d10:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8017d14:	441a      	add	r2, r3
 8017d16:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8017d1a:	9304      	str	r3, [sp, #16]
 8017d1c:	4b95      	ldr	r3, [pc, #596]	@ (8017f74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8017d1e:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8017d22:	6818      	ldr	r0, [r3, #0]
 8017d24:	6803      	ldr	r3, [r0, #0]
 8017d26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017d28:	4798      	blx	r3
 8017d2a:	4b93      	ldr	r3, [pc, #588]	@ (8017f78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8017d2c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8017d30:	881a      	ldrh	r2, [r3, #0]
 8017d32:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8017d36:	9318      	str	r3, [sp, #96]	@ 0x60
 8017d38:	fb02 7101 	mla	r1, r2, r1, r7
 8017d3c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017d40:	4356      	muls	r6, r2
 8017d42:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8017d46:	f108 0801 	add.w	r8, r8, #1
 8017d4a:	920a      	str	r2, [sp, #40]	@ 0x28
 8017d4c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017d4e:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8017d52:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017d54:	fa1f f888 	uxth.w	r8, r8
 8017d58:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8017d5c:	f108 0204 	add.w	r2, r8, #4
 8017d60:	9211      	str	r2, [sp, #68]	@ 0x44
 8017d62:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017d64:	4b85      	ldr	r3, [pc, #532]	@ (8017f7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8017d66:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8017d6a:	b2ad      	uxth	r5, r5
 8017d6c:	9215      	str	r2, [sp, #84]	@ 0x54
 8017d6e:	2d00      	cmp	r5, #0
 8017d70:	9a04      	ldr	r2, [sp, #16]
 8017d72:	f04f 0100 	mov.w	r1, #0
 8017d76:	bf18      	it	ne
 8017d78:	2200      	movne	r2, #0
 8017d7a:	1b1b      	subs	r3, r3, r4
 8017d7c:	b292      	uxth	r2, r2
 8017d7e:	910d      	str	r1, [sp, #52]	@ 0x34
 8017d80:	9319      	str	r3, [sp, #100]	@ 0x64
 8017d82:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8017d84:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017d86:	fa11 f383 	uxtah	r3, r1, r3
 8017d8a:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8017d8c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017d90:	3304      	adds	r3, #4
 8017d92:	9306      	str	r3, [sp, #24]
 8017d94:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017d96:	4283      	cmp	r3, r0
 8017d98:	f240 8166 	bls.w	8018068 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8017d9c:	9902      	ldr	r1, [sp, #8]
 8017d9e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8017da2:	fbb5 f3f3 	udiv	r3, r5, r3
 8017da6:	1acb      	subs	r3, r1, r3
 8017da8:	b29b      	uxth	r3, r3
 8017daa:	9316      	str	r3, [sp, #88]	@ 0x58
 8017dac:	9b06      	ldr	r3, [sp, #24]
 8017dae:	9e06      	ldr	r6, [sp, #24]
 8017db0:	7859      	ldrb	r1, [r3, #1]
 8017db2:	789b      	ldrb	r3, [r3, #2]
 8017db4:	7836      	ldrb	r6, [r6, #0]
 8017db6:	9612      	str	r6, [sp, #72]	@ 0x48
 8017db8:	021b      	lsls	r3, r3, #8
 8017dba:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8017dbe:	9906      	ldr	r1, [sp, #24]
 8017dc0:	78c9      	ldrb	r1, [r1, #3]
 8017dc2:	430b      	orrs	r3, r1
 8017dc4:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8017dc6:	3601      	adds	r6, #1
 8017dc8:	4419      	add	r1, r3
 8017dca:	9605      	str	r6, [sp, #20]
 8017dcc:	1c4e      	adds	r6, r1, #1
 8017dce:	9603      	str	r6, [sp, #12]
 8017dd0:	7849      	ldrb	r1, [r1, #1]
 8017dd2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8017dd4:	0209      	lsls	r1, r1, #8
 8017dd6:	5cf3      	ldrb	r3, [r6, r3]
 8017dd8:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8017ddc:	4319      	orrs	r1, r3
 8017dde:	b28b      	uxth	r3, r1
 8017de0:	930c      	str	r3, [sp, #48]	@ 0x30
 8017de2:	2300      	movs	r3, #0
 8017de4:	f04f 0a01 	mov.w	sl, #1
 8017de8:	9307      	str	r3, [sp, #28]
 8017dea:	469c      	mov	ip, r3
 8017dec:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8017df0:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8017df4:	46d3      	mov	fp, sl
 8017df6:	4657      	mov	r7, sl
 8017df8:	930e      	str	r3, [sp, #56]	@ 0x38
 8017dfa:	2d00      	cmp	r5, #0
 8017dfc:	d07e      	beq.n	8017efc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8017dfe:	42af      	cmp	r7, r5
 8017e00:	d26e      	bcs.n	8017ee0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8017e02:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017e04:	9201      	str	r2, [sp, #4]
 8017e06:	1bed      	subs	r5, r5, r7
 8017e08:	4283      	cmp	r3, r0
 8017e0a:	b2ad      	uxth	r5, r5
 8017e0c:	d802      	bhi.n	8017e14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8017e0e:	e073      	b.n	8017ef8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8017e10:	2b00      	cmp	r3, #0
 8017e12:	d15f      	bne.n	8017ed4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8017e14:	9b03      	ldr	r3, [sp, #12]
 8017e16:	785b      	ldrb	r3, [r3, #1]
 8017e18:	f1cb 0207 	rsb	r2, fp, #7
 8017e1c:	4093      	lsls	r3, r2
 8017e1e:	005b      	lsls	r3, r3, #1
 8017e20:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017e24:	9b03      	ldr	r3, [sp, #12]
 8017e26:	781b      	ldrb	r3, [r3, #0]
 8017e28:	fa43 f30b 	asr.w	r3, r3, fp
 8017e2c:	b2db      	uxtb	r3, r3
 8017e2e:	4313      	orrs	r3, r2
 8017e30:	f10b 0201 	add.w	r2, fp, #1
 8017e34:	fa5f fb82 	uxtb.w	fp, r2
 8017e38:	9a03      	ldr	r2, [sp, #12]
 8017e3a:	f1bb 0f08 	cmp.w	fp, #8
 8017e3e:	bf15      	itete	ne
 8017e40:	3201      	addne	r2, #1
 8017e42:	3202      	addeq	r2, #2
 8017e44:	9203      	strne	r2, [sp, #12]
 8017e46:	9203      	streq	r2, [sp, #12]
 8017e48:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017e4a:	b29f      	uxth	r7, r3
 8017e4c:	bf08      	it	eq
 8017e4e:	f04f 0b00 	moveq.w	fp, #0
 8017e52:	42ba      	cmp	r2, r7
 8017e54:	d309      	bcc.n	8017e6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8017e56:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8017e5a:	2301      	movs	r3, #1
 8017e5c:	9a05      	ldr	r2, [sp, #20]
 8017e5e:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8017e62:	d30e      	bcc.n	8017e82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8017e64:	469a      	mov	sl, r3
 8017e66:	2600      	movs	r6, #0
 8017e68:	e035      	b.n	8017ed6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8017e6a:	9b05      	ldr	r3, [sp, #20]
 8017e6c:	429f      	cmp	r7, r3
 8017e6e:	d318      	bcc.n	8017ea2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8017e70:	eb04 030a 	add.w	r3, r4, sl
 8017e74:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8017e78:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8017e7c:	f10a 0301 	add.w	r3, sl, #1
 8017e80:	b29b      	uxth	r3, r3
 8017e82:	9a05      	ldr	r2, [sp, #20]
 8017e84:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8017e88:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8017e8a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8017e8e:	7116      	strb	r6, [r2, #4]
 8017e90:	f10a 0601 	add.w	r6, sl, #1
 8017e94:	80d1      	strh	r1, [r2, #6]
 8017e96:	7156      	strb	r6, [r2, #5]
 8017e98:	9a05      	ldr	r2, [sp, #20]
 8017e9a:	3201      	adds	r2, #1
 8017e9c:	b292      	uxth	r2, r2
 8017e9e:	9205      	str	r2, [sp, #20]
 8017ea0:	e7e0      	b.n	8017e64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8017ea2:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8017ea6:	463a      	mov	r2, r7
 8017ea8:	795b      	ldrb	r3, [r3, #5]
 8017eaa:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8017eae:	4426      	add	r6, r4
 8017eb0:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8017eb2:	eb01 0c06 	add.w	ip, r1, r6
 8017eb6:	f1bc 0f00 	cmp.w	ip, #0
 8017eba:	dd07      	ble.n	8017ecc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8017ebc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8017ec0:	f892 c004 	ldrb.w	ip, [r2, #4]
 8017ec4:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8017ec8:	88d2      	ldrh	r2, [r2, #6]
 8017eca:	e7f1      	b.n	8017eb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8017ecc:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8017ed0:	b29b      	uxth	r3, r3
 8017ed2:	e7c3      	b.n	8017e5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8017ed4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8017ed6:	970c      	str	r7, [sp, #48]	@ 0x30
 8017ed8:	9a01      	ldr	r2, [sp, #4]
 8017eda:	46b4      	mov	ip, r6
 8017edc:	461f      	mov	r7, r3
 8017ede:	e78c      	b.n	8017dfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 8017ee0:	1b7b      	subs	r3, r7, r5
 8017ee2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017ee6:	9201      	str	r2, [sp, #4]
 8017ee8:	eb0c 0605 	add.w	r6, ip, r5
 8017eec:	b29b      	uxth	r3, r3
 8017eee:	b2b6      	uxth	r6, r6
 8017ef0:	2500      	movs	r5, #0
 8017ef2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017ef4:	4282      	cmp	r2, r0
 8017ef6:	d88b      	bhi.n	8017e10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8017ef8:	9a01      	ldr	r2, [sp, #4]
 8017efa:	e74b      	b.n	8017d94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8017efc:	4297      	cmp	r7, r2
 8017efe:	d332      	bcc.n	8017f66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8017f00:	1abb      	subs	r3, r7, r2
 8017f02:	b29b      	uxth	r3, r3
 8017f04:	9208      	str	r2, [sp, #32]
 8017f06:	9501      	str	r5, [sp, #4]
 8017f08:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8017f0a:	29ff      	cmp	r1, #255	@ 0xff
 8017f0c:	9908      	ldr	r1, [sp, #32]
 8017f0e:	eb0c 0601 	add.w	r6, ip, r1
 8017f12:	d135      	bne.n	8017f80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8017f14:	f1a0 0e02 	sub.w	lr, r0, #2
 8017f18:	b2b6      	uxth	r6, r6
 8017f1a:	45b4      	cmp	ip, r6
 8017f1c:	f040 808c 	bne.w	8018038 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8017f20:	9908      	ldr	r1, [sp, #32]
 8017f22:	4297      	cmp	r7, r2
 8017f24:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017f28:	d3e2      	bcc.n	8017ef0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8017f2a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8017f2c:	9904      	ldr	r1, [sp, #16]
 8017f2e:	8812      	ldrh	r2, [r2, #0]
 8017f30:	1a52      	subs	r2, r2, r1
 8017f32:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017f36:	9a07      	ldr	r2, [sp, #28]
 8017f38:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8017f3a:	3201      	adds	r2, #1
 8017f3c:	428a      	cmp	r2, r1
 8017f3e:	9207      	str	r2, [sp, #28]
 8017f40:	f040 8087 	bne.w	8018052 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8017f44:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8017f48:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8017f4c:	9b04      	ldr	r3, [sp, #16]
 8017f4e:	1bed      	subs	r5, r5, r7
 8017f50:	b2ad      	uxth	r5, r5
 8017f52:	2d00      	cmp	r5, #0
 8017f54:	bf08      	it	eq
 8017f56:	461a      	moveq	r2, r3
 8017f58:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017f5a:	bf18      	it	ne
 8017f5c:	2200      	movne	r2, #0
 8017f5e:	3301      	adds	r3, #1
 8017f60:	930d      	str	r3, [sp, #52]	@ 0x34
 8017f62:	b292      	uxth	r2, r2
 8017f64:	e70d      	b.n	8017d82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8017f66:	1bd1      	subs	r1, r2, r7
 8017f68:	b28b      	uxth	r3, r1
 8017f6a:	9301      	str	r3, [sp, #4]
 8017f6c:	9708      	str	r7, [sp, #32]
 8017f6e:	462b      	mov	r3, r5
 8017f70:	e7ca      	b.n	8017f08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8017f72:	bf00      	nop
 8017f74:	200157c0 	.word	0x200157c0
 8017f78:	200157ba 	.word	0x200157ba
 8017f7c:	fffff7fb 	.word	0xfffff7fb
 8017f80:	b2b6      	uxth	r6, r6
 8017f82:	900b      	str	r0, [sp, #44]	@ 0x2c
 8017f84:	45b4      	cmp	ip, r6
 8017f86:	d0cb      	beq.n	8017f20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8017f88:	f10c 0101 	add.w	r1, ip, #1
 8017f8c:	44a4      	add	ip, r4
 8017f8e:	9117      	str	r1, [sp, #92]	@ 0x5c
 8017f90:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8017f94:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8017f96:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8017f9a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8017f9c:	f8b1 c000 	ldrh.w	ip, [r1]
 8017fa0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8017fa2:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8017fa6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8017faa:	fb1e fe01 	smulbb	lr, lr, r1
 8017fae:	ea4f 2825 	mov.w	r8, r5, asr #8
 8017fb2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8017fb4:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8017fb8:	fb08 e801 	mla	r8, r8, r1, lr
 8017fbc:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8017fc0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8017fc2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8017fc6:	fb19 f901 	smulbb	r9, r9, r1
 8017fca:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8017fce:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8017fd0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8017fd4:	fb0e 9e01 	mla	lr, lr, r1, r9
 8017fd8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017fdc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8017fde:	fa5f fc8c 	uxtb.w	ip, ip
 8017fe2:	fb1c fc01 	smulbb	ip, ip, r1
 8017fe6:	00ed      	lsls	r5, r5, #3
 8017fe8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8017fea:	b2ed      	uxtb	r5, r5
 8017fec:	fb05 c501 	mla	r5, r5, r1, ip
 8017ff0:	fa1f f888 	uxth.w	r8, r8
 8017ff4:	fa1f fe8e 	uxth.w	lr, lr
 8017ff8:	b2ad      	uxth	r5, r5
 8017ffa:	f108 0c01 	add.w	ip, r8, #1
 8017ffe:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8018002:	f10e 0901 	add.w	r9, lr, #1
 8018006:	f105 0c01 	add.w	ip, r5, #1
 801800a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801800e:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8018012:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018016:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801801a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801801e:	ea4c 0808 	orr.w	r8, ip, r8
 8018022:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8018024:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8018028:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801802c:	ea48 0809 	orr.w	r8, r8, r9
 8018030:	f821 8b02 	strh.w	r8, [r1], #2
 8018034:	910b      	str	r1, [sp, #44]	@ 0x2c
 8018036:	e7a5      	b.n	8017f84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8018038:	f10c 0801 	add.w	r8, ip, #1
 801803c:	44a4      	add	ip, r4
 801803e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8018040:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8018044:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8018048:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801804c:	fa1f fc88 	uxth.w	ip, r8
 8018050:	e763      	b.n	8017f1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8018052:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018056:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801805a:	1aad      	subs	r5, r5, r2
 801805c:	b2ad      	uxth	r5, r5
 801805e:	2d00      	cmp	r5, #0
 8018060:	bf18      	it	ne
 8018062:	2200      	movne	r2, #0
 8018064:	9201      	str	r2, [sp, #4]
 8018066:	e744      	b.n	8017ef2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8018068:	4b03      	ldr	r3, [pc, #12]	@ (8018078 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801806a:	6818      	ldr	r0, [r3, #0]
 801806c:	6803      	ldr	r3, [r0, #0]
 801806e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018070:	4798      	blx	r3
 8018072:	b01f      	add	sp, #124	@ 0x7c
 8018074:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018078:	200157c0 	.word	0x200157c0

0801807c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 801807c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018080:	b093      	sub	sp, #76	@ 0x4c
 8018082:	4616      	mov	r6, r2
 8018084:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 8018088:	9003      	str	r0, [sp, #12]
 801808a:	460d      	mov	r5, r1
 801808c:	9201      	str	r2, [sp, #4]
 801808e:	2a00      	cmp	r2, #0
 8018090:	f000 8304 	beq.w	801869c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 8018094:	6830      	ldr	r0, [r6, #0]
 8018096:	6871      	ldr	r1, [r6, #4]
 8018098:	ac0e      	add	r4, sp, #56	@ 0x38
 801809a:	c403      	stmia	r4!, {r0, r1}
 801809c:	6818      	ldr	r0, [r3, #0]
 801809e:	6859      	ldr	r1, [r3, #4]
 80180a0:	ac10      	add	r4, sp, #64	@ 0x40
 80180a2:	c403      	stmia	r4!, {r0, r1}
 80180a4:	a80e      	add	r0, sp, #56	@ 0x38
 80180a6:	f7f8 fb5d 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80180aa:	4631      	mov	r1, r6
 80180ac:	a810      	add	r0, sp, #64	@ 0x40
 80180ae:	f7f8 fb81 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80180b2:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80180b6:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80180ba:	bfd7      	itett	le
 80180bc:	b293      	uxthle	r3, r2
 80180be:	2301      	movgt	r3, #1
 80180c0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80180c4:	fb91 f3f3 	sdivle	r3, r1, r3
 80180c8:	9304      	str	r3, [sp, #16]
 80180ca:	f105 0308 	add.w	r3, r5, #8
 80180ce:	9904      	ldr	r1, [sp, #16]
 80180d0:	9308      	str	r3, [sp, #32]
 80180d2:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 80180d6:	440b      	add	r3, r1
 80180d8:	3b01      	subs	r3, #1
 80180da:	fb93 f3f1 	sdiv	r3, r3, r1
 80180de:	9908      	ldr	r1, [sp, #32]
 80180e0:	3b01      	subs	r3, #1
 80180e2:	b29b      	uxth	r3, r3
 80180e4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80180e8:	9309      	str	r3, [sp, #36]	@ 0x24
 80180ea:	9904      	ldr	r1, [sp, #16]
 80180ec:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80180f0:	fb93 f0f1 	sdiv	r0, r3, r1
 80180f4:	b284      	uxth	r4, r0
 80180f6:	9405      	str	r4, [sp, #20]
 80180f8:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 80180fc:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8018100:	fb05 3914 	mls	r9, r5, r4, r3
 8018104:	fb19 f902 	smulbb	r9, r9, r2
 8018108:	4489      	add	r9, r1
 801810a:	fa1f f989 	uxth.w	r9, r9
 801810e:	2d00      	cmp	r5, #0
 8018110:	d05d      	beq.n	80181ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 8018112:	1e6a      	subs	r2, r5, #1
 8018114:	9808      	ldr	r0, [sp, #32]
 8018116:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801811a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801811c:	fa9a fa8a 	rev.w	sl, sl
 8018120:	4492      	add	sl, r2
 8018122:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8018126:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801812a:	4411      	add	r1, r2
 801812c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018130:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 8018134:	4413      	add	r3, r2
 8018136:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801813a:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801813e:	9302      	str	r3, [sp, #8]
 8018140:	4bcb      	ldr	r3, [pc, #812]	@ (8018470 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 8018142:	6818      	ldr	r0, [r3, #0]
 8018144:	6803      	ldr	r3, [r0, #0]
 8018146:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018148:	4798      	blx	r3
 801814a:	4bca      	ldr	r3, [pc, #808]	@ (8018474 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 801814c:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8018150:	881b      	ldrh	r3, [r3, #0]
 8018152:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 8018156:	fb03 2404 	mla	r4, r3, r4, r2
 801815a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801815e:	436b      	muls	r3, r5
 8018160:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018164:	930d      	str	r3, [sp, #52]	@ 0x34
 8018166:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801816a:	fb99 f3f3 	sdiv	r3, r9, r3
 801816e:	9306      	str	r3, [sp, #24]
 8018170:	9b01      	ldr	r3, [sp, #4]
 8018172:	43db      	mvns	r3, r3
 8018174:	b2db      	uxtb	r3, r3
 8018176:	930a      	str	r3, [sp, #40]	@ 0x28
 8018178:	9b03      	ldr	r3, [sp, #12]
 801817a:	3304      	adds	r3, #4
 801817c:	4618      	mov	r0, r3
 801817e:	2280      	movs	r2, #128	@ 0x80
 8018180:	2100      	movs	r1, #0
 8018182:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018184:	f00c fc2d 	bl	80249e2 <memset>
 8018188:	4bbb      	ldr	r3, [pc, #748]	@ (8018478 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 801818a:	9300      	str	r3, [sp, #0]
 801818c:	2300      	movs	r3, #0
 801818e:	f04f 0600 	mov.w	r6, #0
 8018192:	9307      	str	r3, [sp, #28]
 8018194:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018196:	42a3      	cmp	r3, r4
 8018198:	f240 827b 	bls.w	8018692 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 801819c:	f04f 0e07 	mov.w	lr, #7
 80181a0:	f1b9 0f00 	cmp.w	r9, #0
 80181a4:	f000 8159 	beq.w	801845a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 80181a8:	f89a 5000 	ldrb.w	r5, [sl]
 80181ac:	b2ed      	uxtb	r5, r5
 80181ae:	11aa      	asrs	r2, r5, #6
 80181b0:	f10a 0701 	add.w	r7, sl, #1
 80181b4:	d10e      	bne.n	80181d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 80181b6:	9b03      	ldr	r3, [sp, #12]
 80181b8:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 80181bc:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80181c0:	88ae      	ldrh	r6, [r5, #4]
 80181c2:	f109 39ff 	add.w	r9, r9, #4294967295
 80181c6:	fa1f f989 	uxth.w	r9, r9
 80181ca:	46ba      	mov	sl, r7
 80181cc:	e7e8      	b.n	80181a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 80181ce:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 80181d2:	e7a6      	b.n	8018122 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 80181d4:	2a01      	cmp	r2, #1
 80181d6:	d129      	bne.n	801822c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 80181d8:	f3c6 0304 	ubfx	r3, r6, #0, #5
 80181dc:	f005 0203 	and.w	r2, r5, #3
 80181e0:	3b02      	subs	r3, #2
 80181e2:	4413      	add	r3, r2
 80181e4:	f003 031f 	and.w	r3, r3, #31
 80181e8:	f3c5 0281 	ubfx	r2, r5, #2, #2
 80181ec:	f363 0604 	bfi	r6, r3, #0, #5
 80181f0:	3a02      	subs	r2, #2
 80181f2:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 80181f6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80181fa:	f3c5 1501 	ubfx	r5, r5, #4, #2
 80181fe:	f362 164a 	bfi	r6, r2, #5, #6
 8018202:	3d02      	subs	r5, #2
 8018204:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8018208:	f005 051f 	and.w	r5, r5, #31
 801820c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8018210:	2103      	movs	r1, #3
 8018212:	fb11 2205 	smlabb	r2, r1, r5, r2
 8018216:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801821a:	9a03      	ldr	r2, [sp, #12]
 801821c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8018220:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018224:	f365 26cf 	bfi	r6, r5, #11, #5
 8018228:	809e      	strh	r6, [r3, #4]
 801822a:	e7ca      	b.n	80181c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 801822c:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8018230:	2a02      	cmp	r2, #2
 8018232:	b2ab      	uxth	r3, r5
 8018234:	d136      	bne.n	80182a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 8018236:	2101      	movs	r1, #1
 8018238:	fb12 1205 	smlabb	r2, r2, r5, r1
 801823c:	4492      	add	sl, r2
 801823e:	463a      	mov	r2, r7
 8018240:	4552      	cmp	r2, sl
 8018242:	d01c      	beq.n	801827e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 8018244:	4694      	mov	ip, r2
 8018246:	f04f 0b03 	mov.w	fp, #3
 801824a:	f81c 1b02 	ldrb.w	r1, [ip], #2
 801824e:	7852      	ldrb	r2, [r2, #1]
 8018250:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8018254:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8018258:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 801825c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8018260:	f001 021f 	and.w	r2, r1, #31
 8018264:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8018268:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801826c:	9a03      	ldr	r2, [sp, #12]
 801826e:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8018272:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018276:	460e      	mov	r6, r1
 8018278:	8081      	strh	r1, [r0, #4]
 801827a:	4662      	mov	r2, ip
 801827c:	e7e0      	b.n	8018240 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 801827e:	4599      	cmp	r9, r3
 8018280:	d20b      	bcs.n	801829a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 8018282:	eba5 0509 	sub.w	r5, r5, r9
 8018286:	2d00      	cmp	r5, #0
 8018288:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 801828c:	f300 8209 	bgt.w	80186a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 8018290:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8018294:	2301      	movs	r3, #1
 8018296:	9307      	str	r3, [sp, #28]
 8018298:	e00c      	b.n	80182b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801829a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801829e:	eba9 0903 	sub.w	r9, r9, r3
 80182a2:	e790      	b.n	80181c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 80182a4:	4599      	cmp	r9, r3
 80182a6:	d2fa      	bcs.n	801829e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 80182a8:	eba5 0509 	sub.w	r5, r5, r9
 80182ac:	2d00      	cmp	r5, #0
 80182ae:	dc1d      	bgt.n	80182ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 80182b0:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80182b4:	f04f 0b00 	mov.w	fp, #0
 80182b8:	f1b8 0f00 	cmp.w	r8, #0
 80182bc:	f340 81a1 	ble.w	8018602 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 80182c0:	783b      	ldrb	r3, [r7, #0]
 80182c2:	b2db      	uxtb	r3, r3
 80182c4:	119a      	asrs	r2, r3, #6
 80182c6:	f107 0a01 	add.w	sl, r7, #1
 80182ca:	f040 80d7 	bne.w	801847c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 80182ce:	9a03      	ldr	r2, [sp, #12]
 80182d0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80182d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80182d8:	889e      	ldrh	r6, [r3, #4]
 80182da:	9b01      	ldr	r3, [sp, #4]
 80182dc:	2bff      	cmp	r3, #255	@ 0xff
 80182de:	f040 81e9 	bne.w	80186b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 80182e2:	8026      	strh	r6, [r4, #0]
 80182e4:	f108 38ff 	add.w	r8, r8, #4294967295
 80182e8:	3402      	adds	r4, #2
 80182ea:	e0be      	b.n	801846a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80182ec:	9b02      	ldr	r3, [sp, #8]
 80182ee:	9a02      	ldr	r2, [sp, #8]
 80182f0:	42ab      	cmp	r3, r5
 80182f2:	bfa8      	it	ge
 80182f4:	462b      	movge	r3, r5
 80182f6:	eba2 0803 	sub.w	r8, r2, r3
 80182fa:	9a07      	ldr	r2, [sp, #28]
 80182fc:	1aed      	subs	r5, r5, r3
 80182fe:	2a00      	cmp	r2, #0
 8018300:	d05a      	beq.n	80183b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 8018302:	9a01      	ldr	r2, [sp, #4]
 8018304:	2aff      	cmp	r2, #255	@ 0xff
 8018306:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801830a:	d049      	beq.n	80183a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801830c:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8018310:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8018314:	42a3      	cmp	r3, r4
 8018316:	f240 80a5 	bls.w	8018464 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801831a:	46bc      	mov	ip, r7
 801831c:	8820      	ldrh	r0, [r4, #0]
 801831e:	f81c 2b02 	ldrb.w	r2, [ip], #2
 8018322:	7879      	ldrb	r1, [r7, #1]
 8018324:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8018328:	b212      	sxth	r2, r2
 801832a:	b291      	uxth	r1, r2
 801832c:	ea4f 2a20 	mov.w	sl, r0, asr #8
 8018330:	120f      	asrs	r7, r1, #8
 8018332:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8018336:	fb1a fa09 	smulbb	sl, sl, r9
 801833a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801833e:	fb07 a70e 	mla	r7, r7, lr, sl
 8018342:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 8018346:	00c0      	lsls	r0, r0, #3
 8018348:	10c9      	asrs	r1, r1, #3
 801834a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801834e:	00d2      	lsls	r2, r2, #3
 8018350:	b2c0      	uxtb	r0, r0
 8018352:	fb1a fa09 	smulbb	sl, sl, r9
 8018356:	fb10 f009 	smulbb	r0, r0, r9
 801835a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801835e:	b2d2      	uxtb	r2, r2
 8018360:	b2bf      	uxth	r7, r7
 8018362:	fb01 a10e 	mla	r1, r1, lr, sl
 8018366:	fb02 020e 	mla	r2, r2, lr, r0
 801836a:	b289      	uxth	r1, r1
 801836c:	b292      	uxth	r2, r2
 801836e:	1c78      	adds	r0, r7, #1
 8018370:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8018374:	f101 0a01 	add.w	sl, r1, #1
 8018378:	1c50      	adds	r0, r2, #1
 801837a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801837e:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 8018382:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018386:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801838a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801838e:	4307      	orrs	r7, r0
 8018390:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018394:	ea47 070a 	orr.w	r7, r7, sl
 8018398:	f824 7b02 	strh.w	r7, [r4], #2
 801839c:	4667      	mov	r7, ip
 801839e:	e7b9      	b.n	8018314 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 80183a0:	42a3      	cmp	r3, r4
 80183a2:	d95f      	bls.n	8018464 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80183a4:	463a      	mov	r2, r7
 80183a6:	f812 1b02 	ldrb.w	r1, [r2], #2
 80183aa:	7878      	ldrb	r0, [r7, #1]
 80183ac:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80183b0:	f824 1b02 	strh.w	r1, [r4], #2
 80183b4:	4617      	mov	r7, r2
 80183b6:	e7f3      	b.n	80183a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80183b8:	9901      	ldr	r1, [sp, #4]
 80183ba:	29ff      	cmp	r1, #255	@ 0xff
 80183bc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80183c0:	b2b2      	uxth	r2, r6
 80183c2:	d044      	beq.n	801844e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80183c4:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80183c8:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 80183cc:	ea4f 2922 	mov.w	r9, r2, asr #8
 80183d0:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80183d4:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 80183d8:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80183dc:	4608      	mov	r0, r1
 80183de:	fb09 f901 	mul.w	r9, r9, r1
 80183e2:	fb0e fe01 	mul.w	lr, lr, r1
 80183e6:	00d1      	lsls	r1, r2, #3
 80183e8:	b2c9      	uxtb	r1, r1
 80183ea:	4341      	muls	r1, r0
 80183ec:	429c      	cmp	r4, r3
 80183ee:	f4bf af61 	bcs.w	80182b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80183f2:	8822      	ldrh	r2, [r4, #0]
 80183f4:	1210      	asrs	r0, r2, #8
 80183f6:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80183fa:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80183fe:	00d2      	lsls	r2, r2, #3
 8018400:	fb00 900a 	mla	r0, r0, sl, r9
 8018404:	b2d2      	uxtb	r2, r2
 8018406:	b280      	uxth	r0, r0
 8018408:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801840c:	fb02 120a 	mla	r2, r2, sl, r1
 8018410:	b292      	uxth	r2, r2
 8018412:	f100 0b01 	add.w	fp, r0, #1
 8018416:	fb0c ec0a 	mla	ip, ip, sl, lr
 801841a:	fa1f fc8c 	uxth.w	ip, ip
 801841e:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8018422:	1c50      	adds	r0, r2, #1
 8018424:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8018428:	f10c 0201 	add.w	r2, ip, #1
 801842c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018430:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8018434:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8018438:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801843c:	ea40 0b0b 	orr.w	fp, r0, fp
 8018440:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8018444:	ea4b 0b0c 	orr.w	fp, fp, ip
 8018448:	f824 bb02 	strh.w	fp, [r4], #2
 801844c:	e7ce      	b.n	80183ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 801844e:	429c      	cmp	r4, r3
 8018450:	f4bf af30 	bcs.w	80182b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8018454:	f824 2b02 	strh.w	r2, [r4], #2
 8018458:	e7f9      	b.n	801844e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801845a:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801845e:	4657      	mov	r7, sl
 8018460:	464d      	mov	r5, r9
 8018462:	e727      	b.n	80182b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8018464:	2300      	movs	r3, #0
 8018466:	e716      	b.n	8018296 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 8018468:	44bb      	add	fp, r7
 801846a:	4657      	mov	r7, sl
 801846c:	e724      	b.n	80182b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 801846e:	bf00      	nop
 8018470:	200157c0 	.word	0x200157c0
 8018474:	200157ba 	.word	0x200157ba
 8018478:	20000180 	.word	0x20000180
 801847c:	2a01      	cmp	r2, #1
 801847e:	d12a      	bne.n	80184d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 8018480:	f3c6 0104 	ubfx	r1, r6, #0, #5
 8018484:	f003 0203 	and.w	r2, r3, #3
 8018488:	3902      	subs	r1, #2
 801848a:	4411      	add	r1, r2
 801848c:	f001 011f 	and.w	r1, r1, #31
 8018490:	f3c3 0081 	ubfx	r0, r3, #2, #2
 8018494:	f361 0604 	bfi	r6, r1, #0, #5
 8018498:	3802      	subs	r0, #2
 801849a:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 801849e:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80184a2:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80184a6:	f360 164a 	bfi	r6, r0, #5, #6
 80184aa:	3b02      	subs	r3, #2
 80184ac:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 80184b0:	f002 031f 	and.w	r3, r2, #31
 80184b4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80184b8:	2203      	movs	r2, #3
 80184ba:	f363 26cf 	bfi	r6, r3, #11, #5
 80184be:	fb12 0303 	smlabb	r3, r2, r3, r0
 80184c2:	2207      	movs	r2, #7
 80184c4:	fb12 3301 	smlabb	r3, r2, r1, r3
 80184c8:	9a03      	ldr	r2, [sp, #12]
 80184ca:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80184ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80184d2:	809e      	strh	r6, [r3, #4]
 80184d4:	e701      	b.n	80182da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 80184d6:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 80184da:	45a8      	cmp	r8, r5
 80184dc:	4647      	mov	r7, r8
 80184de:	bfa8      	it	ge
 80184e0:	462f      	movge	r7, r5
 80184e2:	2a02      	cmp	r2, #2
 80184e4:	d154      	bne.n	8018590 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 80184e6:	9b01      	ldr	r3, [sp, #4]
 80184e8:	2bff      	cmp	r3, #255	@ 0xff
 80184ea:	d01a      	beq.n	8018522 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 80184ec:	eb0b 0307 	add.w	r3, fp, r7
 80184f0:	2b40      	cmp	r3, #64	@ 0x40
 80184f2:	dd16      	ble.n	8018522 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 80184f4:	ea4f 094b 	mov.w	r9, fp, lsl #1
 80184f8:	4649      	mov	r1, r9
 80184fa:	9800      	ldr	r0, [sp, #0]
 80184fc:	f7ea f89a 	bl	8002634 <_ZN8touchgfx5paint9flushLineEPmi>
 8018500:	465a      	mov	r2, fp
 8018502:	9b01      	ldr	r3, [sp, #4]
 8018504:	9900      	ldr	r1, [sp, #0]
 8018506:	4620      	mov	r0, r4
 8018508:	f7ea f8be 	bl	8002688 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801850c:	9b00      	ldr	r3, [sp, #0]
 801850e:	461a      	mov	r2, r3
 8018510:	4b6c      	ldr	r3, [pc, #432]	@ (80186c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8018512:	429a      	cmp	r2, r3
 8018514:	bf0c      	ite	eq
 8018516:	4b6c      	ldreq	r3, [pc, #432]	@ (80186c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8018518:	4b6a      	ldrne	r3, [pc, #424]	@ (80186c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801851a:	9300      	str	r3, [sp, #0]
 801851c:	444c      	add	r4, r9
 801851e:	f04f 0b00 	mov.w	fp, #0
 8018522:	4652      	mov	r2, sl
 8018524:	2100      	movs	r1, #0
 8018526:	42a9      	cmp	r1, r5
 8018528:	da2c      	bge.n	8018584 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 801852a:	4694      	mov	ip, r2
 801852c:	f04f 0903 	mov.w	r9, #3
 8018530:	f81c 3b02 	ldrb.w	r3, [ip], #2
 8018534:	7852      	ldrb	r2, [r2, #1]
 8018536:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801853a:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801853e:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 8018542:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8018546:	f003 021f 	and.w	r2, r3, #31
 801854a:	fb19 000e 	smlabb	r0, r9, lr, r0
 801854e:	f04f 0e07 	mov.w	lr, #7
 8018552:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8018556:	9a03      	ldr	r2, [sp, #12]
 8018558:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801855c:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018560:	42b9      	cmp	r1, r7
 8018562:	461e      	mov	r6, r3
 8018564:	8083      	strh	r3, [r0, #4]
 8018566:	da0a      	bge.n	801857e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 8018568:	9a01      	ldr	r2, [sp, #4]
 801856a:	2aff      	cmp	r2, #255	@ 0xff
 801856c:	bf15      	itete	ne
 801856e:	9a00      	ldrne	r2, [sp, #0]
 8018570:	8023      	strheq	r3, [r4, #0]
 8018572:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 8018576:	3402      	addeq	r4, #2
 8018578:	bf18      	it	ne
 801857a:	f10b 0b01 	addne.w	fp, fp, #1
 801857e:	3101      	adds	r1, #1
 8018580:	4662      	mov	r2, ip
 8018582:	e7d0      	b.n	8018526 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 8018584:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8018588:	eba8 0807 	sub.w	r8, r8, r7
 801858c:	1bed      	subs	r5, r5, r7
 801858e:	e76c      	b.n	801846a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8018590:	9b01      	ldr	r3, [sp, #4]
 8018592:	2bff      	cmp	r3, #255	@ 0xff
 8018594:	eba8 0807 	sub.w	r8, r8, r7
 8018598:	eba5 0507 	sub.w	r5, r5, r7
 801859c:	fa1f f986 	uxth.w	r9, r6
 80185a0:	d027      	beq.n	80185f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 80185a2:	eb0b 0307 	add.w	r3, fp, r7
 80185a6:	2b40      	cmp	r3, #64	@ 0x40
 80185a8:	dd18      	ble.n	80185dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 80185aa:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80185ae:	4619      	mov	r1, r3
 80185b0:	9800      	ldr	r0, [sp, #0]
 80185b2:	930c      	str	r3, [sp, #48]	@ 0x30
 80185b4:	f7ea f83e 	bl	8002634 <_ZN8touchgfx5paint9flushLineEPmi>
 80185b8:	465a      	mov	r2, fp
 80185ba:	9b01      	ldr	r3, [sp, #4]
 80185bc:	9900      	ldr	r1, [sp, #0]
 80185be:	4620      	mov	r0, r4
 80185c0:	f7ea f862 	bl	8002688 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80185c4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80185c6:	441c      	add	r4, r3
 80185c8:	9b00      	ldr	r3, [sp, #0]
 80185ca:	461a      	mov	r2, r3
 80185cc:	4b3d      	ldr	r3, [pc, #244]	@ (80186c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80185ce:	429a      	cmp	r2, r3
 80185d0:	bf0c      	ite	eq
 80185d2:	4b3d      	ldreq	r3, [pc, #244]	@ (80186c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 80185d4:	4b3b      	ldrne	r3, [pc, #236]	@ (80186c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80185d6:	9300      	str	r3, [sp, #0]
 80185d8:	f04f 0b00 	mov.w	fp, #0
 80185dc:	9b00      	ldr	r3, [sp, #0]
 80185de:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 80185e2:	463b      	mov	r3, r7
 80185e4:	2b00      	cmp	r3, #0
 80185e6:	f43f af3f 	beq.w	8018468 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 80185ea:	f822 9b02 	strh.w	r9, [r2], #2
 80185ee:	3b01      	subs	r3, #1
 80185f0:	e7f8      	b.n	80185e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 80185f2:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 80185f6:	42a7      	cmp	r7, r4
 80185f8:	f67f af37 	bls.w	801846a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80185fc:	f824 9b02 	strh.w	r9, [r4], #2
 8018600:	e7f9      	b.n	80185f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 8018602:	f1bb 0f00 	cmp.w	fp, #0
 8018606:	d00c      	beq.n	8018622 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8018608:	ea4f 084b 	mov.w	r8, fp, lsl #1
 801860c:	4641      	mov	r1, r8
 801860e:	9800      	ldr	r0, [sp, #0]
 8018610:	f7ea f810 	bl	8002634 <_ZN8touchgfx5paint9flushLineEPmi>
 8018614:	4620      	mov	r0, r4
 8018616:	9b01      	ldr	r3, [sp, #4]
 8018618:	9900      	ldr	r1, [sp, #0]
 801861a:	465a      	mov	r2, fp
 801861c:	f7ea f834 	bl	8002688 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8018620:	4444      	add	r4, r8
 8018622:	4b2a      	ldr	r3, [pc, #168]	@ (80186cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 8018624:	9a02      	ldr	r2, [sp, #8]
 8018626:	881b      	ldrh	r3, [r3, #0]
 8018628:	1a9b      	subs	r3, r3, r2
 801862a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801862e:	9b06      	ldr	r3, [sp, #24]
 8018630:	3301      	adds	r3, #1
 8018632:	9306      	str	r3, [sp, #24]
 8018634:	9a06      	ldr	r2, [sp, #24]
 8018636:	9b04      	ldr	r3, [sp, #16]
 8018638:	4293      	cmp	r3, r2
 801863a:	d120      	bne.n	801867e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 801863c:	9b05      	ldr	r3, [sp, #20]
 801863e:	9a05      	ldr	r2, [sp, #20]
 8018640:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 8018644:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8018648:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801864a:	f103 0801 	add.w	r8, r3, #1
 801864e:	9b08      	ldr	r3, [sp, #32]
 8018650:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8018654:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018656:	ba3f      	rev	r7, r7
 8018658:	2280      	movs	r2, #128	@ 0x80
 801865a:	2100      	movs	r1, #0
 801865c:	441f      	add	r7, r3
 801865e:	eba9 0905 	sub.w	r9, r9, r5
 8018662:	f00c f9be 	bl	80249e2 <memset>
 8018666:	2300      	movs	r3, #0
 8018668:	fa1f f989 	uxth.w	r9, r9
 801866c:	f04f 0600 	mov.w	r6, #0
 8018670:	f8cd 8014 	str.w	r8, [sp, #20]
 8018674:	9306      	str	r3, [sp, #24]
 8018676:	f7e9 ffd3 	bl	8002620 <_ZN8touchgfx5paint8tearDownEv>
 801867a:	46ba      	mov	sl, r7
 801867c:	e58a      	b.n	8018194 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 801867e:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 8018682:	9b02      	ldr	r3, [sp, #8]
 8018684:	eba9 0903 	sub.w	r9, r9, r3
 8018688:	eba9 0505 	sub.w	r5, r9, r5
 801868c:	fa1f f985 	uxth.w	r9, r5
 8018690:	e7f1      	b.n	8018676 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 8018692:	4b0f      	ldr	r3, [pc, #60]	@ (80186d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 8018694:	6818      	ldr	r0, [r3, #0]
 8018696:	6803      	ldr	r3, [r0, #0]
 8018698:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801869a:	4798      	blx	r3
 801869c:	b013      	add	sp, #76	@ 0x4c
 801869e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80186a2:	9b02      	ldr	r3, [sp, #8]
 80186a4:	9a02      	ldr	r2, [sp, #8]
 80186a6:	42ab      	cmp	r3, r5
 80186a8:	bfa8      	it	ge
 80186aa:	462b      	movge	r3, r5
 80186ac:	eba2 0803 	sub.w	r8, r2, r3
 80186b0:	1aed      	subs	r5, r5, r3
 80186b2:	e626      	b.n	8018302 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 80186b4:	f108 38ff 	add.w	r8, r8, #4294967295
 80186b8:	fa1f f986 	uxth.w	r9, r6
 80186bc:	2500      	movs	r5, #0
 80186be:	2701      	movs	r7, #1
 80186c0:	e76f      	b.n	80185a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 80186c2:	bf00      	nop
 80186c4:	20000180 	.word	0x20000180
 80186c8:	20000280 	.word	0x20000280
 80186cc:	200157ba 	.word	0x200157ba
 80186d0:	200157c0 	.word	0x200157c0

080186d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80186d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186d8:	b08f      	sub	sp, #60	@ 0x3c
 80186da:	461c      	mov	r4, r3
 80186dc:	9203      	str	r2, [sp, #12]
 80186de:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80186e2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80186e4:	9202      	str	r2, [sp, #8]
 80186e6:	460f      	mov	r7, r1
 80186e8:	2a00      	cmp	r2, #0
 80186ea:	f000 8128 	beq.w	801893e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 80186ee:	6820      	ldr	r0, [r4, #0]
 80186f0:	6861      	ldr	r1, [r4, #4]
 80186f2:	aa0a      	add	r2, sp, #40	@ 0x28
 80186f4:	c203      	stmia	r2!, {r0, r1}
 80186f6:	6818      	ldr	r0, [r3, #0]
 80186f8:	6859      	ldr	r1, [r3, #4]
 80186fa:	aa0c      	add	r2, sp, #48	@ 0x30
 80186fc:	c203      	stmia	r2!, {r0, r1}
 80186fe:	a80a      	add	r0, sp, #40	@ 0x28
 8018700:	f7f8 f830 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018704:	4621      	mov	r1, r4
 8018706:	a80c      	add	r0, sp, #48	@ 0x30
 8018708:	f7f8 f854 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801870c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8018710:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8018714:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8018718:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801871c:	bfde      	ittt	le
 801871e:	b2b3      	uxthle	r3, r6
 8018720:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8018724:	fb92 f3f3 	sdivle	r3, r2, r3
 8018728:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801872c:	bfc8      	it	gt
 801872e:	2301      	movgt	r3, #1
 8018730:	fb92 f1f3 	sdiv	r1, r2, r3
 8018734:	fa1f fc81 	uxth.w	ip, r1
 8018738:	fb0c 2413 	mls	r4, ip, r3, r2
 801873c:	fb14 f406 	smulbb	r4, r4, r6
 8018740:	441d      	add	r5, r3
 8018742:	4404      	add	r4, r0
 8018744:	4661      	mov	r1, ip
 8018746:	3d01      	subs	r5, #1
 8018748:	b2a4      	uxth	r4, r4
 801874a:	fb95 f5f3 	sdiv	r5, r5, r3
 801874e:	b121      	cbz	r1, 801875a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8018750:	9b03      	ldr	r3, [sp, #12]
 8018752:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8018756:	ba1b      	rev	r3, r3
 8018758:	441f      	add	r7, r3
 801875a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801875e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8018762:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8018766:	4418      	add	r0, r3
 8018768:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801876c:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8018770:	441a      	add	r2, r3
 8018772:	4b74      	ldr	r3, [pc, #464]	@ (8018944 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8018774:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8018778:	6818      	ldr	r0, [r3, #0]
 801877a:	6803      	ldr	r3, [r0, #0]
 801877c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801877e:	4798      	blx	r3
 8018780:	4a71      	ldr	r2, [pc, #452]	@ (8018948 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8018782:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8018786:	8813      	ldrh	r3, [r2, #0]
 8018788:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801878c:	9209      	str	r2, [sp, #36]	@ 0x24
 801878e:	fb03 c101 	mla	r1, r3, r1, ip
 8018792:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018796:	4373      	muls	r3, r6
 8018798:	b2ad      	uxth	r5, r5
 801879a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801879e:	00ad      	lsls	r5, r5, #2
 80187a0:	2c00      	cmp	r4, #0
 80187a2:	9304      	str	r3, [sp, #16]
 80187a4:	f105 0304 	add.w	r3, r5, #4
 80187a8:	9305      	str	r3, [sp, #20]
 80187aa:	bf0c      	ite	eq
 80187ac:	46c8      	moveq	r8, r9
 80187ae:	f04f 0800 	movne.w	r8, #0
 80187b2:	2300      	movs	r3, #0
 80187b4:	fa1f f888 	uxth.w	r8, r8
 80187b8:	9301      	str	r3, [sp, #4]
 80187ba:	9a04      	ldr	r2, [sp, #16]
 80187bc:	4282      	cmp	r2, r0
 80187be:	f240 80b9 	bls.w	8018934 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 80187c2:	b95b      	cbnz	r3, 80187dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 80187c4:	783a      	ldrb	r2, [r7, #0]
 80187c6:	0993      	lsrs	r3, r2, #6
 80187c8:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80187cc:	9201      	str	r2, [sp, #4]
 80187ce:	1e5a      	subs	r2, r3, #1
 80187d0:	2a02      	cmp	r2, #2
 80187d2:	bf8d      	iteet	hi
 80187d4:	787b      	ldrbhi	r3, [r7, #1]
 80187d6:	3701      	addls	r7, #1
 80187d8:	b29b      	uxthls	r3, r3
 80187da:	3702      	addhi	r7, #2
 80187dc:	b184      	cbz	r4, 8018800 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 80187de:	429c      	cmp	r4, r3
 80187e0:	bf95      	itete	ls
 80187e2:	1b1c      	subls	r4, r3, r4
 80187e4:	1ae4      	subhi	r4, r4, r3
 80187e6:	fa1f fa84 	uxthls.w	sl, r4
 80187ea:	b2a4      	uxthhi	r4, r4
 80187ec:	bf87      	ittee	hi
 80187ee:	46c4      	movhi	ip, r8
 80187f0:	f04f 0a00 	movhi.w	sl, #0
 80187f4:	fa1f fc89 	uxthls.w	ip, r9
 80187f8:	2400      	movls	r4, #0
 80187fa:	4653      	mov	r3, sl
 80187fc:	46e0      	mov	r8, ip
 80187fe:	e7dc      	b.n	80187ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8018800:	2204      	movs	r2, #4
 8018802:	4615      	mov	r5, r2
 8018804:	9905      	ldr	r1, [sp, #20]
 8018806:	9a01      	ldr	r2, [sp, #4]
 8018808:	fb15 1202 	smlabb	r2, r5, r2, r1
 801880c:	9903      	ldr	r1, [sp, #12]
 801880e:	588a      	ldr	r2, [r1, r2]
 8018810:	4543      	cmp	r3, r8
 8018812:	bf27      	ittee	cs
 8018814:	eba3 0a08 	subcs.w	sl, r3, r8
 8018818:	46c6      	movcs	lr, r8
 801881a:	eba8 0c03 	subcc.w	ip, r8, r3
 801881e:	469e      	movcc	lr, r3
 8018820:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8018824:	bf27      	ittee	cs
 8018826:	fa1f fa8a 	uxthcs.w	sl, sl
 801882a:	46a4      	movcs	ip, r4
 801882c:	fa1f fc8c 	uxthcc.w	ip, ip
 8018830:	46a2      	movcc	sl, r4
 8018832:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8018836:	2900      	cmp	r1, #0
 8018838:	d066      	beq.n	8018908 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801883a:	29ff      	cmp	r1, #255	@ 0xff
 801883c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8018840:	d114      	bne.n	801886c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8018842:	9d02      	ldr	r5, [sp, #8]
 8018844:	2dff      	cmp	r5, #255	@ 0xff
 8018846:	d111      	bne.n	801886c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8018848:	0951      	lsrs	r1, r2, #5
 801884a:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801884e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018852:	f026 0607 	bic.w	r6, r6, #7
 8018856:	430e      	orrs	r6, r1
 8018858:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801885c:	4316      	orrs	r6, r2
 801885e:	b2b6      	uxth	r6, r6
 8018860:	4486      	add	lr, r0
 8018862:	4586      	cmp	lr, r0
 8018864:	d051      	beq.n	801890a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8018866:	f820 6b02 	strh.w	r6, [r0], #2
 801886a:	e7fa      	b.n	8018862 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801886c:	9d02      	ldr	r5, [sp, #8]
 801886e:	4369      	muls	r1, r5
 8018870:	1c4d      	adds	r5, r1, #1
 8018872:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8018876:	122d      	asrs	r5, r5, #8
 8018878:	ea6f 0b05 	mvn.w	fp, r5
 801887c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8018880:	b2ad      	uxth	r5, r5
 8018882:	b2f6      	uxtb	r6, r6
 8018884:	b2d2      	uxtb	r2, r2
 8018886:	fb11 f105 	smulbb	r1, r1, r5
 801888a:	fb16 f605 	smulbb	r6, r6, r5
 801888e:	fb12 f205 	smulbb	r2, r2, r5
 8018892:	b289      	uxth	r1, r1
 8018894:	b2b6      	uxth	r6, r6
 8018896:	b292      	uxth	r2, r2
 8018898:	9106      	str	r1, [sp, #24]
 801889a:	9607      	str	r6, [sp, #28]
 801889c:	9208      	str	r2, [sp, #32]
 801889e:	4486      	add	lr, r0
 80188a0:	fa5f fb8b 	uxtb.w	fp, fp
 80188a4:	4586      	cmp	lr, r0
 80188a6:	d030      	beq.n	801890a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80188a8:	8802      	ldrh	r2, [r0, #0]
 80188aa:	9906      	ldr	r1, [sp, #24]
 80188ac:	1216      	asrs	r6, r2, #8
 80188ae:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80188b2:	10d5      	asrs	r5, r2, #3
 80188b4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80188b8:	fb06 160b 	mla	r6, r6, fp, r1
 80188bc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80188c0:	9907      	ldr	r1, [sp, #28]
 80188c2:	00d2      	lsls	r2, r2, #3
 80188c4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80188c8:	fb05 150b 	mla	r5, r5, fp, r1
 80188cc:	b2d2      	uxtb	r2, r2
 80188ce:	9908      	ldr	r1, [sp, #32]
 80188d0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80188d4:	b2b6      	uxth	r6, r6
 80188d6:	fb02 120b 	mla	r2, r2, fp, r1
 80188da:	b292      	uxth	r2, r2
 80188dc:	1c71      	adds	r1, r6, #1
 80188de:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 80188e2:	1c51      	adds	r1, r2, #1
 80188e4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80188e8:	b2ad      	uxth	r5, r5
 80188ea:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80188ee:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80188f2:	4316      	orrs	r6, r2
 80188f4:	1c6a      	adds	r2, r5, #1
 80188f6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80188fa:	096d      	lsrs	r5, r5, #5
 80188fc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018900:	432e      	orrs	r6, r5
 8018902:	f820 6b02 	strh.w	r6, [r0], #2
 8018906:	e7cd      	b.n	80188a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8018908:	4470      	add	r0, lr
 801890a:	4543      	cmp	r3, r8
 801890c:	f4ff af75 	bcc.w	80187fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8018910:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8018914:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018916:	fa1f fc89 	uxth.w	ip, r9
 801891a:	eba4 040c 	sub.w	r4, r4, ip
 801891e:	881b      	ldrh	r3, [r3, #0]
 8018920:	b2a4      	uxth	r4, r4
 8018922:	2c00      	cmp	r4, #0
 8018924:	eba3 0309 	sub.w	r3, r3, r9
 8018928:	bf18      	it	ne
 801892a:	f04f 0c00 	movne.w	ip, #0
 801892e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018932:	e762      	b.n	80187fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8018934:	4b03      	ldr	r3, [pc, #12]	@ (8018944 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8018936:	6818      	ldr	r0, [r3, #0]
 8018938:	6803      	ldr	r3, [r0, #0]
 801893a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801893c:	4798      	blx	r3
 801893e:	b00f      	add	sp, #60	@ 0x3c
 8018940:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018944:	200157c0 	.word	0x200157c0
 8018948:	200157ba 	.word	0x200157ba

0801894c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801894c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018950:	b093      	sub	sp, #76	@ 0x4c
 8018952:	461c      	mov	r4, r3
 8018954:	9205      	str	r2, [sp, #20]
 8018956:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801895a:	9101      	str	r1, [sp, #4]
 801895c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801895e:	9202      	str	r2, [sp, #8]
 8018960:	2a00      	cmp	r2, #0
 8018962:	f000 812c 	beq.w	8018bbe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8018966:	6820      	ldr	r0, [r4, #0]
 8018968:	6861      	ldr	r1, [r4, #4]
 801896a:	aa0e      	add	r2, sp, #56	@ 0x38
 801896c:	c203      	stmia	r2!, {r0, r1}
 801896e:	6818      	ldr	r0, [r3, #0]
 8018970:	6859      	ldr	r1, [r3, #4]
 8018972:	aa10      	add	r2, sp, #64	@ 0x40
 8018974:	c203      	stmia	r2!, {r0, r1}
 8018976:	a80e      	add	r0, sp, #56	@ 0x38
 8018978:	f7f7 fef4 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801897c:	4621      	mov	r1, r4
 801897e:	a810      	add	r0, sp, #64	@ 0x40
 8018980:	f7f7 ff18 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018984:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8018988:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801898c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8018990:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8018994:	bfde      	ittt	le
 8018996:	b2b3      	uxthle	r3, r6
 8018998:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801899c:	fb92 f3f3 	sdivle	r3, r2, r3
 80189a0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80189a4:	bfc8      	it	gt
 80189a6:	2301      	movgt	r3, #1
 80189a8:	fb92 f1f3 	sdiv	r1, r2, r3
 80189ac:	fa1f fc81 	uxth.w	ip, r1
 80189b0:	fb0c 2413 	mls	r4, ip, r3, r2
 80189b4:	fb14 f406 	smulbb	r4, r4, r6
 80189b8:	441d      	add	r5, r3
 80189ba:	4404      	add	r4, r0
 80189bc:	4661      	mov	r1, ip
 80189be:	3d01      	subs	r5, #1
 80189c0:	b2a4      	uxth	r4, r4
 80189c2:	fb95 f5f3 	sdiv	r5, r5, r3
 80189c6:	b131      	cbz	r1, 80189d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 80189c8:	9b05      	ldr	r3, [sp, #20]
 80189ca:	9901      	ldr	r1, [sp, #4]
 80189cc:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80189d0:	ba1b      	rev	r3, r3
 80189d2:	4419      	add	r1, r3
 80189d4:	9101      	str	r1, [sp, #4]
 80189d6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80189da:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 80189de:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 80189e2:	4418      	add	r0, r3
 80189e4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 80189e8:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 80189ec:	441a      	add	r2, r3
 80189ee:	4b75      	ldr	r3, [pc, #468]	@ (8018bc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 80189f0:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 80189f4:	6818      	ldr	r0, [r3, #0]
 80189f6:	6803      	ldr	r3, [r0, #0]
 80189f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80189fa:	4798      	blx	r3
 80189fc:	4972      	ldr	r1, [pc, #456]	@ (8018bc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 80189fe:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8018a02:	880b      	ldrh	r3, [r1, #0]
 8018a04:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8018a08:	910d      	str	r1, [sp, #52]	@ 0x34
 8018a0a:	fb03 c202 	mla	r2, r3, r2, ip
 8018a0e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018a12:	4373      	muls	r3, r6
 8018a14:	b2ad      	uxth	r5, r5
 8018a16:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018a1a:	00ad      	lsls	r5, r5, #2
 8018a1c:	9308      	str	r3, [sp, #32]
 8018a1e:	1d2b      	adds	r3, r5, #4
 8018a20:	9309      	str	r3, [sp, #36]	@ 0x24
 8018a22:	9b02      	ldr	r3, [sp, #8]
 8018a24:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018a28:	9106      	str	r1, [sp, #24]
 8018a2a:	43da      	mvns	r2, r3
 8018a2c:	2c00      	cmp	r4, #0
 8018a2e:	bf0c      	ite	eq
 8018a30:	46dc      	moveq	ip, fp
 8018a32:	f04f 0c00 	movne.w	ip, #0
 8018a36:	2300      	movs	r3, #0
 8018a38:	b2d2      	uxtb	r2, r2
 8018a3a:	fa1f fc8c 	uxth.w	ip, ip
 8018a3e:	9303      	str	r3, [sp, #12]
 8018a40:	9207      	str	r2, [sp, #28]
 8018a42:	9a08      	ldr	r2, [sp, #32]
 8018a44:	4282      	cmp	r2, r0
 8018a46:	f240 80b5 	bls.w	8018bb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8018a4a:	b963      	cbnz	r3, 8018a66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8018a4c:	9b01      	ldr	r3, [sp, #4]
 8018a4e:	781a      	ldrb	r2, [r3, #0]
 8018a50:	0993      	lsrs	r3, r2, #6
 8018a52:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8018a56:	9203      	str	r2, [sp, #12]
 8018a58:	1e5a      	subs	r2, r3, #1
 8018a5a:	2a02      	cmp	r2, #2
 8018a5c:	d815      	bhi.n	8018a8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8018a5e:	9a01      	ldr	r2, [sp, #4]
 8018a60:	3201      	adds	r2, #1
 8018a62:	9201      	str	r2, [sp, #4]
 8018a64:	b29b      	uxth	r3, r3
 8018a66:	b1b4      	cbz	r4, 8018a96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8018a68:	429c      	cmp	r4, r3
 8018a6a:	bf95      	itete	ls
 8018a6c:	1b1c      	subls	r4, r3, r4
 8018a6e:	1ae4      	subhi	r4, r4, r3
 8018a70:	fa1f f884 	uxthls.w	r8, r4
 8018a74:	b2a4      	uxthhi	r4, r4
 8018a76:	bf87      	ittee	hi
 8018a78:	4666      	movhi	r6, ip
 8018a7a:	f04f 0800 	movhi.w	r8, #0
 8018a7e:	fa1f f68b 	uxthls.w	r6, fp
 8018a82:	2400      	movls	r4, #0
 8018a84:	4643      	mov	r3, r8
 8018a86:	46b4      	mov	ip, r6
 8018a88:	e7db      	b.n	8018a42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8018a8a:	9a01      	ldr	r2, [sp, #4]
 8018a8c:	9b01      	ldr	r3, [sp, #4]
 8018a8e:	3202      	adds	r2, #2
 8018a90:	785b      	ldrb	r3, [r3, #1]
 8018a92:	9201      	str	r2, [sp, #4]
 8018a94:	e7e7      	b.n	8018a66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8018a96:	2203      	movs	r2, #3
 8018a98:	4615      	mov	r5, r2
 8018a9a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018a9c:	9a03      	ldr	r2, [sp, #12]
 8018a9e:	fb15 1202 	smlabb	r2, r5, r2, r1
 8018aa2:	9905      	ldr	r1, [sp, #20]
 8018aa4:	4563      	cmp	r3, ip
 8018aa6:	eb01 0502 	add.w	r5, r1, r2
 8018aaa:	9902      	ldr	r1, [sp, #8]
 8018aac:	bf29      	itett	cs
 8018aae:	eba3 080c 	subcs.w	r8, r3, ip
 8018ab2:	ebac 0603 	subcc.w	r6, ip, r3
 8018ab6:	fa1f f888 	uxthcs.w	r8, r8
 8018aba:	46e1      	movcs	r9, ip
 8018abc:	bf2f      	iteee	cs
 8018abe:	4626      	movcs	r6, r4
 8018ac0:	b2b6      	uxthcc	r6, r6
 8018ac2:	4699      	movcc	r9, r3
 8018ac4:	46a0      	movcc	r8, r4
 8018ac6:	29ff      	cmp	r1, #255	@ 0xff
 8018ac8:	d04a      	beq.n	8018b60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8018aca:	9f06      	ldr	r7, [sp, #24]
 8018acc:	78a9      	ldrb	r1, [r5, #2]
 8018ace:	9004      	str	r0, [sp, #16]
 8018ad0:	4379      	muls	r1, r7
 8018ad2:	910a      	str	r1, [sp, #40]	@ 0x28
 8018ad4:	7869      	ldrb	r1, [r5, #1]
 8018ad6:	4379      	muls	r1, r7
 8018ad8:	910b      	str	r1, [sp, #44]	@ 0x2c
 8018ada:	9905      	ldr	r1, [sp, #20]
 8018adc:	5c8a      	ldrb	r2, [r1, r2]
 8018ade:	437a      	muls	r2, r7
 8018ae0:	920c      	str	r2, [sp, #48]	@ 0x30
 8018ae2:	46ca      	mov	sl, r9
 8018ae4:	f1ba 0f00 	cmp.w	sl, #0
 8018ae8:	d03d      	beq.n	8018b66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8018aea:	9a04      	ldr	r2, [sp, #16]
 8018aec:	9f07      	ldr	r7, [sp, #28]
 8018aee:	8812      	ldrh	r2, [r2, #0]
 8018af0:	1215      	asrs	r5, r2, #8
 8018af2:	46be      	mov	lr, r7
 8018af4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018af8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8018afa:	10d1      	asrs	r1, r2, #3
 8018afc:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8018b00:	fb05 750e 	mla	r5, r5, lr, r7
 8018b04:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8018b08:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8018b0a:	00d2      	lsls	r2, r2, #3
 8018b0c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018b10:	fb01 710e 	mla	r1, r1, lr, r7
 8018b14:	b2d2      	uxtb	r2, r2
 8018b16:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8018b18:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018b1c:	b2ad      	uxth	r5, r5
 8018b1e:	fb02 720e 	mla	r2, r2, lr, r7
 8018b22:	b292      	uxth	r2, r2
 8018b24:	f105 0e01 	add.w	lr, r5, #1
 8018b28:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8018b2c:	f102 0e01 	add.w	lr, r2, #1
 8018b30:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8018b34:	b289      	uxth	r1, r1
 8018b36:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018b3a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018b3e:	4315      	orrs	r5, r2
 8018b40:	1c4a      	adds	r2, r1, #1
 8018b42:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018b46:	0949      	lsrs	r1, r1, #5
 8018b48:	9a04      	ldr	r2, [sp, #16]
 8018b4a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018b4e:	430d      	orrs	r5, r1
 8018b50:	f822 5b02 	strh.w	r5, [r2], #2
 8018b54:	f10a 3aff 	add.w	sl, sl, #4294967295
 8018b58:	9204      	str	r2, [sp, #16]
 8018b5a:	fa1f fa8a 	uxth.w	sl, sl
 8018b5e:	e7c1      	b.n	8018ae4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8018b60:	4649      	mov	r1, r9
 8018b62:	4686      	mov	lr, r0
 8018b64:	b999      	cbnz	r1, 8018b8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8018b66:	4563      	cmp	r3, ip
 8018b68:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8018b6c:	d38a      	bcc.n	8018a84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8018b6e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8018b72:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018b74:	fa1f f68b 	uxth.w	r6, fp
 8018b78:	1ba4      	subs	r4, r4, r6
 8018b7a:	881b      	ldrh	r3, [r3, #0]
 8018b7c:	b2a4      	uxth	r4, r4
 8018b7e:	2c00      	cmp	r4, #0
 8018b80:	eba3 030b 	sub.w	r3, r3, fp
 8018b84:	bf18      	it	ne
 8018b86:	2600      	movne	r6, #0
 8018b88:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018b8c:	e77a      	b.n	8018a84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8018b8e:	78aa      	ldrb	r2, [r5, #2]
 8018b90:	4f0e      	ldr	r7, [pc, #56]	@ (8018bcc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8018b92:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8018b96:	786a      	ldrb	r2, [r5, #1]
 8018b98:	00d2      	lsls	r2, r2, #3
 8018b9a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018b9e:	ea4a 0202 	orr.w	r2, sl, r2
 8018ba2:	f895 a000 	ldrb.w	sl, [r5]
 8018ba6:	3901      	subs	r1, #1
 8018ba8:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8018bac:	f82e 2b02 	strh.w	r2, [lr], #2
 8018bb0:	b289      	uxth	r1, r1
 8018bb2:	e7d7      	b.n	8018b64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8018bb4:	4b03      	ldr	r3, [pc, #12]	@ (8018bc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8018bb6:	6818      	ldr	r0, [r3, #0]
 8018bb8:	6803      	ldr	r3, [r0, #0]
 8018bba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018bbc:	4798      	blx	r3
 8018bbe:	b013      	add	sp, #76	@ 0x4c
 8018bc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018bc4:	200157c0 	.word	0x200157c0
 8018bc8:	200157ba 	.word	0x200157ba
 8018bcc:	fffff800 	.word	0xfffff800

08018bd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8018bd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018bd4:	b09d      	sub	sp, #116	@ 0x74
 8018bd6:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8018bda:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8018bde:	920e      	str	r2, [sp, #56]	@ 0x38
 8018be0:	461c      	mov	r4, r3
 8018be2:	4683      	mov	fp, r0
 8018be4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8018be6:	2a00      	cmp	r2, #0
 8018be8:	f000 81e0 	beq.w	8018fac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8018bec:	6820      	ldr	r0, [r4, #0]
 8018bee:	6861      	ldr	r1, [r4, #4]
 8018bf0:	aa18      	add	r2, sp, #96	@ 0x60
 8018bf2:	c203      	stmia	r2!, {r0, r1}
 8018bf4:	6818      	ldr	r0, [r3, #0]
 8018bf6:	6859      	ldr	r1, [r3, #4]
 8018bf8:	aa1a      	add	r2, sp, #104	@ 0x68
 8018bfa:	c203      	stmia	r2!, {r0, r1}
 8018bfc:	a818      	add	r0, sp, #96	@ 0x60
 8018bfe:	f7f7 fdb1 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018c02:	4621      	mov	r1, r4
 8018c04:	a81a      	add	r0, sp, #104	@ 0x68
 8018c06:	f7f7 fdd5 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018c0a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8018c0e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8018c12:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8018c16:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8018c1a:	bfd7      	itett	le
 8018c1c:	b29a      	uxthle	r2, r3
 8018c1e:	2201      	movgt	r2, #1
 8018c20:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8018c24:	fb91 f2f2 	sdivle	r2, r1, r2
 8018c28:	9202      	str	r2, [sp, #8]
 8018c2a:	9802      	ldr	r0, [sp, #8]
 8018c2c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8018c30:	fb92 f0f0 	sdiv	r0, r2, r0
 8018c34:	b280      	uxth	r0, r0
 8018c36:	900f      	str	r0, [sp, #60]	@ 0x3c
 8018c38:	9902      	ldr	r1, [sp, #8]
 8018c3a:	9802      	ldr	r0, [sp, #8]
 8018c3c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8018c3e:	440c      	add	r4, r1
 8018c40:	fb05 2510 	mls	r5, r5, r0, r2
 8018c44:	fb15 f503 	smulbb	r5, r5, r3
 8018c48:	3c01      	subs	r4, #1
 8018c4a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8018c4e:	fb94 f4f1 	sdiv	r4, r4, r1
 8018c52:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8018c56:	440d      	add	r5, r1
 8018c58:	4419      	add	r1, r3
 8018c5a:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8018c5e:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8018c62:	441a      	add	r2, r3
 8018c64:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8018c68:	9306      	str	r3, [sp, #24]
 8018c6a:	4bb3      	ldr	r3, [pc, #716]	@ (8018f38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8018c6c:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8018c70:	6818      	ldr	r0, [r3, #0]
 8018c72:	6803      	ldr	r3, [r0, #0]
 8018c74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018c76:	4798      	blx	r3
 8018c78:	4bb0      	ldr	r3, [pc, #704]	@ (8018f3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8018c7a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8018c7e:	881a      	ldrh	r2, [r3, #0]
 8018c80:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8018c84:	9316      	str	r3, [sp, #88]	@ 0x58
 8018c86:	fb02 7101 	mla	r1, r2, r1, r7
 8018c8a:	3401      	adds	r4, #1
 8018c8c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8018c90:	b2a4      	uxth	r4, r4
 8018c92:	4356      	muls	r6, r2
 8018c94:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8018c98:	00a4      	lsls	r4, r4, #2
 8018c9a:	920a      	str	r2, [sp, #40]	@ 0x28
 8018c9c:	1d22      	adds	r2, r4, #4
 8018c9e:	b2ad      	uxth	r5, r5
 8018ca0:	9213      	str	r2, [sp, #76]	@ 0x4c
 8018ca2:	4ba7      	ldr	r3, [pc, #668]	@ (8018f40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8018ca4:	9a06      	ldr	r2, [sp, #24]
 8018ca6:	2d00      	cmp	r5, #0
 8018ca8:	bf0c      	ite	eq
 8018caa:	4611      	moveq	r1, r2
 8018cac:	2100      	movne	r1, #0
 8018cae:	2200      	movs	r2, #0
 8018cb0:	eba3 030b 	sub.w	r3, r3, fp
 8018cb4:	b289      	uxth	r1, r1
 8018cb6:	920d      	str	r2, [sp, #52]	@ 0x34
 8018cb8:	9317      	str	r3, [sp, #92]	@ 0x5c
 8018cba:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018cbc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018cbe:	fa12 f383 	uxtah	r3, r2, r3
 8018cc2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018cc4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8018cc8:	3304      	adds	r3, #4
 8018cca:	9308      	str	r3, [sp, #32]
 8018ccc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018cce:	4543      	cmp	r3, r8
 8018cd0:	f240 8167 	bls.w	8018fa2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8018cd4:	9a02      	ldr	r2, [sp, #8]
 8018cd6:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8018cda:	fbb5 f3f3 	udiv	r3, r5, r3
 8018cde:	1ad3      	subs	r3, r2, r3
 8018ce0:	b29b      	uxth	r3, r3
 8018ce2:	9314      	str	r3, [sp, #80]	@ 0x50
 8018ce4:	9b08      	ldr	r3, [sp, #32]
 8018ce6:	9808      	ldr	r0, [sp, #32]
 8018ce8:	785a      	ldrb	r2, [r3, #1]
 8018cea:	789b      	ldrb	r3, [r3, #2]
 8018cec:	7800      	ldrb	r0, [r0, #0]
 8018cee:	9010      	str	r0, [sp, #64]	@ 0x40
 8018cf0:	021b      	lsls	r3, r3, #8
 8018cf2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8018cf6:	9a08      	ldr	r2, [sp, #32]
 8018cf8:	78d2      	ldrb	r2, [r2, #3]
 8018cfa:	4313      	orrs	r3, r2
 8018cfc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8018cfe:	3001      	adds	r0, #1
 8018d00:	441a      	add	r2, r3
 8018d02:	9007      	str	r0, [sp, #28]
 8018d04:	1c50      	adds	r0, r2, #1
 8018d06:	9005      	str	r0, [sp, #20]
 8018d08:	7852      	ldrb	r2, [r2, #1]
 8018d0a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018d0c:	0212      	lsls	r2, r2, #8
 8018d0e:	5cc3      	ldrb	r3, [r0, r3]
 8018d10:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8018d14:	431a      	orrs	r2, r3
 8018d16:	b293      	uxth	r3, r2
 8018d18:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018d1a:	2300      	movs	r3, #0
 8018d1c:	9309      	str	r3, [sp, #36]	@ 0x24
 8018d1e:	2301      	movs	r3, #1
 8018d20:	9301      	str	r3, [sp, #4]
 8018d22:	9304      	str	r3, [sp, #16]
 8018d24:	2300      	movs	r3, #0
 8018d26:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8018d2a:	9303      	str	r3, [sp, #12]
 8018d2c:	f04f 0e01 	mov.w	lr, #1
 8018d30:	2d00      	cmp	r5, #0
 8018d32:	d07c      	beq.n	8018e2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8018d34:	45ae      	cmp	lr, r5
 8018d36:	d26b      	bcs.n	8018e10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8018d38:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018d3a:	eba5 050e 	sub.w	r5, r5, lr
 8018d3e:	4543      	cmp	r3, r8
 8018d40:	b2ad      	uxth	r5, r5
 8018d42:	460c      	mov	r4, r1
 8018d44:	d802      	bhi.n	8018d4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8018d46:	e070      	b.n	8018e2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8018d48:	2b00      	cmp	r3, #0
 8018d4a:	d15c      	bne.n	8018e06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8018d4c:	9b05      	ldr	r3, [sp, #20]
 8018d4e:	9a04      	ldr	r2, [sp, #16]
 8018d50:	785b      	ldrb	r3, [r3, #1]
 8018d52:	9904      	ldr	r1, [sp, #16]
 8018d54:	f1c2 0207 	rsb	r2, r2, #7
 8018d58:	4093      	lsls	r3, r2
 8018d5a:	005b      	lsls	r3, r3, #1
 8018d5c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8018d60:	9b05      	ldr	r3, [sp, #20]
 8018d62:	781b      	ldrb	r3, [r3, #0]
 8018d64:	410b      	asrs	r3, r1
 8018d66:	3101      	adds	r1, #1
 8018d68:	b2c9      	uxtb	r1, r1
 8018d6a:	2908      	cmp	r1, #8
 8018d6c:	9104      	str	r1, [sp, #16]
 8018d6e:	9905      	ldr	r1, [sp, #20]
 8018d70:	bf0a      	itet	eq
 8018d72:	3102      	addeq	r1, #2
 8018d74:	3101      	addne	r1, #1
 8018d76:	9105      	streq	r1, [sp, #20]
 8018d78:	b2db      	uxtb	r3, r3
 8018d7a:	bf0a      	itet	eq
 8018d7c:	2100      	moveq	r1, #0
 8018d7e:	9105      	strne	r1, [sp, #20]
 8018d80:	9104      	streq	r1, [sp, #16]
 8018d82:	4313      	orrs	r3, r2
 8018d84:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8018d86:	b29a      	uxth	r2, r3
 8018d88:	4291      	cmp	r1, r2
 8018d8a:	d30a      	bcc.n	8018da2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8018d8c:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8018d90:	2301      	movs	r3, #1
 8018d92:	9907      	ldr	r1, [sp, #28]
 8018d94:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8018d98:	d30f      	bcc.n	8018dba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8018d9a:	2100      	movs	r1, #0
 8018d9c:	9301      	str	r3, [sp, #4]
 8018d9e:	9103      	str	r1, [sp, #12]
 8018da0:	e032      	b.n	8018e08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8018da2:	9b07      	ldr	r3, [sp, #28]
 8018da4:	429a      	cmp	r2, r3
 8018da6:	d318      	bcc.n	8018dda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8018da8:	9b01      	ldr	r3, [sp, #4]
 8018daa:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8018dae:	445b      	add	r3, fp
 8018db0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8018db4:	9b01      	ldr	r3, [sp, #4]
 8018db6:	3301      	adds	r3, #1
 8018db8:	b29b      	uxth	r3, r3
 8018dba:	9907      	ldr	r1, [sp, #28]
 8018dbc:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8018dc0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8018dc4:	7108      	strb	r0, [r1, #4]
 8018dc6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8018dc8:	80c8      	strh	r0, [r1, #6]
 8018dca:	9801      	ldr	r0, [sp, #4]
 8018dcc:	3001      	adds	r0, #1
 8018dce:	7148      	strb	r0, [r1, #5]
 8018dd0:	9907      	ldr	r1, [sp, #28]
 8018dd2:	3101      	adds	r1, #1
 8018dd4:	b289      	uxth	r1, r1
 8018dd6:	9107      	str	r1, [sp, #28]
 8018dd8:	e7df      	b.n	8018d9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8018dda:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8018dde:	4611      	mov	r1, r2
 8018de0:	795b      	ldrb	r3, [r3, #5]
 8018de2:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8018de6:	4458      	add	r0, fp
 8018de8:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8018dea:	4406      	add	r6, r0
 8018dec:	2e00      	cmp	r6, #0
 8018dee:	dd06      	ble.n	8018dfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8018df0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8018df4:	790e      	ldrb	r6, [r1, #4]
 8018df6:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8018dfa:	88c9      	ldrh	r1, [r1, #6]
 8018dfc:	e7f4      	b.n	8018de8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8018dfe:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8018e02:	b29b      	uxth	r3, r3
 8018e04:	e7c5      	b.n	8018d92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 8018e06:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018e08:	920b      	str	r2, [sp, #44]	@ 0x2c
 8018e0a:	4621      	mov	r1, r4
 8018e0c:	469e      	mov	lr, r3
 8018e0e:	e78f      	b.n	8018d30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8018e10:	9a03      	ldr	r2, [sp, #12]
 8018e12:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8018e16:	442a      	add	r2, r5
 8018e18:	ebae 0305 	sub.w	r3, lr, r5
 8018e1c:	b292      	uxth	r2, r2
 8018e1e:	b29b      	uxth	r3, r3
 8018e20:	9203      	str	r2, [sp, #12]
 8018e22:	2500      	movs	r5, #0
 8018e24:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8018e26:	4542      	cmp	r2, r8
 8018e28:	d88e      	bhi.n	8018d48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8018e2a:	4621      	mov	r1, r4
 8018e2c:	e74e      	b.n	8018ccc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8018e2e:	458e      	cmp	lr, r1
 8018e30:	bf29      	itett	cs
 8018e32:	ebae 0301 	subcs.w	r3, lr, r1
 8018e36:	eba1 040e 	subcc.w	r4, r1, lr
 8018e3a:	b29b      	uxthcs	r3, r3
 8018e3c:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8018e3e:	bf2f      	iteee	cs
 8018e40:	462c      	movcs	r4, r5
 8018e42:	b2a4      	uxthcc	r4, r4
 8018e44:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8018e48:	462b      	movcc	r3, r5
 8018e4a:	f04f 0900 	mov.w	r9, #0
 8018e4e:	9a03      	ldr	r2, [sp, #12]
 8018e50:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8018e52:	444a      	add	r2, r9
 8018e54:	4548      	cmp	r0, r9
 8018e56:	b292      	uxth	r2, r2
 8018e58:	d074      	beq.n	8018f44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8018e5a:	445a      	add	r2, fp
 8018e5c:	2004      	movs	r0, #4
 8018e5e:	4605      	mov	r5, r0
 8018e60:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8018e64:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018e66:	fb15 0202 	smlabb	r2, r5, r2, r0
 8018e6a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018e6c:	5880      	ldr	r0, [r0, r2]
 8018e6e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8018e72:	d014      	beq.n	8018e9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8018e74:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8018e78:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8018e7c:	d112      	bne.n	8018ea4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8018e7e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8018e80:	2aff      	cmp	r2, #255	@ 0xff
 8018e82:	d10f      	bne.n	8018ea4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8018e84:	0942      	lsrs	r2, r0, #5
 8018e86:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8018e8a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018e8e:	f025 0507 	bic.w	r5, r5, #7
 8018e92:	4315      	orrs	r5, r2
 8018e94:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8018e98:	4305      	orrs	r5, r0
 8018e9a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8018e9e:	f109 0901 	add.w	r9, r9, #1
 8018ea2:	e7d4      	b.n	8018e4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8018ea4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8018ea8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8018eac:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8018eb0:	9215      	str	r2, [sp, #84]	@ 0x54
 8018eb2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8018eb4:	fb02 fa0a 	mul.w	sl, r2, sl
 8018eb8:	f10a 0201 	add.w	r2, sl, #1
 8018ebc:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8018ec0:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018ec4:	1212      	asrs	r2, r2, #8
 8018ec6:	fa1f fa82 	uxth.w	sl, r2
 8018eca:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8018ece:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018ed2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018ed6:	43d2      	mvns	r2, r2
 8018ed8:	b2d2      	uxtb	r2, r2
 8018eda:	fb16 f60a 	smulbb	r6, r6, sl
 8018ede:	fa5f fc8c 	uxtb.w	ip, ip
 8018ee2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8018ee6:	b2c0      	uxtb	r0, r0
 8018ee8:	fb07 6702 	mla	r7, r7, r2, r6
 8018eec:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8018ef0:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8018ef2:	fb10 f00a 	smulbb	r0, r0, sl
 8018ef6:	fb0c 0002 	mla	r0, ip, r2, r0
 8018efa:	b2ed      	uxtb	r5, r5
 8018efc:	b2bf      	uxth	r7, r7
 8018efe:	fb15 f50a 	smulbb	r5, r5, sl
 8018f02:	b280      	uxth	r0, r0
 8018f04:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8018f08:	fb06 5602 	mla	r6, r6, r2, r5
 8018f0c:	1c7a      	adds	r2, r7, #1
 8018f0e:	1c45      	adds	r5, r0, #1
 8018f10:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018f14:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018f18:	b2b6      	uxth	r6, r6
 8018f1a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018f1e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018f22:	432f      	orrs	r7, r5
 8018f24:	1c75      	adds	r5, r6, #1
 8018f26:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8018f2a:	096d      	lsrs	r5, r5, #5
 8018f2c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018f30:	432f      	orrs	r7, r5
 8018f32:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8018f36:	e7b2      	b.n	8018e9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8018f38:	200157c0 	.word	0x200157c0
 8018f3c:	200157ba 	.word	0x200157ba
 8018f40:	fffff7fb 	.word	0xfffff7fb
 8018f44:	9203      	str	r2, [sp, #12]
 8018f46:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8018f48:	458e      	cmp	lr, r1
 8018f4a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8018f4e:	f4ff af68 	bcc.w	8018e22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8018f52:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8018f54:	9906      	ldr	r1, [sp, #24]
 8018f56:	8812      	ldrh	r2, [r2, #0]
 8018f58:	1a52      	subs	r2, r2, r1
 8018f5a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8018f5e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018f60:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8018f62:	3201      	adds	r2, #1
 8018f64:	428a      	cmp	r2, r1
 8018f66:	9209      	str	r2, [sp, #36]	@ 0x24
 8018f68:	d111      	bne.n	8018f8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8018f6a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8018f6e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8018f72:	9b06      	ldr	r3, [sp, #24]
 8018f74:	eba5 0509 	sub.w	r5, r5, r9
 8018f78:	b2ad      	uxth	r5, r5
 8018f7a:	2d00      	cmp	r5, #0
 8018f7c:	bf08      	it	eq
 8018f7e:	4619      	moveq	r1, r3
 8018f80:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018f82:	bf18      	it	ne
 8018f84:	2100      	movne	r1, #0
 8018f86:	3301      	adds	r3, #1
 8018f88:	930d      	str	r3, [sp, #52]	@ 0x34
 8018f8a:	b289      	uxth	r1, r1
 8018f8c:	e695      	b.n	8018cba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8018f8e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8018f92:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8018f96:	1b2d      	subs	r5, r5, r4
 8018f98:	b2ad      	uxth	r5, r5
 8018f9a:	2d00      	cmp	r5, #0
 8018f9c:	bf18      	it	ne
 8018f9e:	2400      	movne	r4, #0
 8018fa0:	e740      	b.n	8018e24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8018fa2:	4b04      	ldr	r3, [pc, #16]	@ (8018fb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8018fa4:	6818      	ldr	r0, [r3, #0]
 8018fa6:	6803      	ldr	r3, [r0, #0]
 8018fa8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018faa:	4798      	blx	r3
 8018fac:	b01d      	add	sp, #116	@ 0x74
 8018fae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018fb2:	bf00      	nop
 8018fb4:	200157c0 	.word	0x200157c0

08018fb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8018fb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018fbc:	b09f      	sub	sp, #124	@ 0x7c
 8018fbe:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8018fc2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8018fc6:	920a      	str	r2, [sp, #40]	@ 0x28
 8018fc8:	461d      	mov	r5, r3
 8018fca:	4604      	mov	r4, r0
 8018fcc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018fce:	2a00      	cmp	r2, #0
 8018fd0:	f000 81fa 	beq.w	80193c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8018fd4:	6828      	ldr	r0, [r5, #0]
 8018fd6:	6869      	ldr	r1, [r5, #4]
 8018fd8:	aa1a      	add	r2, sp, #104	@ 0x68
 8018fda:	c203      	stmia	r2!, {r0, r1}
 8018fdc:	6818      	ldr	r0, [r3, #0]
 8018fde:	6859      	ldr	r1, [r3, #4]
 8018fe0:	aa1c      	add	r2, sp, #112	@ 0x70
 8018fe2:	c203      	stmia	r2!, {r0, r1}
 8018fe4:	a81a      	add	r0, sp, #104	@ 0x68
 8018fe6:	f7f7 fbbd 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018fea:	4629      	mov	r1, r5
 8018fec:	a81c      	add	r0, sp, #112	@ 0x70
 8018fee:	f7f7 fbe1 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018ff2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8018ff6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8018ffa:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8018ffe:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8019002:	bfd7      	itett	le
 8019004:	b29a      	uxthle	r2, r3
 8019006:	2201      	movgt	r2, #1
 8019008:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801900c:	fb91 f2f2 	sdivle	r2, r1, r2
 8019010:	9201      	str	r2, [sp, #4]
 8019012:	9801      	ldr	r0, [sp, #4]
 8019014:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8019018:	fb92 f0f0 	sdiv	r0, r2, r0
 801901c:	b280      	uxth	r0, r0
 801901e:	9010      	str	r0, [sp, #64]	@ 0x40
 8019020:	9901      	ldr	r1, [sp, #4]
 8019022:	9801      	ldr	r0, [sp, #4]
 8019024:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8019026:	440e      	add	r6, r1
 8019028:	fb05 2510 	mls	r5, r5, r0, r2
 801902c:	fb15 f503 	smulbb	r5, r5, r3
 8019030:	3e01      	subs	r6, #1
 8019032:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8019036:	fb96 f6f1 	sdiv	r6, r6, r1
 801903a:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801903e:	440d      	add	r5, r1
 8019040:	4419      	add	r1, r3
 8019042:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8019046:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801904a:	441a      	add	r2, r3
 801904c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8019050:	9304      	str	r3, [sp, #16]
 8019052:	4b96      	ldr	r3, [pc, #600]	@ (80192ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8019054:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8019058:	6818      	ldr	r0, [r3, #0]
 801905a:	6803      	ldr	r3, [r0, #0]
 801905c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801905e:	4798      	blx	r3
 8019060:	4b93      	ldr	r3, [pc, #588]	@ (80192b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8019062:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8019066:	881a      	ldrh	r2, [r3, #0]
 8019068:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801906c:	9318      	str	r3, [sp, #96]	@ 0x60
 801906e:	fb02 c101 	mla	r1, r2, r1, ip
 8019072:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8019076:	4357      	muls	r7, r2
 8019078:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801907c:	3601      	adds	r6, #1
 801907e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8019080:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019082:	4b8c      	ldr	r3, [pc, #560]	@ (80192b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8019084:	b2b6      	uxth	r6, r6
 8019086:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801908a:	1d32      	adds	r2, r6, #4
 801908c:	9206      	str	r2, [sp, #24]
 801908e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019090:	43d2      	mvns	r2, r2
 8019092:	b2d2      	uxtb	r2, r2
 8019094:	b2ad      	uxth	r5, r5
 8019096:	9215      	str	r2, [sp, #84]	@ 0x54
 8019098:	9a04      	ldr	r2, [sp, #16]
 801909a:	2d00      	cmp	r5, #0
 801909c:	bf0c      	ite	eq
 801909e:	4611      	moveq	r1, r2
 80190a0:	2100      	movne	r1, #0
 80190a2:	2200      	movs	r2, #0
 80190a4:	1b1b      	subs	r3, r3, r4
 80190a6:	b289      	uxth	r1, r1
 80190a8:	920d      	str	r2, [sp, #52]	@ 0x34
 80190aa:	9319      	str	r3, [sp, #100]	@ 0x64
 80190ac:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80190ae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80190b0:	fa12 f383 	uxtah	r3, r2, r3
 80190b4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80190b6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80190ba:	3304      	adds	r3, #4
 80190bc:	9307      	str	r3, [sp, #28]
 80190be:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80190c0:	455b      	cmp	r3, fp
 80190c2:	f240 817c 	bls.w	80193be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 80190c6:	9a01      	ldr	r2, [sp, #4]
 80190c8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80190cc:	fbb5 f3f3 	udiv	r3, r5, r3
 80190d0:	1ad3      	subs	r3, r2, r3
 80190d2:	b29b      	uxth	r3, r3
 80190d4:	9316      	str	r3, [sp, #88]	@ 0x58
 80190d6:	9b07      	ldr	r3, [sp, #28]
 80190d8:	9807      	ldr	r0, [sp, #28]
 80190da:	785a      	ldrb	r2, [r3, #1]
 80190dc:	789b      	ldrb	r3, [r3, #2]
 80190de:	7800      	ldrb	r0, [r0, #0]
 80190e0:	9011      	str	r0, [sp, #68]	@ 0x44
 80190e2:	021b      	lsls	r3, r3, #8
 80190e4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80190e8:	9a07      	ldr	r2, [sp, #28]
 80190ea:	78d2      	ldrb	r2, [r2, #3]
 80190ec:	4313      	orrs	r3, r2
 80190ee:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80190f0:	3001      	adds	r0, #1
 80190f2:	441a      	add	r2, r3
 80190f4:	9005      	str	r0, [sp, #20]
 80190f6:	1c50      	adds	r0, r2, #1
 80190f8:	9003      	str	r0, [sp, #12]
 80190fa:	7852      	ldrb	r2, [r2, #1]
 80190fc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80190fe:	0212      	lsls	r2, r2, #8
 8019100:	5cc3      	ldrb	r3, [r0, r3]
 8019102:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8019106:	431a      	orrs	r2, r3
 8019108:	b293      	uxth	r3, r2
 801910a:	930c      	str	r3, [sp, #48]	@ 0x30
 801910c:	2300      	movs	r3, #0
 801910e:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8019112:	9308      	str	r3, [sp, #32]
 8019114:	461a      	mov	r2, r3
 8019116:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801911a:	930e      	str	r3, [sp, #56]	@ 0x38
 801911c:	f04f 0801 	mov.w	r8, #1
 8019120:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8019124:	f8cd 8008 	str.w	r8, [sp, #8]
 8019128:	46c4      	mov	ip, r8
 801912a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801912c:	2d00      	cmp	r5, #0
 801912e:	d07c      	beq.n	801922a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8019130:	45ac      	cmp	ip, r5
 8019132:	d26c      	bcs.n	801920e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8019134:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019136:	eba5 050c 	sub.w	r5, r5, ip
 801913a:	455b      	cmp	r3, fp
 801913c:	b2ad      	uxth	r5, r5
 801913e:	4608      	mov	r0, r1
 8019140:	d802      	bhi.n	8019148 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8019142:	e070      	b.n	8019226 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8019144:	2b00      	cmp	r3, #0
 8019146:	d15c      	bne.n	8019202 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8019148:	9b03      	ldr	r3, [sp, #12]
 801914a:	9a02      	ldr	r2, [sp, #8]
 801914c:	785b      	ldrb	r3, [r3, #1]
 801914e:	9902      	ldr	r1, [sp, #8]
 8019150:	f1c2 0207 	rsb	r2, r2, #7
 8019154:	4093      	lsls	r3, r2
 8019156:	005b      	lsls	r3, r3, #1
 8019158:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801915c:	9b03      	ldr	r3, [sp, #12]
 801915e:	781b      	ldrb	r3, [r3, #0]
 8019160:	410b      	asrs	r3, r1
 8019162:	3101      	adds	r1, #1
 8019164:	b2c9      	uxtb	r1, r1
 8019166:	2908      	cmp	r1, #8
 8019168:	9102      	str	r1, [sp, #8]
 801916a:	9903      	ldr	r1, [sp, #12]
 801916c:	bf0a      	itet	eq
 801916e:	3102      	addeq	r1, #2
 8019170:	3101      	addne	r1, #1
 8019172:	9103      	streq	r1, [sp, #12]
 8019174:	b2db      	uxtb	r3, r3
 8019176:	bf0a      	itet	eq
 8019178:	2100      	moveq	r1, #0
 801917a:	9103      	strne	r1, [sp, #12]
 801917c:	9102      	streq	r1, [sp, #8]
 801917e:	4313      	orrs	r3, r2
 8019180:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8019182:	b29a      	uxth	r2, r3
 8019184:	4291      	cmp	r1, r2
 8019186:	d30a      	bcc.n	801919e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8019188:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801918c:	2301      	movs	r3, #1
 801918e:	9905      	ldr	r1, [sp, #20]
 8019190:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8019194:	d30f      	bcc.n	80191b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8019196:	2100      	movs	r1, #0
 8019198:	4698      	mov	r8, r3
 801919a:	9100      	str	r1, [sp, #0]
 801919c:	e032      	b.n	8019204 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801919e:	9b05      	ldr	r3, [sp, #20]
 80191a0:	429a      	cmp	r2, r3
 80191a2:	d318      	bcc.n	80191d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 80191a4:	eb04 0308 	add.w	r3, r4, r8
 80191a8:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 80191ac:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80191b0:	f108 0301 	add.w	r3, r8, #1
 80191b4:	b29b      	uxth	r3, r3
 80191b6:	9905      	ldr	r1, [sp, #20]
 80191b8:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 80191bc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80191c0:	710e      	strb	r6, [r1, #4]
 80191c2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80191c4:	80ce      	strh	r6, [r1, #6]
 80191c6:	f108 0601 	add.w	r6, r8, #1
 80191ca:	714e      	strb	r6, [r1, #5]
 80191cc:	9905      	ldr	r1, [sp, #20]
 80191ce:	3101      	adds	r1, #1
 80191d0:	b289      	uxth	r1, r1
 80191d2:	9105      	str	r1, [sp, #20]
 80191d4:	e7df      	b.n	8019196 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 80191d6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80191da:	4611      	mov	r1, r2
 80191dc:	795b      	ldrb	r3, [r3, #5]
 80191de:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80191e2:	4426      	add	r6, r4
 80191e4:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 80191e6:	4437      	add	r7, r6
 80191e8:	2f00      	cmp	r7, #0
 80191ea:	dd06      	ble.n	80191fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80191ec:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80191f0:	790f      	ldrb	r7, [r1, #4]
 80191f2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80191f6:	88c9      	ldrh	r1, [r1, #6]
 80191f8:	e7f4      	b.n	80191e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 80191fa:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80191fe:	b29b      	uxth	r3, r3
 8019200:	e7c5      	b.n	801918e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8019202:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8019204:	920c      	str	r2, [sp, #48]	@ 0x30
 8019206:	4601      	mov	r1, r0
 8019208:	9a00      	ldr	r2, [sp, #0]
 801920a:	469c      	mov	ip, r3
 801920c:	e78e      	b.n	801912c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801920e:	1957      	adds	r7, r2, r5
 8019210:	ebac 0305 	sub.w	r3, ip, r5
 8019214:	b2ba      	uxth	r2, r7
 8019216:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801921a:	9200      	str	r2, [sp, #0]
 801921c:	b29b      	uxth	r3, r3
 801921e:	2500      	movs	r5, #0
 8019220:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019222:	455a      	cmp	r2, fp
 8019224:	d88e      	bhi.n	8019144 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8019226:	4601      	mov	r1, r0
 8019228:	e749      	b.n	80190be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801922a:	458c      	cmp	ip, r1
 801922c:	bf2c      	ite	cs
 801922e:	4628      	movcs	r0, r5
 8019230:	462b      	movcc	r3, r5
 8019232:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8019234:	bf27      	ittee	cs
 8019236:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8019238:	ebac 0301 	subcs.w	r3, ip, r1
 801923c:	eba1 000c 	subcc.w	r0, r1, ip
 8019240:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8019244:	bf2c      	ite	cs
 8019246:	b29b      	uxthcs	r3, r3
 8019248:	b280      	uxthcc	r0, r0
 801924a:	2dff      	cmp	r5, #255	@ 0xff
 801924c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801924e:	eb02 0705 	add.w	r7, r2, r5
 8019252:	b2bd      	uxth	r5, r7
 8019254:	9500      	str	r5, [sp, #0]
 8019256:	d12f      	bne.n	80192b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8019258:	465e      	mov	r6, fp
 801925a:	9d00      	ldr	r5, [sp, #0]
 801925c:	42aa      	cmp	r2, r5
 801925e:	f040 8084 	bne.w	801936a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8019262:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019264:	458c      	cmp	ip, r1
 8019266:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801926a:	d3d8      	bcc.n	801921e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801926c:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801926e:	9904      	ldr	r1, [sp, #16]
 8019270:	8812      	ldrh	r2, [r2, #0]
 8019272:	1a52      	subs	r2, r2, r1
 8019274:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8019278:	9a08      	ldr	r2, [sp, #32]
 801927a:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801927c:	3201      	adds	r2, #1
 801927e:	428a      	cmp	r2, r1
 8019280:	9208      	str	r2, [sp, #32]
 8019282:	f040 8092 	bne.w	80193aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8019286:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801928a:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801928e:	9b04      	ldr	r3, [sp, #16]
 8019290:	eba5 050c 	sub.w	r5, r5, ip
 8019294:	b2ad      	uxth	r5, r5
 8019296:	2d00      	cmp	r5, #0
 8019298:	bf08      	it	eq
 801929a:	4619      	moveq	r1, r3
 801929c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801929e:	bf18      	it	ne
 80192a0:	2100      	movne	r1, #0
 80192a2:	3301      	adds	r3, #1
 80192a4:	930d      	str	r3, [sp, #52]	@ 0x34
 80192a6:	b289      	uxth	r1, r1
 80192a8:	e700      	b.n	80190ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80192aa:	bf00      	nop
 80192ac:	200157c0 	.word	0x200157c0
 80192b0:	200157ba 	.word	0x200157ba
 80192b4:	fffff7fb 	.word	0xfffff7fb
 80192b8:	46d9      	mov	r9, fp
 80192ba:	9d00      	ldr	r5, [sp, #0]
 80192bc:	42aa      	cmp	r2, r5
 80192be:	d0d0      	beq.n	8019262 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 80192c0:	1c55      	adds	r5, r2, #1
 80192c2:	4422      	add	r2, r4
 80192c4:	9517      	str	r5, [sp, #92]	@ 0x5c
 80192c6:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 80192ca:	9a06      	ldr	r2, [sp, #24]
 80192cc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80192d0:	4472      	add	r2, lr
 80192d2:	9212      	str	r2, [sp, #72]	@ 0x48
 80192d4:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80192d6:	f8b9 2000 	ldrh.w	r2, [r9]
 80192da:	f897 a002 	ldrb.w	sl, [r7, #2]
 80192de:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80192e0:	1216      	asrs	r6, r2, #8
 80192e2:	fb1a fa07 	smulbb	sl, sl, r7
 80192e6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80192ea:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80192ec:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80192f0:	fb06 a607 	mla	r6, r6, r7, sl
 80192f4:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80192f6:	f897 a001 	ldrb.w	sl, [r7, #1]
 80192fa:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80192fc:	10d5      	asrs	r5, r2, #3
 80192fe:	fb1a fa07 	smulbb	sl, sl, r7
 8019302:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019306:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8019308:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801930c:	fb05 a507 	mla	r5, r5, r7, sl
 8019310:	9f06      	ldr	r7, [sp, #24]
 8019312:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019316:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8019318:	00d2      	lsls	r2, r2, #3
 801931a:	fb1e fe07 	smulbb	lr, lr, r7
 801931e:	b2d2      	uxtb	r2, r2
 8019320:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8019322:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019326:	b2b6      	uxth	r6, r6
 8019328:	fb02 e207 	mla	r2, r2, r7, lr
 801932c:	b292      	uxth	r2, r2
 801932e:	b2ad      	uxth	r5, r5
 8019330:	f106 0a01 	add.w	sl, r6, #1
 8019334:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8019338:	f102 0e01 	add.w	lr, r2, #1
 801933c:	f105 0a01 	add.w	sl, r5, #1
 8019340:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8019344:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019348:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801934c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8019350:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019354:	ea4e 0606 	orr.w	r6, lr, r6
 8019358:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801935c:	ea46 060a 	orr.w	r6, r6, sl
 8019360:	f829 6b02 	strh.w	r6, [r9], #2
 8019364:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019368:	e7a7      	b.n	80192ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801936a:	f102 0e01 	add.w	lr, r2, #1
 801936e:	4422      	add	r2, r4
 8019370:	9f06      	ldr	r7, [sp, #24]
 8019372:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8019376:	9a06      	ldr	r2, [sp, #24]
 8019378:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801937c:	eb02 0a05 	add.w	sl, r2, r5
 8019380:	4a13      	ldr	r2, [pc, #76]	@ (80193d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 8019382:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8019386:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801938a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801938e:	00d2      	lsls	r2, r2, #3
 8019390:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019394:	ea49 0202 	orr.w	r2, r9, r2
 8019398:	f817 9005 	ldrb.w	r9, [r7, r5]
 801939c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80193a0:	f826 2b02 	strh.w	r2, [r6], #2
 80193a4:	fa1f f28e 	uxth.w	r2, lr
 80193a8:	e757      	b.n	801925a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 80193aa:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80193ae:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80193b2:	1a2d      	subs	r5, r5, r0
 80193b4:	b2ad      	uxth	r5, r5
 80193b6:	2d00      	cmp	r5, #0
 80193b8:	bf18      	it	ne
 80193ba:	2000      	movne	r0, #0
 80193bc:	e730      	b.n	8019220 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80193be:	4b05      	ldr	r3, [pc, #20]	@ (80193d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 80193c0:	6818      	ldr	r0, [r3, #0]
 80193c2:	6803      	ldr	r3, [r0, #0]
 80193c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80193c6:	4798      	blx	r3
 80193c8:	b01f      	add	sp, #124	@ 0x7c
 80193ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193ce:	bf00      	nop
 80193d0:	fffff800 	.word	0xfffff800
 80193d4:	200157c0 	.word	0x200157c0

080193d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80193d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193dc:	b091      	sub	sp, #68	@ 0x44
 80193de:	469b      	mov	fp, r3
 80193e0:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 80193e4:	4616      	mov	r6, r2
 80193e6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 80193ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 80193ee:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 80193f2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80193f6:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80193fa:	4604      	mov	r4, r0
 80193fc:	460d      	mov	r5, r1
 80193fe:	4640      	mov	r0, r8
 8019400:	4659      	mov	r1, fp
 8019402:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8019406:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801940a:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801940e:	f7f1 fc85 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 8019412:	4631      	mov	r1, r6
 8019414:	4640      	mov	r0, r8
 8019416:	f7f1 fc81 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 801941a:	4b74      	ldr	r3, [pc, #464]	@ (80195ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801941c:	8818      	ldrh	r0, [r3, #0]
 801941e:	4b74      	ldr	r3, [pc, #464]	@ (80195f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8019420:	8819      	ldrh	r1, [r3, #0]
 8019422:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8019426:	2b00      	cmp	r3, #0
 8019428:	b202      	sxth	r2, r0
 801942a:	b20e      	sxth	r6, r1
 801942c:	da07      	bge.n	801943e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801942e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8019432:	4463      	add	r3, ip
 8019434:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8019438:	2300      	movs	r3, #0
 801943a:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801943e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8019442:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8019446:	1ad2      	subs	r2, r2, r3
 8019448:	4594      	cmp	ip, r2
 801944a:	bfc4      	itt	gt
 801944c:	1ac2      	subgt	r2, r0, r3
 801944e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8019452:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8019456:	2a00      	cmp	r2, #0
 8019458:	da07      	bge.n	801946a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801945a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801945e:	4462      	add	r2, ip
 8019460:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8019464:	2200      	movs	r2, #0
 8019466:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801946a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801946e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8019472:	eba6 060a 	sub.w	r6, r6, sl
 8019476:	42b2      	cmp	r2, r6
 8019478:	bfc4      	itt	gt
 801947a:	eba1 020a 	subgt.w	r2, r1, sl
 801947e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8019482:	4a5c      	ldr	r2, [pc, #368]	@ (80195f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8019484:	7812      	ldrb	r2, [r2, #0]
 8019486:	b9a2      	cbnz	r2, 80194b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8019488:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801948c:	4286      	cmp	r6, r0
 801948e:	4640      	mov	r0, r8
 8019490:	9303      	str	r3, [sp, #12]
 8019492:	bf14      	ite	ne
 8019494:	2600      	movne	r6, #0
 8019496:	2601      	moveq	r6, #1
 8019498:	f7f1 fc83 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801949c:	9b03      	ldr	r3, [sp, #12]
 801949e:	b160      	cbz	r0, 80194ba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80194a0:	2300      	movs	r3, #0
 80194a2:	8023      	strh	r3, [r4, #0]
 80194a4:	8063      	strh	r3, [r4, #2]
 80194a6:	80a3      	strh	r3, [r4, #4]
 80194a8:	4620      	mov	r0, r4
 80194aa:	80e3      	strh	r3, [r4, #6]
 80194ac:	b011      	add	sp, #68	@ 0x44
 80194ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80194b2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80194b6:	428e      	cmp	r6, r1
 80194b8:	e7e9      	b.n	801948e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80194ba:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80194be:	9205      	str	r2, [sp, #20]
 80194c0:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80194c4:	9206      	str	r2, [sp, #24]
 80194c6:	f8bb 2000 	ldrh.w	r2, [fp]
 80194ca:	900e      	str	r0, [sp, #56]	@ 0x38
 80194cc:	1a9b      	subs	r3, r3, r2
 80194ce:	b21b      	sxth	r3, r3
 80194d0:	9303      	str	r3, [sp, #12]
 80194d2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80194d6:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 80194da:	ebaa 0a03 	sub.w	sl, sl, r3
 80194de:	fa0f f38a 	sxth.w	r3, sl
 80194e2:	9304      	str	r3, [sp, #16]
 80194e4:	9b03      	ldr	r3, [sp, #12]
 80194e6:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 80194ea:	9b04      	ldr	r3, [sp, #16]
 80194ec:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80194f0:	9b05      	ldr	r3, [sp, #20]
 80194f2:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80194f6:	a90e      	add	r1, sp, #56	@ 0x38
 80194f8:	9b06      	ldr	r3, [sp, #24]
 80194fa:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80194fe:	a80c      	add	r0, sp, #48	@ 0x30
 8019500:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8019504:	f7f7 f956 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019508:	4640      	mov	r0, r8
 801950a:	f7f7 f92b 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801950e:	a80e      	add	r0, sp, #56	@ 0x38
 8019510:	f7f7 f928 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019514:	4b38      	ldr	r3, [pc, #224]	@ (80195f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8019516:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801951a:	881b      	ldrh	r3, [r3, #0]
 801951c:	9307      	str	r3, [sp, #28]
 801951e:	682b      	ldr	r3, [r5, #0]
 8019520:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 80195fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8019524:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019526:	4628      	mov	r0, r5
 8019528:	4798      	blx	r3
 801952a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801952e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8019532:	4681      	mov	r9, r0
 8019534:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8019538:	f8db 0000 	ldr.w	r0, [fp]
 801953c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801953e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8019542:	6803      	ldr	r3, [r0, #0]
 8019544:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8019546:	4798      	blx	r3
 8019548:	4607      	mov	r7, r0
 801954a:	f8db 0000 	ldr.w	r0, [fp]
 801954e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8019552:	6803      	ldr	r3, [r0, #0]
 8019554:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8019558:	9109      	str	r1, [sp, #36]	@ 0x24
 801955a:	9208      	str	r2, [sp, #32]
 801955c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801955e:	4798      	blx	r3
 8019560:	f010 0f01 	tst.w	r0, #1
 8019564:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019568:	d012      	beq.n	8019590 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801956a:	f8db 0000 	ldr.w	r0, [fp]
 801956e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8019572:	6803      	ldr	r3, [r0, #0]
 8019574:	9200      	str	r2, [sp, #0]
 8019576:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 8019578:	e898 0006 	ldmia.w	r8, {r1, r2}
 801957c:	462b      	mov	r3, r5
 801957e:	47b0      	blx	r6
 8019580:	9b03      	ldr	r3, [sp, #12]
 8019582:	8023      	strh	r3, [r4, #0]
 8019584:	9b04      	ldr	r3, [sp, #16]
 8019586:	8063      	strh	r3, [r4, #2]
 8019588:	9b05      	ldr	r3, [sp, #20]
 801958a:	80a3      	strh	r3, [r4, #4]
 801958c:	9b06      	ldr	r3, [sp, #24]
 801958e:	e78b      	b.n	80194a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8019590:	fb09 f202 	mul.w	r2, r9, r2
 8019594:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8019598:	440f      	add	r7, r1
 801959a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801959e:	b166      	cbz	r6, 80195ba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80195a0:	9a07      	ldr	r2, [sp, #28]
 80195a2:	4592      	cmp	sl, r2
 80195a4:	d109      	bne.n	80195ba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80195a6:	f8db 0000 	ldr.w	r0, [fp]
 80195aa:	6802      	ldr	r2, [r0, #0]
 80195ac:	fb09 f303 	mul.w	r3, r9, r3
 80195b0:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 80195b2:	4629      	mov	r1, r5
 80195b4:	463a      	mov	r2, r7
 80195b6:	47b0      	blx	r6
 80195b8:	e7e2      	b.n	8019580 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80195ba:	fb0a f303 	mul.w	r3, sl, r3
 80195be:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 80195fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80195c2:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80195c6:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80195ca:	4545      	cmp	r5, r8
 80195cc:	d2d8      	bcs.n	8019580 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80195ce:	f8db 0000 	ldr.w	r0, [fp]
 80195d2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80195d6:	6802      	ldr	r2, [r0, #0]
 80195d8:	4629      	mov	r1, r5
 80195da:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 80195de:	005b      	lsls	r3, r3, #1
 80195e0:	463a      	mov	r2, r7
 80195e2:	47d0      	blx	sl
 80195e4:	444f      	add	r7, r9
 80195e6:	4435      	add	r5, r6
 80195e8:	e7ef      	b.n	80195ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80195ea:	bf00      	nop
 80195ec:	200157b4 	.word	0x200157b4
 80195f0:	200157b6 	.word	0x200157b6
 80195f4:	200157b8 	.word	0x200157b8
 80195f8:	200157ba 	.word	0x200157ba
 80195fc:	200157c0 	.word	0x200157c0

08019600 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8019600:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019602:	4606      	mov	r6, r0
 8019604:	b087      	sub	sp, #28
 8019606:	460c      	mov	r4, r1
 8019608:	4617      	mov	r7, r2
 801960a:	461d      	mov	r5, r3
 801960c:	b333      	cbz	r3, 801965c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801960e:	4608      	mov	r0, r1
 8019610:	f7f1 fbc7 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019614:	bb10      	cbnz	r0, 801965c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8019616:	6820      	ldr	r0, [r4, #0]
 8019618:	6861      	ldr	r1, [r4, #4]
 801961a:	4c1c      	ldr	r4, [pc, #112]	@ (801968c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801961c:	ab04      	add	r3, sp, #16
 801961e:	c303      	stmia	r3!, {r0, r1}
 8019620:	a804      	add	r0, sp, #16
 8019622:	f7f7 f89f 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019626:	6820      	ldr	r0, [r4, #0]
 8019628:	6803      	ldr	r3, [r0, #0]
 801962a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801962c:	4798      	blx	r3
 801962e:	2dff      	cmp	r5, #255	@ 0xff
 8019630:	d016      	beq.n	8019660 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8019632:	f010 0f08 	tst.w	r0, #8
 8019636:	6820      	ldr	r0, [r4, #0]
 8019638:	d015      	beq.n	8019666 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801963a:	2400      	movs	r4, #0
 801963c:	6801      	ldr	r1, [r0, #0]
 801963e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8019642:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019646:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801964a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801964e:	9401      	str	r4, [sp, #4]
 8019650:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8019654:	9400      	str	r4, [sp, #0]
 8019656:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 8019658:	4639      	mov	r1, r7
 801965a:	47a0      	blx	r4
 801965c:	b007      	add	sp, #28
 801965e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019660:	f010 0f02 	tst.w	r0, #2
 8019664:	e7e7      	b.n	8019636 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8019666:	6803      	ldr	r3, [r0, #0]
 8019668:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801966a:	4798      	blx	r3
 801966c:	4b08      	ldr	r3, [pc, #32]	@ (8019690 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801966e:	881a      	ldrh	r2, [r3, #0]
 8019670:	6833      	ldr	r3, [r6, #0]
 8019672:	e9cd 7500 	strd	r7, r5, [sp]
 8019676:	4601      	mov	r1, r0
 8019678:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801967a:	4630      	mov	r0, r6
 801967c:	ab04      	add	r3, sp, #16
 801967e:	47a8      	blx	r5
 8019680:	6820      	ldr	r0, [r4, #0]
 8019682:	6803      	ldr	r3, [r0, #0]
 8019684:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019686:	4798      	blx	r3
 8019688:	e7e8      	b.n	801965c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801968a:	bf00      	nop
 801968c:	200157c0 	.word	0x200157c0
 8019690:	200157ba 	.word	0x200157ba

08019694 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8019694:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019698:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801969c:	9e08      	ldr	r6, [sp, #32]
 801969e:	4688      	mov	r8, r1
 80196a0:	4614      	mov	r4, r2
 80196a2:	461d      	mov	r5, r3
 80196a4:	2f00      	cmp	r7, #0
 80196a6:	f000 80a9 	beq.w	80197fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80196aa:	4618      	mov	r0, r3
 80196ac:	f7f1 fb79 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80196b0:	2800      	cmp	r0, #0
 80196b2:	f040 80a3 	bne.w	80197fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80196b6:	f9b5 1000 	ldrsh.w	r1, [r5]
 80196ba:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80196be:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80196c2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80196c6:	fb04 1303 	mla	r3, r4, r3, r1
 80196ca:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80196ce:	4365      	muls	r5, r4
 80196d0:	2fff      	cmp	r7, #255	@ 0xff
 80196d2:	eba4 0200 	sub.w	r2, r4, r0
 80196d6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80196da:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80196de:	d04a      	beq.n	8019776 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 80196e0:	b2bc      	uxth	r4, r7
 80196e2:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 80196e6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80196ea:	fa5f f788 	uxtb.w	r7, r8
 80196ee:	b2f3      	uxtb	r3, r6
 80196f0:	0040      	lsls	r0, r0, #1
 80196f2:	fb0e fe04 	mul.w	lr, lr, r4
 80196f6:	4367      	muls	r7, r4
 80196f8:	4363      	muls	r3, r4
 80196fa:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80196fe:	fa1f fc8c 	uxth.w	ip, ip
 8019702:	42a9      	cmp	r1, r5
 8019704:	d27a      	bcs.n	80197fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8019706:	eb01 0900 	add.w	r9, r1, r0
 801970a:	4549      	cmp	r1, r9
 801970c:	d231      	bcs.n	8019772 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801970e:	880a      	ldrh	r2, [r1, #0]
 8019710:	1214      	asrs	r4, r2, #8
 8019712:	10d6      	asrs	r6, r2, #3
 8019714:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8019718:	00d2      	lsls	r2, r2, #3
 801971a:	b2d2      	uxtb	r2, r2
 801971c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8019720:	fb14 f40c 	smulbb	r4, r4, ip
 8019724:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019728:	4474      	add	r4, lr
 801972a:	fb12 f20c 	smulbb	r2, r2, ip
 801972e:	b2a4      	uxth	r4, r4
 8019730:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019734:	441a      	add	r2, r3
 8019736:	b292      	uxth	r2, r2
 8019738:	f104 0a01 	add.w	sl, r4, #1
 801973c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8019740:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019744:	fb16 f60c 	smulbb	r6, r6, ip
 8019748:	f102 0a01 	add.w	sl, r2, #1
 801974c:	443e      	add	r6, r7
 801974e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8019752:	b2b6      	uxth	r6, r6
 8019754:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8019758:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801975c:	4322      	orrs	r2, r4
 801975e:	1c74      	adds	r4, r6, #1
 8019760:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8019764:	0976      	lsrs	r6, r6, #5
 8019766:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801976a:	4332      	orrs	r2, r6
 801976c:	f821 2b02 	strh.w	r2, [r1], #2
 8019770:	e7cb      	b.n	801970a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8019772:	4441      	add	r1, r8
 8019774:	e7c5      	b.n	8019702 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8019776:	4f22      	ldr	r7, [pc, #136]	@ (8019800 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8019778:	0973      	lsrs	r3, r6, #5
 801977a:	ea08 0707 	and.w	r7, r8, r7
 801977e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019782:	433b      	orrs	r3, r7
 8019784:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019788:	4333      	orrs	r3, r6
 801978a:	07e7      	lsls	r7, r4, #31
 801978c:	b29b      	uxth	r3, r3
 801978e:	d50b      	bpl.n	80197a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8019790:	0040      	lsls	r0, r0, #1
 8019792:	0052      	lsls	r2, r2, #1
 8019794:	42a9      	cmp	r1, r5
 8019796:	d231      	bcs.n	80197fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8019798:	180c      	adds	r4, r1, r0
 801979a:	42a1      	cmp	r1, r4
 801979c:	d202      	bcs.n	80197a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801979e:	f821 3b02 	strh.w	r3, [r1], #2
 80197a2:	e7fa      	b.n	801979a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 80197a4:	4411      	add	r1, r2
 80197a6:	e7f5      	b.n	8019794 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 80197a8:	078e      	lsls	r6, r1, #30
 80197aa:	d008      	beq.n	80197be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80197ac:	0066      	lsls	r6, r4, #1
 80197ae:	460a      	mov	r2, r1
 80197b0:	42aa      	cmp	r2, r5
 80197b2:	d202      	bcs.n	80197ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 80197b4:	8013      	strh	r3, [r2, #0]
 80197b6:	4432      	add	r2, r6
 80197b8:	e7fa      	b.n	80197b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 80197ba:	3102      	adds	r1, #2
 80197bc:	3801      	subs	r0, #1
 80197be:	07c2      	lsls	r2, r0, #31
 80197c0:	d50b      	bpl.n	80197da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 80197c2:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 80197c6:	3a01      	subs	r2, #1
 80197c8:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80197cc:	0066      	lsls	r6, r4, #1
 80197ce:	42aa      	cmp	r2, r5
 80197d0:	d202      	bcs.n	80197d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80197d2:	8013      	strh	r3, [r2, #0]
 80197d4:	4432      	add	r2, r6
 80197d6:	e7fa      	b.n	80197ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 80197d8:	3801      	subs	r0, #1
 80197da:	b178      	cbz	r0, 80197fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80197dc:	1040      	asrs	r0, r0, #1
 80197de:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80197e2:	0080      	lsls	r0, r0, #2
 80197e4:	0064      	lsls	r4, r4, #1
 80197e6:	42a9      	cmp	r1, r5
 80197e8:	d208      	bcs.n	80197fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80197ea:	180e      	adds	r6, r1, r0
 80197ec:	460a      	mov	r2, r1
 80197ee:	42b2      	cmp	r2, r6
 80197f0:	d202      	bcs.n	80197f8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80197f2:	f842 3b04 	str.w	r3, [r2], #4
 80197f6:	e7fa      	b.n	80197ee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80197f8:	4421      	add	r1, r4
 80197fa:	e7f4      	b.n	80197e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80197fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019800:	00fff800 	.word	0x00fff800

08019804 <_ZN8touchgfx8LCD16bppC1Ev>:
 8019804:	2200      	movs	r2, #0
 8019806:	4912      	ldr	r1, [pc, #72]	@ (8019850 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8019808:	6001      	str	r1, [r0, #0]
 801980a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801980e:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8019812:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8019816:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801981a:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801981e:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 8019822:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8019826:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801982a:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801982e:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 8019832:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8019836:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801983a:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801983e:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 8019842:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8019846:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801984a:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801984e:	4770      	bx	lr
 8019850:	08027dcc 	.word	0x08027dcc

08019854 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8019854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019858:	460d      	mov	r5, r1
 801985a:	b08d      	sub	sp, #52	@ 0x34
 801985c:	4604      	mov	r4, r0
 801985e:	6808      	ldr	r0, [r1, #0]
 8019860:	6849      	ldr	r1, [r1, #4]
 8019862:	4699      	mov	r9, r3
 8019864:	ab08      	add	r3, sp, #32
 8019866:	c303      	stmia	r3!, {r0, r1}
 8019868:	6810      	ldr	r0, [r2, #0]
 801986a:	6851      	ldr	r1, [r2, #4]
 801986c:	ab0a      	add	r3, sp, #40	@ 0x28
 801986e:	c303      	stmia	r3!, {r0, r1}
 8019870:	a808      	add	r0, sp, #32
 8019872:	f7f6 ff77 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019876:	4629      	mov	r1, r5
 8019878:	a80a      	add	r0, sp, #40	@ 0x28
 801987a:	f7f6 ff9b 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801987e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8019882:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8019886:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801988a:	4d63      	ldr	r5, [pc, #396]	@ (8019a18 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801988c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8019890:	6828      	ldr	r0, [r5, #0]
 8019892:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8019896:	fb11 2103 	smlabb	r1, r1, r3, r2
 801989a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801989e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80198a2:	440a      	add	r2, r1
 80198a4:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80198a8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 80198ac:	4413      	add	r3, r2
 80198ae:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80198b2:	6803      	ldr	r3, [r0, #0]
 80198b4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80198b6:	4798      	blx	r3
 80198b8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80198bc:	d119      	bne.n	80198f2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 80198be:	f010 0f20 	tst.w	r0, #32
 80198c2:	6828      	ldr	r0, [r5, #0]
 80198c4:	d018      	beq.n	80198f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80198c6:	2500      	movs	r5, #0
 80198c8:	6801      	ldr	r1, [r0, #0]
 80198ca:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80198ce:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 80198d2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 80198d6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 80198da:	9502      	str	r5, [sp, #8]
 80198dc:	b2b6      	uxth	r6, r6
 80198de:	fa1f f588 	uxth.w	r5, r8
 80198e2:	9601      	str	r6, [sp, #4]
 80198e4:	9500      	str	r5, [sp, #0]
 80198e6:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 80198e8:	4621      	mov	r1, r4
 80198ea:	47a8      	blx	r5
 80198ec:	b00d      	add	sp, #52	@ 0x34
 80198ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80198f2:	f010 0f40 	tst.w	r0, #64	@ 0x40
 80198f6:	e7e4      	b.n	80198c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80198f8:	6803      	ldr	r3, [r0, #0]
 80198fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80198fc:	4798      	blx	r3
 80198fe:	4947      	ldr	r1, [pc, #284]	@ (8019a1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8019900:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8019904:	880b      	ldrh	r3, [r1, #0]
 8019906:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801990a:	fb03 5202 	mla	r2, r3, r2, r5
 801990e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019912:	4373      	muls	r3, r6
 8019914:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019918:	9307      	str	r3, [sp, #28]
 801991a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801991e:	9306      	str	r3, [sp, #24]
 8019920:	468a      	mov	sl, r1
 8019922:	9b07      	ldr	r3, [sp, #28]
 8019924:	4298      	cmp	r0, r3
 8019926:	d270      	bcs.n	8019a0a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8019928:	9b06      	ldr	r3, [sp, #24]
 801992a:	4621      	mov	r1, r4
 801992c:	eb00 0b03 	add.w	fp, r0, r3
 8019930:	4558      	cmp	r0, fp
 8019932:	d25d      	bcs.n	80199f0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8019934:	f851 4b04 	ldr.w	r4, [r1], #4
 8019938:	0e23      	lsrs	r3, r4, #24
 801993a:	d014      	beq.n	8019966 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801993c:	2bff      	cmp	r3, #255	@ 0xff
 801993e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8019942:	d112      	bne.n	801996a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8019944:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8019948:	d10f      	bne.n	801996a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801994a:	0963      	lsrs	r3, r4, #5
 801994c:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8019950:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019954:	f02c 0c07 	bic.w	ip, ip, #7
 8019958:	ea43 0c0c 	orr.w	ip, r3, ip
 801995c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019960:	ea4c 0404 	orr.w	r4, ip, r4
 8019964:	8004      	strh	r4, [r0, #0]
 8019966:	3002      	adds	r0, #2
 8019968:	e7e2      	b.n	8019930 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801996a:	fb09 f303 	mul.w	r3, r9, r3
 801996e:	8807      	ldrh	r7, [r0, #0]
 8019970:	1c5a      	adds	r2, r3, #1
 8019972:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8019976:	1212      	asrs	r2, r2, #8
 8019978:	123e      	asrs	r6, r7, #8
 801997a:	b293      	uxth	r3, r2
 801997c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8019980:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8019984:	43d2      	mvns	r2, r2
 8019986:	b2d2      	uxtb	r2, r2
 8019988:	10fd      	asrs	r5, r7, #3
 801998a:	fb1e fe03 	smulbb	lr, lr, r3
 801998e:	00ff      	lsls	r7, r7, #3
 8019990:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8019994:	fb06 e602 	mla	r6, r6, r2, lr
 8019998:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801999c:	b2ff      	uxtb	r7, r7
 801999e:	fa5f fc8c 	uxtb.w	ip, ip
 80199a2:	b2e4      	uxtb	r4, r4
 80199a4:	b2b6      	uxth	r6, r6
 80199a6:	fb1c fc03 	smulbb	ip, ip, r3
 80199aa:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80199ae:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80199b2:	fb14 f403 	smulbb	r4, r4, r3
 80199b6:	fb05 c502 	mla	r5, r5, r2, ip
 80199ba:	f106 0e01 	add.w	lr, r6, #1
 80199be:	fb07 4702 	mla	r7, r7, r2, r4
 80199c2:	b2ad      	uxth	r5, r5
 80199c4:	b2bf      	uxth	r7, r7
 80199c6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80199ca:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 80199ce:	f105 0c01 	add.w	ip, r5, #1
 80199d2:	1c7e      	adds	r6, r7, #1
 80199d4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80199d8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80199dc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80199e0:	096d      	lsrs	r5, r5, #5
 80199e2:	ea46 060e 	orr.w	r6, r6, lr
 80199e6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80199ea:	432e      	orrs	r6, r5
 80199ec:	8006      	strh	r6, [r0, #0]
 80199ee:	e7ba      	b.n	8019966 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80199f0:	f8ba 3000 	ldrh.w	r3, [sl]
 80199f4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 80199f8:	eba3 0308 	sub.w	r3, r3, r8
 80199fc:	eba4 0408 	sub.w	r4, r4, r8
 8019a00:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019a04:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8019a08:	e78b      	b.n	8019922 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8019a0a:	4b03      	ldr	r3, [pc, #12]	@ (8019a18 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8019a0c:	6818      	ldr	r0, [r3, #0]
 8019a0e:	6803      	ldr	r3, [r0, #0]
 8019a10:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019a12:	4798      	blx	r3
 8019a14:	e76a      	b.n	80198ec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8019a16:	bf00      	nop
 8019a18:	200157c0 	.word	0x200157c0
 8019a1c:	200157ba 	.word	0x200157ba

08019a20 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8019a20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019a24:	460c      	mov	r4, r1
 8019a26:	b085      	sub	sp, #20
 8019a28:	6810      	ldr	r0, [r2, #0]
 8019a2a:	6851      	ldr	r1, [r2, #4]
 8019a2c:	466d      	mov	r5, sp
 8019a2e:	c503      	stmia	r5!, {r0, r1}
 8019a30:	6818      	ldr	r0, [r3, #0]
 8019a32:	6859      	ldr	r1, [r3, #4]
 8019a34:	4616      	mov	r6, r2
 8019a36:	c503      	stmia	r5!, {r0, r1}
 8019a38:	4668      	mov	r0, sp
 8019a3a:	f7f6 fe93 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019a3e:	4631      	mov	r1, r6
 8019a40:	a802      	add	r0, sp, #8
 8019a42:	f7f6 feb7 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019a46:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8019a4a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8019a4e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8019a52:	4d28      	ldr	r5, [pc, #160]	@ (8019af4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8019a54:	4e28      	ldr	r6, [pc, #160]	@ (8019af8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8019a56:	6828      	ldr	r0, [r5, #0]
 8019a58:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8019a5c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8019a60:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019a64:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8019a68:	f8bd 1000 	ldrh.w	r1, [sp]
 8019a6c:	440a      	add	r2, r1
 8019a6e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8019a72:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8019a76:	4413      	add	r3, r2
 8019a78:	f8ad 300a 	strh.w	r3, [sp, #10]
 8019a7c:	6803      	ldr	r3, [r0, #0]
 8019a7e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019a80:	4798      	blx	r3
 8019a82:	8833      	ldrh	r3, [r6, #0]
 8019a84:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8019a88:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8019a8c:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8019afc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8019a90:	fb03 1202 	mla	r2, r3, r2, r1
 8019a94:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019a98:	fb08 f303 	mul.w	r3, r8, r3
 8019a9c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019aa0:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8019aa4:	4298      	cmp	r0, r3
 8019aa6:	d21d      	bcs.n	8019ae4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8019aa8:	eb00 080c 	add.w	r8, r0, ip
 8019aac:	4540      	cmp	r0, r8
 8019aae:	d20f      	bcs.n	8019ad0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8019ab0:	f854 1b04 	ldr.w	r1, [r4], #4
 8019ab4:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8019ab8:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8019abc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019ac0:	ea42 0209 	orr.w	r2, r2, r9
 8019ac4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8019ac8:	430a      	orrs	r2, r1
 8019aca:	f820 2b02 	strh.w	r2, [r0], #2
 8019ace:	e7ed      	b.n	8019aac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8019ad0:	8832      	ldrh	r2, [r6, #0]
 8019ad2:	1bd2      	subs	r2, r2, r7
 8019ad4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019ad8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8019adc:	1bd2      	subs	r2, r2, r7
 8019ade:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8019ae2:	e7df      	b.n	8019aa4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8019ae4:	6828      	ldr	r0, [r5, #0]
 8019ae6:	6803      	ldr	r3, [r0, #0]
 8019ae8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019aea:	4798      	blx	r3
 8019aec:	b005      	add	sp, #20
 8019aee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019af2:	bf00      	nop
 8019af4:	200157c0 	.word	0x200157c0
 8019af8:	200157ba 	.word	0x200157ba
 8019afc:	fffff800 	.word	0xfffff800

08019b00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8019b00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019b04:	460e      	mov	r6, r1
 8019b06:	b08e      	sub	sp, #56	@ 0x38
 8019b08:	4604      	mov	r4, r0
 8019b0a:	6808      	ldr	r0, [r1, #0]
 8019b0c:	6849      	ldr	r1, [r1, #4]
 8019b0e:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 8019ce8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8019b12:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8019cec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8019b16:	461d      	mov	r5, r3
 8019b18:	ab0a      	add	r3, sp, #40	@ 0x28
 8019b1a:	c303      	stmia	r3!, {r0, r1}
 8019b1c:	6810      	ldr	r0, [r2, #0]
 8019b1e:	6851      	ldr	r1, [r2, #4]
 8019b20:	ab0c      	add	r3, sp, #48	@ 0x30
 8019b22:	c303      	stmia	r3!, {r0, r1}
 8019b24:	a80a      	add	r0, sp, #40	@ 0x28
 8019b26:	f7f6 fe1d 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019b2a:	4631      	mov	r1, r6
 8019b2c:	a80c      	add	r0, sp, #48	@ 0x30
 8019b2e:	f7f6 fe41 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019b32:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8019b36:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8019b3a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8019b3e:	f8d8 0000 	ldr.w	r0, [r8]
 8019b42:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8019b46:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8019b4a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019b4e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8019b52:	440c      	add	r4, r1
 8019b54:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8019b58:	440a      	add	r2, r1
 8019b5a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8019b5e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8019b62:	4413      	add	r3, r2
 8019b64:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8019b68:	6803      	ldr	r3, [r0, #0]
 8019b6a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8019b6c:	4798      	blx	r3
 8019b6e:	2dff      	cmp	r5, #255	@ 0xff
 8019b70:	d124      	bne.n	8019bbc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8019b72:	f010 0f01 	tst.w	r0, #1
 8019b76:	f8d8 0000 	ldr.w	r0, [r8]
 8019b7a:	d022      	beq.n	8019bc2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8019b7c:	2100      	movs	r1, #0
 8019b7e:	f8d0 c000 	ldr.w	ip, [r0]
 8019b82:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8019b86:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8019b8a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8019b8e:	f04f 0e01 	mov.w	lr, #1
 8019b92:	f8cd e018 	str.w	lr, [sp, #24]
 8019b96:	f8b9 e000 	ldrh.w	lr, [r9]
 8019b9a:	9503      	str	r5, [sp, #12]
 8019b9c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8019ba0:	b2b6      	uxth	r6, r6
 8019ba2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8019ba6:	9102      	str	r1, [sp, #8]
 8019ba8:	b2bf      	uxth	r7, r7
 8019baa:	9601      	str	r6, [sp, #4]
 8019bac:	9700      	str	r7, [sp, #0]
 8019bae:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 8019bb2:	4621      	mov	r1, r4
 8019bb4:	47a8      	blx	r5
 8019bb6:	b00e      	add	sp, #56	@ 0x38
 8019bb8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019bbc:	f010 0f04 	tst.w	r0, #4
 8019bc0:	e7d9      	b.n	8019b76 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8019bc2:	6803      	ldr	r3, [r0, #0]
 8019bc4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019bc6:	4798      	blx	r3
 8019bc8:	f8b9 3000 	ldrh.w	r3, [r9]
 8019bcc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8019bd0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8019bd4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8019bd8:	fb03 1202 	mla	r2, r3, r2, r1
 8019bdc:	ebac 0c07 	sub.w	ip, ip, r7
 8019be0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019be4:	435e      	muls	r6, r3
 8019be6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8019bea:	2dff      	cmp	r5, #255	@ 0xff
 8019bec:	eba3 0707 	sub.w	r7, r3, r7
 8019bf0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019bf4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8019bf8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8019bfc:	d049      	beq.n	8019c92 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8019bfe:	43eb      	mvns	r3, r5
 8019c00:	fa1f f985 	uxth.w	r9, r5
 8019c04:	b2db      	uxtb	r3, r3
 8019c06:	42b0      	cmp	r0, r6
 8019c08:	d266      	bcs.n	8019cd8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8019c0a:	eb00 0a0e 	add.w	sl, r0, lr
 8019c0e:	4550      	cmp	r0, sl
 8019c10:	4621      	mov	r1, r4
 8019c12:	f104 0403 	add.w	r4, r4, #3
 8019c16:	d25b      	bcs.n	8019cd0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8019c18:	8802      	ldrh	r2, [r0, #0]
 8019c1a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8019c1e:	ea4f 2822 	mov.w	r8, r2, asr #8
 8019c22:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8019c26:	fb11 f109 	smulbb	r1, r1, r9
 8019c2a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8019c2e:	10d5      	asrs	r5, r2, #3
 8019c30:	fb08 1803 	mla	r8, r8, r3, r1
 8019c34:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8019c38:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019c3c:	fb11 f109 	smulbb	r1, r1, r9
 8019c40:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8019c44:	fb05 1503 	mla	r5, r5, r3, r1
 8019c48:	00d2      	lsls	r2, r2, #3
 8019c4a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8019c4e:	b2d2      	uxtb	r2, r2
 8019c50:	fb11 f109 	smulbb	r1, r1, r9
 8019c54:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019c58:	fa1f f888 	uxth.w	r8, r8
 8019c5c:	fb02 1203 	mla	r2, r2, r3, r1
 8019c60:	b292      	uxth	r2, r2
 8019c62:	f108 0101 	add.w	r1, r8, #1
 8019c66:	b2ad      	uxth	r5, r5
 8019c68:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8019c6c:	1c51      	adds	r1, r2, #1
 8019c6e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019c72:	1c69      	adds	r1, r5, #1
 8019c74:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8019c78:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8019c7c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019c80:	096d      	lsrs	r5, r5, #5
 8019c82:	ea42 0208 	orr.w	r2, r2, r8
 8019c86:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019c8a:	432a      	orrs	r2, r5
 8019c8c:	f820 2b02 	strh.w	r2, [r0], #2
 8019c90:	e7bd      	b.n	8019c0e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8019c92:	4a14      	ldr	r2, [pc, #80]	@ (8019ce4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8019c94:	42b0      	cmp	r0, r6
 8019c96:	d21f      	bcs.n	8019cd8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8019c98:	eb00 050e 	add.w	r5, r0, lr
 8019c9c:	42a8      	cmp	r0, r5
 8019c9e:	4621      	mov	r1, r4
 8019ca0:	f104 0403 	add.w	r4, r4, #3
 8019ca4:	d210      	bcs.n	8019cc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8019ca6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8019caa:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8019cae:	00db      	lsls	r3, r3, #3
 8019cb0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8019cb4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019cb8:	430b      	orrs	r3, r1
 8019cba:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8019cbe:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8019cc2:	f820 3b02 	strh.w	r3, [r0], #2
 8019cc6:	e7e9      	b.n	8019c9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8019cc8:	4438      	add	r0, r7
 8019cca:	eb01 040c 	add.w	r4, r1, ip
 8019cce:	e7e1      	b.n	8019c94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8019cd0:	4438      	add	r0, r7
 8019cd2:	eb01 040c 	add.w	r4, r1, ip
 8019cd6:	e796      	b.n	8019c06 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8019cd8:	4b03      	ldr	r3, [pc, #12]	@ (8019ce8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8019cda:	6818      	ldr	r0, [r3, #0]
 8019cdc:	6803      	ldr	r3, [r0, #0]
 8019cde:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019ce0:	4798      	blx	r3
 8019ce2:	e768      	b.n	8019bb6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8019ce4:	fffff800 	.word	0xfffff800
 8019ce8:	200157c0 	.word	0x200157c0
 8019cec:	200157ba 	.word	0x200157ba

08019cf0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8019cf0:	b4f0      	push	{r4, r5, r6, r7}
 8019cf2:	4616      	mov	r6, r2
 8019cf4:	2e01      	cmp	r6, #1
 8019cf6:	461c      	mov	r4, r3
 8019cf8:	460d      	mov	r5, r1
 8019cfa:	9a04      	ldr	r2, [sp, #16]
 8019cfc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8019d00:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8019d04:	d012      	beq.n	8019d2c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8019d06:	d303      	bcc.n	8019d10 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8019d08:	2e02      	cmp	r6, #2
 8019d0a:	d00a      	beq.n	8019d22 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8019d0c:	bcf0      	pop	{r4, r5, r6, r7}
 8019d0e:	4770      	bx	lr
 8019d10:	6805      	ldr	r5, [r0, #0]
 8019d12:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8019d16:	68ed      	ldr	r5, [r5, #12]
 8019d18:	4613      	mov	r3, r2
 8019d1a:	46ac      	mov	ip, r5
 8019d1c:	4622      	mov	r2, r4
 8019d1e:	bcf0      	pop	{r4, r5, r6, r7}
 8019d20:	4760      	bx	ip
 8019d22:	4621      	mov	r1, r4
 8019d24:	4628      	mov	r0, r5
 8019d26:	bcf0      	pop	{r4, r5, r6, r7}
 8019d28:	f7ff bd94 	b.w	8019854 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019d2c:	4621      	mov	r1, r4
 8019d2e:	4628      	mov	r0, r5
 8019d30:	bcf0      	pop	{r4, r5, r6, r7}
 8019d32:	f7ff bee5 	b.w	8019b00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08019d38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8019d38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d3c:	4681      	mov	r9, r0
 8019d3e:	b093      	sub	sp, #76	@ 0x4c
 8019d40:	6810      	ldr	r0, [r2, #0]
 8019d42:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8019d46:	4f6d      	ldr	r7, [pc, #436]	@ (8019efc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8019d48:	4688      	mov	r8, r1
 8019d4a:	6851      	ldr	r1, [r2, #4]
 8019d4c:	ac0e      	add	r4, sp, #56	@ 0x38
 8019d4e:	c403      	stmia	r4!, {r0, r1}
 8019d50:	6818      	ldr	r0, [r3, #0]
 8019d52:	6859      	ldr	r1, [r3, #4]
 8019d54:	ac10      	add	r4, sp, #64	@ 0x40
 8019d56:	4616      	mov	r6, r2
 8019d58:	c403      	stmia	r4!, {r0, r1}
 8019d5a:	a80e      	add	r0, sp, #56	@ 0x38
 8019d5c:	f7f6 fd02 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019d60:	4631      	mov	r1, r6
 8019d62:	a810      	add	r0, sp, #64	@ 0x40
 8019d64:	f7f6 fd26 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019d68:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8019d6c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8019d70:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8019d74:	4e62      	ldr	r6, [pc, #392]	@ (8019f00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8019d76:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8019d7a:	6830      	ldr	r0, [r6, #0]
 8019d7c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8019d80:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019d84:	4489      	add	r9, r1
 8019d86:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8019d8a:	440a      	add	r2, r1
 8019d8c:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8019d90:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8019d94:	4413      	add	r3, r2
 8019d96:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8019d9a:	6803      	ldr	r3, [r0, #0]
 8019d9c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8019d9e:	4798      	blx	r3
 8019da0:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8019da4:	6830      	ldr	r0, [r6, #0]
 8019da6:	d01d      	beq.n	8019de4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8019da8:	2200      	movs	r2, #0
 8019daa:	6801      	ldr	r1, [r0, #0]
 8019dac:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8019db0:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8019db4:	220b      	movs	r2, #11
 8019db6:	9207      	str	r2, [sp, #28]
 8019db8:	883a      	ldrh	r2, [r7, #0]
 8019dba:	9206      	str	r2, [sp, #24]
 8019dbc:	2201      	movs	r2, #1
 8019dbe:	e9cd a204 	strd	sl, r2, [sp, #16]
 8019dc2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8019dc6:	9203      	str	r2, [sp, #12]
 8019dc8:	b2a4      	uxth	r4, r4
 8019dca:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8019dce:	9200      	str	r2, [sp, #0]
 8019dd0:	b2ad      	uxth	r5, r5
 8019dd2:	9502      	str	r5, [sp, #8]
 8019dd4:	9401      	str	r4, [sp, #4]
 8019dd6:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 8019dd8:	4642      	mov	r2, r8
 8019dda:	4649      	mov	r1, r9
 8019ddc:	47a0      	blx	r4
 8019dde:	b013      	add	sp, #76	@ 0x4c
 8019de0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019de4:	6803      	ldr	r3, [r0, #0]
 8019de6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019de8:	4798      	blx	r3
 8019dea:	883b      	ldrh	r3, [r7, #0]
 8019dec:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8019df0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8019df4:	fb03 1202 	mla	r2, r3, r2, r1
 8019df8:	435d      	muls	r5, r3
 8019dfa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019dfe:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8019e02:	920c      	str	r2, [sp, #48]	@ 0x30
 8019e04:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8019e08:	1b12      	subs	r2, r2, r4
 8019e0a:	920d      	str	r2, [sp, #52]	@ 0x34
 8019e0c:	0062      	lsls	r2, r4, #1
 8019e0e:	1b1c      	subs	r4, r3, r4
 8019e10:	0063      	lsls	r3, r4, #1
 8019e12:	920a      	str	r2, [sp, #40]	@ 0x28
 8019e14:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019e16:	f04f 0e04 	mov.w	lr, #4
 8019e1a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019e1c:	4298      	cmp	r0, r3
 8019e1e:	d266      	bcs.n	8019eee <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8019e20:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019e22:	eb00 0b03 	add.w	fp, r0, r3
 8019e26:	4558      	cmp	r0, fp
 8019e28:	d25c      	bcs.n	8019ee4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8019e2a:	f819 3b01 	ldrb.w	r3, [r9], #1
 8019e2e:	fb1e e303 	smlabb	r3, lr, r3, lr
 8019e32:	f858 2003 	ldr.w	r2, [r8, r3]
 8019e36:	0e11      	lsrs	r1, r2, #24
 8019e38:	d012      	beq.n	8019e60 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8019e3a:	29ff      	cmp	r1, #255	@ 0xff
 8019e3c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8019e40:	d110      	bne.n	8019e64 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8019e42:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8019e46:	d10d      	bne.n	8019e64 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8019e48:	0953      	lsrs	r3, r2, #5
 8019e4a:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8019e4e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019e52:	f027 0707 	bic.w	r7, r7, #7
 8019e56:	431f      	orrs	r7, r3
 8019e58:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019e5c:	433a      	orrs	r2, r7
 8019e5e:	8002      	strh	r2, [r0, #0]
 8019e60:	3002      	adds	r0, #2
 8019e62:	e7e0      	b.n	8019e26 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8019e64:	fb0a f101 	mul.w	r1, sl, r1
 8019e68:	8806      	ldrh	r6, [r0, #0]
 8019e6a:	1c4b      	adds	r3, r1, #1
 8019e6c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8019e70:	1235      	asrs	r5, r6, #8
 8019e72:	10f4      	asrs	r4, r6, #3
 8019e74:	121b      	asrs	r3, r3, #8
 8019e76:	00f6      	lsls	r6, r6, #3
 8019e78:	b299      	uxth	r1, r3
 8019e7a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8019e7e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019e82:	b2f6      	uxtb	r6, r6
 8019e84:	43db      	mvns	r3, r3
 8019e86:	b2d2      	uxtb	r2, r2
 8019e88:	b2db      	uxtb	r3, r3
 8019e8a:	fb1c fc01 	smulbb	ip, ip, r1
 8019e8e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8019e92:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8019e96:	fb12 f201 	smulbb	r2, r2, r1
 8019e9a:	fb05 c503 	mla	r5, r5, r3, ip
 8019e9e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8019ea2:	b2ff      	uxtb	r7, r7
 8019ea4:	fb06 2203 	mla	r2, r6, r3, r2
 8019ea8:	b2ad      	uxth	r5, r5
 8019eaa:	fb17 f701 	smulbb	r7, r7, r1
 8019eae:	b292      	uxth	r2, r2
 8019eb0:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8019eb4:	fb04 7403 	mla	r4, r4, r3, r7
 8019eb8:	f105 0c01 	add.w	ip, r5, #1
 8019ebc:	1c57      	adds	r7, r2, #1
 8019ebe:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8019ec2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8019ec6:	b2a4      	uxth	r4, r4
 8019ec8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019ecc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019ed0:	433d      	orrs	r5, r7
 8019ed2:	1c67      	adds	r7, r4, #1
 8019ed4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8019ed8:	0964      	lsrs	r4, r4, #5
 8019eda:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8019ede:	4325      	orrs	r5, r4
 8019ee0:	8005      	strh	r5, [r0, #0]
 8019ee2:	e7bd      	b.n	8019e60 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8019ee4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019ee6:	4418      	add	r0, r3
 8019ee8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019eea:	4499      	add	r9, r3
 8019eec:	e795      	b.n	8019e1a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8019eee:	4b04      	ldr	r3, [pc, #16]	@ (8019f00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8019ef0:	6818      	ldr	r0, [r3, #0]
 8019ef2:	6803      	ldr	r3, [r0, #0]
 8019ef4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019ef6:	4798      	blx	r3
 8019ef8:	e771      	b.n	8019dde <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8019efa:	bf00      	nop
 8019efc:	200157ba 	.word	0x200157ba
 8019f00:	200157c0 	.word	0x200157c0

08019f04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8019f04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f08:	b087      	sub	sp, #28
 8019f0a:	4680      	mov	r8, r0
 8019f0c:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8019f10:	460d      	mov	r5, r1
 8019f12:	4614      	mov	r4, r2
 8019f14:	2e00      	cmp	r6, #0
 8019f16:	f000 80b9 	beq.w	801a08c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8019f1a:	6810      	ldr	r0, [r2, #0]
 8019f1c:	6851      	ldr	r1, [r2, #4]
 8019f1e:	af02      	add	r7, sp, #8
 8019f20:	c703      	stmia	r7!, {r0, r1}
 8019f22:	6818      	ldr	r0, [r3, #0]
 8019f24:	6859      	ldr	r1, [r3, #4]
 8019f26:	af04      	add	r7, sp, #16
 8019f28:	c703      	stmia	r7!, {r0, r1}
 8019f2a:	a802      	add	r0, sp, #8
 8019f2c:	f7f6 fc1a 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019f30:	4621      	mov	r1, r4
 8019f32:	a804      	add	r0, sp, #16
 8019f34:	f7f6 fc3e 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019f38:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019f3c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019f40:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8019f44:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8019f48:	fb14 2103 	smlabb	r1, r4, r3, r2
 8019f4c:	eb08 0401 	add.w	r4, r8, r1
 8019f50:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8019f54:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8019f58:	440a      	add	r2, r1
 8019f5a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8019f5e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019f62:	4413      	add	r3, r2
 8019f64:	f8ad 3012 	strh.w	r3, [sp, #18]
 8019f68:	4b4a      	ldr	r3, [pc, #296]	@ (801a094 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8019f6a:	6818      	ldr	r0, [r3, #0]
 8019f6c:	6803      	ldr	r3, [r0, #0]
 8019f6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019f70:	4798      	blx	r3
 8019f72:	4b49      	ldr	r3, [pc, #292]	@ (801a098 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8019f74:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8019f78:	881a      	ldrh	r2, [r3, #0]
 8019f7a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8019f7e:	2eff      	cmp	r6, #255	@ 0xff
 8019f80:	fb02 c101 	mla	r1, r2, r1, ip
 8019f84:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8019f88:	fb02 f207 	mul.w	r2, r2, r7
 8019f8c:	f105 0104 	add.w	r1, r5, #4
 8019f90:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8019f94:	461d      	mov	r5, r3
 8019f96:	d05a      	beq.n	801a04e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8019f98:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8019f9c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019fa0:	b2b6      	uxth	r6, r6
 8019fa2:	fa1f fe8e 	uxth.w	lr, lr
 8019fa6:	9301      	str	r3, [sp, #4]
 8019fa8:	4282      	cmp	r2, r0
 8019faa:	d96a      	bls.n	801a082 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8019fac:	eb00 0b0a 	add.w	fp, r0, sl
 8019fb0:	4583      	cmp	fp, r0
 8019fb2:	d940      	bls.n	801a036 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8019fb4:	f814 3b01 	ldrb.w	r3, [r4], #1
 8019fb8:	8805      	ldrh	r5, [r0, #0]
 8019fba:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8019fbe:	122f      	asrs	r7, r5, #8
 8019fc0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019fc4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019fc8:	fb17 f70e 	smulbb	r7, r7, lr
 8019fcc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019fd0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019fd4:	00ed      	lsls	r5, r5, #3
 8019fd6:	fb0c 7c06 	mla	ip, ip, r6, r7
 8019fda:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8019fde:	10df      	asrs	r7, r3, #3
 8019fe0:	b2ed      	uxtb	r5, r5
 8019fe2:	00db      	lsls	r3, r3, #3
 8019fe4:	fa1f fc8c 	uxth.w	ip, ip
 8019fe8:	fb19 f90e 	smulbb	r9, r9, lr
 8019fec:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019ff0:	b2db      	uxtb	r3, r3
 8019ff2:	fb15 f50e 	smulbb	r5, r5, lr
 8019ff6:	fb07 9706 	mla	r7, r7, r6, r9
 8019ffa:	fb03 5306 	mla	r3, r3, r6, r5
 8019ffe:	f10c 0901 	add.w	r9, ip, #1
 801a002:	b29b      	uxth	r3, r3
 801a004:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801a008:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801a00c:	f103 0c01 	add.w	ip, r3, #1
 801a010:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a014:	b2bf      	uxth	r7, r7
 801a016:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a01a:	ea4c 0c09 	orr.w	ip, ip, r9
 801a01e:	f107 0901 	add.w	r9, r7, #1
 801a022:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801a026:	097f      	lsrs	r7, r7, #5
 801a028:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a02c:	ea4c 0c07 	orr.w	ip, ip, r7
 801a030:	f820 cb02 	strh.w	ip, [r0], #2
 801a034:	e7bc      	b.n	8019fb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801a036:	9b01      	ldr	r3, [sp, #4]
 801a038:	881b      	ldrh	r3, [r3, #0]
 801a03a:	eba3 0308 	sub.w	r3, r3, r8
 801a03e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a042:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801a046:	eba3 0308 	sub.w	r3, r3, r8
 801a04a:	441c      	add	r4, r3
 801a04c:	e7ac      	b.n	8019fa8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801a04e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801a052:	4282      	cmp	r2, r0
 801a054:	d915      	bls.n	801a082 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801a056:	eb00 060a 	add.w	r6, r0, sl
 801a05a:	4286      	cmp	r6, r0
 801a05c:	d906      	bls.n	801a06c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801a05e:	f814 3b01 	ldrb.w	r3, [r4], #1
 801a062:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801a066:	f820 3b02 	strh.w	r3, [r0], #2
 801a06a:	e7f6      	b.n	801a05a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801a06c:	882b      	ldrh	r3, [r5, #0]
 801a06e:	eba3 0308 	sub.w	r3, r3, r8
 801a072:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a076:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801a07a:	eba3 0308 	sub.w	r3, r3, r8
 801a07e:	441c      	add	r4, r3
 801a080:	e7e7      	b.n	801a052 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801a082:	4b04      	ldr	r3, [pc, #16]	@ (801a094 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801a084:	6818      	ldr	r0, [r3, #0]
 801a086:	6803      	ldr	r3, [r0, #0]
 801a088:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a08a:	4798      	blx	r3
 801a08c:	b007      	add	sp, #28
 801a08e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a092:	bf00      	nop
 801a094:	200157c0 	.word	0x200157c0
 801a098:	200157ba 	.word	0x200157ba

0801a09c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801a09c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0a0:	b091      	sub	sp, #68	@ 0x44
 801a0a2:	4680      	mov	r8, r0
 801a0a4:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801a0a8:	460f      	mov	r7, r1
 801a0aa:	4614      	mov	r4, r2
 801a0ac:	2d00      	cmp	r5, #0
 801a0ae:	d051      	beq.n	801a154 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801a0b0:	6810      	ldr	r0, [r2, #0]
 801a0b2:	6851      	ldr	r1, [r2, #4]
 801a0b4:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801a2b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801a0b8:	ae0c      	add	r6, sp, #48	@ 0x30
 801a0ba:	c603      	stmia	r6!, {r0, r1}
 801a0bc:	6818      	ldr	r0, [r3, #0]
 801a0be:	6859      	ldr	r1, [r3, #4]
 801a0c0:	ae0e      	add	r6, sp, #56	@ 0x38
 801a0c2:	c603      	stmia	r6!, {r0, r1}
 801a0c4:	a80c      	add	r0, sp, #48	@ 0x30
 801a0c6:	f7f6 fb4d 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a0ca:	4621      	mov	r1, r4
 801a0cc:	a80e      	add	r0, sp, #56	@ 0x38
 801a0ce:	f7f6 fb71 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a0d2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801a0d6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801a0da:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801a0de:	f8d9 0000 	ldr.w	r0, [r9]
 801a0e2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801a0e6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801a0ea:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a0ee:	eb08 0401 	add.w	r4, r8, r1
 801a0f2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801a0f6:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801a2bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801a0fa:	440a      	add	r2, r1
 801a0fc:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801a100:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801a104:	4413      	add	r3, r2
 801a106:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801a10a:	6803      	ldr	r3, [r0, #0]
 801a10c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a10e:	4798      	blx	r3
 801a110:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801a114:	f8d9 0000 	ldr.w	r0, [r9]
 801a118:	d01f      	beq.n	801a15a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801a11a:	2200      	movs	r2, #0
 801a11c:	6801      	ldr	r1, [r0, #0]
 801a11e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801a122:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801a126:	220b      	movs	r2, #11
 801a128:	9207      	str	r2, [sp, #28]
 801a12a:	f8b8 2000 	ldrh.w	r2, [r8]
 801a12e:	9206      	str	r2, [sp, #24]
 801a130:	2201      	movs	r2, #1
 801a132:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801a136:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801a13a:	9203      	str	r2, [sp, #12]
 801a13c:	fa1f f28a 	uxth.w	r2, sl
 801a140:	9202      	str	r2, [sp, #8]
 801a142:	b2b6      	uxth	r6, r6
 801a144:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801a148:	9200      	str	r2, [sp, #0]
 801a14a:	9601      	str	r6, [sp, #4]
 801a14c:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 801a14e:	463a      	mov	r2, r7
 801a150:	4621      	mov	r1, r4
 801a152:	47a8      	blx	r5
 801a154:	b011      	add	sp, #68	@ 0x44
 801a156:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a15a:	6803      	ldr	r3, [r0, #0]
 801a15c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a15e:	4798      	blx	r3
 801a160:	f8b8 2000 	ldrh.w	r2, [r8]
 801a164:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801a168:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801a16c:	2dff      	cmp	r5, #255	@ 0xff
 801a16e:	fb02 1303 	mla	r3, r2, r3, r1
 801a172:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a176:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801a17a:	fb0a fa02 	mul.w	sl, sl, r2
 801a17e:	d062      	beq.n	801a246 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801a180:	ea6f 0c05 	mvn.w	ip, r5
 801a184:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801a188:	930a      	str	r3, [sp, #40]	@ 0x28
 801a18a:	b2ad      	uxth	r5, r5
 801a18c:	fa5f fc8c 	uxtb.w	ip, ip
 801a190:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801a194:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a196:	4298      	cmp	r0, r3
 801a198:	f080 8085 	bcs.w	801a2a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801a19c:	eb00 0b09 	add.w	fp, r0, r9
 801a1a0:	4558      	cmp	r0, fp
 801a1a2:	d246      	bcs.n	801a232 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801a1a4:	f814 eb01 	ldrb.w	lr, [r4], #1
 801a1a8:	2303      	movs	r3, #3
 801a1aa:	2204      	movs	r2, #4
 801a1ac:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801a1b0:	eb07 0a0e 	add.w	sl, r7, lr
 801a1b4:	8803      	ldrh	r3, [r0, #0]
 801a1b6:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801a1ba:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a1be:	1219      	asrs	r1, r3, #8
 801a1c0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a1c4:	fb18 f805 	smulbb	r8, r8, r5
 801a1c8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801a1cc:	10da      	asrs	r2, r3, #3
 801a1ce:	fb01 810c 	mla	r1, r1, ip, r8
 801a1d2:	00db      	lsls	r3, r3, #3
 801a1d4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a1d8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801a1dc:	b2db      	uxtb	r3, r3
 801a1de:	fb18 f805 	smulbb	r8, r8, r5
 801a1e2:	fb1e fe05 	smulbb	lr, lr, r5
 801a1e6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801a1ea:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801a1ee:	b289      	uxth	r1, r1
 801a1f0:	fb02 820c 	mla	r2, r2, ip, r8
 801a1f4:	fb03 e30c 	mla	r3, r3, ip, lr
 801a1f8:	b292      	uxth	r2, r2
 801a1fa:	b29b      	uxth	r3, r3
 801a1fc:	f101 0801 	add.w	r8, r1, #1
 801a200:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801a204:	f103 0e01 	add.w	lr, r3, #1
 801a208:	f102 0801 	add.w	r8, r2, #1
 801a20c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801a210:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801a214:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801a218:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a21c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a220:	ea4e 0101 	orr.w	r1, lr, r1
 801a224:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801a228:	ea41 0108 	orr.w	r1, r1, r8
 801a22c:	f820 1b02 	strh.w	r1, [r0], #2
 801a230:	e7b6      	b.n	801a1a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801a232:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a234:	881b      	ldrh	r3, [r3, #0]
 801a236:	1b9b      	subs	r3, r3, r6
 801a238:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a23c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801a240:	1b9b      	subs	r3, r3, r6
 801a242:	441c      	add	r4, r3
 801a244:	e7a6      	b.n	801a194 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801a246:	491b      	ldr	r1, [pc, #108]	@ (801a2b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801a248:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801a24c:	2203      	movs	r2, #3
 801a24e:	2504      	movs	r5, #4
 801a250:	4550      	cmp	r0, sl
 801a252:	d228      	bcs.n	801a2a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801a254:	eb00 0c09 	add.w	ip, r0, r9
 801a258:	4560      	cmp	r0, ip
 801a25a:	4623      	mov	r3, r4
 801a25c:	d219      	bcs.n	801a292 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801a25e:	f893 e000 	ldrb.w	lr, [r3]
 801a262:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801a266:	eb07 0b0e 	add.w	fp, r7, lr
 801a26a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a26e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801a272:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a276:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801a27a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801a27e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801a282:	ea43 030b 	orr.w	r3, r3, fp
 801a286:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801a28a:	3401      	adds	r4, #1
 801a28c:	f820 3b02 	strh.w	r3, [r0], #2
 801a290:	e7e2      	b.n	801a258 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801a292:	f8b8 3000 	ldrh.w	r3, [r8]
 801a296:	1b9b      	subs	r3, r3, r6
 801a298:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a29c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801a2a0:	1b9b      	subs	r3, r3, r6
 801a2a2:	441c      	add	r4, r3
 801a2a4:	e7d4      	b.n	801a250 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801a2a6:	4b04      	ldr	r3, [pc, #16]	@ (801a2b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801a2a8:	6818      	ldr	r0, [r3, #0]
 801a2aa:	6803      	ldr	r3, [r0, #0]
 801a2ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a2ae:	4798      	blx	r3
 801a2b0:	e750      	b.n	801a154 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801a2b2:	bf00      	nop
 801a2b4:	fffff800 	.word	0xfffff800
 801a2b8:	200157c0 	.word	0x200157c0
 801a2bc:	200157ba 	.word	0x200157ba

0801a2c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801a2c0:	b4f0      	push	{r4, r5, r6, r7}
 801a2c2:	460c      	mov	r4, r1
 801a2c4:	4611      	mov	r1, r2
 801a2c6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801a2ca:	780f      	ldrb	r7, [r1, #0]
 801a2cc:	784e      	ldrb	r6, [r1, #1]
 801a2ce:	2f01      	cmp	r7, #1
 801a2d0:	461a      	mov	r2, r3
 801a2d2:	9b04      	ldr	r3, [sp, #16]
 801a2d4:	d038      	beq.n	801a348 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801a2d6:	d31f      	bcc.n	801a318 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801a2d8:	2f02      	cmp	r7, #2
 801a2da:	d14d      	bne.n	801a378 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a2dc:	2e03      	cmp	r6, #3
 801a2de:	d84b      	bhi.n	801a378 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a2e0:	e8df f006 	tbb	[pc, r6]
 801a2e4:	17140702 	.word	0x17140702
 801a2e8:	9504      	str	r5, [sp, #16]
 801a2ea:	4620      	mov	r0, r4
 801a2ec:	bcf0      	pop	{r4, r5, r6, r7}
 801a2ee:	f7ff be09 	b.w	8019f04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801a2f2:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801a2f4:	2800      	cmp	r0, #0
 801a2f6:	d03f      	beq.n	801a378 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a2f8:	6806      	ldr	r6, [r0, #0]
 801a2fa:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801a2fe:	68b5      	ldr	r5, [r6, #8]
 801a300:	4613      	mov	r3, r2
 801a302:	46ac      	mov	ip, r5
 801a304:	460a      	mov	r2, r1
 801a306:	4621      	mov	r1, r4
 801a308:	bcf0      	pop	{r4, r5, r6, r7}
 801a30a:	4760      	bx	ip
 801a30c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801a310:	e7f0      	b.n	801a2f4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801a312:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801a316:	e7ed      	b.n	801a2f4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801a318:	2e03      	cmp	r6, #3
 801a31a:	d82d      	bhi.n	801a378 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a31c:	e8df f006 	tbb	[pc, r6]
 801a320:	110e0702 	.word	0x110e0702
 801a324:	9504      	str	r5, [sp, #16]
 801a326:	4620      	mov	r0, r4
 801a328:	bcf0      	pop	{r4, r5, r6, r7}
 801a32a:	f7ff bd05 	b.w	8019d38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801a32e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801a330:	b310      	cbz	r0, 801a378 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a332:	6806      	ldr	r6, [r0, #0]
 801a334:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801a338:	68f5      	ldr	r5, [r6, #12]
 801a33a:	e7e1      	b.n	801a300 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801a33c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801a340:	e7f6      	b.n	801a330 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801a342:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801a346:	e7f3      	b.n	801a330 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801a348:	2e03      	cmp	r6, #3
 801a34a:	d815      	bhi.n	801a378 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a34c:	e8df f006 	tbb	[pc, r6]
 801a350:	110e0702 	.word	0x110e0702
 801a354:	9504      	str	r5, [sp, #16]
 801a356:	4620      	mov	r0, r4
 801a358:	bcf0      	pop	{r4, r5, r6, r7}
 801a35a:	f7ff be9f 	b.w	801a09c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801a35e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801a360:	b150      	cbz	r0, 801a378 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a362:	6806      	ldr	r6, [r0, #0]
 801a364:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801a368:	6935      	ldr	r5, [r6, #16]
 801a36a:	e7c9      	b.n	801a300 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801a36c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801a370:	e7f6      	b.n	801a360 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801a372:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801a376:	e7f3      	b.n	801a360 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801a378:	bcf0      	pop	{r4, r5, r6, r7}
 801a37a:	4770      	bx	lr

0801a37c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801a37c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a380:	4604      	mov	r4, r0
 801a382:	b087      	sub	sp, #28
 801a384:	6810      	ldr	r0, [r2, #0]
 801a386:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801a38a:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 801a5c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801a38e:	460e      	mov	r6, r1
 801a390:	6851      	ldr	r1, [r2, #4]
 801a392:	ad02      	add	r5, sp, #8
 801a394:	c503      	stmia	r5!, {r0, r1}
 801a396:	6818      	ldr	r0, [r3, #0]
 801a398:	6859      	ldr	r1, [r3, #4]
 801a39a:	ad04      	add	r5, sp, #16
 801a39c:	4617      	mov	r7, r2
 801a39e:	c503      	stmia	r5!, {r0, r1}
 801a3a0:	a802      	add	r0, sp, #8
 801a3a2:	f7f6 f9df 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a3a6:	4639      	mov	r1, r7
 801a3a8:	a804      	add	r0, sp, #16
 801a3aa:	f7f6 fa03 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a3ae:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801a3b2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a3b6:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801a3ba:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801a3be:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801a3c2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a3c6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801a3ca:	440e      	add	r6, r1
 801a3cc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801a3d0:	440a      	add	r2, r1
 801a3d2:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a3d6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a3da:	4413      	add	r3, r2
 801a3dc:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a3e0:	4b77      	ldr	r3, [pc, #476]	@ (801a5c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801a3e2:	6818      	ldr	r0, [r3, #0]
 801a3e4:	6803      	ldr	r3, [r0, #0]
 801a3e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a3e8:	4798      	blx	r3
 801a3ea:	f8b9 b000 	ldrh.w	fp, [r9]
 801a3ee:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a3f2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801a3f6:	fb0b 2303 	mla	r3, fp, r3, r2
 801a3fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a3fe:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801a402:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801a406:	fb05 f50b 	mul.w	r5, r5, fp
 801a40a:	9300      	str	r3, [sp, #0]
 801a40c:	d069      	beq.n	801a4e2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801a40e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801a412:	4558      	cmp	r0, fp
 801a414:	f080 80cc 	bcs.w	801a5b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801a418:	9b00      	ldr	r3, [sp, #0]
 801a41a:	18c3      	adds	r3, r0, r3
 801a41c:	9301      	str	r3, [sp, #4]
 801a41e:	4631      	mov	r1, r6
 801a420:	9b01      	ldr	r3, [sp, #4]
 801a422:	4298      	cmp	r0, r3
 801a424:	d24f      	bcs.n	801a4c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801a426:	f811 2b01 	ldrb.w	r2, [r1], #1
 801a42a:	2a00      	cmp	r2, #0
 801a42c:	d048      	beq.n	801a4c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801a42e:	fb0a f202 	mul.w	r2, sl, r2
 801a432:	1c53      	adds	r3, r2, #1
 801a434:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a438:	121b      	asrs	r3, r3, #8
 801a43a:	d041      	beq.n	801a4c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801a43c:	8802      	ldrh	r2, [r0, #0]
 801a43e:	f8b4 c000 	ldrh.w	ip, [r4]
 801a442:	b29e      	uxth	r6, r3
 801a444:	1215      	asrs	r5, r2, #8
 801a446:	43db      	mvns	r3, r3
 801a448:	b2db      	uxtb	r3, r3
 801a44a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a44e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a452:	fb15 f503 	smulbb	r5, r5, r3
 801a456:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801a45a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a45e:	00d2      	lsls	r2, r2, #3
 801a460:	fb07 5706 	mla	r7, r7, r6, r5
 801a464:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801a468:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a46c:	b2d2      	uxtb	r2, r2
 801a46e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a472:	b2bf      	uxth	r7, r7
 801a474:	fb1e fe03 	smulbb	lr, lr, r3
 801a478:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a47c:	fa5f fc8c 	uxtb.w	ip, ip
 801a480:	fb12 f203 	smulbb	r2, r2, r3
 801a484:	fb05 e506 	mla	r5, r5, r6, lr
 801a488:	fb0c 2c06 	mla	ip, ip, r6, r2
 801a48c:	f107 0e01 	add.w	lr, r7, #1
 801a490:	fa1f fc8c 	uxth.w	ip, ip
 801a494:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801a498:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801a49c:	f10c 0701 	add.w	r7, ip, #1
 801a4a0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a4a4:	b2ad      	uxth	r5, r5
 801a4a6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a4aa:	ea47 070e 	orr.w	r7, r7, lr
 801a4ae:	f105 0e01 	add.w	lr, r5, #1
 801a4b2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801a4b6:	096d      	lsrs	r5, r5, #5
 801a4b8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a4bc:	432f      	orrs	r7, r5
 801a4be:	8007      	strh	r7, [r0, #0]
 801a4c0:	3002      	adds	r0, #2
 801a4c2:	3402      	adds	r4, #2
 801a4c4:	e7ac      	b.n	801a420 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801a4c6:	f8b9 3000 	ldrh.w	r3, [r9]
 801a4ca:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801a4ce:	eba3 0308 	sub.w	r3, r3, r8
 801a4d2:	eba6 0608 	sub.w	r6, r6, r8
 801a4d6:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801a4da:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a4de:	440e      	add	r6, r1
 801a4e0:	e797      	b.n	801a412 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801a4e2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801a4e6:	42a8      	cmp	r0, r5
 801a4e8:	d262      	bcs.n	801a5b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801a4ea:	9b00      	ldr	r3, [sp, #0]
 801a4ec:	4631      	mov	r1, r6
 801a4ee:	eb00 0b03 	add.w	fp, r0, r3
 801a4f2:	4558      	cmp	r0, fp
 801a4f4:	d24e      	bcs.n	801a594 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801a4f6:	f811 3b01 	ldrb.w	r3, [r1], #1
 801a4fa:	b12b      	cbz	r3, 801a508 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801a4fc:	2bff      	cmp	r3, #255	@ 0xff
 801a4fe:	f8b4 e000 	ldrh.w	lr, [r4]
 801a502:	d104      	bne.n	801a50e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801a504:	f8a0 e000 	strh.w	lr, [r0]
 801a508:	3002      	adds	r0, #2
 801a50a:	3402      	adds	r4, #2
 801a50c:	e7f1      	b.n	801a4f2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801a50e:	8802      	ldrh	r2, [r0, #0]
 801a510:	b29f      	uxth	r7, r3
 801a512:	1216      	asrs	r6, r2, #8
 801a514:	43db      	mvns	r3, r3
 801a516:	b2db      	uxtb	r3, r3
 801a518:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a51c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a520:	fb16 f603 	smulbb	r6, r6, r3
 801a524:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801a528:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a52c:	00d2      	lsls	r2, r2, #3
 801a52e:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a532:	b2d2      	uxtb	r2, r2
 801a534:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a538:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801a53c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a540:	fb1a fa03 	smulbb	sl, sl, r3
 801a544:	fa1f fc8c 	uxth.w	ip, ip
 801a548:	fb12 f303 	smulbb	r3, r2, r3
 801a54c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a550:	fa5f fe8e 	uxtb.w	lr, lr
 801a554:	fb06 a607 	mla	r6, r6, r7, sl
 801a558:	f10c 0201 	add.w	r2, ip, #1
 801a55c:	fb0e 3307 	mla	r3, lr, r7, r3
 801a560:	b2b6      	uxth	r6, r6
 801a562:	b29b      	uxth	r3, r3
 801a564:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a568:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801a56c:	f106 0a01 	add.w	sl, r6, #1
 801a570:	f103 0c01 	add.w	ip, r3, #1
 801a574:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a578:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801a57c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a580:	0976      	lsrs	r6, r6, #5
 801a582:	ea4c 0c02 	orr.w	ip, ip, r2
 801a586:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801a58a:	ea4c 0c06 	orr.w	ip, ip, r6
 801a58e:	f8a0 c000 	strh.w	ip, [r0]
 801a592:	e7b9      	b.n	801a508 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801a594:	f8b9 3000 	ldrh.w	r3, [r9]
 801a598:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801a59c:	eba3 0308 	sub.w	r3, r3, r8
 801a5a0:	eba6 0608 	sub.w	r6, r6, r8
 801a5a4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801a5a8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a5ac:	440e      	add	r6, r1
 801a5ae:	e79a      	b.n	801a4e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801a5b0:	4b03      	ldr	r3, [pc, #12]	@ (801a5c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801a5b2:	6818      	ldr	r0, [r3, #0]
 801a5b4:	6803      	ldr	r3, [r0, #0]
 801a5b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a5b8:	4798      	blx	r3
 801a5ba:	b007      	add	sp, #28
 801a5bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5c0:	200157c0 	.word	0x200157c0
 801a5c4:	200157ba 	.word	0x200157ba

0801a5c8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801a5c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5cc:	b089      	sub	sp, #36	@ 0x24
 801a5ce:	4607      	mov	r7, r0
 801a5d0:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801a5d4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a5d6:	4688      	mov	r8, r1
 801a5d8:	4692      	mov	sl, r2
 801a5da:	4699      	mov	r9, r3
 801a5dc:	2e00      	cmp	r6, #0
 801a5de:	d048      	beq.n	801a672 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a5e0:	4608      	mov	r0, r1
 801a5e2:	f7fa f81d 	bl	8014620 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801a5e6:	4605      	mov	r5, r0
 801a5e8:	4640      	mov	r0, r8
 801a5ea:	f7fa f84d 	bl	8014688 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801a5ee:	f8ad 000e 	strh.w	r0, [sp, #14]
 801a5f2:	4640      	mov	r0, r8
 801a5f4:	f8ad a008 	strh.w	sl, [sp, #8]
 801a5f8:	f8ad 500c 	strh.w	r5, [sp, #12]
 801a5fc:	f8ad 900a 	strh.w	r9, [sp, #10]
 801a600:	f7fa f900 	bl	8014804 <_ZNK8touchgfx6Bitmap7getDataEv>
 801a604:	4605      	mov	r5, r0
 801a606:	4640      	mov	r0, r8
 801a608:	f7fa f92c 	bl	8014864 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801a60c:	4682      	mov	sl, r0
 801a60e:	4640      	mov	r0, r8
 801a610:	f7fa f97c 	bl	801490c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801a614:	2810      	cmp	r0, #16
 801a616:	d82c      	bhi.n	801a672 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a618:	e8df f010 	tbh	[pc, r0, lsl #1]
 801a61c:	00ba00ca 	.word	0x00ba00ca
 801a620:	002b0011 	.word	0x002b0011
 801a624:	002b002b 	.word	0x002b002b
 801a628:	002b002b 	.word	0x002b002b
 801a62c:	002b002b 	.word	0x002b002b
 801a630:	00c1002b 	.word	0x00c1002b
 801a634:	002b002b 	.word	0x002b002b
 801a638:	002b0180 	.word	0x002b0180
 801a63c:	0173      	.short	0x0173
 801a63e:	4bbc      	ldr	r3, [pc, #752]	@ (801a930 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801a640:	6818      	ldr	r0, [r3, #0]
 801a642:	6803      	ldr	r3, [r0, #0]
 801a644:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a646:	4798      	blx	r3
 801a648:	2eff      	cmp	r6, #255	@ 0xff
 801a64a:	d101      	bne.n	801a650 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801a64c:	0683      	lsls	r3, r0, #26
 801a64e:	d506      	bpl.n	801a65e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801a650:	4633      	mov	r3, r6
 801a652:	4622      	mov	r2, r4
 801a654:	a902      	add	r1, sp, #8
 801a656:	4628      	mov	r0, r5
 801a658:	f7ff f8fc 	bl	8019854 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a65c:	e009      	b.n	801a672 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a65e:	4640      	mov	r0, r8
 801a660:	f7fa f898 	bl	8014794 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801a664:	b940      	cbnz	r0, 801a678 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801a666:	4623      	mov	r3, r4
 801a668:	aa02      	add	r2, sp, #8
 801a66a:	4629      	mov	r1, r5
 801a66c:	4638      	mov	r0, r7
 801a66e:	f7ff f9d7 	bl	8019a20 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801a672:	b009      	add	sp, #36	@ 0x24
 801a674:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a678:	f10d 0918 	add.w	r9, sp, #24
 801a67c:	4641      	mov	r1, r8
 801a67e:	4648      	mov	r0, r9
 801a680:	f7fa f836 	bl	80146f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801a684:	e899 0003 	ldmia.w	r9, {r0, r1}
 801a688:	f10d 0810 	add.w	r8, sp, #16
 801a68c:	e888 0003 	stmia.w	r8, {r0, r1}
 801a690:	4640      	mov	r0, r8
 801a692:	4621      	mov	r1, r4
 801a694:	f7f0 fb42 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 801a698:	4640      	mov	r0, r8
 801a69a:	f7f0 fb82 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a69e:	2800      	cmp	r0, #0
 801a6a0:	d1d6      	bne.n	801a650 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801a6a2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a6a6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a6aa:	4293      	cmp	r3, r2
 801a6ac:	dd12      	ble.n	801a6d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801a6ae:	1a9b      	subs	r3, r3, r2
 801a6b0:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a6b4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a6b8:	f8ad 0018 	strh.w	r0, [sp, #24]
 801a6bc:	f8ad 201a 	strh.w	r2, [sp, #26]
 801a6c0:	f8ad 101c 	strh.w	r1, [sp, #28]
 801a6c4:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a6c8:	464a      	mov	r2, r9
 801a6ca:	4633      	mov	r3, r6
 801a6cc:	a902      	add	r1, sp, #8
 801a6ce:	4628      	mov	r0, r5
 801a6d0:	f7ff f8c0 	bl	8019854 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a6d4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801a6d8:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a6dc:	4293      	cmp	r3, r2
 801a6de:	dd12      	ble.n	801a706 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801a6e0:	1a9b      	subs	r3, r3, r2
 801a6e2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801a6e6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801a6ea:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a6ee:	f8ad 001a 	strh.w	r0, [sp, #26]
 801a6f2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a6f6:	f8ad 101e 	strh.w	r1, [sp, #30]
 801a6fa:	23ff      	movs	r3, #255	@ 0xff
 801a6fc:	464a      	mov	r2, r9
 801a6fe:	a902      	add	r1, sp, #8
 801a700:	4628      	mov	r0, r5
 801a702:	f7ff f8a7 	bl	8019854 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a706:	4643      	mov	r3, r8
 801a708:	aa02      	add	r2, sp, #8
 801a70a:	4629      	mov	r1, r5
 801a70c:	4638      	mov	r0, r7
 801a70e:	f7ff f987 	bl	8019a20 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801a712:	88a2      	ldrh	r2, [r4, #4]
 801a714:	8823      	ldrh	r3, [r4, #0]
 801a716:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801a71a:	4413      	add	r3, r2
 801a71c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a720:	440a      	add	r2, r1
 801a722:	b29b      	uxth	r3, r3
 801a724:	b292      	uxth	r2, r2
 801a726:	b211      	sxth	r1, r2
 801a728:	b218      	sxth	r0, r3
 801a72a:	4288      	cmp	r0, r1
 801a72c:	dd12      	ble.n	801a754 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801a72e:	1a9b      	subs	r3, r3, r2
 801a730:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801a734:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801a738:	f8ad 1018 	strh.w	r1, [sp, #24]
 801a73c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a740:	f8ad 001e 	strh.w	r0, [sp, #30]
 801a744:	23ff      	movs	r3, #255	@ 0xff
 801a746:	464a      	mov	r2, r9
 801a748:	a902      	add	r1, sp, #8
 801a74a:	4628      	mov	r0, r5
 801a74c:	f8ad 601a 	strh.w	r6, [sp, #26]
 801a750:	f7ff f880 	bl	8019854 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a754:	88e2      	ldrh	r2, [r4, #6]
 801a756:	8863      	ldrh	r3, [r4, #2]
 801a758:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801a75c:	4413      	add	r3, r2
 801a75e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801a762:	440a      	add	r2, r1
 801a764:	b29b      	uxth	r3, r3
 801a766:	b292      	uxth	r2, r2
 801a768:	b211      	sxth	r1, r2
 801a76a:	b218      	sxth	r0, r3
 801a76c:	4288      	cmp	r0, r1
 801a76e:	dd80      	ble.n	801a672 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a770:	1a9b      	subs	r3, r3, r2
 801a772:	f9b4 6000 	ldrsh.w	r6, [r4]
 801a776:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a77a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a77e:	f8ad 6018 	strh.w	r6, [sp, #24]
 801a782:	f8ad 101a 	strh.w	r1, [sp, #26]
 801a786:	f8ad 001c 	strh.w	r0, [sp, #28]
 801a78a:	23ff      	movs	r3, #255	@ 0xff
 801a78c:	464a      	mov	r2, r9
 801a78e:	e761      	b.n	801a654 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801a790:	4633      	mov	r3, r6
 801a792:	4622      	mov	r2, r4
 801a794:	a902      	add	r1, sp, #8
 801a796:	4628      	mov	r0, r5
 801a798:	f7ff f9b2 	bl	8019b00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801a79c:	e769      	b.n	801a672 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a79e:	e9cd 4600 	strd	r4, r6, [sp]
 801a7a2:	ab02      	add	r3, sp, #8
 801a7a4:	4652      	mov	r2, sl
 801a7a6:	4629      	mov	r1, r5
 801a7a8:	4638      	mov	r0, r7
 801a7aa:	f7ff fd89 	bl	801a2c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801a7ae:	e760      	b.n	801a672 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a7b0:	4640      	mov	r0, r8
 801a7b2:	f7f9 ffef 	bl	8014794 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801a7b6:	b948      	cbnz	r0, 801a7cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 801a7b8:	683b      	ldr	r3, [r7, #0]
 801a7ba:	e9cd 6000 	strd	r6, r0, [sp]
 801a7be:	aa02      	add	r2, sp, #8
 801a7c0:	68de      	ldr	r6, [r3, #12]
 801a7c2:	4629      	mov	r1, r5
 801a7c4:	4623      	mov	r3, r4
 801a7c6:	4638      	mov	r0, r7
 801a7c8:	47b0      	blx	r6
 801a7ca:	e752      	b.n	801a672 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a7cc:	f10d 0918 	add.w	r9, sp, #24
 801a7d0:	4641      	mov	r1, r8
 801a7d2:	4648      	mov	r0, r9
 801a7d4:	f7f9 ff8c 	bl	80146f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801a7d8:	e899 0003 	ldmia.w	r9, {r0, r1}
 801a7dc:	f10d 0810 	add.w	r8, sp, #16
 801a7e0:	e888 0003 	stmia.w	r8, {r0, r1}
 801a7e4:	4640      	mov	r0, r8
 801a7e6:	4621      	mov	r1, r4
 801a7e8:	f7f0 fa98 	bl	800ad1c <_ZN8touchgfx4RectaNERKS0_>
 801a7ec:	4640      	mov	r0, r8
 801a7ee:	f7f0 fad8 	bl	800ada2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a7f2:	b138      	cbz	r0, 801a804 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 801a7f4:	9600      	str	r6, [sp, #0]
 801a7f6:	4623      	mov	r3, r4
 801a7f8:	aa02      	add	r2, sp, #8
 801a7fa:	4651      	mov	r1, sl
 801a7fc:	4628      	mov	r0, r5
 801a7fe:	f7ff fdbd 	bl	801a37c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a802:	e736      	b.n	801a672 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a804:	683b      	ldr	r3, [r7, #0]
 801a806:	e9cd 6000 	strd	r6, r0, [sp]
 801a80a:	aa02      	add	r2, sp, #8
 801a80c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801a810:	4629      	mov	r1, r5
 801a812:	4643      	mov	r3, r8
 801a814:	4638      	mov	r0, r7
 801a816:	47d8      	blx	fp
 801a818:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a81c:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a820:	4293      	cmp	r3, r2
 801a822:	dd13      	ble.n	801a84c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 801a824:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a828:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a82c:	f8ad 0018 	strh.w	r0, [sp, #24]
 801a830:	1a9b      	subs	r3, r3, r2
 801a832:	f8ad 201a 	strh.w	r2, [sp, #26]
 801a836:	f8ad 101c 	strh.w	r1, [sp, #28]
 801a83a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a83e:	9600      	str	r6, [sp, #0]
 801a840:	464b      	mov	r3, r9
 801a842:	aa02      	add	r2, sp, #8
 801a844:	4651      	mov	r1, sl
 801a846:	4628      	mov	r0, r5
 801a848:	f7ff fd98 	bl	801a37c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a84c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801a850:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a854:	4293      	cmp	r3, r2
 801a856:	dd13      	ble.n	801a880 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 801a858:	1a9b      	subs	r3, r3, r2
 801a85a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801a85e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801a862:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a866:	f8ad 001a 	strh.w	r0, [sp, #26]
 801a86a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a86e:	f8ad 101e 	strh.w	r1, [sp, #30]
 801a872:	9600      	str	r6, [sp, #0]
 801a874:	464b      	mov	r3, r9
 801a876:	aa02      	add	r2, sp, #8
 801a878:	4651      	mov	r1, sl
 801a87a:	4628      	mov	r0, r5
 801a87c:	f7ff fd7e 	bl	801a37c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a880:	88a2      	ldrh	r2, [r4, #4]
 801a882:	8823      	ldrh	r3, [r4, #0]
 801a884:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801a888:	4413      	add	r3, r2
 801a88a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a88e:	440a      	add	r2, r1
 801a890:	b29b      	uxth	r3, r3
 801a892:	b292      	uxth	r2, r2
 801a894:	b211      	sxth	r1, r2
 801a896:	b218      	sxth	r0, r3
 801a898:	4288      	cmp	r0, r1
 801a89a:	dd13      	ble.n	801a8c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 801a89c:	1a9b      	subs	r3, r3, r2
 801a89e:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801a8a2:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801a8a6:	f8ad 1018 	strh.w	r1, [sp, #24]
 801a8aa:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a8ae:	f8ad 001e 	strh.w	r0, [sp, #30]
 801a8b2:	9600      	str	r6, [sp, #0]
 801a8b4:	464b      	mov	r3, r9
 801a8b6:	aa02      	add	r2, sp, #8
 801a8b8:	4651      	mov	r1, sl
 801a8ba:	4628      	mov	r0, r5
 801a8bc:	f8ad 701a 	strh.w	r7, [sp, #26]
 801a8c0:	f7ff fd5c 	bl	801a37c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a8c4:	88e2      	ldrh	r2, [r4, #6]
 801a8c6:	8863      	ldrh	r3, [r4, #2]
 801a8c8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801a8cc:	4413      	add	r3, r2
 801a8ce:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801a8d2:	440a      	add	r2, r1
 801a8d4:	b29b      	uxth	r3, r3
 801a8d6:	b292      	uxth	r2, r2
 801a8d8:	b211      	sxth	r1, r2
 801a8da:	b218      	sxth	r0, r3
 801a8dc:	4288      	cmp	r0, r1
 801a8de:	f77f aec8 	ble.w	801a672 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a8e2:	f9b4 7000 	ldrsh.w	r7, [r4]
 801a8e6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a8ea:	f8ad 7018 	strh.w	r7, [sp, #24]
 801a8ee:	1a9b      	subs	r3, r3, r2
 801a8f0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a8f4:	f8ad 101a 	strh.w	r1, [sp, #26]
 801a8f8:	f8ad 001c 	strh.w	r0, [sp, #28]
 801a8fc:	9600      	str	r6, [sp, #0]
 801a8fe:	464b      	mov	r3, r9
 801a900:	e77a      	b.n	801a7f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801a902:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801a906:	2800      	cmp	r0, #0
 801a908:	f43f aeb3 	beq.w	801a672 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a90c:	6803      	ldr	r3, [r0, #0]
 801a90e:	9600      	str	r6, [sp, #0]
 801a910:	68de      	ldr	r6, [r3, #12]
 801a912:	4623      	mov	r3, r4
 801a914:	aa02      	add	r2, sp, #8
 801a916:	4629      	mov	r1, r5
 801a918:	47b0      	blx	r6
 801a91a:	e6aa      	b.n	801a672 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a91c:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801a920:	2800      	cmp	r0, #0
 801a922:	f43f aea6 	beq.w	801a672 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a926:	6803      	ldr	r3, [r0, #0]
 801a928:	9600      	str	r6, [sp, #0]
 801a92a:	689e      	ldr	r6, [r3, #8]
 801a92c:	e7f1      	b.n	801a912 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801a92e:	bf00      	nop
 801a930:	200157c0 	.word	0x200157c0

0801a934 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801a934:	b180      	cbz	r0, 801a958 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801a936:	2903      	cmp	r1, #3
 801a938:	d81c      	bhi.n	801a974 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801a93a:	e8df f001 	tbb	[pc, r1]
 801a93e:	1d02      	.short	0x1d02
 801a940:	1f08      	.short	0x1f08
 801a942:	4b10      	ldr	r3, [pc, #64]	@ (801a984 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801a944:	8818      	ldrh	r0, [r3, #0]
 801a946:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a94a:	4240      	negs	r0, r0
 801a94c:	4770      	bx	lr
 801a94e:	4b0d      	ldr	r3, [pc, #52]	@ (801a984 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801a950:	8818      	ldrh	r0, [r3, #0]
 801a952:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a956:	4770      	bx	lr
 801a958:	2903      	cmp	r1, #3
 801a95a:	d80b      	bhi.n	801a974 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801a95c:	a301      	add	r3, pc, #4	@ (adr r3, 801a964 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801a95e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801a962:	bf00      	nop
 801a964:	0801a979 	.word	0x0801a979
 801a968:	0801a94f 	.word	0x0801a94f
 801a96c:	0801a97d 	.word	0x0801a97d
 801a970:	0801a943 	.word	0x0801a943
 801a974:	2000      	movs	r0, #0
 801a976:	4770      	bx	lr
 801a978:	2001      	movs	r0, #1
 801a97a:	4770      	bx	lr
 801a97c:	f04f 30ff 	mov.w	r0, #4294967295
 801a980:	4770      	bx	lr
 801a982:	bf00      	nop
 801a984:	200157ba 	.word	0x200157ba

0801a988 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801a988:	b180      	cbz	r0, 801a9ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801a98a:	2903      	cmp	r1, #3
 801a98c:	d81c      	bhi.n	801a9c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801a98e:	e8df f001 	tbb	[pc, r1]
 801a992:	021d      	.short	0x021d
 801a994:	071f      	.short	0x071f
 801a996:	4b10      	ldr	r3, [pc, #64]	@ (801a9d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801a998:	8818      	ldrh	r0, [r3, #0]
 801a99a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a99e:	4770      	bx	lr
 801a9a0:	4b0d      	ldr	r3, [pc, #52]	@ (801a9d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801a9a2:	8818      	ldrh	r0, [r3, #0]
 801a9a4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a9a8:	4240      	negs	r0, r0
 801a9aa:	4770      	bx	lr
 801a9ac:	2903      	cmp	r1, #3
 801a9ae:	d80b      	bhi.n	801a9c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801a9b0:	a301      	add	r3, pc, #4	@ (adr r3, 801a9b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801a9b2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801a9b6:	bf00      	nop
 801a9b8:	0801a997 	.word	0x0801a997
 801a9bc:	0801a9d1 	.word	0x0801a9d1
 801a9c0:	0801a9a1 	.word	0x0801a9a1
 801a9c4:	0801a9cd 	.word	0x0801a9cd
 801a9c8:	2000      	movs	r0, #0
 801a9ca:	4770      	bx	lr
 801a9cc:	2001      	movs	r0, #1
 801a9ce:	4770      	bx	lr
 801a9d0:	f04f 30ff 	mov.w	r0, #4294967295
 801a9d4:	4770      	bx	lr
 801a9d6:	bf00      	nop
 801a9d8:	200157ba 	.word	0x200157ba

0801a9dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801a9dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9e0:	b099      	sub	sp, #100	@ 0x64
 801a9e2:	910d      	str	r1, [sp, #52]	@ 0x34
 801a9e4:	a914      	add	r1, sp, #80	@ 0x50
 801a9e6:	e881 000c 	stmia.w	r1, {r2, r3}
 801a9ea:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801a9ee:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a9f0:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801a9f4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801a9f8:	9310      	str	r3, [sp, #64]	@ 0x40
 801a9fa:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801a9fe:	9308      	str	r3, [sp, #32]
 801aa00:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801aa04:	9309      	str	r3, [sp, #36]	@ 0x24
 801aa06:	7b4b      	ldrb	r3, [r1, #13]
 801aa08:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801aa0c:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801aa10:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801aa14:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 801aa16:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 801aa1a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801aa1e:	ea4f 1843 	mov.w	r8, r3, lsl #5
 801aa22:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 801aa26:	f891 8006 	ldrb.w	r8, [r1, #6]
 801aa2a:	ea58 0800 	orrs.w	r8, r8, r0
 801aa2e:	f000 81ce 	beq.w	801adce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801aa32:	011b      	lsls	r3, r3, #4
 801aa34:	79c8      	ldrb	r0, [r1, #7]
 801aa36:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801aa3a:	4303      	orrs	r3, r0
 801aa3c:	930c      	str	r3, [sp, #48]	@ 0x30
 801aa3e:	f000 81c6 	beq.w	801adce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801aa42:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801aa46:	b29b      	uxth	r3, r3
 801aa48:	2d00      	cmp	r5, #0
 801aa4a:	f000 812c 	beq.w	801aca6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 801aa4e:	1aed      	subs	r5, r5, r3
 801aa50:	b2ad      	uxth	r5, r5
 801aa52:	0429      	lsls	r1, r5, #16
 801aa54:	d502      	bpl.n	801aa5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 801aa56:	1b64      	subs	r4, r4, r5
 801aa58:	b224      	sxth	r4, r4
 801aa5a:	2500      	movs	r5, #0
 801aa5c:	f9b2 0000 	ldrsh.w	r0, [r2]
 801aa60:	8891      	ldrh	r1, [r2, #4]
 801aa62:	4284      	cmp	r4, r0
 801aa64:	b283      	uxth	r3, r0
 801aa66:	bfb8      	it	lt
 801aa68:	18ed      	addlt	r5, r5, r3
 801aa6a:	440b      	add	r3, r1
 801aa6c:	b21b      	sxth	r3, r3
 801aa6e:	930a      	str	r3, [sp, #40]	@ 0x28
 801aa70:	88d3      	ldrh	r3, [r2, #6]
 801aa72:	8852      	ldrh	r2, [r2, #2]
 801aa74:	4413      	add	r3, r2
 801aa76:	b21b      	sxth	r3, r3
 801aa78:	930f      	str	r3, [sp, #60]	@ 0x3c
 801aa7a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801aa7c:	930e      	str	r3, [sp, #56]	@ 0x38
 801aa7e:	bfb8      	it	lt
 801aa80:	1b2c      	sublt	r4, r5, r4
 801aa82:	4bb5      	ldr	r3, [pc, #724]	@ (801ad58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 801aa84:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801aa86:	f893 b000 	ldrb.w	fp, [r3]
 801aa8a:	bfbc      	itt	lt
 801aa8c:	b2a5      	uxthlt	r5, r4
 801aa8e:	4604      	movlt	r4, r0
 801aa90:	4653      	mov	r3, sl
 801aa92:	4621      	mov	r1, r4
 801aa94:	a814      	add	r0, sp, #80	@ 0x50
 801aa96:	f7f5 fcda 	bl	801044e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801aa9a:	4621      	mov	r1, r4
 801aa9c:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801aaa0:	4653      	mov	r3, sl
 801aaa2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801aaa4:	a814      	add	r0, sp, #80	@ 0x50
 801aaa6:	f7f5 fcef 	bl	8010488 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801aaaa:	a918      	add	r1, sp, #96	@ 0x60
 801aaac:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801aab0:	a817      	add	r0, sp, #92	@ 0x5c
 801aab2:	f7f5 fe15 	bl	80106e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801aab6:	f1ba 0f00 	cmp.w	sl, #0
 801aaba:	f040 80f7 	bne.w	801acac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 801aabe:	f1bb 0f01 	cmp.w	fp, #1
 801aac2:	f040 80fb 	bne.w	801acbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 801aac6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801aac8:	2b00      	cmp	r3, #0
 801aaca:	f040 81a8 	bne.w	801ae1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 801aace:	fa1f f288 	uxth.w	r2, r8
 801aad2:	b905      	cbnz	r5, 801aad6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 801aad4:	b15e      	cbz	r6, 801aaee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 801aad6:	9808      	ldr	r0, [sp, #32]
 801aad8:	fb06 5302 	mla	r3, r6, r2, r5
 801aadc:	4343      	muls	r3, r0
 801aade:	4631      	mov	r1, r6
 801aae0:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 801aae4:	f003 0607 	and.w	r6, r3, #7
 801aae8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801aaea:	1a5b      	subs	r3, r3, r1
 801aaec:	930e      	str	r3, [sp, #56]	@ 0x38
 801aaee:	f10b 31ff 	add.w	r1, fp, #4294967295
 801aaf2:	424b      	negs	r3, r1
 801aaf4:	414b      	adcs	r3, r1
 801aaf6:	4618      	mov	r0, r3
 801aaf8:	4651      	mov	r1, sl
 801aafa:	930c      	str	r3, [sp, #48]	@ 0x30
 801aafc:	f7ff ff1a 	bl	801a934 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801ab00:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ab02:	4683      	mov	fp, r0
 801ab04:	4618      	mov	r0, r3
 801ab06:	f7ff ff3f 	bl	801a988 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801ab0a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ab0c:	4603      	mov	r3, r0
 801ab0e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801ab10:	eba1 0a00 	sub.w	sl, r1, r0
 801ab14:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801ab16:	458a      	cmp	sl, r1
 801ab18:	bfa8      	it	ge
 801ab1a:	468a      	movge	sl, r1
 801ab1c:	f1ba 0f00 	cmp.w	sl, #0
 801ab20:	f340 8155 	ble.w	801adce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801ab24:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801ab26:	1b64      	subs	r4, r4, r5
 801ab28:	1b0c      	subs	r4, r1, r4
 801ab2a:	4544      	cmp	r4, r8
 801ab2c:	bfd4      	ite	le
 801ab2e:	ebc5 0504 	rsble	r5, r5, r4
 801ab32:	ebc5 0508 	rsbgt	r5, r5, r8
 801ab36:	2d00      	cmp	r5, #0
 801ab38:	f340 8149 	ble.w	801adce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801ab3c:	9908      	ldr	r1, [sp, #32]
 801ab3e:	1b52      	subs	r2, r2, r5
 801ab40:	434a      	muls	r2, r1
 801ab42:	920e      	str	r2, [sp, #56]	@ 0x38
 801ab44:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801ab46:	2a00      	cmp	r2, #0
 801ab48:	f040 8175 	bne.w	801ae36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 801ab4c:	4a83      	ldr	r2, [pc, #524]	@ (801ad5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 801ab4e:	930a      	str	r3, [sp, #40]	@ 0x28
 801ab50:	6810      	ldr	r0, [r2, #0]
 801ab52:	6802      	ldr	r2, [r0, #0]
 801ab54:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801ab56:	4790      	blx	r2
 801ab58:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ab5a:	9908      	ldr	r1, [sp, #32]
 801ab5c:	2201      	movs	r2, #1
 801ab5e:	408a      	lsls	r2, r1
 801ab60:	3a01      	subs	r2, #1
 801ab62:	497f      	ldr	r1, [pc, #508]	@ (801ad60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 801ab64:	b2d2      	uxtb	r2, r2
 801ab66:	880c      	ldrh	r4, [r1, #0]
 801ab68:	920c      	str	r2, [sp, #48]	@ 0x30
 801ab6a:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 801ab6e:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 801ab72:	fb04 1202 	mla	r2, r4, r2, r1
 801ab76:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ab7a:	ea4f 2419 	mov.w	r4, r9, lsr #8
 801ab7e:	920a      	str	r2, [sp, #40]	@ 0x28
 801ab80:	f3c9 4207 	ubfx	r2, r9, #16, #8
 801ab84:	9212      	str	r2, [sp, #72]	@ 0x48
 801ab86:	b2e2      	uxtb	r2, r4
 801ab88:	9211      	str	r2, [sp, #68]	@ 0x44
 801ab8a:	fa5f f289 	uxtb.w	r2, r9
 801ab8e:	9210      	str	r2, [sp, #64]	@ 0x40
 801ab90:	4a74      	ldr	r2, [pc, #464]	@ (801ad64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 801ab92:	ea4f 1159 	mov.w	r1, r9, lsr #5
 801ab96:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ab9a:	4022      	ands	r2, r4
 801ab9c:	430a      	orrs	r2, r1
 801ab9e:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 801aba2:	ea42 0209 	orr.w	r2, r2, r9
 801aba6:	ea4f 014b 	mov.w	r1, fp, lsl #1
 801abaa:	b292      	uxth	r2, r2
 801abac:	fb05 3b1b 	mls	fp, r5, fp, r3
 801abb0:	920f      	str	r2, [sp, #60]	@ 0x3c
 801abb2:	460b      	mov	r3, r1
 801abb4:	783a      	ldrb	r2, [r7, #0]
 801abb6:	910b      	str	r1, [sp, #44]	@ 0x2c
 801abb8:	436b      	muls	r3, r5
 801abba:	4132      	asrs	r2, r6
 801abbc:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 801abc0:	b2d2      	uxtb	r2, r2
 801abc2:	9313      	str	r3, [sp, #76]	@ 0x4c
 801abc4:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801abc8:	f0c0 8149 	bcc.w	801ae5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 801abcc:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801abd0:	46a9      	mov	r9, r5
 801abd2:	f119 39ff 	adds.w	r9, r9, #4294967295
 801abd6:	f0c0 8132 	bcc.w	801ae3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 801abda:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801abdc:	4013      	ands	r3, r2
 801abde:	d054      	beq.n	801ac8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 801abe0:	20ff      	movs	r0, #255	@ 0xff
 801abe2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801abe4:	fb90 f1f1 	sdiv	r1, r0, r1
 801abe8:	434b      	muls	r3, r1
 801abea:	2bfe      	cmp	r3, #254	@ 0xfe
 801abec:	dd03      	ble.n	801abf6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 801abee:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801abf0:	4281      	cmp	r1, r0
 801abf2:	f000 8122 	beq.w	801ae3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 801abf6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801abf8:	f8b8 4000 	ldrh.w	r4, [r8]
 801abfc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801abfe:	fb11 f303 	smulbb	r3, r1, r3
 801ac02:	b29b      	uxth	r3, r3
 801ac04:	1c59      	adds	r1, r3, #1
 801ac06:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ac0a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ac0e:	fa1f fe83 	uxth.w	lr, r3
 801ac12:	1221      	asrs	r1, r4, #8
 801ac14:	fb10 fb0e 	smulbb	fp, r0, lr
 801ac18:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ac1c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801ac1e:	43db      	mvns	r3, r3
 801ac20:	b2db      	uxtb	r3, r3
 801ac22:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801ac26:	fb01 b103 	mla	r1, r1, r3, fp
 801ac2a:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 801ac2e:	fb10 fb0e 	smulbb	fp, r0, lr
 801ac32:	00e4      	lsls	r4, r4, #3
 801ac34:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801ac36:	b2e4      	uxtb	r4, r4
 801ac38:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ac3c:	fb10 fe0e 	smulbb	lr, r0, lr
 801ac40:	fb04 e403 	mla	r4, r4, r3, lr
 801ac44:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801ac48:	b289      	uxth	r1, r1
 801ac4a:	b2a4      	uxth	r4, r4
 801ac4c:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 801ac50:	fb0c bc03 	mla	ip, ip, r3, fp
 801ac54:	1c4b      	adds	r3, r1, #1
 801ac56:	f104 0b01 	add.w	fp, r4, #1
 801ac5a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ac5e:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 801ac62:	fa1f fc8c 	uxth.w	ip, ip
 801ac66:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801ac6a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801ac6e:	ea4b 0101 	orr.w	r1, fp, r1
 801ac72:	f10c 0b01 	add.w	fp, ip, #1
 801ac76:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 801ac7a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801ac7e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801ac82:	ea41 010b 	orr.w	r1, r1, fp
 801ac86:	f8a8 1000 	strh.w	r1, [r8]
 801ac8a:	9b08      	ldr	r3, [sp, #32]
 801ac8c:	441e      	add	r6, r3
 801ac8e:	b2b6      	uxth	r6, r6
 801ac90:	2e07      	cmp	r6, #7
 801ac92:	bf98      	it	ls
 801ac94:	411a      	asrls	r2, r3
 801ac96:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ac98:	bf89      	itett	hi
 801ac9a:	787a      	ldrbhi	r2, [r7, #1]
 801ac9c:	b2d2      	uxtbls	r2, r2
 801ac9e:	3701      	addhi	r7, #1
 801aca0:	2600      	movhi	r6, #0
 801aca2:	4498      	add	r8, r3
 801aca4:	e795      	b.n	801abd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 801aca6:	441c      	add	r4, r3
 801aca8:	b224      	sxth	r4, r4
 801acaa:	e6d7      	b.n	801aa5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 801acac:	f1ba 0f01 	cmp.w	sl, #1
 801acb0:	f47f af09 	bne.w	801aac6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801acb4:	f1bb 0f01 	cmp.w	fp, #1
 801acb8:	f47f af05 	bne.w	801aac6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801acbc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801acbe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801acc0:	1a99      	subs	r1, r3, r2
 801acc2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801acc4:	1b9b      	subs	r3, r3, r6
 801acc6:	4299      	cmp	r1, r3
 801acc8:	bfa8      	it	ge
 801acca:	4619      	movge	r1, r3
 801accc:	2900      	cmp	r1, #0
 801acce:	9112      	str	r1, [sp, #72]	@ 0x48
 801acd0:	dd7d      	ble.n	801adce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801acd2:	4a22      	ldr	r2, [pc, #136]	@ (801ad5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 801acd4:	9211      	str	r2, [sp, #68]	@ 0x44
 801acd6:	6810      	ldr	r0, [r2, #0]
 801acd8:	6803      	ldr	r3, [r0, #0]
 801acda:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801acdc:	4798      	blx	r3
 801acde:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801ace2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801ace4:	d006      	beq.n	801acf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801ace6:	9b08      	ldr	r3, [sp, #32]
 801ace8:	2b04      	cmp	r3, #4
 801acea:	d133      	bne.n	801ad54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 801acec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801acee:	3300      	adds	r3, #0
 801acf0:	bf18      	it	ne
 801acf2:	2301      	movne	r3, #1
 801acf4:	0582      	lsls	r2, r0, #22
 801acf6:	fa1f fc88 	uxth.w	ip, r8
 801acfa:	f140 80b9 	bpl.w	801ae70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 801acfe:	9808      	ldr	r0, [sp, #32]
 801ad00:	2808      	cmp	r0, #8
 801ad02:	f040 80b5 	bne.w	801ae70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 801ad06:	2b00      	cmp	r3, #0
 801ad08:	d064      	beq.n	801add4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 801ad0a:	f10c 0c01 	add.w	ip, ip, #1
 801ad0e:	f02c 0301 	bic.w	r3, ip, #1
 801ad12:	b29b      	uxth	r3, r3
 801ad14:	bb45      	cbnz	r5, 801ad68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 801ad16:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ad18:	eb08 0004 	add.w	r0, r8, r4
 801ad1c:	4290      	cmp	r0, r2
 801ad1e:	dc23      	bgt.n	801ad68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 801ad20:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ad22:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 801ad26:	6810      	ldr	r0, [r2, #0]
 801ad28:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801ad2c:	6804      	ldr	r4, [r0, #0]
 801ad2e:	9506      	str	r5, [sp, #24]
 801ad30:	f44f 7580 	mov.w	r5, #256	@ 0x100
 801ad34:	9505      	str	r5, [sp, #20]
 801ad36:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ad38:	9302      	str	r3, [sp, #8]
 801ad3a:	b289      	uxth	r1, r1
 801ad3c:	e9cd 3100 	strd	r3, r1, [sp]
 801ad40:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801ad44:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 801ad48:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 801ad4a:	4673      	mov	r3, lr
 801ad4c:	fb06 710c 	mla	r1, r6, ip, r7
 801ad50:	47a0      	blx	r4
 801ad52:	e03c      	b.n	801adce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801ad54:	2300      	movs	r3, #0
 801ad56:	e7cd      	b.n	801acf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801ad58:	200157b8 	.word	0x200157b8
 801ad5c:	200157c0 	.word	0x200157c0
 801ad60:	200157ba 	.word	0x200157ba
 801ad64:	00fff800 	.word	0x00fff800
 801ad68:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ad6a:	eba4 0e05 	sub.w	lr, r4, r5
 801ad6e:	eba2 0e0e 	sub.w	lr, r2, lr
 801ad72:	45c6      	cmp	lr, r8
 801ad74:	bfd4      	ite	le
 801ad76:	ebc5 0e0e 	rsble	lr, r5, lr
 801ad7a:	ebc5 0e08 	rsbgt	lr, r5, r8
 801ad7e:	f1be 0f00 	cmp.w	lr, #0
 801ad82:	d024      	beq.n	801adce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801ad84:	07e8      	lsls	r0, r5, #31
 801ad86:	f53f ae9e 	bmi.w	801aac6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801ad8a:	f01e 0001 	ands.w	r0, lr, #1
 801ad8e:	f47f ae9a 	bne.w	801aac6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801ad92:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ad94:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 801ad98:	6814      	ldr	r4, [r2, #0]
 801ad9a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801ad9e:	086d      	lsrs	r5, r5, #1
 801ada0:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 801ada4:	fb06 560c 	mla	r6, r6, ip, r5
 801ada8:	6825      	ldr	r5, [r4, #0]
 801adaa:	9006      	str	r0, [sp, #24]
 801adac:	f44f 7080 	mov.w	r0, #256	@ 0x100
 801adb0:	9005      	str	r0, [sp, #20]
 801adb2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801adb4:	9302      	str	r3, [sp, #8]
 801adb6:	e9cd 9003 	strd	r9, r0, [sp, #12]
 801adba:	b289      	uxth	r1, r1
 801adbc:	fa1f f38e 	uxth.w	r3, lr
 801adc0:	9101      	str	r1, [sp, #4]
 801adc2:	9300      	str	r3, [sp, #0]
 801adc4:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 801adc6:	4643      	mov	r3, r8
 801adc8:	19b9      	adds	r1, r7, r6
 801adca:	4620      	mov	r0, r4
 801adcc:	47a8      	blx	r5
 801adce:	b019      	add	sp, #100	@ 0x64
 801add0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801add4:	4a28      	ldr	r2, [pc, #160]	@ (801ae78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 801add6:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 801adda:	6810      	ldr	r0, [r2, #0]
 801addc:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801ade0:	f8d0 a000 	ldr.w	sl, [r0]
 801ade4:	9306      	str	r3, [sp, #24]
 801ade6:	f44f 7300 	mov.w	r3, #512	@ 0x200
 801adea:	9305      	str	r3, [sp, #20]
 801adec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801adee:	f8cd c008 	str.w	ip, [sp, #8]
 801adf2:	e9cd 9303 	strd	r9, r3, [sp, #12]
 801adf6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801adf8:	1b64      	subs	r4, r4, r5
 801adfa:	1b1c      	subs	r4, r3, r4
 801adfc:	fb06 5608 	mla	r6, r6, r8, r5
 801ae00:	4544      	cmp	r4, r8
 801ae02:	bfd4      	ite	le
 801ae04:	ebc5 0504 	rsble	r5, r5, r4
 801ae08:	ebc5 0508 	rsbgt	r5, r5, r8
 801ae0c:	b289      	uxth	r1, r1
 801ae0e:	b2ad      	uxth	r5, r5
 801ae10:	9101      	str	r1, [sp, #4]
 801ae12:	9500      	str	r5, [sp, #0]
 801ae14:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 801ae18:	4673      	mov	r3, lr
 801ae1a:	19b9      	adds	r1, r7, r6
 801ae1c:	e798      	b.n	801ad50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 801ae1e:	2208      	movs	r2, #8
 801ae20:	9b08      	ldr	r3, [sp, #32]
 801ae22:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae26:	1e5a      	subs	r2, r3, #1
 801ae28:	4442      	add	r2, r8
 801ae2a:	fb92 f2f3 	sdiv	r2, r2, r3
 801ae2e:	fb12 f203 	smulbb	r2, r2, r3
 801ae32:	b292      	uxth	r2, r2
 801ae34:	e64d      	b.n	801aad2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 801ae36:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801ae38:	e68f      	b.n	801ab5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 801ae3a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ae3c:	e723      	b.n	801ac86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 801ae3e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ae40:	b143      	cbz	r3, 801ae54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 801ae42:	441e      	add	r6, r3
 801ae44:	b2b6      	uxth	r6, r6
 801ae46:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 801ae4a:	f006 0607 	and.w	r6, r6, #7
 801ae4e:	783a      	ldrb	r2, [r7, #0]
 801ae50:	4132      	asrs	r2, r6
 801ae52:	b2d2      	uxtb	r2, r2
 801ae54:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801ae56:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801ae58:	4419      	add	r1, r3
 801ae5a:	910a      	str	r1, [sp, #40]	@ 0x28
 801ae5c:	e6b2      	b.n	801abc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 801ae5e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ae60:	2b00      	cmp	r3, #0
 801ae62:	d1b4      	bne.n	801adce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801ae64:	4b04      	ldr	r3, [pc, #16]	@ (801ae78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 801ae66:	6818      	ldr	r0, [r3, #0]
 801ae68:	6803      	ldr	r3, [r0, #0]
 801ae6a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801ae6c:	4798      	blx	r3
 801ae6e:	e7ae      	b.n	801adce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801ae70:	2b00      	cmp	r3, #0
 801ae72:	f47f af4a 	bne.w	801ad0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 801ae76:	e626      	b.n	801aac6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801ae78:	200157c0 	.word	0x200157c0

0801ae7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801ae7c:	b538      	push	{r3, r4, r5, lr}
 801ae7e:	4c15      	ldr	r4, [pc, #84]	@ (801aed4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801ae80:	7823      	ldrb	r3, [r4, #0]
 801ae82:	f3bf 8f5b 	dmb	ish
 801ae86:	07da      	lsls	r2, r3, #31
 801ae88:	4605      	mov	r5, r0
 801ae8a:	d40b      	bmi.n	801aea4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ae8c:	4620      	mov	r0, r4
 801ae8e:	f008 fc67 	bl	8023760 <__cxa_guard_acquire>
 801ae92:	b138      	cbz	r0, 801aea4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ae94:	4620      	mov	r0, r4
 801ae96:	f008 fc6f 	bl	8023778 <__cxa_guard_release>
 801ae9a:	4a0f      	ldr	r2, [pc, #60]	@ (801aed8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801ae9c:	490f      	ldr	r1, [pc, #60]	@ (801aedc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801ae9e:	4810      	ldr	r0, [pc, #64]	@ (801aee0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801aea0:	f008 fc57 	bl	8023752 <__aeabi_atexit>
 801aea4:	4c0f      	ldr	r4, [pc, #60]	@ (801aee4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801aea6:	7823      	ldrb	r3, [r4, #0]
 801aea8:	f3bf 8f5b 	dmb	ish
 801aeac:	07db      	lsls	r3, r3, #31
 801aeae:	d40b      	bmi.n	801aec8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801aeb0:	4620      	mov	r0, r4
 801aeb2:	f008 fc55 	bl	8023760 <__cxa_guard_acquire>
 801aeb6:	b138      	cbz	r0, 801aec8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801aeb8:	4620      	mov	r0, r4
 801aeba:	f008 fc5d 	bl	8023778 <__cxa_guard_release>
 801aebe:	4a06      	ldr	r2, [pc, #24]	@ (801aed8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801aec0:	4909      	ldr	r1, [pc, #36]	@ (801aee8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801aec2:	480a      	ldr	r0, [pc, #40]	@ (801aeec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801aec4:	f008 fc45 	bl	8023752 <__aeabi_atexit>
 801aec8:	4b05      	ldr	r3, [pc, #20]	@ (801aee0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801aeca:	616b      	str	r3, [r5, #20]
 801aecc:	4b07      	ldr	r3, [pc, #28]	@ (801aeec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801aece:	61ab      	str	r3, [r5, #24]
 801aed0:	bd38      	pop	{r3, r4, r5, pc}
 801aed2:	bf00      	nop
 801aed4:	200158a4 	.word	0x200158a4
 801aed8:	20000000 	.word	0x20000000
 801aedc:	08016f85 	.word	0x08016f85
 801aee0:	200000d8 	.word	0x200000d8
 801aee4:	200158a8 	.word	0x200158a8
 801aee8:	08016f83 	.word	0x08016f83
 801aeec:	200000dc 	.word	0x200000dc

0801aef0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801aef0:	b538      	push	{r3, r4, r5, lr}
 801aef2:	4c15      	ldr	r4, [pc, #84]	@ (801af48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801aef4:	7823      	ldrb	r3, [r4, #0]
 801aef6:	f3bf 8f5b 	dmb	ish
 801aefa:	07da      	lsls	r2, r3, #31
 801aefc:	4605      	mov	r5, r0
 801aefe:	d40b      	bmi.n	801af18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801af00:	4620      	mov	r0, r4
 801af02:	f008 fc2d 	bl	8023760 <__cxa_guard_acquire>
 801af06:	b138      	cbz	r0, 801af18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801af08:	4620      	mov	r0, r4
 801af0a:	f008 fc35 	bl	8023778 <__cxa_guard_release>
 801af0e:	4a0f      	ldr	r2, [pc, #60]	@ (801af4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801af10:	490f      	ldr	r1, [pc, #60]	@ (801af50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801af12:	4810      	ldr	r0, [pc, #64]	@ (801af54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801af14:	f008 fc1d 	bl	8023752 <__aeabi_atexit>
 801af18:	4c0f      	ldr	r4, [pc, #60]	@ (801af58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801af1a:	7823      	ldrb	r3, [r4, #0]
 801af1c:	f3bf 8f5b 	dmb	ish
 801af20:	07db      	lsls	r3, r3, #31
 801af22:	d40b      	bmi.n	801af3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801af24:	4620      	mov	r0, r4
 801af26:	f008 fc1b 	bl	8023760 <__cxa_guard_acquire>
 801af2a:	b138      	cbz	r0, 801af3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801af2c:	4620      	mov	r0, r4
 801af2e:	f008 fc23 	bl	8023778 <__cxa_guard_release>
 801af32:	4a06      	ldr	r2, [pc, #24]	@ (801af4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801af34:	4909      	ldr	r1, [pc, #36]	@ (801af5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801af36:	480a      	ldr	r0, [pc, #40]	@ (801af60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801af38:	f008 fc0b 	bl	8023752 <__aeabi_atexit>
 801af3c:	4b05      	ldr	r3, [pc, #20]	@ (801af54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801af3e:	60eb      	str	r3, [r5, #12]
 801af40:	4b07      	ldr	r3, [pc, #28]	@ (801af60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801af42:	612b      	str	r3, [r5, #16]
 801af44:	bd38      	pop	{r3, r4, r5, pc}
 801af46:	bf00      	nop
 801af48:	2001587c 	.word	0x2001587c
 801af4c:	20000000 	.word	0x20000000
 801af50:	08016f89 	.word	0x08016f89
 801af54:	200000b0 	.word	0x200000b0
 801af58:	20015880 	.word	0x20015880
 801af5c:	08016f87 	.word	0x08016f87
 801af60:	200000b4 	.word	0x200000b4

0801af64 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801af64:	b510      	push	{r4, lr}
 801af66:	4604      	mov	r4, r0
 801af68:	f7ff ff88 	bl	801ae7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801af6c:	4620      	mov	r0, r4
 801af6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801af72:	f7ff bfbd 	b.w	801aef0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801af78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801af78:	b538      	push	{r3, r4, r5, lr}
 801af7a:	4c15      	ldr	r4, [pc, #84]	@ (801afd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801af7c:	7823      	ldrb	r3, [r4, #0]
 801af7e:	f3bf 8f5b 	dmb	ish
 801af82:	07da      	lsls	r2, r3, #31
 801af84:	4605      	mov	r5, r0
 801af86:	d40b      	bmi.n	801afa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801af88:	4620      	mov	r0, r4
 801af8a:	f008 fbe9 	bl	8023760 <__cxa_guard_acquire>
 801af8e:	b138      	cbz	r0, 801afa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801af90:	4620      	mov	r0, r4
 801af92:	f008 fbf1 	bl	8023778 <__cxa_guard_release>
 801af96:	4a0f      	ldr	r2, [pc, #60]	@ (801afd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801af98:	490f      	ldr	r1, [pc, #60]	@ (801afd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801af9a:	4810      	ldr	r0, [pc, #64]	@ (801afdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801af9c:	f008 fbd9 	bl	8023752 <__aeabi_atexit>
 801afa0:	4c0f      	ldr	r4, [pc, #60]	@ (801afe0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801afa2:	7823      	ldrb	r3, [r4, #0]
 801afa4:	f3bf 8f5b 	dmb	ish
 801afa8:	07db      	lsls	r3, r3, #31
 801afaa:	d40b      	bmi.n	801afc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801afac:	4620      	mov	r0, r4
 801afae:	f008 fbd7 	bl	8023760 <__cxa_guard_acquire>
 801afb2:	b138      	cbz	r0, 801afc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801afb4:	4620      	mov	r0, r4
 801afb6:	f008 fbdf 	bl	8023778 <__cxa_guard_release>
 801afba:	4a06      	ldr	r2, [pc, #24]	@ (801afd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801afbc:	4909      	ldr	r1, [pc, #36]	@ (801afe4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801afbe:	480a      	ldr	r0, [pc, #40]	@ (801afe8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801afc0:	f008 fbc7 	bl	8023752 <__aeabi_atexit>
 801afc4:	4b05      	ldr	r3, [pc, #20]	@ (801afdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801afc6:	626b      	str	r3, [r5, #36]	@ 0x24
 801afc8:	4b07      	ldr	r3, [pc, #28]	@ (801afe8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801afca:	62ab      	str	r3, [r5, #40]	@ 0x28
 801afcc:	bd38      	pop	{r3, r4, r5, pc}
 801afce:	bf00      	nop
 801afd0:	200158ac 	.word	0x200158ac
 801afd4:	20000000 	.word	0x20000000
 801afd8:	08016f7d 	.word	0x08016f7d
 801afdc:	200000e0 	.word	0x200000e0
 801afe0:	200158b0 	.word	0x200158b0
 801afe4:	08016f7b 	.word	0x08016f7b
 801afe8:	200000e4 	.word	0x200000e4

0801afec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801afec:	b538      	push	{r3, r4, r5, lr}
 801afee:	4c15      	ldr	r4, [pc, #84]	@ (801b044 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801aff0:	7823      	ldrb	r3, [r4, #0]
 801aff2:	f3bf 8f5b 	dmb	ish
 801aff6:	07da      	lsls	r2, r3, #31
 801aff8:	4605      	mov	r5, r0
 801affa:	d40b      	bmi.n	801b014 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801affc:	4620      	mov	r0, r4
 801affe:	f008 fbaf 	bl	8023760 <__cxa_guard_acquire>
 801b002:	b138      	cbz	r0, 801b014 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801b004:	4620      	mov	r0, r4
 801b006:	f008 fbb7 	bl	8023778 <__cxa_guard_release>
 801b00a:	4a0f      	ldr	r2, [pc, #60]	@ (801b048 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801b00c:	490f      	ldr	r1, [pc, #60]	@ (801b04c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801b00e:	4810      	ldr	r0, [pc, #64]	@ (801b050 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801b010:	f008 fb9f 	bl	8023752 <__aeabi_atexit>
 801b014:	4c0f      	ldr	r4, [pc, #60]	@ (801b054 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801b016:	7823      	ldrb	r3, [r4, #0]
 801b018:	f3bf 8f5b 	dmb	ish
 801b01c:	07db      	lsls	r3, r3, #31
 801b01e:	d40b      	bmi.n	801b038 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801b020:	4620      	mov	r0, r4
 801b022:	f008 fb9d 	bl	8023760 <__cxa_guard_acquire>
 801b026:	b138      	cbz	r0, 801b038 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801b028:	4620      	mov	r0, r4
 801b02a:	f008 fba5 	bl	8023778 <__cxa_guard_release>
 801b02e:	4a06      	ldr	r2, [pc, #24]	@ (801b048 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801b030:	4909      	ldr	r1, [pc, #36]	@ (801b058 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801b032:	480a      	ldr	r0, [pc, #40]	@ (801b05c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801b034:	f008 fb8d 	bl	8023752 <__aeabi_atexit>
 801b038:	4b05      	ldr	r3, [pc, #20]	@ (801b050 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801b03a:	61eb      	str	r3, [r5, #28]
 801b03c:	4b07      	ldr	r3, [pc, #28]	@ (801b05c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801b03e:	622b      	str	r3, [r5, #32]
 801b040:	bd38      	pop	{r3, r4, r5, pc}
 801b042:	bf00      	nop
 801b044:	20015884 	.word	0x20015884
 801b048:	20000000 	.word	0x20000000
 801b04c:	08016f81 	.word	0x08016f81
 801b050:	200000b8 	.word	0x200000b8
 801b054:	20015888 	.word	0x20015888
 801b058:	08016f7f 	.word	0x08016f7f
 801b05c:	200000bc 	.word	0x200000bc

0801b060 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801b060:	b510      	push	{r4, lr}
 801b062:	4604      	mov	r4, r0
 801b064:	f7ff ff88 	bl	801af78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801b068:	4620      	mov	r0, r4
 801b06a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b06e:	f7ff bfbd 	b.w	801afec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801b074 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801b074:	b538      	push	{r3, r4, r5, lr}
 801b076:	4c15      	ldr	r4, [pc, #84]	@ (801b0cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801b078:	7823      	ldrb	r3, [r4, #0]
 801b07a:	f3bf 8f5b 	dmb	ish
 801b07e:	07da      	lsls	r2, r3, #31
 801b080:	4605      	mov	r5, r0
 801b082:	d40b      	bmi.n	801b09c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801b084:	4620      	mov	r0, r4
 801b086:	f008 fb6b 	bl	8023760 <__cxa_guard_acquire>
 801b08a:	b138      	cbz	r0, 801b09c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801b08c:	4620      	mov	r0, r4
 801b08e:	f008 fb73 	bl	8023778 <__cxa_guard_release>
 801b092:	4a0f      	ldr	r2, [pc, #60]	@ (801b0d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801b094:	490f      	ldr	r1, [pc, #60]	@ (801b0d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801b096:	4810      	ldr	r0, [pc, #64]	@ (801b0d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801b098:	f008 fb5b 	bl	8023752 <__aeabi_atexit>
 801b09c:	4c0f      	ldr	r4, [pc, #60]	@ (801b0dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801b09e:	7823      	ldrb	r3, [r4, #0]
 801b0a0:	f3bf 8f5b 	dmb	ish
 801b0a4:	07db      	lsls	r3, r3, #31
 801b0a6:	d40b      	bmi.n	801b0c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801b0a8:	4620      	mov	r0, r4
 801b0aa:	f008 fb59 	bl	8023760 <__cxa_guard_acquire>
 801b0ae:	b138      	cbz	r0, 801b0c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801b0b0:	4620      	mov	r0, r4
 801b0b2:	f008 fb61 	bl	8023778 <__cxa_guard_release>
 801b0b6:	4a06      	ldr	r2, [pc, #24]	@ (801b0d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801b0b8:	4909      	ldr	r1, [pc, #36]	@ (801b0e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801b0ba:	480a      	ldr	r0, [pc, #40]	@ (801b0e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801b0bc:	f008 fb49 	bl	8023752 <__aeabi_atexit>
 801b0c0:	4b05      	ldr	r3, [pc, #20]	@ (801b0d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801b0c2:	636b      	str	r3, [r5, #52]	@ 0x34
 801b0c4:	4b07      	ldr	r3, [pc, #28]	@ (801b0e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801b0c6:	63ab      	str	r3, [r5, #56]	@ 0x38
 801b0c8:	bd38      	pop	{r3, r4, r5, pc}
 801b0ca:	bf00      	nop
 801b0cc:	200158bc 	.word	0x200158bc
 801b0d0:	20000000 	.word	0x20000000
 801b0d4:	08016f75 	.word	0x08016f75
 801b0d8:	200000f0 	.word	0x200000f0
 801b0dc:	200158c0 	.word	0x200158c0
 801b0e0:	08016f73 	.word	0x08016f73
 801b0e4:	200000f4 	.word	0x200000f4

0801b0e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801b0e8:	b538      	push	{r3, r4, r5, lr}
 801b0ea:	4c15      	ldr	r4, [pc, #84]	@ (801b140 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801b0ec:	7823      	ldrb	r3, [r4, #0]
 801b0ee:	f3bf 8f5b 	dmb	ish
 801b0f2:	07da      	lsls	r2, r3, #31
 801b0f4:	4605      	mov	r5, r0
 801b0f6:	d40b      	bmi.n	801b110 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801b0f8:	4620      	mov	r0, r4
 801b0fa:	f008 fb31 	bl	8023760 <__cxa_guard_acquire>
 801b0fe:	b138      	cbz	r0, 801b110 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801b100:	4620      	mov	r0, r4
 801b102:	f008 fb39 	bl	8023778 <__cxa_guard_release>
 801b106:	4a0f      	ldr	r2, [pc, #60]	@ (801b144 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801b108:	490f      	ldr	r1, [pc, #60]	@ (801b148 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801b10a:	4810      	ldr	r0, [pc, #64]	@ (801b14c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801b10c:	f008 fb21 	bl	8023752 <__aeabi_atexit>
 801b110:	4c0f      	ldr	r4, [pc, #60]	@ (801b150 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801b112:	7823      	ldrb	r3, [r4, #0]
 801b114:	f3bf 8f5b 	dmb	ish
 801b118:	07db      	lsls	r3, r3, #31
 801b11a:	d40b      	bmi.n	801b134 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801b11c:	4620      	mov	r0, r4
 801b11e:	f008 fb1f 	bl	8023760 <__cxa_guard_acquire>
 801b122:	b138      	cbz	r0, 801b134 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801b124:	4620      	mov	r0, r4
 801b126:	f008 fb27 	bl	8023778 <__cxa_guard_release>
 801b12a:	4a06      	ldr	r2, [pc, #24]	@ (801b144 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801b12c:	4909      	ldr	r1, [pc, #36]	@ (801b154 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801b12e:	480a      	ldr	r0, [pc, #40]	@ (801b158 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801b130:	f008 fb0f 	bl	8023752 <__aeabi_atexit>
 801b134:	4b05      	ldr	r3, [pc, #20]	@ (801b14c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801b136:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801b138:	4b07      	ldr	r3, [pc, #28]	@ (801b158 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801b13a:	632b      	str	r3, [r5, #48]	@ 0x30
 801b13c:	bd38      	pop	{r3, r4, r5, pc}
 801b13e:	bf00      	nop
 801b140:	2001588c 	.word	0x2001588c
 801b144:	20000000 	.word	0x20000000
 801b148:	08016f79 	.word	0x08016f79
 801b14c:	200000c0 	.word	0x200000c0
 801b150:	20015890 	.word	0x20015890
 801b154:	08016f77 	.word	0x08016f77
 801b158:	200000c4 	.word	0x200000c4

0801b15c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801b15c:	b510      	push	{r4, lr}
 801b15e:	4604      	mov	r4, r0
 801b160:	f7ff ff88 	bl	801b074 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801b164:	4620      	mov	r0, r4
 801b166:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b16a:	f7ff bfbd 	b.w	801b0e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801b170 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801b170:	b538      	push	{r3, r4, r5, lr}
 801b172:	4c15      	ldr	r4, [pc, #84]	@ (801b1c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801b174:	7823      	ldrb	r3, [r4, #0]
 801b176:	f3bf 8f5b 	dmb	ish
 801b17a:	07da      	lsls	r2, r3, #31
 801b17c:	4605      	mov	r5, r0
 801b17e:	d40b      	bmi.n	801b198 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801b180:	4620      	mov	r0, r4
 801b182:	f008 faed 	bl	8023760 <__cxa_guard_acquire>
 801b186:	b138      	cbz	r0, 801b198 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801b188:	4620      	mov	r0, r4
 801b18a:	f008 faf5 	bl	8023778 <__cxa_guard_release>
 801b18e:	4a0f      	ldr	r2, [pc, #60]	@ (801b1cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801b190:	490f      	ldr	r1, [pc, #60]	@ (801b1d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801b192:	4810      	ldr	r0, [pc, #64]	@ (801b1d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801b194:	f008 fadd 	bl	8023752 <__aeabi_atexit>
 801b198:	4c0f      	ldr	r4, [pc, #60]	@ (801b1d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801b19a:	7823      	ldrb	r3, [r4, #0]
 801b19c:	f3bf 8f5b 	dmb	ish
 801b1a0:	07db      	lsls	r3, r3, #31
 801b1a2:	d40b      	bmi.n	801b1bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801b1a4:	4620      	mov	r0, r4
 801b1a6:	f008 fadb 	bl	8023760 <__cxa_guard_acquire>
 801b1aa:	b138      	cbz	r0, 801b1bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801b1ac:	4620      	mov	r0, r4
 801b1ae:	f008 fae3 	bl	8023778 <__cxa_guard_release>
 801b1b2:	4a06      	ldr	r2, [pc, #24]	@ (801b1cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801b1b4:	4909      	ldr	r1, [pc, #36]	@ (801b1dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801b1b6:	480a      	ldr	r0, [pc, #40]	@ (801b1e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801b1b8:	f008 facb 	bl	8023752 <__aeabi_atexit>
 801b1bc:	4b05      	ldr	r3, [pc, #20]	@ (801b1d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801b1be:	656b      	str	r3, [r5, #84]	@ 0x54
 801b1c0:	4b07      	ldr	r3, [pc, #28]	@ (801b1e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801b1c2:	65ab      	str	r3, [r5, #88]	@ 0x58
 801b1c4:	bd38      	pop	{r3, r4, r5, pc}
 801b1c6:	bf00      	nop
 801b1c8:	200158c4 	.word	0x200158c4
 801b1cc:	20000000 	.word	0x20000000
 801b1d0:	08016f65 	.word	0x08016f65
 801b1d4:	200000f8 	.word	0x200000f8
 801b1d8:	200158c8 	.word	0x200158c8
 801b1dc:	08016f63 	.word	0x08016f63
 801b1e0:	200000fc 	.word	0x200000fc

0801b1e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801b1e4:	b538      	push	{r3, r4, r5, lr}
 801b1e6:	4c15      	ldr	r4, [pc, #84]	@ (801b23c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801b1e8:	7823      	ldrb	r3, [r4, #0]
 801b1ea:	f3bf 8f5b 	dmb	ish
 801b1ee:	07da      	lsls	r2, r3, #31
 801b1f0:	4605      	mov	r5, r0
 801b1f2:	d40b      	bmi.n	801b20c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801b1f4:	4620      	mov	r0, r4
 801b1f6:	f008 fab3 	bl	8023760 <__cxa_guard_acquire>
 801b1fa:	b138      	cbz	r0, 801b20c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801b1fc:	4620      	mov	r0, r4
 801b1fe:	f008 fabb 	bl	8023778 <__cxa_guard_release>
 801b202:	4a0f      	ldr	r2, [pc, #60]	@ (801b240 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801b204:	490f      	ldr	r1, [pc, #60]	@ (801b244 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801b206:	4810      	ldr	r0, [pc, #64]	@ (801b248 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801b208:	f008 faa3 	bl	8023752 <__aeabi_atexit>
 801b20c:	4c0f      	ldr	r4, [pc, #60]	@ (801b24c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801b20e:	7823      	ldrb	r3, [r4, #0]
 801b210:	f3bf 8f5b 	dmb	ish
 801b214:	07db      	lsls	r3, r3, #31
 801b216:	d40b      	bmi.n	801b230 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801b218:	4620      	mov	r0, r4
 801b21a:	f008 faa1 	bl	8023760 <__cxa_guard_acquire>
 801b21e:	b138      	cbz	r0, 801b230 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801b220:	4620      	mov	r0, r4
 801b222:	f008 faa9 	bl	8023778 <__cxa_guard_release>
 801b226:	4a06      	ldr	r2, [pc, #24]	@ (801b240 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801b228:	4909      	ldr	r1, [pc, #36]	@ (801b250 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801b22a:	480a      	ldr	r0, [pc, #40]	@ (801b254 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801b22c:	f008 fa91 	bl	8023752 <__aeabi_atexit>
 801b230:	4b05      	ldr	r3, [pc, #20]	@ (801b248 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801b232:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801b234:	4b07      	ldr	r3, [pc, #28]	@ (801b254 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801b236:	652b      	str	r3, [r5, #80]	@ 0x50
 801b238:	bd38      	pop	{r3, r4, r5, pc}
 801b23a:	bf00      	nop
 801b23c:	200158cc 	.word	0x200158cc
 801b240:	20000000 	.word	0x20000000
 801b244:	08016f69 	.word	0x08016f69
 801b248:	20000100 	.word	0x20000100
 801b24c:	200158d0 	.word	0x200158d0
 801b250:	08016f67 	.word	0x08016f67
 801b254:	20000104 	.word	0x20000104

0801b258 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801b258:	b538      	push	{r3, r4, r5, lr}
 801b25a:	4c15      	ldr	r4, [pc, #84]	@ (801b2b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801b25c:	7823      	ldrb	r3, [r4, #0]
 801b25e:	f3bf 8f5b 	dmb	ish
 801b262:	07da      	lsls	r2, r3, #31
 801b264:	4605      	mov	r5, r0
 801b266:	d40b      	bmi.n	801b280 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801b268:	4620      	mov	r0, r4
 801b26a:	f008 fa79 	bl	8023760 <__cxa_guard_acquire>
 801b26e:	b138      	cbz	r0, 801b280 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801b270:	4620      	mov	r0, r4
 801b272:	f008 fa81 	bl	8023778 <__cxa_guard_release>
 801b276:	4a0f      	ldr	r2, [pc, #60]	@ (801b2b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801b278:	490f      	ldr	r1, [pc, #60]	@ (801b2b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801b27a:	4810      	ldr	r0, [pc, #64]	@ (801b2bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801b27c:	f008 fa69 	bl	8023752 <__aeabi_atexit>
 801b280:	4c0f      	ldr	r4, [pc, #60]	@ (801b2c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801b282:	7823      	ldrb	r3, [r4, #0]
 801b284:	f3bf 8f5b 	dmb	ish
 801b288:	07db      	lsls	r3, r3, #31
 801b28a:	d40b      	bmi.n	801b2a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801b28c:	4620      	mov	r0, r4
 801b28e:	f008 fa67 	bl	8023760 <__cxa_guard_acquire>
 801b292:	b138      	cbz	r0, 801b2a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801b294:	4620      	mov	r0, r4
 801b296:	f008 fa6f 	bl	8023778 <__cxa_guard_release>
 801b29a:	4a06      	ldr	r2, [pc, #24]	@ (801b2b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801b29c:	4909      	ldr	r1, [pc, #36]	@ (801b2c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801b29e:	480a      	ldr	r0, [pc, #40]	@ (801b2c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801b2a0:	f008 fa57 	bl	8023752 <__aeabi_atexit>
 801b2a4:	4b05      	ldr	r3, [pc, #20]	@ (801b2bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801b2a6:	646b      	str	r3, [r5, #68]	@ 0x44
 801b2a8:	4b07      	ldr	r3, [pc, #28]	@ (801b2c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801b2aa:	64ab      	str	r3, [r5, #72]	@ 0x48
 801b2ac:	bd38      	pop	{r3, r4, r5, pc}
 801b2ae:	bf00      	nop
 801b2b0:	20015894 	.word	0x20015894
 801b2b4:	20000000 	.word	0x20000000
 801b2b8:	08016f6d 	.word	0x08016f6d
 801b2bc:	200000c8 	.word	0x200000c8
 801b2c0:	20015898 	.word	0x20015898
 801b2c4:	08016f6b 	.word	0x08016f6b
 801b2c8:	200000cc 	.word	0x200000cc

0801b2cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801b2cc:	b538      	push	{r3, r4, r5, lr}
 801b2ce:	4c15      	ldr	r4, [pc, #84]	@ (801b324 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801b2d0:	7823      	ldrb	r3, [r4, #0]
 801b2d2:	f3bf 8f5b 	dmb	ish
 801b2d6:	07da      	lsls	r2, r3, #31
 801b2d8:	4605      	mov	r5, r0
 801b2da:	d40b      	bmi.n	801b2f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801b2dc:	4620      	mov	r0, r4
 801b2de:	f008 fa3f 	bl	8023760 <__cxa_guard_acquire>
 801b2e2:	b138      	cbz	r0, 801b2f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801b2e4:	4620      	mov	r0, r4
 801b2e6:	f008 fa47 	bl	8023778 <__cxa_guard_release>
 801b2ea:	4a0f      	ldr	r2, [pc, #60]	@ (801b328 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801b2ec:	490f      	ldr	r1, [pc, #60]	@ (801b32c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801b2ee:	4810      	ldr	r0, [pc, #64]	@ (801b330 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801b2f0:	f008 fa2f 	bl	8023752 <__aeabi_atexit>
 801b2f4:	4c0f      	ldr	r4, [pc, #60]	@ (801b334 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801b2f6:	7823      	ldrb	r3, [r4, #0]
 801b2f8:	f3bf 8f5b 	dmb	ish
 801b2fc:	07db      	lsls	r3, r3, #31
 801b2fe:	d40b      	bmi.n	801b318 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801b300:	4620      	mov	r0, r4
 801b302:	f008 fa2d 	bl	8023760 <__cxa_guard_acquire>
 801b306:	b138      	cbz	r0, 801b318 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801b308:	4620      	mov	r0, r4
 801b30a:	f008 fa35 	bl	8023778 <__cxa_guard_release>
 801b30e:	4a06      	ldr	r2, [pc, #24]	@ (801b328 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801b310:	4909      	ldr	r1, [pc, #36]	@ (801b338 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801b312:	480a      	ldr	r0, [pc, #40]	@ (801b33c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801b314:	f008 fa1d 	bl	8023752 <__aeabi_atexit>
 801b318:	4b05      	ldr	r3, [pc, #20]	@ (801b330 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801b31a:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801b31c:	4b07      	ldr	r3, [pc, #28]	@ (801b33c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801b31e:	642b      	str	r3, [r5, #64]	@ 0x40
 801b320:	bd38      	pop	{r3, r4, r5, pc}
 801b322:	bf00      	nop
 801b324:	200158b4 	.word	0x200158b4
 801b328:	20000000 	.word	0x20000000
 801b32c:	08016f71 	.word	0x08016f71
 801b330:	200000e8 	.word	0x200000e8
 801b334:	200158b8 	.word	0x200158b8
 801b338:	08016f6f 	.word	0x08016f6f
 801b33c:	200000ec 	.word	0x200000ec

0801b340 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801b340:	b510      	push	{r4, lr}
 801b342:	4604      	mov	r4, r0
 801b344:	f7ff ff14 	bl	801b170 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801b348:	4620      	mov	r0, r4
 801b34a:	f7ff ff85 	bl	801b258 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801b34e:	4620      	mov	r0, r4
 801b350:	f7ff ff48 	bl	801b1e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801b354:	4620      	mov	r0, r4
 801b356:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b35a:	f7ff bfb7 	b.w	801b2cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801b360 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801b360:	b538      	push	{r3, r4, r5, lr}
 801b362:	4c15      	ldr	r4, [pc, #84]	@ (801b3b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801b364:	7823      	ldrb	r3, [r4, #0]
 801b366:	f3bf 8f5b 	dmb	ish
 801b36a:	07da      	lsls	r2, r3, #31
 801b36c:	4605      	mov	r5, r0
 801b36e:	d40b      	bmi.n	801b388 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801b370:	4620      	mov	r0, r4
 801b372:	f008 f9f5 	bl	8023760 <__cxa_guard_acquire>
 801b376:	b138      	cbz	r0, 801b388 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801b378:	4620      	mov	r0, r4
 801b37a:	f008 f9fd 	bl	8023778 <__cxa_guard_release>
 801b37e:	4a0f      	ldr	r2, [pc, #60]	@ (801b3bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801b380:	490f      	ldr	r1, [pc, #60]	@ (801b3c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801b382:	4810      	ldr	r0, [pc, #64]	@ (801b3c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801b384:	f008 f9e5 	bl	8023752 <__aeabi_atexit>
 801b388:	4c0f      	ldr	r4, [pc, #60]	@ (801b3c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801b38a:	7823      	ldrb	r3, [r4, #0]
 801b38c:	f3bf 8f5b 	dmb	ish
 801b390:	07db      	lsls	r3, r3, #31
 801b392:	d40b      	bmi.n	801b3ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801b394:	4620      	mov	r0, r4
 801b396:	f008 f9e3 	bl	8023760 <__cxa_guard_acquire>
 801b39a:	b138      	cbz	r0, 801b3ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801b39c:	4620      	mov	r0, r4
 801b39e:	f008 f9eb 	bl	8023778 <__cxa_guard_release>
 801b3a2:	4a06      	ldr	r2, [pc, #24]	@ (801b3bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801b3a4:	4909      	ldr	r1, [pc, #36]	@ (801b3cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801b3a6:	480a      	ldr	r0, [pc, #40]	@ (801b3d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801b3a8:	f008 f9d3 	bl	8023752 <__aeabi_atexit>
 801b3ac:	4b05      	ldr	r3, [pc, #20]	@ (801b3c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801b3ae:	666b      	str	r3, [r5, #100]	@ 0x64
 801b3b0:	4b07      	ldr	r3, [pc, #28]	@ (801b3d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801b3b2:	66ab      	str	r3, [r5, #104]	@ 0x68
 801b3b4:	bd38      	pop	{r3, r4, r5, pc}
 801b3b6:	bf00      	nop
 801b3b8:	2001589c 	.word	0x2001589c
 801b3bc:	20000000 	.word	0x20000000
 801b3c0:	08016f5d 	.word	0x08016f5d
 801b3c4:	200000d0 	.word	0x200000d0
 801b3c8:	200158a0 	.word	0x200158a0
 801b3cc:	08016f5b 	.word	0x08016f5b
 801b3d0:	200000d4 	.word	0x200000d4

0801b3d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801b3d4:	b538      	push	{r3, r4, r5, lr}
 801b3d6:	4c15      	ldr	r4, [pc, #84]	@ (801b42c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801b3d8:	7823      	ldrb	r3, [r4, #0]
 801b3da:	f3bf 8f5b 	dmb	ish
 801b3de:	07da      	lsls	r2, r3, #31
 801b3e0:	4605      	mov	r5, r0
 801b3e2:	d40b      	bmi.n	801b3fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801b3e4:	4620      	mov	r0, r4
 801b3e6:	f008 f9bb 	bl	8023760 <__cxa_guard_acquire>
 801b3ea:	b138      	cbz	r0, 801b3fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801b3ec:	4620      	mov	r0, r4
 801b3ee:	f008 f9c3 	bl	8023778 <__cxa_guard_release>
 801b3f2:	4a0f      	ldr	r2, [pc, #60]	@ (801b430 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801b3f4:	490f      	ldr	r1, [pc, #60]	@ (801b434 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801b3f6:	4810      	ldr	r0, [pc, #64]	@ (801b438 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801b3f8:	f008 f9ab 	bl	8023752 <__aeabi_atexit>
 801b3fc:	4c0f      	ldr	r4, [pc, #60]	@ (801b43c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801b3fe:	7823      	ldrb	r3, [r4, #0]
 801b400:	f3bf 8f5b 	dmb	ish
 801b404:	07db      	lsls	r3, r3, #31
 801b406:	d40b      	bmi.n	801b420 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801b408:	4620      	mov	r0, r4
 801b40a:	f008 f9a9 	bl	8023760 <__cxa_guard_acquire>
 801b40e:	b138      	cbz	r0, 801b420 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801b410:	4620      	mov	r0, r4
 801b412:	f008 f9b1 	bl	8023778 <__cxa_guard_release>
 801b416:	4a06      	ldr	r2, [pc, #24]	@ (801b430 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801b418:	4909      	ldr	r1, [pc, #36]	@ (801b440 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801b41a:	480a      	ldr	r0, [pc, #40]	@ (801b444 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801b41c:	f008 f999 	bl	8023752 <__aeabi_atexit>
 801b420:	4b05      	ldr	r3, [pc, #20]	@ (801b438 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801b422:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801b424:	4b07      	ldr	r3, [pc, #28]	@ (801b444 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801b426:	662b      	str	r3, [r5, #96]	@ 0x60
 801b428:	bd38      	pop	{r3, r4, r5, pc}
 801b42a:	bf00      	nop
 801b42c:	20015874 	.word	0x20015874
 801b430:	20000000 	.word	0x20000000
 801b434:	08016f61 	.word	0x08016f61
 801b438:	200000a8 	.word	0x200000a8
 801b43c:	20015878 	.word	0x20015878
 801b440:	08016f5f 	.word	0x08016f5f
 801b444:	200000ac 	.word	0x200000ac

0801b448 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801b448:	b510      	push	{r4, lr}
 801b44a:	4604      	mov	r4, r0
 801b44c:	f7ff ff88 	bl	801b360 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801b450:	4620      	mov	r0, r4
 801b452:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b456:	f7ff bfbd 	b.w	801b3d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801b45c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801b45c:	b538      	push	{r3, r4, r5, lr}
 801b45e:	4c15      	ldr	r4, [pc, #84]	@ (801b4b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801b460:	7823      	ldrb	r3, [r4, #0]
 801b462:	f3bf 8f5b 	dmb	ish
 801b466:	07da      	lsls	r2, r3, #31
 801b468:	4605      	mov	r5, r0
 801b46a:	d40b      	bmi.n	801b484 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801b46c:	4620      	mov	r0, r4
 801b46e:	f008 f977 	bl	8023760 <__cxa_guard_acquire>
 801b472:	b138      	cbz	r0, 801b484 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801b474:	4620      	mov	r0, r4
 801b476:	f008 f97f 	bl	8023778 <__cxa_guard_release>
 801b47a:	4a0f      	ldr	r2, [pc, #60]	@ (801b4b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801b47c:	490f      	ldr	r1, [pc, #60]	@ (801b4bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801b47e:	4810      	ldr	r0, [pc, #64]	@ (801b4c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801b480:	f008 f967 	bl	8023752 <__aeabi_atexit>
 801b484:	4c0f      	ldr	r4, [pc, #60]	@ (801b4c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801b486:	7823      	ldrb	r3, [r4, #0]
 801b488:	f3bf 8f5b 	dmb	ish
 801b48c:	07db      	lsls	r3, r3, #31
 801b48e:	d40b      	bmi.n	801b4a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801b490:	4620      	mov	r0, r4
 801b492:	f008 f965 	bl	8023760 <__cxa_guard_acquire>
 801b496:	b138      	cbz	r0, 801b4a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801b498:	4620      	mov	r0, r4
 801b49a:	f008 f96d 	bl	8023778 <__cxa_guard_release>
 801b49e:	4a06      	ldr	r2, [pc, #24]	@ (801b4b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801b4a0:	4909      	ldr	r1, [pc, #36]	@ (801b4c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801b4a2:	480a      	ldr	r0, [pc, #40]	@ (801b4cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801b4a4:	f008 f955 	bl	8023752 <__aeabi_atexit>
 801b4a8:	4b05      	ldr	r3, [pc, #20]	@ (801b4c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801b4aa:	676b      	str	r3, [r5, #116]	@ 0x74
 801b4ac:	4b07      	ldr	r3, [pc, #28]	@ (801b4cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801b4ae:	67ab      	str	r3, [r5, #120]	@ 0x78
 801b4b0:	bd38      	pop	{r3, r4, r5, pc}
 801b4b2:	bf00      	nop
 801b4b4:	2001586c 	.word	0x2001586c
 801b4b8:	20000000 	.word	0x20000000
 801b4bc:	08016f55 	.word	0x08016f55
 801b4c0:	200000a0 	.word	0x200000a0
 801b4c4:	20015870 	.word	0x20015870
 801b4c8:	08016f53 	.word	0x08016f53
 801b4cc:	200000a4 	.word	0x200000a4

0801b4d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801b4d0:	b538      	push	{r3, r4, r5, lr}
 801b4d2:	4c15      	ldr	r4, [pc, #84]	@ (801b528 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801b4d4:	7823      	ldrb	r3, [r4, #0]
 801b4d6:	f3bf 8f5b 	dmb	ish
 801b4da:	07da      	lsls	r2, r3, #31
 801b4dc:	4605      	mov	r5, r0
 801b4de:	d40b      	bmi.n	801b4f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801b4e0:	4620      	mov	r0, r4
 801b4e2:	f008 f93d 	bl	8023760 <__cxa_guard_acquire>
 801b4e6:	b138      	cbz	r0, 801b4f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801b4e8:	4620      	mov	r0, r4
 801b4ea:	f008 f945 	bl	8023778 <__cxa_guard_release>
 801b4ee:	4a0f      	ldr	r2, [pc, #60]	@ (801b52c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801b4f0:	490f      	ldr	r1, [pc, #60]	@ (801b530 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801b4f2:	4810      	ldr	r0, [pc, #64]	@ (801b534 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801b4f4:	f008 f92d 	bl	8023752 <__aeabi_atexit>
 801b4f8:	4c0f      	ldr	r4, [pc, #60]	@ (801b538 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801b4fa:	7823      	ldrb	r3, [r4, #0]
 801b4fc:	f3bf 8f5b 	dmb	ish
 801b500:	07db      	lsls	r3, r3, #31
 801b502:	d40b      	bmi.n	801b51c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801b504:	4620      	mov	r0, r4
 801b506:	f008 f92b 	bl	8023760 <__cxa_guard_acquire>
 801b50a:	b138      	cbz	r0, 801b51c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801b50c:	4620      	mov	r0, r4
 801b50e:	f008 f933 	bl	8023778 <__cxa_guard_release>
 801b512:	4a06      	ldr	r2, [pc, #24]	@ (801b52c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801b514:	4909      	ldr	r1, [pc, #36]	@ (801b53c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801b516:	480a      	ldr	r0, [pc, #40]	@ (801b540 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801b518:	f008 f91b 	bl	8023752 <__aeabi_atexit>
 801b51c:	4b05      	ldr	r3, [pc, #20]	@ (801b534 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801b51e:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801b520:	4b07      	ldr	r3, [pc, #28]	@ (801b540 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801b522:	672b      	str	r3, [r5, #112]	@ 0x70
 801b524:	bd38      	pop	{r3, r4, r5, pc}
 801b526:	bf00      	nop
 801b528:	20015864 	.word	0x20015864
 801b52c:	20000000 	.word	0x20000000
 801b530:	08016f59 	.word	0x08016f59
 801b534:	20000098 	.word	0x20000098
 801b538:	20015868 	.word	0x20015868
 801b53c:	08016f57 	.word	0x08016f57
 801b540:	2000009c 	.word	0x2000009c

0801b544 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801b544:	b510      	push	{r4, lr}
 801b546:	4604      	mov	r4, r0
 801b548:	f7ff ff88 	bl	801b45c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801b54c:	4620      	mov	r0, r4
 801b54e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b552:	f7ff bfbd 	b.w	801b4d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801b556 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801b556:	b510      	push	{r4, lr}
 801b558:	4604      	mov	r4, r0
 801b55a:	f7ff fff3 	bl	801b544 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801b55e:	4620      	mov	r0, r4
 801b560:	f7ff ff72 	bl	801b448 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801b564:	4620      	mov	r0, r4
 801b566:	f7ff fdf9 	bl	801b15c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801b56a:	4620      	mov	r0, r4
 801b56c:	f7ff fcfa 	bl	801af64 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801b570:	4620      	mov	r0, r4
 801b572:	f7ff fd75 	bl	801b060 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801b576:	4620      	mov	r0, r4
 801b578:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b57c:	f7ff bee0 	b.w	801b340 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801b580 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801b580:	b538      	push	{r3, r4, r5, lr}
 801b582:	4c0b      	ldr	r4, [pc, #44]	@ (801b5b0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801b584:	7823      	ldrb	r3, [r4, #0]
 801b586:	f3bf 8f5b 	dmb	ish
 801b58a:	07db      	lsls	r3, r3, #31
 801b58c:	4605      	mov	r5, r0
 801b58e:	d40b      	bmi.n	801b5a8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801b590:	4620      	mov	r0, r4
 801b592:	f008 f8e5 	bl	8023760 <__cxa_guard_acquire>
 801b596:	b138      	cbz	r0, 801b5a8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801b598:	4620      	mov	r0, r4
 801b59a:	f008 f8ed 	bl	8023778 <__cxa_guard_release>
 801b59e:	4a05      	ldr	r2, [pc, #20]	@ (801b5b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801b5a0:	4905      	ldr	r1, [pc, #20]	@ (801b5b8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801b5a2:	4806      	ldr	r0, [pc, #24]	@ (801b5bc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801b5a4:	f008 f8d5 	bl	8023752 <__aeabi_atexit>
 801b5a8:	4b04      	ldr	r3, [pc, #16]	@ (801b5bc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801b5aa:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801b5ac:	bd38      	pop	{r3, r4, r5, pc}
 801b5ae:	bf00      	nop
 801b5b0:	20015858 	.word	0x20015858
 801b5b4:	20000000 	.word	0x20000000
 801b5b8:	08016f51 	.word	0x08016f51
 801b5bc:	20000090 	.word	0x20000090

0801b5c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801b5c0:	b538      	push	{r3, r4, r5, lr}
 801b5c2:	4c0b      	ldr	r4, [pc, #44]	@ (801b5f0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801b5c4:	7823      	ldrb	r3, [r4, #0]
 801b5c6:	f3bf 8f5b 	dmb	ish
 801b5ca:	07db      	lsls	r3, r3, #31
 801b5cc:	4605      	mov	r5, r0
 801b5ce:	d40b      	bmi.n	801b5e8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801b5d0:	4620      	mov	r0, r4
 801b5d2:	f008 f8c5 	bl	8023760 <__cxa_guard_acquire>
 801b5d6:	b138      	cbz	r0, 801b5e8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801b5d8:	4620      	mov	r0, r4
 801b5da:	f008 f8cd 	bl	8023778 <__cxa_guard_release>
 801b5de:	4a05      	ldr	r2, [pc, #20]	@ (801b5f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801b5e0:	4905      	ldr	r1, [pc, #20]	@ (801b5f8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801b5e2:	4806      	ldr	r0, [pc, #24]	@ (801b5fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801b5e4:	f008 f8b5 	bl	8023752 <__aeabi_atexit>
 801b5e8:	4b04      	ldr	r3, [pc, #16]	@ (801b5fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801b5ea:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801b5ee:	bd38      	pop	{r3, r4, r5, pc}
 801b5f0:	2001585c 	.word	0x2001585c
 801b5f4:	20000000 	.word	0x20000000
 801b5f8:	08016f4f 	.word	0x08016f4f
 801b5fc:	20000094 	.word	0x20000094

0801b600 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801b600:	b570      	push	{r4, r5, r6, lr}
 801b602:	4d0d      	ldr	r5, [pc, #52]	@ (801b638 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801b604:	4c0d      	ldr	r4, [pc, #52]	@ (801b63c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801b606:	782b      	ldrb	r3, [r5, #0]
 801b608:	f3bf 8f5b 	dmb	ish
 801b60c:	f013 0f01 	tst.w	r3, #1
 801b610:	4606      	mov	r6, r0
 801b612:	d10d      	bne.n	801b630 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801b614:	4628      	mov	r0, r5
 801b616:	f008 f8a3 	bl	8023760 <__cxa_guard_acquire>
 801b61a:	b148      	cbz	r0, 801b630 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801b61c:	4b08      	ldr	r3, [pc, #32]	@ (801b640 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801b61e:	6023      	str	r3, [r4, #0]
 801b620:	4628      	mov	r0, r5
 801b622:	f008 f8a9 	bl	8023778 <__cxa_guard_release>
 801b626:	4a07      	ldr	r2, [pc, #28]	@ (801b644 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801b628:	4907      	ldr	r1, [pc, #28]	@ (801b648 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801b62a:	4620      	mov	r0, r4
 801b62c:	f008 f891 	bl	8023752 <__aeabi_atexit>
 801b630:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801b634:	bd70      	pop	{r4, r5, r6, pc}
 801b636:	bf00      	nop
 801b638:	20015860 	.word	0x20015860
 801b63c:	200159d8 	.word	0x200159d8
 801b640:	08027b68 	.word	0x08027b68
 801b644:	20000000 	.word	0x20000000
 801b648:	08016f4d 	.word	0x08016f4d

0801b64c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801b64c:	b510      	push	{r4, lr}
 801b64e:	4604      	mov	r4, r0
 801b650:	f7ff ff96 	bl	801b580 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801b654:	4620      	mov	r0, r4
 801b656:	f7ff ffb3 	bl	801b5c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801b65a:	4620      	mov	r0, r4
 801b65c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b660:	f7ff bfce 	b.w	801b600 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801b664 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801b664:	b570      	push	{r4, r5, r6, lr}
 801b666:	4d0d      	ldr	r5, [pc, #52]	@ (801b69c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801b668:	4c0d      	ldr	r4, [pc, #52]	@ (801b6a0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801b66a:	782b      	ldrb	r3, [r5, #0]
 801b66c:	f3bf 8f5b 	dmb	ish
 801b670:	f013 0f01 	tst.w	r3, #1
 801b674:	4606      	mov	r6, r0
 801b676:	d10d      	bne.n	801b694 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801b678:	4628      	mov	r0, r5
 801b67a:	f008 f871 	bl	8023760 <__cxa_guard_acquire>
 801b67e:	b148      	cbz	r0, 801b694 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801b680:	4b08      	ldr	r3, [pc, #32]	@ (801b6a4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801b682:	6023      	str	r3, [r4, #0]
 801b684:	4628      	mov	r0, r5
 801b686:	f008 f877 	bl	8023778 <__cxa_guard_release>
 801b68a:	4a07      	ldr	r2, [pc, #28]	@ (801b6a8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801b68c:	4907      	ldr	r1, [pc, #28]	@ (801b6ac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801b68e:	4620      	mov	r0, r4
 801b690:	f008 f85f 	bl	8023752 <__aeabi_atexit>
 801b694:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801b698:	bd70      	pop	{r4, r5, r6, pc}
 801b69a:	bf00      	nop
 801b69c:	20015854 	.word	0x20015854
 801b6a0:	200158d4 	.word	0x200158d4
 801b6a4:	08027b84 	.word	0x08027b84
 801b6a8:	20000000 	.word	0x20000000
 801b6ac:	08016f4b 	.word	0x08016f4b

0801b6b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801b6b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6b4:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801b6b8:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801b6bc:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801b6c0:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801b6c4:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801b6c8:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801b6cc:	8808      	ldrh	r0, [r1, #0]
 801b6ce:	fb05 4c0e 	mla	ip, r5, lr, r4
 801b6d2:	2d00      	cmp	r5, #0
 801b6d4:	eb02 0a0c 	add.w	sl, r2, ip
 801b6d8:	f2c0 80b0 	blt.w	801b83c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801b6dc:	45ab      	cmp	fp, r5
 801b6de:	f340 80ad 	ble.w	801b83c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801b6e2:	2c00      	cmp	r4, #0
 801b6e4:	f2c0 80a8 	blt.w	801b838 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801b6e8:	45a6      	cmp	lr, r4
 801b6ea:	f340 80a5 	ble.w	801b838 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801b6ee:	f812 200c 	ldrb.w	r2, [r2, ip]
 801b6f2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801b6f6:	1c62      	adds	r2, r4, #1
 801b6f8:	f100 80a3 	bmi.w	801b842 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801b6fc:	4596      	cmp	lr, r2
 801b6fe:	f340 80a0 	ble.w	801b842 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801b702:	f1b9 0f00 	cmp.w	r9, #0
 801b706:	f000 809c 	beq.w	801b842 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801b70a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801b70e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801b712:	3501      	adds	r5, #1
 801b714:	f100 8099 	bmi.w	801b84a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801b718:	45ab      	cmp	fp, r5
 801b71a:	f340 8096 	ble.w	801b84a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801b71e:	2f00      	cmp	r7, #0
 801b720:	f000 8093 	beq.w	801b84a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801b724:	2c00      	cmp	r4, #0
 801b726:	f2c0 808e 	blt.w	801b846 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801b72a:	45a6      	cmp	lr, r4
 801b72c:	f340 808b 	ble.w	801b846 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801b730:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801b734:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801b738:	3401      	adds	r4, #1
 801b73a:	f100 8089 	bmi.w	801b850 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801b73e:	45a6      	cmp	lr, r4
 801b740:	f340 8086 	ble.w	801b850 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801b744:	f1b9 0f00 	cmp.w	r9, #0
 801b748:	f000 8082 	beq.w	801b850 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801b74c:	44d6      	add	lr, sl
 801b74e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b752:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801b756:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801b75a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801b75e:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801b762:	fb19 fe07 	smulbb	lr, r9, r7
 801b766:	ea44 0808 	orr.w	r8, r4, r8
 801b76a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801b76e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801b772:	f1c7 0210 	rsb	r2, r7, #16
 801b776:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801b77a:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801b77e:	ea44 0c0c 	orr.w	ip, r4, ip
 801b782:	eba2 0209 	sub.w	r2, r2, r9
 801b786:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801b78a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801b78e:	fb04 f40c 	mul.w	r4, r4, ip
 801b792:	fb02 4808 	mla	r8, r2, r8, r4
 801b796:	041a      	lsls	r2, r3, #16
 801b798:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b79c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b7a0:	4313      	orrs	r3, r2
 801b7a2:	042a      	lsls	r2, r5, #16
 801b7a4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b7a8:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801b7ac:	fb0e 8303 	mla	r3, lr, r3, r8
 801b7b0:	432a      	orrs	r2, r5
 801b7b2:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801b7b6:	fb07 3202 	mla	r2, r7, r2, r3
 801b7ba:	0d53      	lsrs	r3, r2, #21
 801b7bc:	0952      	lsrs	r2, r2, #5
 801b7be:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b7c2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b7c6:	431a      	orrs	r2, r3
 801b7c8:	b293      	uxth	r3, r2
 801b7ca:	b2b4      	uxth	r4, r6
 801b7cc:	1202      	asrs	r2, r0, #8
 801b7ce:	43f6      	mvns	r6, r6
 801b7d0:	b2f6      	uxtb	r6, r6
 801b7d2:	121d      	asrs	r5, r3, #8
 801b7d4:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b7d8:	fb12 f206 	smulbb	r2, r2, r6
 801b7dc:	10c7      	asrs	r7, r0, #3
 801b7de:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b7e2:	00c0      	lsls	r0, r0, #3
 801b7e4:	fb05 2504 	mla	r5, r5, r4, r2
 801b7e8:	b2c0      	uxtb	r0, r0
 801b7ea:	10da      	asrs	r2, r3, #3
 801b7ec:	00db      	lsls	r3, r3, #3
 801b7ee:	b2db      	uxtb	r3, r3
 801b7f0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b7f4:	fb10 f006 	smulbb	r0, r0, r6
 801b7f8:	b2ad      	uxth	r5, r5
 801b7fa:	fb03 0004 	mla	r0, r3, r4, r0
 801b7fe:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b802:	fb17 f706 	smulbb	r7, r7, r6
 801b806:	b280      	uxth	r0, r0
 801b808:	1c6b      	adds	r3, r5, #1
 801b80a:	fb02 7204 	mla	r2, r2, r4, r7
 801b80e:	b292      	uxth	r2, r2
 801b810:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b814:	1c43      	adds	r3, r0, #1
 801b816:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b81a:	1c50      	adds	r0, r2, #1
 801b81c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801b820:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b824:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b828:	0952      	lsrs	r2, r2, #5
 801b82a:	432b      	orrs	r3, r5
 801b82c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b830:	4313      	orrs	r3, r2
 801b832:	800b      	strh	r3, [r1, #0]
 801b834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b838:	4680      	mov	r8, r0
 801b83a:	e75c      	b.n	801b6f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801b83c:	4684      	mov	ip, r0
 801b83e:	4680      	mov	r8, r0
 801b840:	e767      	b.n	801b712 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801b842:	4684      	mov	ip, r0
 801b844:	e765      	b.n	801b712 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801b846:	4605      	mov	r5, r0
 801b848:	e776      	b.n	801b738 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801b84a:	4603      	mov	r3, r0
 801b84c:	4605      	mov	r5, r0
 801b84e:	e782      	b.n	801b756 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801b850:	4603      	mov	r3, r0
 801b852:	e780      	b.n	801b756 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801b854 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b858:	b099      	sub	sp, #100	@ 0x64
 801b85a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801b85e:	9215      	str	r2, [sp, #84]	@ 0x54
 801b860:	9309      	str	r3, [sp, #36]	@ 0x24
 801b862:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801b864:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801b868:	930d      	str	r3, [sp, #52]	@ 0x34
 801b86a:	910c      	str	r1, [sp, #48]	@ 0x30
 801b86c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801b870:	9016      	str	r0, [sp, #88]	@ 0x58
 801b872:	6850      	ldr	r0, [r2, #4]
 801b874:	6812      	ldr	r2, [r2, #0]
 801b876:	fb00 1303 	mla	r3, r0, r3, r1
 801b87a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801b87e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b880:	681b      	ldr	r3, [r3, #0]
 801b882:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b884:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b886:	685e      	ldr	r6, [r3, #4]
 801b888:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b88a:	43db      	mvns	r3, r3
 801b88c:	b2db      	uxtb	r3, r3
 801b88e:	3604      	adds	r6, #4
 801b890:	930a      	str	r3, [sp, #40]	@ 0x28
 801b892:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b894:	2b00      	cmp	r3, #0
 801b896:	dc03      	bgt.n	801b8a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b898:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801b89a:	2b00      	cmp	r3, #0
 801b89c:	f340 8225 	ble.w	801bcea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801b8a0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b8a2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b8a6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b8aa:	1e48      	subs	r0, r1, #1
 801b8ac:	1e57      	subs	r7, r2, #1
 801b8ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b8b0:	2b00      	cmp	r3, #0
 801b8b2:	f340 80e3 	ble.w	801ba7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b8b6:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801b8ba:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b8be:	d406      	bmi.n	801b8ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b8c0:	4584      	cmp	ip, r0
 801b8c2:	da04      	bge.n	801b8ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b8c4:	2b00      	cmp	r3, #0
 801b8c6:	db02      	blt.n	801b8ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b8c8:	42bb      	cmp	r3, r7
 801b8ca:	f2c0 80d8 	blt.w	801ba7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b8ce:	f11c 0c01 	adds.w	ip, ip, #1
 801b8d2:	f100 80c9 	bmi.w	801ba68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b8d6:	4561      	cmp	r1, ip
 801b8d8:	f2c0 80c6 	blt.w	801ba68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b8dc:	3301      	adds	r3, #1
 801b8de:	f100 80c3 	bmi.w	801ba68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b8e2:	429a      	cmp	r2, r3
 801b8e4:	f2c0 80c0 	blt.w	801ba68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b8e8:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801b8ec:	4647      	mov	r7, r8
 801b8ee:	f1bb 0f00 	cmp.w	fp, #0
 801b8f2:	f340 80e3 	ble.w	801babc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801b8f6:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801b8f8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b8fa:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b8fe:	689b      	ldr	r3, [r3, #8]
 801b900:	ea5f 422a 	movs.w	r2, sl, asr #16
 801b904:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b908:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801b90c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b910:	f100 8121 	bmi.w	801bb56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b914:	f103 39ff 	add.w	r9, r3, #4294967295
 801b918:	454a      	cmp	r2, r9
 801b91a:	f280 811c 	bge.w	801bb56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b91e:	f1bc 0f00 	cmp.w	ip, #0
 801b922:	f2c0 8118 	blt.w	801bb56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b926:	f10e 39ff 	add.w	r9, lr, #4294967295
 801b92a:	45cc      	cmp	ip, r9
 801b92c:	f280 8113 	bge.w	801bb56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b930:	b21b      	sxth	r3, r3
 801b932:	fb0c 2203 	mla	r2, ip, r3, r2
 801b936:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b938:	eb04 0902 	add.w	r9, r4, r2
 801b93c:	5ca2      	ldrb	r2, [r4, r2]
 801b93e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801b942:	2800      	cmp	r0, #0
 801b944:	f000 80fe 	beq.w	801bb44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b948:	f899 2001 	ldrb.w	r2, [r9, #1]
 801b94c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801b950:	9211      	str	r2, [sp, #68]	@ 0x44
 801b952:	b151      	cbz	r1, 801b96a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b954:	eb09 0203 	add.w	r2, r9, r3
 801b958:	f819 3003 	ldrb.w	r3, [r9, r3]
 801b95c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b960:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b962:	7853      	ldrb	r3, [r2, #1]
 801b964:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b968:	9312      	str	r3, [sp, #72]	@ 0x48
 801b96a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b96c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b96e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801b972:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b976:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b97a:	ea4c 0c03 	orr.w	ip, ip, r3
 801b97e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801b980:	041b      	lsls	r3, r3, #16
 801b982:	fb10 f201 	smulbb	r2, r0, r1
 801b986:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801b98a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b98e:	10d2      	asrs	r2, r2, #3
 801b990:	4323      	orrs	r3, r4
 801b992:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801b996:	4353      	muls	r3, r2
 801b998:	fb09 330c 	mla	r3, r9, ip, r3
 801b99c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801b9a0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b9a4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801b9a8:	ea4c 0e0e 	orr.w	lr, ip, lr
 801b9ac:	f1c1 0c10 	rsb	ip, r1, #16
 801b9b0:	ebac 0c00 	sub.w	ip, ip, r0
 801b9b4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801b9b8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801b9bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b9be:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b9c0:	0418      	lsls	r0, r3, #16
 801b9c2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801b9c6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b9ca:	4318      	orrs	r0, r3
 801b9cc:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801b9d0:	fb02 c200 	mla	r2, r2, r0, ip
 801b9d4:	0d53      	lsrs	r3, r2, #21
 801b9d6:	0952      	lsrs	r2, r2, #5
 801b9d8:	8838      	ldrh	r0, [r7, #0]
 801b9da:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b9de:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b9e2:	431a      	orrs	r2, r3
 801b9e4:	b292      	uxth	r2, r2
 801b9e6:	1201      	asrs	r1, r0, #8
 801b9e8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801b9ec:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801b9f0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b9f4:	fb11 f104 	smulbb	r1, r1, r4
 801b9f8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801b9fc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801ba00:	00c0      	lsls	r0, r0, #3
 801ba02:	fb0c 1c03 	mla	ip, ip, r3, r1
 801ba06:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801ba0a:	10d1      	asrs	r1, r2, #3
 801ba0c:	b2c0      	uxtb	r0, r0
 801ba0e:	00d2      	lsls	r2, r2, #3
 801ba10:	b2d2      	uxtb	r2, r2
 801ba12:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ba16:	fb1e fe04 	smulbb	lr, lr, r4
 801ba1a:	fb10 f004 	smulbb	r0, r0, r4
 801ba1e:	fa1f fc8c 	uxth.w	ip, ip
 801ba22:	fb01 e103 	mla	r1, r1, r3, lr
 801ba26:	fb02 0303 	mla	r3, r2, r3, r0
 801ba2a:	b29a      	uxth	r2, r3
 801ba2c:	f10c 0301 	add.w	r3, ip, #1
 801ba30:	b289      	uxth	r1, r1
 801ba32:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ba36:	1c53      	adds	r3, r2, #1
 801ba38:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ba3c:	1c4a      	adds	r2, r1, #1
 801ba3e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ba42:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801ba46:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ba4a:	0949      	lsrs	r1, r1, #5
 801ba4c:	ea43 030c 	orr.w	r3, r3, ip
 801ba50:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ba54:	430b      	orrs	r3, r1
 801ba56:	803b      	strh	r3, [r7, #0]
 801ba58:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ba5a:	449a      	add	sl, r3
 801ba5c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ba5e:	3702      	adds	r7, #2
 801ba60:	441d      	add	r5, r3
 801ba62:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ba66:	e742      	b.n	801b8ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ba68:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ba6a:	449a      	add	sl, r3
 801ba6c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ba6e:	441d      	add	r5, r3
 801ba70:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ba72:	3b01      	subs	r3, #1
 801ba74:	9309      	str	r3, [sp, #36]	@ 0x24
 801ba76:	f108 0802 	add.w	r8, r8, #2
 801ba7a:	e718      	b.n	801b8ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ba7c:	d023      	beq.n	801bac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801ba7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ba80:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801ba82:	3b01      	subs	r3, #1
 801ba84:	fb00 a003 	mla	r0, r0, r3, sl
 801ba88:	1400      	asrs	r0, r0, #16
 801ba8a:	f53f af2d 	bmi.w	801b8e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ba8e:	3901      	subs	r1, #1
 801ba90:	4288      	cmp	r0, r1
 801ba92:	f6bf af29 	bge.w	801b8e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ba96:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801ba98:	fb01 5303 	mla	r3, r1, r3, r5
 801ba9c:	141b      	asrs	r3, r3, #16
 801ba9e:	f53f af23 	bmi.w	801b8e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801baa2:	3a01      	subs	r2, #1
 801baa4:	4293      	cmp	r3, r2
 801baa6:	f6bf af1f 	bge.w	801b8e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801baaa:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801baae:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801bab2:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801bab6:	f1be 0f00 	cmp.w	lr, #0
 801baba:	dc6c      	bgt.n	801bb96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801babc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801babe:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801bac2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801bac6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bac8:	2b00      	cmp	r3, #0
 801baca:	f340 810e 	ble.w	801bcea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801bace:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bad2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801bad6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bada:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801badc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bae0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bae4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bae8:	eef0 6a62 	vmov.f32	s13, s5
 801baec:	ee61 7a27 	vmul.f32	s15, s2, s15
 801baf0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801baf4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801baf8:	ee16 aa90 	vmov	sl, s13
 801bafc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bb00:	eef0 6a43 	vmov.f32	s13, s6
 801bb04:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bb08:	ee12 2a90 	vmov	r2, s5
 801bb0c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bb10:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb14:	ee13 2a10 	vmov	r2, s6
 801bb18:	9325      	str	r3, [sp, #148]	@ 0x94
 801bb1a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801bb1c:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb20:	9326      	str	r3, [sp, #152]	@ 0x98
 801bb22:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bb24:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801bb26:	3b01      	subs	r3, #1
 801bb28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bb2c:	930c      	str	r3, [sp, #48]	@ 0x30
 801bb2e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801bb30:	bf08      	it	eq
 801bb32:	4613      	moveq	r3, r2
 801bb34:	ee16 5a90 	vmov	r5, s13
 801bb38:	9309      	str	r3, [sp, #36]	@ 0x24
 801bb3a:	eeb0 3a67 	vmov.f32	s6, s15
 801bb3e:	eef0 2a47 	vmov.f32	s5, s14
 801bb42:	e6a6      	b.n	801b892 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bb44:	2900      	cmp	r1, #0
 801bb46:	f43f af10 	beq.w	801b96a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801bb4a:	f819 3003 	ldrb.w	r3, [r9, r3]
 801bb4e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801bb52:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bb54:	e709      	b.n	801b96a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801bb56:	f112 0901 	adds.w	r9, r2, #1
 801bb5a:	f53f af7d 	bmi.w	801ba58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801bb5e:	454b      	cmp	r3, r9
 801bb60:	f6ff af7a 	blt.w	801ba58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801bb64:	f11c 0901 	adds.w	r9, ip, #1
 801bb68:	f53f af76 	bmi.w	801ba58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801bb6c:	45ce      	cmp	lr, r9
 801bb6e:	f6ff af73 	blt.w	801ba58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801bb72:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bb74:	9202      	str	r2, [sp, #8]
 801bb76:	b21b      	sxth	r3, r3
 801bb78:	fa0f f28e 	sxth.w	r2, lr
 801bb7c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801bb80:	e9cd c003 	strd	ip, r0, [sp, #12]
 801bb84:	9201      	str	r2, [sp, #4]
 801bb86:	9300      	str	r3, [sp, #0]
 801bb88:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801bb8a:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801bb8c:	4633      	mov	r3, r6
 801bb8e:	4639      	mov	r1, r7
 801bb90:	f7ff fd8e 	bl	801b6b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801bb94:	e760      	b.n	801ba58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801bb96:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801bb98:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bb9a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801bb9e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801bba2:	1429      	asrs	r1, r5, #16
 801bba4:	fb03 2101 	mla	r1, r3, r1, r2
 801bba8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801bbaa:	440a      	add	r2, r1
 801bbac:	5c61      	ldrb	r1, [r4, r1]
 801bbae:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801bbb2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bbb6:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801bbba:	f1bc 0f00 	cmp.w	ip, #0
 801bbbe:	f000 808c 	beq.w	801bcda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801bbc2:	7857      	ldrb	r7, [r2, #1]
 801bbc4:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801bbc8:	9413      	str	r4, [sp, #76]	@ 0x4c
 801bbca:	b140      	cbz	r0, 801bbde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bbcc:	18d7      	adds	r7, r2, r3
 801bbce:	5cd3      	ldrb	r3, [r2, r3]
 801bbd0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801bbd4:	9310      	str	r3, [sp, #64]	@ 0x40
 801bbd6:	787b      	ldrb	r3, [r7, #1]
 801bbd8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801bbdc:	9314      	str	r3, [sp, #80]	@ 0x50
 801bbde:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801bbe0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bbe2:	fb1c f200 	smulbb	r2, ip, r0
 801bbe6:	041f      	lsls	r7, r3, #16
 801bbe8:	10d2      	asrs	r2, r2, #3
 801bbea:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801bbee:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801bbf2:	431f      	orrs	r7, r3
 801bbf4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801bbf8:	9317      	str	r3, [sp, #92]	@ 0x5c
 801bbfa:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801bbfc:	041b      	lsls	r3, r3, #16
 801bbfe:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801bc02:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801bc06:	ea43 030b 	orr.w	r3, r3, fp
 801bc0a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801bc0c:	4353      	muls	r3, r2
 801bc0e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801bc12:	fb04 3707 	mla	r7, r4, r7, r3
 801bc16:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801bc1a:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801bc1e:	ea43 0b01 	orr.w	fp, r3, r1
 801bc22:	f1c0 0110 	rsb	r1, r0, #16
 801bc26:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bc28:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801bc2a:	eba1 0c0c 	sub.w	ip, r1, ip
 801bc2e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801bc32:	fb0c 770b 	mla	r7, ip, fp, r7
 801bc36:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801bc3a:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801bc3e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801bc42:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801bc46:	ea4c 0c0b 	orr.w	ip, ip, fp
 801bc4a:	fb02 770c 	mla	r7, r2, ip, r7
 801bc4e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801bc50:	0d79      	lsrs	r1, r7, #21
 801bc52:	097f      	lsrs	r7, r7, #5
 801bc54:	8812      	ldrh	r2, [r2, #0]
 801bc56:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801bc5a:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801bc5e:	430f      	orrs	r7, r1
 801bc60:	b2bb      	uxth	r3, r7
 801bc62:	1211      	asrs	r1, r2, #8
 801bc64:	1218      	asrs	r0, r3, #8
 801bc66:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801bc6a:	fb11 f104 	smulbb	r1, r1, r4
 801bc6e:	10d7      	asrs	r7, r2, #3
 801bc70:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801bc74:	00d2      	lsls	r2, r2, #3
 801bc76:	fb00 1009 	mla	r0, r0, r9, r1
 801bc7a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801bc7e:	10d9      	asrs	r1, r3, #3
 801bc80:	b2d2      	uxtb	r2, r2
 801bc82:	00db      	lsls	r3, r3, #3
 801bc84:	fb17 f704 	smulbb	r7, r7, r4
 801bc88:	fb12 f204 	smulbb	r2, r2, r4
 801bc8c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801bc90:	b2db      	uxtb	r3, r3
 801bc92:	b280      	uxth	r0, r0
 801bc94:	fb01 7109 	mla	r1, r1, r9, r7
 801bc98:	fb03 2309 	mla	r3, r3, r9, r2
 801bc9c:	b29b      	uxth	r3, r3
 801bc9e:	b289      	uxth	r1, r1
 801bca0:	1c42      	adds	r2, r0, #1
 801bca2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bca6:	1c4f      	adds	r7, r1, #1
 801bca8:	1c5a      	adds	r2, r3, #1
 801bcaa:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801bcae:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801bcb2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801bcb6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bcba:	0949      	lsrs	r1, r1, #5
 801bcbc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bcbe:	4310      	orrs	r0, r2
 801bcc0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801bcc4:	4308      	orrs	r0, r1
 801bcc6:	f823 0b02 	strh.w	r0, [r3], #2
 801bcca:	930e      	str	r3, [sp, #56]	@ 0x38
 801bccc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801bcce:	449a      	add	sl, r3
 801bcd0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801bcd2:	f10e 3eff 	add.w	lr, lr, #4294967295
 801bcd6:	441d      	add	r5, r3
 801bcd8:	e6ed      	b.n	801bab6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801bcda:	2800      	cmp	r0, #0
 801bcdc:	f43f af7f 	beq.w	801bbde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bce0:	5cd3      	ldrb	r3, [r2, r3]
 801bce2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801bce6:	9310      	str	r3, [sp, #64]	@ 0x40
 801bce8:	e779      	b.n	801bbde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bcea:	b019      	add	sp, #100	@ 0x64
 801bcec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bcf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801bcf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bcf4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801bcf8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801bcfc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801bd00:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801bd04:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801bd08:	8808      	ldrh	r0, [r1, #0]
 801bd0a:	fb08 470e 	mla	r7, r8, lr, r4
 801bd0e:	f1b8 0f00 	cmp.w	r8, #0
 801bd12:	eb02 0907 	add.w	r9, r2, r7
 801bd16:	db67      	blt.n	801bde8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801bd18:	45c2      	cmp	sl, r8
 801bd1a:	dd65      	ble.n	801bde8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801bd1c:	2c00      	cmp	r4, #0
 801bd1e:	db61      	blt.n	801bde4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801bd20:	45a6      	cmp	lr, r4
 801bd22:	dd5f      	ble.n	801bde4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801bd24:	5dd2      	ldrb	r2, [r2, r7]
 801bd26:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801bd2a:	1c62      	adds	r2, r4, #1
 801bd2c:	d45f      	bmi.n	801bdee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801bd2e:	4596      	cmp	lr, r2
 801bd30:	dd5d      	ble.n	801bdee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801bd32:	2d00      	cmp	r5, #0
 801bd34:	d05b      	beq.n	801bdee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801bd36:	f899 2001 	ldrb.w	r2, [r9, #1]
 801bd3a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801bd3e:	f118 0801 	adds.w	r8, r8, #1
 801bd42:	d458      	bmi.n	801bdf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801bd44:	45c2      	cmp	sl, r8
 801bd46:	dd56      	ble.n	801bdf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801bd48:	2e00      	cmp	r6, #0
 801bd4a:	d054      	beq.n	801bdf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801bd4c:	2c00      	cmp	r4, #0
 801bd4e:	db50      	blt.n	801bdf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801bd50:	45a6      	cmp	lr, r4
 801bd52:	dd4e      	ble.n	801bdf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801bd54:	f819 200e 	ldrb.w	r2, [r9, lr]
 801bd58:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801bd5c:	3401      	adds	r4, #1
 801bd5e:	d407      	bmi.n	801bd70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801bd60:	45a6      	cmp	lr, r4
 801bd62:	dd05      	ble.n	801bd70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801bd64:	b125      	cbz	r5, 801bd70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801bd66:	44ce      	add	lr, r9
 801bd68:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801bd6c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801bd70:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801bd74:	fb15 f406 	smulbb	r4, r5, r6
 801bd78:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801bd7c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801bd80:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801bd84:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801bd88:	ea43 0c0c 	orr.w	ip, r3, ip
 801bd8c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801bd90:	f1c6 0310 	rsb	r3, r6, #16
 801bd94:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801bd98:	1b5b      	subs	r3, r3, r5
 801bd9a:	ea4e 0707 	orr.w	r7, lr, r7
 801bd9e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801bda2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801bda6:	437d      	muls	r5, r7
 801bda8:	fb03 5c0c 	mla	ip, r3, ip, r5
 801bdac:	0403      	lsls	r3, r0, #16
 801bdae:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801bdb2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801bdb6:	4318      	orrs	r0, r3
 801bdb8:	0413      	lsls	r3, r2, #16
 801bdba:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801bdbe:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801bdc2:	4313      	orrs	r3, r2
 801bdc4:	fb04 c000 	mla	r0, r4, r0, ip
 801bdc8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801bdcc:	fb06 0003 	mla	r0, r6, r3, r0
 801bdd0:	0d43      	lsrs	r3, r0, #21
 801bdd2:	0940      	lsrs	r0, r0, #5
 801bdd4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bdd8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801bddc:	4318      	orrs	r0, r3
 801bdde:	8008      	strh	r0, [r1, #0]
 801bde0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bde4:	4684      	mov	ip, r0
 801bde6:	e7a0      	b.n	801bd2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801bde8:	4607      	mov	r7, r0
 801bdea:	4684      	mov	ip, r0
 801bdec:	e7a7      	b.n	801bd3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801bdee:	4607      	mov	r7, r0
 801bdf0:	e7a5      	b.n	801bd3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801bdf2:	4602      	mov	r2, r0
 801bdf4:	e7b2      	b.n	801bd5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801bdf6:	4602      	mov	r2, r0
 801bdf8:	e7ba      	b.n	801bd70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801bdfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bdfa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdfe:	b093      	sub	sp, #76	@ 0x4c
 801be00:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801be04:	920f      	str	r2, [sp, #60]	@ 0x3c
 801be06:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801be08:	9108      	str	r1, [sp, #32]
 801be0a:	9306      	str	r3, [sp, #24]
 801be0c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801be10:	9010      	str	r0, [sp, #64]	@ 0x40
 801be12:	6850      	ldr	r0, [r2, #4]
 801be14:	6812      	ldr	r2, [r2, #0]
 801be16:	fb00 1303 	mla	r3, r0, r3, r1
 801be1a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801be1e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801be20:	681b      	ldr	r3, [r3, #0]
 801be22:	9307      	str	r3, [sp, #28]
 801be24:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801be26:	685f      	ldr	r7, [r3, #4]
 801be28:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801be2c:	3704      	adds	r7, #4
 801be2e:	9b08      	ldr	r3, [sp, #32]
 801be30:	2b00      	cmp	r3, #0
 801be32:	dc03      	bgt.n	801be3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801be34:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801be36:	2b00      	cmp	r3, #0
 801be38:	f340 81b2 	ble.w	801c1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801be3c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801be3e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801be42:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801be46:	1e48      	subs	r0, r1, #1
 801be48:	f102 3cff 	add.w	ip, r2, #4294967295
 801be4c:	9b06      	ldr	r3, [sp, #24]
 801be4e:	2b00      	cmp	r3, #0
 801be50:	f340 80a9 	ble.w	801bfa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801be54:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801be58:	ea4f 4326 	mov.w	r3, r6, asr #16
 801be5c:	d406      	bmi.n	801be6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801be5e:	4586      	cmp	lr, r0
 801be60:	da04      	bge.n	801be6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801be62:	2b00      	cmp	r3, #0
 801be64:	db02      	blt.n	801be6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801be66:	4563      	cmp	r3, ip
 801be68:	f2c0 809e 	blt.w	801bfa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801be6c:	f11e 0e01 	adds.w	lr, lr, #1
 801be70:	f100 808f 	bmi.w	801bf92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801be74:	4571      	cmp	r1, lr
 801be76:	f2c0 808c 	blt.w	801bf92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801be7a:	3301      	adds	r3, #1
 801be7c:	f100 8089 	bmi.w	801bf92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801be80:	429a      	cmp	r2, r3
 801be82:	f2c0 8086 	blt.w	801bf92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801be86:	f8dd b018 	ldr.w	fp, [sp, #24]
 801be8a:	46c8      	mov	r8, r9
 801be8c:	f1bb 0f00 	cmp.w	fp, #0
 801be90:	f340 80a6 	ble.w	801bfe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801be94:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801be96:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801be98:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801be9c:	689b      	ldr	r3, [r3, #8]
 801be9e:	1422      	asrs	r2, r4, #16
 801bea0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801bea4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801bea8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801beac:	f100 80e3 	bmi.w	801c076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801beb0:	f103 3aff 	add.w	sl, r3, #4294967295
 801beb4:	4552      	cmp	r2, sl
 801beb6:	f280 80de 	bge.w	801c076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801beba:	f1bc 0f00 	cmp.w	ip, #0
 801bebe:	f2c0 80da 	blt.w	801c076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801bec2:	f10e 3aff 	add.w	sl, lr, #4294967295
 801bec6:	45d4      	cmp	ip, sl
 801bec8:	f280 80d5 	bge.w	801c076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801becc:	b21b      	sxth	r3, r3
 801bece:	fb0c 2203 	mla	r2, ip, r3, r2
 801bed2:	9d07      	ldr	r5, [sp, #28]
 801bed4:	eb05 0a02 	add.w	sl, r5, r2
 801bed8:	5caa      	ldrb	r2, [r5, r2]
 801beda:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801bede:	2800      	cmp	r0, #0
 801bee0:	f000 80c0 	beq.w	801c064 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801bee4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801bee8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801beec:	920b      	str	r2, [sp, #44]	@ 0x2c
 801beee:	b151      	cbz	r1, 801bf06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801bef0:	eb0a 0203 	add.w	r2, sl, r3
 801bef4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801bef8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801befc:	9309      	str	r3, [sp, #36]	@ 0x24
 801befe:	7853      	ldrb	r3, [r2, #1]
 801bf00:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801bf04:	930c      	str	r3, [sp, #48]	@ 0x30
 801bf06:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bf08:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801bf0a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801bf0e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801bf12:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801bf16:	ea4c 0c03 	orr.w	ip, ip, r3
 801bf1a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bf1c:	041b      	lsls	r3, r3, #16
 801bf1e:	fb10 f201 	smulbb	r2, r0, r1
 801bf22:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801bf26:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801bf2a:	10d2      	asrs	r2, r2, #3
 801bf2c:	432b      	orrs	r3, r5
 801bf2e:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801bf32:	4353      	muls	r3, r2
 801bf34:	fb0a 330c 	mla	r3, sl, ip, r3
 801bf38:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801bf3c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801bf40:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801bf44:	ea4c 0e0e 	orr.w	lr, ip, lr
 801bf48:	f1c1 0c10 	rsb	ip, r1, #16
 801bf4c:	ebac 0c00 	sub.w	ip, ip, r0
 801bf50:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801bf54:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801bf58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bf5a:	0418      	lsls	r0, r3, #16
 801bf5c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801bf60:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801bf64:	4318      	orrs	r0, r3
 801bf66:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801bf6a:	fb02 c200 	mla	r2, r2, r0, ip
 801bf6e:	0d53      	lsrs	r3, r2, #21
 801bf70:	0952      	lsrs	r2, r2, #5
 801bf72:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bf76:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801bf7a:	431a      	orrs	r2, r3
 801bf7c:	f8a8 2000 	strh.w	r2, [r8]
 801bf80:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801bf82:	441c      	add	r4, r3
 801bf84:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bf86:	f108 0802 	add.w	r8, r8, #2
 801bf8a:	441e      	add	r6, r3
 801bf8c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bf90:	e77c      	b.n	801be8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bf92:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801bf94:	441c      	add	r4, r3
 801bf96:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bf98:	441e      	add	r6, r3
 801bf9a:	9b06      	ldr	r3, [sp, #24]
 801bf9c:	3b01      	subs	r3, #1
 801bf9e:	9306      	str	r3, [sp, #24]
 801bfa0:	f109 0902 	add.w	r9, r9, #2
 801bfa4:	e752      	b.n	801be4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801bfa6:	d020      	beq.n	801bfea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801bfa8:	9b06      	ldr	r3, [sp, #24]
 801bfaa:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801bfac:	3b01      	subs	r3, #1
 801bfae:	fb00 4003 	mla	r0, r0, r3, r4
 801bfb2:	1400      	asrs	r0, r0, #16
 801bfb4:	f53f af67 	bmi.w	801be86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bfb8:	3901      	subs	r1, #1
 801bfba:	4288      	cmp	r0, r1
 801bfbc:	f6bf af63 	bge.w	801be86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bfc0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801bfc2:	fb01 6303 	mla	r3, r1, r3, r6
 801bfc6:	141b      	asrs	r3, r3, #16
 801bfc8:	f53f af5d 	bmi.w	801be86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bfcc:	3a01      	subs	r2, #1
 801bfce:	4293      	cmp	r3, r2
 801bfd0:	f6bf af59 	bge.w	801be86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bfd4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801bfd8:	46ca      	mov	sl, r9
 801bfda:	f1b8 0f00 	cmp.w	r8, #0
 801bfde:	dc67      	bgt.n	801c0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801bfe0:	9b06      	ldr	r3, [sp, #24]
 801bfe2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801bfe6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801bfea:	9b08      	ldr	r3, [sp, #32]
 801bfec:	2b00      	cmp	r3, #0
 801bfee:	f340 80d7 	ble.w	801c1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801bff2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bff6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bffa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bffe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c000:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c004:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c008:	eeb0 6a62 	vmov.f32	s12, s5
 801c00c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c010:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c014:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c018:	ee16 4a10 	vmov	r4, s12
 801c01c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c020:	eeb0 6a43 	vmov.f32	s12, s6
 801c024:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c028:	ee12 2a90 	vmov	r2, s5
 801c02c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c030:	fb92 f3f3 	sdiv	r3, r2, r3
 801c034:	ee13 2a10 	vmov	r2, s6
 801c038:	931f      	str	r3, [sp, #124]	@ 0x7c
 801c03a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c03c:	fb92 f3f3 	sdiv	r3, r2, r3
 801c040:	9320      	str	r3, [sp, #128]	@ 0x80
 801c042:	9b08      	ldr	r3, [sp, #32]
 801c044:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c046:	3b01      	subs	r3, #1
 801c048:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c04c:	9308      	str	r3, [sp, #32]
 801c04e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c050:	bf08      	it	eq
 801c052:	4613      	moveq	r3, r2
 801c054:	ee16 6a10 	vmov	r6, s12
 801c058:	9306      	str	r3, [sp, #24]
 801c05a:	eeb0 3a67 	vmov.f32	s6, s15
 801c05e:	eef0 2a47 	vmov.f32	s5, s14
 801c062:	e6e4      	b.n	801be2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801c064:	2900      	cmp	r1, #0
 801c066:	f43f af4e 	beq.w	801bf06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801c06a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801c06e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c072:	9309      	str	r3, [sp, #36]	@ 0x24
 801c074:	e747      	b.n	801bf06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801c076:	f112 0a01 	adds.w	sl, r2, #1
 801c07a:	d481      	bmi.n	801bf80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c07c:	4553      	cmp	r3, sl
 801c07e:	f6ff af7f 	blt.w	801bf80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c082:	f11c 0a01 	adds.w	sl, ip, #1
 801c086:	f53f af7b 	bmi.w	801bf80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c08a:	45d6      	cmp	lr, sl
 801c08c:	f6ff af78 	blt.w	801bf80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c090:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801c094:	b21b      	sxth	r3, r3
 801c096:	fa0f f28e 	sxth.w	r2, lr
 801c09a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801c09e:	9201      	str	r2, [sp, #4]
 801c0a0:	9300      	str	r3, [sp, #0]
 801c0a2:	9a07      	ldr	r2, [sp, #28]
 801c0a4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801c0a6:	463b      	mov	r3, r7
 801c0a8:	4641      	mov	r1, r8
 801c0aa:	f7ff fe21 	bl	801bcf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801c0ae:	e767      	b.n	801bf80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c0b0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c0b2:	9d07      	ldr	r5, [sp, #28]
 801c0b4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801c0b8:	1422      	asrs	r2, r4, #16
 801c0ba:	1431      	asrs	r1, r6, #16
 801c0bc:	fb03 2101 	mla	r1, r3, r1, r2
 801c0c0:	9a07      	ldr	r2, [sp, #28]
 801c0c2:	440a      	add	r2, r1
 801c0c4:	5c69      	ldrb	r1, [r5, r1]
 801c0c6:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801c0ca:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c0ce:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801c0d2:	f1be 0f00 	cmp.w	lr, #0
 801c0d6:	d05c      	beq.n	801c192 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801c0d8:	f892 c001 	ldrb.w	ip, [r2, #1]
 801c0dc:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801c0e0:	950d      	str	r5, [sp, #52]	@ 0x34
 801c0e2:	b150      	cbz	r0, 801c0fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801c0e4:	eb02 0c03 	add.w	ip, r2, r3
 801c0e8:	5cd3      	ldrb	r3, [r2, r3]
 801c0ea:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c0ee:	930a      	str	r3, [sp, #40]	@ 0x28
 801c0f0:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801c0f4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c0f8:	930e      	str	r3, [sp, #56]	@ 0x38
 801c0fa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c0fc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c0fe:	fb1e f200 	smulbb	r2, lr, r0
 801c102:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801c106:	10d2      	asrs	r2, r2, #3
 801c108:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801c10c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801c110:	ea4c 0c03 	orr.w	ip, ip, r3
 801c114:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801c118:	9311      	str	r3, [sp, #68]	@ 0x44
 801c11a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c11c:	041b      	lsls	r3, r3, #16
 801c11e:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801c122:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801c126:	ea43 030b 	orr.w	r3, r3, fp
 801c12a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c12c:	4353      	muls	r3, r2
 801c12e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801c132:	fb05 3c0c 	mla	ip, r5, ip, r3
 801c136:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801c13a:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801c13e:	ea43 0b01 	orr.w	fp, r3, r1
 801c142:	f1c0 0110 	rsb	r1, r0, #16
 801c146:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c148:	eba1 0e0e 	sub.w	lr, r1, lr
 801c14c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801c150:	fb0e cc0b 	mla	ip, lr, fp, ip
 801c154:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801c158:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801c15c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801c160:	ea4b 0e0e 	orr.w	lr, fp, lr
 801c164:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801c168:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c16c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801c170:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c174:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c178:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801c17c:	ea43 0c0c 	orr.w	ip, r3, ip
 801c180:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c182:	f82a cb02 	strh.w	ip, [sl], #2
 801c186:	441c      	add	r4, r3
 801c188:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c18a:	f108 38ff 	add.w	r8, r8, #4294967295
 801c18e:	441e      	add	r6, r3
 801c190:	e723      	b.n	801bfda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801c192:	2800      	cmp	r0, #0
 801c194:	d0b1      	beq.n	801c0fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801c196:	5cd3      	ldrb	r3, [r2, r3]
 801c198:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c19c:	930a      	str	r3, [sp, #40]	@ 0x28
 801c19e:	e7ac      	b.n	801c0fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801c1a0:	b013      	add	sp, #76	@ 0x4c
 801c1a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c1a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801c1a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c1aa:	880d      	ldrh	r5, [r1, #0]
 801c1ac:	b087      	sub	sp, #28
 801c1ae:	10ef      	asrs	r7, r5, #3
 801c1b0:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801c1b4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c1b8:	00ed      	lsls	r5, r5, #3
 801c1ba:	9701      	str	r7, [sp, #4]
 801c1bc:	b2ed      	uxtb	r5, r5
 801c1be:	9502      	str	r5, [sp, #8]
 801c1c0:	9d01      	ldr	r5, [sp, #4]
 801c1c2:	9103      	str	r1, [sp, #12]
 801c1c4:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801c1c8:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801c1cc:	9902      	ldr	r1, [sp, #8]
 801c1ce:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801c1d2:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801c1d6:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801c1da:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801c1de:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801c1e2:	022d      	lsls	r5, r5, #8
 801c1e4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801c1e8:	fb06 0709 	mla	r7, r6, r9, r0
 801c1ec:	430d      	orrs	r5, r1
 801c1ee:	2e00      	cmp	r6, #0
 801c1f0:	eb02 0c07 	add.w	ip, r2, r7
 801c1f4:	9505      	str	r5, [sp, #20]
 801c1f6:	f2c0 80b6 	blt.w	801c366 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801c1fa:	45b3      	cmp	fp, r6
 801c1fc:	f340 80b3 	ble.w	801c366 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801c200:	2800      	cmp	r0, #0
 801c202:	f2c0 80ae 	blt.w	801c362 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801c206:	4581      	cmp	r9, r0
 801c208:	f340 80ab 	ble.w	801c362 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801c20c:	5dd7      	ldrb	r7, [r2, r7]
 801c20e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801c212:	441f      	add	r7, r3
 801c214:	1c42      	adds	r2, r0, #1
 801c216:	f100 80a9 	bmi.w	801c36c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801c21a:	4591      	cmp	r9, r2
 801c21c:	f340 80a6 	ble.w	801c36c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801c220:	2c00      	cmp	r4, #0
 801c222:	f000 80a3 	beq.w	801c36c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801c226:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801c22a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c22e:	441d      	add	r5, r3
 801c230:	3601      	adds	r6, #1
 801c232:	f100 809f 	bmi.w	801c374 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801c236:	45b3      	cmp	fp, r6
 801c238:	f340 809c 	ble.w	801c374 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801c23c:	f1be 0f00 	cmp.w	lr, #0
 801c240:	f000 8098 	beq.w	801c374 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801c244:	2800      	cmp	r0, #0
 801c246:	f2c0 8093 	blt.w	801c370 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801c24a:	4581      	cmp	r9, r0
 801c24c:	f340 8090 	ble.w	801c370 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801c250:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801c254:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801c258:	441e      	add	r6, r3
 801c25a:	3001      	adds	r0, #1
 801c25c:	f100 808d 	bmi.w	801c37a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801c260:	4581      	cmp	r9, r0
 801c262:	f340 808a 	ble.w	801c37a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801c266:	2c00      	cmp	r4, #0
 801c268:	f000 8087 	beq.w	801c37a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801c26c:	44e1      	add	r9, ip
 801c26e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801c272:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c276:	4413      	add	r3, r2
 801c278:	b2a4      	uxth	r4, r4
 801c27a:	fa1f fe8e 	uxth.w	lr, lr
 801c27e:	fb04 fb0e 	mul.w	fp, r4, lr
 801c282:	0124      	lsls	r4, r4, #4
 801c284:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801c288:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801c28c:	eba4 040b 	sub.w	r4, r4, fp
 801c290:	fa1f f08e 	uxth.w	r0, lr
 801c294:	b2a2      	uxth	r2, r4
 801c296:	78ac      	ldrb	r4, [r5, #2]
 801c298:	f897 c002 	ldrb.w	ip, [r7, #2]
 801c29c:	9901      	ldr	r1, [sp, #4]
 801c29e:	eba9 0900 	sub.w	r9, r9, r0
 801c2a2:	fa1f f989 	uxth.w	r9, r9
 801c2a6:	4354      	muls	r4, r2
 801c2a8:	fb09 440c 	mla	r4, r9, ip, r4
 801c2ac:	f896 c002 	ldrb.w	ip, [r6, #2]
 801c2b0:	fb00 440c 	mla	r4, r0, ip, r4
 801c2b4:	f893 c002 	ldrb.w	ip, [r3, #2]
 801c2b8:	fa1f fe88 	uxth.w	lr, r8
 801c2bc:	ea6f 0808 	mvn.w	r8, r8
 801c2c0:	fa5f f888 	uxtb.w	r8, r8
 801c2c4:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801c2c8:	fb1a fa08 	smulbb	sl, sl, r8
 801c2cc:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801c2d0:	fb0c ac0e 	mla	ip, ip, lr, sl
 801c2d4:	f895 a001 	ldrb.w	sl, [r5, #1]
 801c2d8:	787c      	ldrb	r4, [r7, #1]
 801c2da:	782d      	ldrb	r5, [r5, #0]
 801c2dc:	783f      	ldrb	r7, [r7, #0]
 801c2de:	fb02 fa0a 	mul.w	sl, r2, sl
 801c2e2:	fb09 aa04 	mla	sl, r9, r4, sl
 801c2e6:	7874      	ldrb	r4, [r6, #1]
 801c2e8:	436a      	muls	r2, r5
 801c2ea:	7835      	ldrb	r5, [r6, #0]
 801c2ec:	fb00 aa04 	mla	sl, r0, r4, sl
 801c2f0:	fb09 2207 	mla	r2, r9, r7, r2
 801c2f4:	785c      	ldrb	r4, [r3, #1]
 801c2f6:	781b      	ldrb	r3, [r3, #0]
 801c2f8:	fb00 2005 	mla	r0, r0, r5, r2
 801c2fc:	fb0b a404 	mla	r4, fp, r4, sl
 801c300:	fb0b 0b03 	mla	fp, fp, r3, r0
 801c304:	9b02      	ldr	r3, [sp, #8]
 801c306:	fb11 fa08 	smulbb	sl, r1, r8
 801c30a:	fa1f fc8c 	uxth.w	ip, ip
 801c30e:	fb13 f808 	smulbb	r8, r3, r8
 801c312:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801c316:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801c31a:	fb04 a40e 	mla	r4, r4, lr, sl
 801c31e:	f10c 0301 	add.w	r3, ip, #1
 801c322:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801c326:	fa1f fe8e 	uxth.w	lr, lr
 801c32a:	b2a4      	uxth	r4, r4
 801c32c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801c330:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801c334:	f104 0a01 	add.w	sl, r4, #1
 801c338:	f10e 0c01 	add.w	ip, lr, #1
 801c33c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c340:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c344:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c348:	0964      	lsrs	r4, r4, #5
 801c34a:	ea4c 0c03 	orr.w	ip, ip, r3
 801c34e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801c352:	9b03      	ldr	r3, [sp, #12]
 801c354:	ea4c 0c04 	orr.w	ip, ip, r4
 801c358:	f8a3 c000 	strh.w	ip, [r3]
 801c35c:	b007      	add	sp, #28
 801c35e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c362:	af05      	add	r7, sp, #20
 801c364:	e756      	b.n	801c214 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801c366:	ad05      	add	r5, sp, #20
 801c368:	462f      	mov	r7, r5
 801c36a:	e761      	b.n	801c230 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801c36c:	ad05      	add	r5, sp, #20
 801c36e:	e75f      	b.n	801c230 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801c370:	ae05      	add	r6, sp, #20
 801c372:	e772      	b.n	801c25a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801c374:	ab05      	add	r3, sp, #20
 801c376:	461e      	mov	r6, r3
 801c378:	e77e      	b.n	801c278 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801c37a:	ab05      	add	r3, sp, #20
 801c37c:	e77c      	b.n	801c278 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801c37e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c37e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c382:	b095      	sub	sp, #84	@ 0x54
 801c384:	9212      	str	r2, [sp, #72]	@ 0x48
 801c386:	9309      	str	r3, [sp, #36]	@ 0x24
 801c388:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801c38a:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801c38e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c390:	910e      	str	r1, [sp, #56]	@ 0x38
 801c392:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801c396:	9013      	str	r0, [sp, #76]	@ 0x4c
 801c398:	6850      	ldr	r0, [r2, #4]
 801c39a:	6812      	ldr	r2, [r2, #0]
 801c39c:	fb00 1303 	mla	r3, r0, r3, r1
 801c3a0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c3a4:	930a      	str	r3, [sp, #40]	@ 0x28
 801c3a6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c3a8:	681b      	ldr	r3, [r3, #0]
 801c3aa:	930d      	str	r3, [sp, #52]	@ 0x34
 801c3ac:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c3ae:	685c      	ldr	r4, [r3, #4]
 801c3b0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c3b2:	43db      	mvns	r3, r3
 801c3b4:	b2db      	uxtb	r3, r3
 801c3b6:	3404      	adds	r4, #4
 801c3b8:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c3ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c3bc:	2b00      	cmp	r3, #0
 801c3be:	dc03      	bgt.n	801c3c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c3c0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801c3c2:	2b00      	cmp	r3, #0
 801c3c4:	f340 8255 	ble.w	801c872 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801c3c8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c3ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c3ce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c3d2:	1e48      	subs	r0, r1, #1
 801c3d4:	1e55      	subs	r5, r2, #1
 801c3d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c3d8:	2b00      	cmp	r3, #0
 801c3da:	f340 80f9 	ble.w	801c5d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801c3de:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801c3e0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c3e2:	1436      	asrs	r6, r6, #16
 801c3e4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c3e8:	d406      	bmi.n	801c3f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c3ea:	4286      	cmp	r6, r0
 801c3ec:	da04      	bge.n	801c3f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c3ee:	2b00      	cmp	r3, #0
 801c3f0:	db02      	blt.n	801c3f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c3f2:	42ab      	cmp	r3, r5
 801c3f4:	f2c0 80ed 	blt.w	801c5d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801c3f8:	3601      	adds	r6, #1
 801c3fa:	f100 80da 	bmi.w	801c5b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c3fe:	42b1      	cmp	r1, r6
 801c400:	f2c0 80d7 	blt.w	801c5b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c404:	3301      	adds	r3, #1
 801c406:	f100 80d4 	bmi.w	801c5b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c40a:	429a      	cmp	r2, r3
 801c40c:	f2c0 80d1 	blt.w	801c5b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c410:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c412:	9311      	str	r3, [sp, #68]	@ 0x44
 801c414:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c416:	930c      	str	r3, [sp, #48]	@ 0x30
 801c418:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c41a:	2b00      	cmp	r3, #0
 801c41c:	f340 80fa 	ble.w	801c614 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801c420:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801c422:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c424:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801c426:	68c6      	ldr	r6, [r0, #12]
 801c428:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801c42a:	141d      	asrs	r5, r3, #16
 801c42c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801c430:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c432:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801c434:	1400      	asrs	r0, r0, #16
 801c436:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801c43a:	6892      	ldr	r2, [r2, #8]
 801c43c:	f100 813e 	bmi.w	801c6bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c440:	1e57      	subs	r7, r2, #1
 801c442:	42b8      	cmp	r0, r7
 801c444:	f280 813a 	bge.w	801c6bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c448:	2d00      	cmp	r5, #0
 801c44a:	f2c0 8137 	blt.w	801c6bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c44e:	1e77      	subs	r7, r6, #1
 801c450:	42bd      	cmp	r5, r7
 801c452:	f280 8133 	bge.w	801c6bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c456:	b212      	sxth	r2, r2
 801c458:	fb05 0002 	mla	r0, r5, r2, r0
 801c45c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c45e:	f815 a000 	ldrb.w	sl, [r5, r0]
 801c462:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801c466:	182e      	adds	r6, r5, r0
 801c468:	eb04 050a 	add.w	r5, r4, sl
 801c46c:	2b00      	cmp	r3, #0
 801c46e:	f000 8117 	beq.w	801c6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801c472:	f896 c001 	ldrb.w	ip, [r6, #1]
 801c476:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801c47a:	44a4      	add	ip, r4
 801c47c:	2900      	cmp	r1, #0
 801c47e:	f000 8117 	beq.w	801c6b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801c482:	18b0      	adds	r0, r6, r2
 801c484:	5cb2      	ldrb	r2, [r6, r2]
 801c486:	7840      	ldrb	r0, [r0, #1]
 801c488:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c48c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c490:	4422      	add	r2, r4
 801c492:	4420      	add	r0, r4
 801c494:	b29b      	uxth	r3, r3
 801c496:	b289      	uxth	r1, r1
 801c498:	fb03 f901 	mul.w	r9, r3, r1
 801c49c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c4a0:	011b      	lsls	r3, r3, #4
 801c4a2:	b289      	uxth	r1, r1
 801c4a4:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801c4a8:	f895 b002 	ldrb.w	fp, [r5, #2]
 801c4ac:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801c4ae:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801c4b2:	f8b6 e000 	ldrh.w	lr, [r6]
 801c4b6:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801c4ba:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801c4be:	eba3 0309 	sub.w	r3, r3, r9
 801c4c2:	b29b      	uxth	r3, r3
 801c4c4:	eba8 0801 	sub.w	r8, r8, r1
 801c4c8:	fa1f f888 	uxth.w	r8, r8
 801c4cc:	435f      	muls	r7, r3
 801c4ce:	fb08 770b 	mla	r7, r8, fp, r7
 801c4d2:	f892 b002 	ldrb.w	fp, [r2, #2]
 801c4d6:	9310      	str	r3, [sp, #64]	@ 0x40
 801c4d8:	fb01 770b 	mla	r7, r1, fp, r7
 801c4dc:	f890 b002 	ldrb.w	fp, [r0, #2]
 801c4e0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c4e2:	fb09 770b 	mla	r7, r9, fp, r7
 801c4e6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801c4ea:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801c4ee:	fb1b fb03 	smulbb	fp, fp, r3
 801c4f2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c4f6:	fb07 b706 	mla	r7, r7, r6, fp
 801c4fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c4fc:	f895 b001 	ldrb.w	fp, [r5, #1]
 801c500:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801c504:	f89c c000 	ldrb.w	ip, [ip]
 801c508:	435d      	muls	r5, r3
 801c50a:	fb08 550b 	mla	r5, r8, fp, r5
 801c50e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801c512:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c514:	fb01 550b 	mla	r5, r1, fp, r5
 801c518:	f890 b001 	ldrb.w	fp, [r0, #1]
 801c51c:	fb09 550b 	mla	r5, r9, fp, r5
 801c520:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801c524:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801c528:	fb1b fb03 	smulbb	fp, fp, r3
 801c52c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c52e:	fb03 f30c 	mul.w	r3, r3, ip
 801c532:	f892 c000 	ldrb.w	ip, [r2]
 801c536:	fb08 330a 	mla	r3, r8, sl, r3
 801c53a:	fb01 330c 	mla	r3, r1, ip, r3
 801c53e:	f890 c000 	ldrb.w	ip, [r0]
 801c542:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c546:	fb09 3c0c 	mla	ip, r9, ip, r3
 801c54a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c54c:	fa5f fe8e 	uxtb.w	lr, lr
 801c550:	b2bf      	uxth	r7, r7
 801c552:	fb1e fe03 	smulbb	lr, lr, r3
 801c556:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801c55a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801c55e:	fb05 b506 	mla	r5, r5, r6, fp
 801c562:	1c7b      	adds	r3, r7, #1
 801c564:	fb0c e606 	mla	r6, ip, r6, lr
 801c568:	b2ad      	uxth	r5, r5
 801c56a:	b2b6      	uxth	r6, r6
 801c56c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c570:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801c574:	f105 0b01 	add.w	fp, r5, #1
 801c578:	1c77      	adds	r7, r6, #1
 801c57a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801c57e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801c582:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c586:	096d      	lsrs	r5, r5, #5
 801c588:	431f      	orrs	r7, r3
 801c58a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c58e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c590:	433d      	orrs	r5, r7
 801c592:	801d      	strh	r5, [r3, #0]
 801c594:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c596:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801c598:	3302      	adds	r3, #2
 801c59a:	930c      	str	r3, [sp, #48]	@ 0x30
 801c59c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c59e:	4413      	add	r3, r2
 801c5a0:	931f      	str	r3, [sp, #124]	@ 0x7c
 801c5a2:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801c5a4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c5a6:	4413      	add	r3, r2
 801c5a8:	9320      	str	r3, [sp, #128]	@ 0x80
 801c5aa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c5ac:	3b01      	subs	r3, #1
 801c5ae:	9311      	str	r3, [sp, #68]	@ 0x44
 801c5b0:	e732      	b.n	801c418 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c5b2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c5b4:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801c5b6:	4433      	add	r3, r6
 801c5b8:	931f      	str	r3, [sp, #124]	@ 0x7c
 801c5ba:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801c5bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c5be:	4433      	add	r3, r6
 801c5c0:	9320      	str	r3, [sp, #128]	@ 0x80
 801c5c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c5c4:	3b01      	subs	r3, #1
 801c5c6:	9309      	str	r3, [sp, #36]	@ 0x24
 801c5c8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c5ca:	3302      	adds	r3, #2
 801c5cc:	930a      	str	r3, [sp, #40]	@ 0x28
 801c5ce:	e702      	b.n	801c3d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c5d0:	d027      	beq.n	801c622 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801c5d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c5d4:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801c5d6:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801c5d8:	3b01      	subs	r3, #1
 801c5da:	fb00 5003 	mla	r0, r0, r3, r5
 801c5de:	1400      	asrs	r0, r0, #16
 801c5e0:	f53f af16 	bmi.w	801c410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c5e4:	3901      	subs	r1, #1
 801c5e6:	4288      	cmp	r0, r1
 801c5e8:	f6bf af12 	bge.w	801c410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c5ec:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801c5ee:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801c5f0:	fb01 0303 	mla	r3, r1, r3, r0
 801c5f4:	141b      	asrs	r3, r3, #16
 801c5f6:	f53f af0b 	bmi.w	801c410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c5fa:	3a01      	subs	r2, #1
 801c5fc:	4293      	cmp	r3, r2
 801c5fe:	f6bf af07 	bge.w	801c410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c602:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c604:	9311      	str	r3, [sp, #68]	@ 0x44
 801c606:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801c60a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c60c:	930c      	str	r3, [sp, #48]	@ 0x30
 801c60e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c610:	2b00      	cmp	r3, #0
 801c612:	dc70      	bgt.n	801c6f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801c614:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c616:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c618:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c61c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c620:	930a      	str	r3, [sp, #40]	@ 0x28
 801c622:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c624:	2b00      	cmp	r3, #0
 801c626:	f340 8124 	ble.w	801c872 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801c62a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c62e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c632:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c636:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801c638:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c63c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c640:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c644:	eef0 6a62 	vmov.f32	s13, s5
 801c648:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c64c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c650:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c654:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801c658:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c65c:	eef0 6a43 	vmov.f32	s13, s6
 801c660:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c664:	ee12 2a90 	vmov	r2, s5
 801c668:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c66c:	fb92 f3f3 	sdiv	r3, r2, r3
 801c670:	ee13 2a10 	vmov	r2, s6
 801c674:	9321      	str	r3, [sp, #132]	@ 0x84
 801c676:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801c678:	fb92 f3f3 	sdiv	r3, r2, r3
 801c67c:	9322      	str	r3, [sp, #136]	@ 0x88
 801c67e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c680:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c682:	3b01      	subs	r3, #1
 801c684:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c688:	930e      	str	r3, [sp, #56]	@ 0x38
 801c68a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801c68c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801c690:	bf08      	it	eq
 801c692:	4613      	moveq	r3, r2
 801c694:	9309      	str	r3, [sp, #36]	@ 0x24
 801c696:	eeb0 3a67 	vmov.f32	s6, s15
 801c69a:	eef0 2a47 	vmov.f32	s5, s14
 801c69e:	e68c      	b.n	801c3ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c6a0:	b149      	cbz	r1, 801c6b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801c6a2:	5cb2      	ldrb	r2, [r6, r2]
 801c6a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c6a8:	4422      	add	r2, r4
 801c6aa:	4628      	mov	r0, r5
 801c6ac:	46ac      	mov	ip, r5
 801c6ae:	e6f1      	b.n	801c494 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c6b0:	4628      	mov	r0, r5
 801c6b2:	462a      	mov	r2, r5
 801c6b4:	e6ee      	b.n	801c494 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c6b6:	4628      	mov	r0, r5
 801c6b8:	462a      	mov	r2, r5
 801c6ba:	e7f7      	b.n	801c6ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801c6bc:	1c47      	adds	r7, r0, #1
 801c6be:	f53f af69 	bmi.w	801c594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c6c2:	42ba      	cmp	r2, r7
 801c6c4:	f6ff af66 	blt.w	801c594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c6c8:	1c6f      	adds	r7, r5, #1
 801c6ca:	f53f af63 	bmi.w	801c594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c6ce:	42be      	cmp	r6, r7
 801c6d0:	f6ff af60 	blt.w	801c594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c6d4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801c6d6:	9002      	str	r0, [sp, #8]
 801c6d8:	b236      	sxth	r6, r6
 801c6da:	b212      	sxth	r2, r2
 801c6dc:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801c6e0:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801c6e4:	9200      	str	r2, [sp, #0]
 801c6e6:	9601      	str	r6, [sp, #4]
 801c6e8:	4623      	mov	r3, r4
 801c6ea:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801c6ee:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801c6f0:	f7ff fd59 	bl	801c1a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801c6f4:	e74e      	b.n	801c594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c6f6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801c6f8:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801c6fa:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801c6fc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c6fe:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801c702:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801c704:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801c708:	142d      	asrs	r5, r5, #16
 801c70a:	1400      	asrs	r0, r0, #16
 801c70c:	fb02 5000 	mla	r0, r2, r0, r5
 801c710:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c712:	f815 9000 	ldrb.w	r9, [r5, r0]
 801c716:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801c71a:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801c71e:	182e      	adds	r6, r5, r0
 801c720:	eb04 0509 	add.w	r5, r4, r9
 801c724:	2b00      	cmp	r3, #0
 801c726:	f000 8096 	beq.w	801c856 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801c72a:	7877      	ldrb	r7, [r6, #1]
 801c72c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801c730:	4427      	add	r7, r4
 801c732:	2900      	cmp	r1, #0
 801c734:	f000 8097 	beq.w	801c866 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801c738:	18b0      	adds	r0, r6, r2
 801c73a:	5cb2      	ldrb	r2, [r6, r2]
 801c73c:	7840      	ldrb	r0, [r0, #1]
 801c73e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c742:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c746:	4422      	add	r2, r4
 801c748:	4420      	add	r0, r4
 801c74a:	b29b      	uxth	r3, r3
 801c74c:	b289      	uxth	r1, r1
 801c74e:	fb03 f801 	mul.w	r8, r3, r1
 801c752:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801c754:	f895 b002 	ldrb.w	fp, [r5, #2]
 801c758:	f8b6 c000 	ldrh.w	ip, [r6]
 801c75c:	78be      	ldrb	r6, [r7, #2]
 801c75e:	f814 9009 	ldrb.w	r9, [r4, r9]
 801c762:	011b      	lsls	r3, r3, #4
 801c764:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801c768:	b289      	uxth	r1, r1
 801c76a:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801c76e:	eba3 0308 	sub.w	r3, r3, r8
 801c772:	b29b      	uxth	r3, r3
 801c774:	ebae 0e01 	sub.w	lr, lr, r1
 801c778:	fa1f fe8e 	uxth.w	lr, lr
 801c77c:	435e      	muls	r6, r3
 801c77e:	fb0e 660b 	mla	r6, lr, fp, r6
 801c782:	f892 b002 	ldrb.w	fp, [r2, #2]
 801c786:	9310      	str	r3, [sp, #64]	@ 0x40
 801c788:	fb01 660b 	mla	r6, r1, fp, r6
 801c78c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801c790:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c792:	fb08 660b 	mla	r6, r8, fp, r6
 801c796:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801c79a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801c79e:	fb1b fb03 	smulbb	fp, fp, r3
 801c7a2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801c7a6:	fb06 b60a 	mla	r6, r6, sl, fp
 801c7aa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c7ac:	f895 b001 	ldrb.w	fp, [r5, #1]
 801c7b0:	787d      	ldrb	r5, [r7, #1]
 801c7b2:	783f      	ldrb	r7, [r7, #0]
 801c7b4:	435d      	muls	r5, r3
 801c7b6:	fb0e 550b 	mla	r5, lr, fp, r5
 801c7ba:	f892 b001 	ldrb.w	fp, [r2, #1]
 801c7be:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c7c0:	fb01 550b 	mla	r5, r1, fp, r5
 801c7c4:	f890 b001 	ldrb.w	fp, [r0, #1]
 801c7c8:	fb08 550b 	mla	r5, r8, fp, r5
 801c7cc:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c7d0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801c7d4:	fb1b fb03 	smulbb	fp, fp, r3
 801c7d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c7da:	437b      	muls	r3, r7
 801c7dc:	7817      	ldrb	r7, [r2, #0]
 801c7de:	fb0e 3309 	mla	r3, lr, r9, r3
 801c7e2:	fb01 3307 	mla	r3, r1, r7, r3
 801c7e6:	7807      	ldrb	r7, [r0, #0]
 801c7e8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c7ec:	fb08 3707 	mla	r7, r8, r7, r3
 801c7f0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c7f2:	fa5f fc8c 	uxtb.w	ip, ip
 801c7f6:	fb1c fc03 	smulbb	ip, ip, r3
 801c7fa:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801c7fe:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c802:	fb05 b50a 	mla	r5, r5, sl, fp
 801c806:	fb07 c70a 	mla	r7, r7, sl, ip
 801c80a:	b2b6      	uxth	r6, r6
 801c80c:	b2ad      	uxth	r5, r5
 801c80e:	b2bf      	uxth	r7, r7
 801c810:	1c73      	adds	r3, r6, #1
 801c812:	1c7a      	adds	r2, r7, #1
 801c814:	f105 0b01 	add.w	fp, r5, #1
 801c818:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801c81c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801c820:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801c824:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c828:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801c82c:	096d      	lsrs	r5, r5, #5
 801c82e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c830:	4316      	orrs	r6, r2
 801c832:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c836:	432e      	orrs	r6, r5
 801c838:	f823 6b02 	strh.w	r6, [r3], #2
 801c83c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801c83e:	930c      	str	r3, [sp, #48]	@ 0x30
 801c840:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c842:	4413      	add	r3, r2
 801c844:	931f      	str	r3, [sp, #124]	@ 0x7c
 801c846:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801c848:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c84a:	4413      	add	r3, r2
 801c84c:	9320      	str	r3, [sp, #128]	@ 0x80
 801c84e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c850:	3b01      	subs	r3, #1
 801c852:	9311      	str	r3, [sp, #68]	@ 0x44
 801c854:	e6db      	b.n	801c60e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801c856:	b149      	cbz	r1, 801c86c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c858:	5cb2      	ldrb	r2, [r6, r2]
 801c85a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c85e:	4422      	add	r2, r4
 801c860:	4628      	mov	r0, r5
 801c862:	462f      	mov	r7, r5
 801c864:	e771      	b.n	801c74a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801c866:	4628      	mov	r0, r5
 801c868:	462a      	mov	r2, r5
 801c86a:	e76e      	b.n	801c74a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801c86c:	4628      	mov	r0, r5
 801c86e:	462a      	mov	r2, r5
 801c870:	e7f7      	b.n	801c862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c872:	b015      	add	sp, #84	@ 0x54
 801c874:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c878 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801c878:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c87c:	880f      	ldrh	r7, [r1, #0]
 801c87e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801c882:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801c886:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801c88a:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801c88e:	023c      	lsls	r4, r7, #8
 801c890:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801c894:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801c898:	017c      	lsls	r4, r7, #5
 801c89a:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801c89e:	00ff      	lsls	r7, r7, #3
 801c8a0:	ea4b 0404 	orr.w	r4, fp, r4
 801c8a4:	b2ff      	uxtb	r7, r7
 801c8a6:	fb05 ca0e 	mla	sl, r5, lr, ip
 801c8aa:	4327      	orrs	r7, r4
 801c8ac:	2d00      	cmp	r5, #0
 801c8ae:	eb02 080a 	add.w	r8, r2, sl
 801c8b2:	9701      	str	r7, [sp, #4]
 801c8b4:	db7e      	blt.n	801c9b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801c8b6:	45a9      	cmp	r9, r5
 801c8b8:	dd7c      	ble.n	801c9b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801c8ba:	f1bc 0f00 	cmp.w	ip, #0
 801c8be:	db77      	blt.n	801c9b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801c8c0:	45e6      	cmp	lr, ip
 801c8c2:	dd75      	ble.n	801c9b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801c8c4:	f812 700a 	ldrb.w	r7, [r2, sl]
 801c8c8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801c8cc:	441f      	add	r7, r3
 801c8ce:	f11c 0201 	adds.w	r2, ip, #1
 801c8d2:	d472      	bmi.n	801c9ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801c8d4:	4596      	cmp	lr, r2
 801c8d6:	dd70      	ble.n	801c9ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801c8d8:	2800      	cmp	r0, #0
 801c8da:	d06e      	beq.n	801c9ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801c8dc:	f898 4001 	ldrb.w	r4, [r8, #1]
 801c8e0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801c8e4:	441c      	add	r4, r3
 801c8e6:	3501      	adds	r5, #1
 801c8e8:	d46b      	bmi.n	801c9c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801c8ea:	45a9      	cmp	r9, r5
 801c8ec:	dd69      	ble.n	801c9c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801c8ee:	2e00      	cmp	r6, #0
 801c8f0:	d067      	beq.n	801c9c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801c8f2:	f1bc 0f00 	cmp.w	ip, #0
 801c8f6:	db62      	blt.n	801c9be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801c8f8:	45e6      	cmp	lr, ip
 801c8fa:	dd60      	ble.n	801c9be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801c8fc:	f818 500e 	ldrb.w	r5, [r8, lr]
 801c900:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c904:	441d      	add	r5, r3
 801c906:	f11c 0201 	adds.w	r2, ip, #1
 801c90a:	d45d      	bmi.n	801c9c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801c90c:	4596      	cmp	lr, r2
 801c90e:	dd5b      	ble.n	801c9c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801c910:	2800      	cmp	r0, #0
 801c912:	d059      	beq.n	801c9c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801c914:	44c6      	add	lr, r8
 801c916:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c91a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c91e:	4413      	add	r3, r2
 801c920:	b280      	uxth	r0, r0
 801c922:	b2b2      	uxth	r2, r6
 801c924:	fb00 f602 	mul.w	r6, r0, r2
 801c928:	0100      	lsls	r0, r0, #4
 801c92a:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801c92e:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801c932:	1b80      	subs	r0, r0, r6
 801c934:	fa1f fc82 	uxth.w	ip, r2
 801c938:	b282      	uxth	r2, r0
 801c93a:	78a0      	ldrb	r0, [r4, #2]
 801c93c:	f897 e002 	ldrb.w	lr, [r7, #2]
 801c940:	f897 9000 	ldrb.w	r9, [r7]
 801c944:	787f      	ldrb	r7, [r7, #1]
 801c946:	eba8 080c 	sub.w	r8, r8, ip
 801c94a:	fa1f f888 	uxth.w	r8, r8
 801c94e:	4350      	muls	r0, r2
 801c950:	fb08 0e0e 	mla	lr, r8, lr, r0
 801c954:	78a8      	ldrb	r0, [r5, #2]
 801c956:	fb0c e000 	mla	r0, ip, r0, lr
 801c95a:	f893 e002 	ldrb.w	lr, [r3, #2]
 801c95e:	fb06 0e0e 	mla	lr, r6, lr, r0
 801c962:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801c966:	f894 e000 	ldrb.w	lr, [r4]
 801c96a:	fb02 fe0e 	mul.w	lr, r2, lr
 801c96e:	fb08 e909 	mla	r9, r8, r9, lr
 801c972:	f895 e000 	ldrb.w	lr, [r5]
 801c976:	fb0c 990e 	mla	r9, ip, lr, r9
 801c97a:	f893 e000 	ldrb.w	lr, [r3]
 801c97e:	785b      	ldrb	r3, [r3, #1]
 801c980:	fb06 9e0e 	mla	lr, r6, lr, r9
 801c984:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c988:	ea4e 0e00 	orr.w	lr, lr, r0
 801c98c:	7860      	ldrb	r0, [r4, #1]
 801c98e:	4350      	muls	r0, r2
 801c990:	786a      	ldrb	r2, [r5, #1]
 801c992:	fb08 0007 	mla	r0, r8, r7, r0
 801c996:	fb0c 0202 	mla	r2, ip, r2, r0
 801c99a:	fb06 2303 	mla	r3, r6, r3, r2
 801c99e:	095b      	lsrs	r3, r3, #5
 801c9a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c9a4:	ea4e 0303 	orr.w	r3, lr, r3
 801c9a8:	800b      	strh	r3, [r1, #0]
 801c9aa:	b003      	add	sp, #12
 801c9ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c9b0:	af01      	add	r7, sp, #4
 801c9b2:	e78c      	b.n	801c8ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801c9b4:	ac01      	add	r4, sp, #4
 801c9b6:	4627      	mov	r7, r4
 801c9b8:	e795      	b.n	801c8e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801c9ba:	ac01      	add	r4, sp, #4
 801c9bc:	e793      	b.n	801c8e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801c9be:	ad01      	add	r5, sp, #4
 801c9c0:	e7a1      	b.n	801c906 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801c9c2:	ab01      	add	r3, sp, #4
 801c9c4:	461d      	mov	r5, r3
 801c9c6:	e7ab      	b.n	801c920 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801c9c8:	ab01      	add	r3, sp, #4
 801c9ca:	e7a9      	b.n	801c920 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801c9cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c9cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c9d0:	b08f      	sub	sp, #60	@ 0x3c
 801c9d2:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801c9d6:	920c      	str	r2, [sp, #48]	@ 0x30
 801c9d8:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801c9da:	910a      	str	r1, [sp, #40]	@ 0x28
 801c9dc:	9306      	str	r3, [sp, #24]
 801c9de:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801c9e2:	900d      	str	r0, [sp, #52]	@ 0x34
 801c9e4:	6850      	ldr	r0, [r2, #4]
 801c9e6:	6812      	ldr	r2, [r2, #0]
 801c9e8:	fb00 1303 	mla	r3, r0, r3, r1
 801c9ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c9f0:	9307      	str	r3, [sp, #28]
 801c9f2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c9f4:	681b      	ldr	r3, [r3, #0]
 801c9f6:	9308      	str	r3, [sp, #32]
 801c9f8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c9fa:	685c      	ldr	r4, [r3, #4]
 801c9fc:	3404      	adds	r4, #4
 801c9fe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ca00:	2b00      	cmp	r3, #0
 801ca02:	dc03      	bgt.n	801ca0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801ca04:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ca06:	2b00      	cmp	r3, #0
 801ca08:	f340 81d6 	ble.w	801cdb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801ca0c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ca0e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ca12:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ca16:	1e48      	subs	r0, r1, #1
 801ca18:	1e56      	subs	r6, r2, #1
 801ca1a:	9b06      	ldr	r3, [sp, #24]
 801ca1c:	2b00      	cmp	r3, #0
 801ca1e:	f340 80b7 	ble.w	801cb90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801ca22:	ea5f 472b 	movs.w	r7, fp, asr #16
 801ca26:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ca2a:	d406      	bmi.n	801ca3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ca2c:	4287      	cmp	r7, r0
 801ca2e:	da04      	bge.n	801ca3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ca30:	2b00      	cmp	r3, #0
 801ca32:	db02      	blt.n	801ca3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ca34:	42b3      	cmp	r3, r6
 801ca36:	f2c0 80ac 	blt.w	801cb92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801ca3a:	3701      	adds	r7, #1
 801ca3c:	f100 809d 	bmi.w	801cb7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ca40:	42b9      	cmp	r1, r7
 801ca42:	f2c0 809a 	blt.w	801cb7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ca46:	3301      	adds	r3, #1
 801ca48:	f100 8097 	bmi.w	801cb7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ca4c:	429a      	cmp	r2, r3
 801ca4e:	f2c0 8094 	blt.w	801cb7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ca52:	9b06      	ldr	r3, [sp, #24]
 801ca54:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ca56:	9b07      	ldr	r3, [sp, #28]
 801ca58:	9309      	str	r3, [sp, #36]	@ 0x24
 801ca5a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ca5c:	2b00      	cmp	r3, #0
 801ca5e:	f340 80b5 	ble.w	801cbcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ca62:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801ca64:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801ca66:	68c7      	ldr	r7, [r0, #12]
 801ca68:	6892      	ldr	r2, [r2, #8]
 801ca6a:	ea5f 402b 	movs.w	r0, fp, asr #16
 801ca6e:	ea4f 4625 	mov.w	r6, r5, asr #16
 801ca72:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ca76:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ca7a:	f100 80fb 	bmi.w	801cc74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ca7e:	f102 3cff 	add.w	ip, r2, #4294967295
 801ca82:	4560      	cmp	r0, ip
 801ca84:	f280 80f6 	bge.w	801cc74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ca88:	2e00      	cmp	r6, #0
 801ca8a:	f2c0 80f3 	blt.w	801cc74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ca8e:	f107 3cff 	add.w	ip, r7, #4294967295
 801ca92:	4566      	cmp	r6, ip
 801ca94:	f280 80ee 	bge.w	801cc74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ca98:	b212      	sxth	r2, r2
 801ca9a:	fb06 0002 	mla	r0, r6, r2, r0
 801ca9e:	9e08      	ldr	r6, [sp, #32]
 801caa0:	1837      	adds	r7, r6, r0
 801caa2:	5c30      	ldrb	r0, [r6, r0]
 801caa4:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801caa8:	eb04 0c08 	add.w	ip, r4, r8
 801caac:	2b00      	cmp	r3, #0
 801caae:	f000 80d3 	beq.w	801cc58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cab2:	787e      	ldrb	r6, [r7, #1]
 801cab4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801cab8:	4426      	add	r6, r4
 801caba:	2900      	cmp	r1, #0
 801cabc:	f000 80d4 	beq.w	801cc68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801cac0:	18b8      	adds	r0, r7, r2
 801cac2:	5cba      	ldrb	r2, [r7, r2]
 801cac4:	7840      	ldrb	r0, [r0, #1]
 801cac6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801caca:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801cace:	4422      	add	r2, r4
 801cad0:	4420      	add	r0, r4
 801cad2:	b29b      	uxth	r3, r3
 801cad4:	b289      	uxth	r1, r1
 801cad6:	fb03 f901 	mul.w	r9, r3, r1
 801cada:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801cade:	011b      	lsls	r3, r3, #4
 801cae0:	b289      	uxth	r1, r1
 801cae2:	78b7      	ldrb	r7, [r6, #2]
 801cae4:	f89c a002 	ldrb.w	sl, [ip, #2]
 801cae8:	f89c c001 	ldrb.w	ip, [ip, #1]
 801caec:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801caf0:	eba3 0309 	sub.w	r3, r3, r9
 801caf4:	b29b      	uxth	r3, r3
 801caf6:	ebae 0e01 	sub.w	lr, lr, r1
 801cafa:	fa1f fe8e 	uxth.w	lr, lr
 801cafe:	435f      	muls	r7, r3
 801cb00:	fb0e 770a 	mla	r7, lr, sl, r7
 801cb04:	f892 a002 	ldrb.w	sl, [r2, #2]
 801cb08:	fb01 770a 	mla	r7, r1, sl, r7
 801cb0c:	f890 a002 	ldrb.w	sl, [r0, #2]
 801cb10:	fb09 7a0a 	mla	sl, r9, sl, r7
 801cb14:	f814 7008 	ldrb.w	r7, [r4, r8]
 801cb18:	f896 8000 	ldrb.w	r8, [r6]
 801cb1c:	7876      	ldrb	r6, [r6, #1]
 801cb1e:	fb03 f808 	mul.w	r8, r3, r8
 801cb22:	fb0e 8807 	mla	r8, lr, r7, r8
 801cb26:	7817      	ldrb	r7, [r2, #0]
 801cb28:	fb01 8807 	mla	r8, r1, r7, r8
 801cb2c:	7807      	ldrb	r7, [r0, #0]
 801cb2e:	fb09 8707 	mla	r7, r9, r7, r8
 801cb32:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801cb36:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cb3a:	ea47 070a 	orr.w	r7, r7, sl
 801cb3e:	4373      	muls	r3, r6
 801cb40:	f892 a001 	ldrb.w	sl, [r2, #1]
 801cb44:	fb0e 330c 	mla	r3, lr, ip, r3
 801cb48:	fb01 310a 	mla	r1, r1, sl, r3
 801cb4c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801cb50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cb52:	fb09 1a0a 	mla	sl, r9, sl, r1
 801cb56:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cb5a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801cb5e:	ea47 070a 	orr.w	r7, r7, sl
 801cb62:	801f      	strh	r7, [r3, #0]
 801cb64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cb66:	3302      	adds	r3, #2
 801cb68:	9309      	str	r3, [sp, #36]	@ 0x24
 801cb6a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801cb6c:	449b      	add	fp, r3
 801cb6e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cb70:	441d      	add	r5, r3
 801cb72:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801cb74:	3b01      	subs	r3, #1
 801cb76:	930b      	str	r3, [sp, #44]	@ 0x2c
 801cb78:	e76f      	b.n	801ca5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801cb7a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801cb7c:	449b      	add	fp, r3
 801cb7e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cb80:	441d      	add	r5, r3
 801cb82:	9b06      	ldr	r3, [sp, #24]
 801cb84:	3b01      	subs	r3, #1
 801cb86:	9306      	str	r3, [sp, #24]
 801cb88:	9b07      	ldr	r3, [sp, #28]
 801cb8a:	3302      	adds	r3, #2
 801cb8c:	9307      	str	r3, [sp, #28]
 801cb8e:	e744      	b.n	801ca1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801cb90:	d023      	beq.n	801cbda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801cb92:	9b06      	ldr	r3, [sp, #24]
 801cb94:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801cb96:	3b01      	subs	r3, #1
 801cb98:	fb00 b003 	mla	r0, r0, r3, fp
 801cb9c:	1400      	asrs	r0, r0, #16
 801cb9e:	f53f af58 	bmi.w	801ca52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cba2:	3901      	subs	r1, #1
 801cba4:	4288      	cmp	r0, r1
 801cba6:	f6bf af54 	bge.w	801ca52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cbaa:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801cbac:	fb01 5303 	mla	r3, r1, r3, r5
 801cbb0:	141b      	asrs	r3, r3, #16
 801cbb2:	f53f af4e 	bmi.w	801ca52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cbb6:	3a01      	subs	r2, #1
 801cbb8:	4293      	cmp	r3, r2
 801cbba:	f6bf af4a 	bge.w	801ca52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cbbe:	9b06      	ldr	r3, [sp, #24]
 801cbc0:	9309      	str	r3, [sp, #36]	@ 0x24
 801cbc2:	9b07      	ldr	r3, [sp, #28]
 801cbc4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801cbc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cbc8:	2b00      	cmp	r3, #0
 801cbca:	dc70      	bgt.n	801ccae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801cbcc:	9b06      	ldr	r3, [sp, #24]
 801cbce:	9a07      	ldr	r2, [sp, #28]
 801cbd0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cbd4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cbd8:	9307      	str	r3, [sp, #28]
 801cbda:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cbdc:	2b00      	cmp	r3, #0
 801cbde:	f340 80eb 	ble.w	801cdb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801cbe2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cbe6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cbea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cbee:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801cbf0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cbf4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cbf8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cbfc:	eef0 6a62 	vmov.f32	s13, s5
 801cc00:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cc04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cc08:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cc0c:	ee16 ba90 	vmov	fp, s13
 801cc10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cc14:	eef0 6a43 	vmov.f32	s13, s6
 801cc18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cc1c:	ee12 2a90 	vmov	r2, s5
 801cc20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cc24:	fb92 f3f3 	sdiv	r3, r2, r3
 801cc28:	ee13 2a10 	vmov	r2, s6
 801cc2c:	931b      	str	r3, [sp, #108]	@ 0x6c
 801cc2e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801cc30:	fb92 f3f3 	sdiv	r3, r2, r3
 801cc34:	931c      	str	r3, [sp, #112]	@ 0x70
 801cc36:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cc38:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801cc3a:	3b01      	subs	r3, #1
 801cc3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cc40:	930a      	str	r3, [sp, #40]	@ 0x28
 801cc42:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801cc44:	bf08      	it	eq
 801cc46:	4613      	moveq	r3, r2
 801cc48:	ee16 5a90 	vmov	r5, s13
 801cc4c:	9306      	str	r3, [sp, #24]
 801cc4e:	eeb0 3a67 	vmov.f32	s6, s15
 801cc52:	eef0 2a47 	vmov.f32	s5, s14
 801cc56:	e6d2      	b.n	801c9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801cc58:	b149      	cbz	r1, 801cc6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cc5a:	5cba      	ldrb	r2, [r7, r2]
 801cc5c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cc60:	4422      	add	r2, r4
 801cc62:	4660      	mov	r0, ip
 801cc64:	4666      	mov	r6, ip
 801cc66:	e734      	b.n	801cad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801cc68:	4660      	mov	r0, ip
 801cc6a:	4662      	mov	r2, ip
 801cc6c:	e731      	b.n	801cad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801cc6e:	4660      	mov	r0, ip
 801cc70:	4662      	mov	r2, ip
 801cc72:	e7f7      	b.n	801cc64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801cc74:	f110 0c01 	adds.w	ip, r0, #1
 801cc78:	f53f af74 	bmi.w	801cb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cc7c:	4562      	cmp	r2, ip
 801cc7e:	f6ff af71 	blt.w	801cb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cc82:	f116 0c01 	adds.w	ip, r6, #1
 801cc86:	f53f af6d 	bmi.w	801cb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cc8a:	4567      	cmp	r7, ip
 801cc8c:	f6ff af6a 	blt.w	801cb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cc90:	b23f      	sxth	r7, r7
 801cc92:	b212      	sxth	r2, r2
 801cc94:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801cc98:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801cc9c:	9200      	str	r2, [sp, #0]
 801cc9e:	9701      	str	r7, [sp, #4]
 801cca0:	4623      	mov	r3, r4
 801cca2:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801cca6:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801cca8:	f7ff fde6 	bl	801c878 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801ccac:	e75a      	b.n	801cb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ccae:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801ccb0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ccb4:	ea4f 462b 	mov.w	r6, fp, asr #16
 801ccb8:	1428      	asrs	r0, r5, #16
 801ccba:	fb02 6000 	mla	r0, r2, r0, r6
 801ccbe:	9e08      	ldr	r6, [sp, #32]
 801ccc0:	f816 8000 	ldrb.w	r8, [r6, r0]
 801ccc4:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ccc8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801cccc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ccd0:	1837      	adds	r7, r6, r0
 801ccd2:	eb04 0c08 	add.w	ip, r4, r8
 801ccd6:	2b00      	cmp	r3, #0
 801ccd8:	d060      	beq.n	801cd9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801ccda:	787e      	ldrb	r6, [r7, #1]
 801ccdc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801cce0:	4426      	add	r6, r4
 801cce2:	2900      	cmp	r1, #0
 801cce4:	d062      	beq.n	801cdac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801cce6:	18b8      	adds	r0, r7, r2
 801cce8:	5cba      	ldrb	r2, [r7, r2]
 801ccea:	7840      	ldrb	r0, [r0, #1]
 801ccec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ccf0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ccf4:	4422      	add	r2, r4
 801ccf6:	4420      	add	r0, r4
 801ccf8:	b29b      	uxth	r3, r3
 801ccfa:	b289      	uxth	r1, r1
 801ccfc:	fb03 f901 	mul.w	r9, r3, r1
 801cd00:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801cd04:	011b      	lsls	r3, r3, #4
 801cd06:	b289      	uxth	r1, r1
 801cd08:	78b7      	ldrb	r7, [r6, #2]
 801cd0a:	f89c a002 	ldrb.w	sl, [ip, #2]
 801cd0e:	f89c c001 	ldrb.w	ip, [ip, #1]
 801cd12:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801cd16:	eba3 0309 	sub.w	r3, r3, r9
 801cd1a:	b29b      	uxth	r3, r3
 801cd1c:	ebae 0e01 	sub.w	lr, lr, r1
 801cd20:	fa1f fe8e 	uxth.w	lr, lr
 801cd24:	435f      	muls	r7, r3
 801cd26:	fb0e 770a 	mla	r7, lr, sl, r7
 801cd2a:	f892 a002 	ldrb.w	sl, [r2, #2]
 801cd2e:	fb01 770a 	mla	r7, r1, sl, r7
 801cd32:	f890 a002 	ldrb.w	sl, [r0, #2]
 801cd36:	fb09 7a0a 	mla	sl, r9, sl, r7
 801cd3a:	f814 7008 	ldrb.w	r7, [r4, r8]
 801cd3e:	f896 8000 	ldrb.w	r8, [r6]
 801cd42:	7876      	ldrb	r6, [r6, #1]
 801cd44:	fb03 f808 	mul.w	r8, r3, r8
 801cd48:	fb0e 8807 	mla	r8, lr, r7, r8
 801cd4c:	7817      	ldrb	r7, [r2, #0]
 801cd4e:	fb01 8807 	mla	r8, r1, r7, r8
 801cd52:	7807      	ldrb	r7, [r0, #0]
 801cd54:	fb09 8707 	mla	r7, r9, r7, r8
 801cd58:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801cd5c:	4373      	muls	r3, r6
 801cd5e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cd62:	7856      	ldrb	r6, [r2, #1]
 801cd64:	ea47 070a 	orr.w	r7, r7, sl
 801cd68:	fb0e 330c 	mla	r3, lr, ip, r3
 801cd6c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801cd70:	fb01 3306 	mla	r3, r1, r6, r3
 801cd74:	fb09 3a0a 	mla	sl, r9, sl, r3
 801cd78:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cd7c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801cd7e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801cd82:	ea47 070a 	orr.w	r7, r7, sl
 801cd86:	f823 7b02 	strh.w	r7, [r3], #2
 801cd8a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801cd8c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801cd8e:	449b      	add	fp, r3
 801cd90:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cd92:	441d      	add	r5, r3
 801cd94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cd96:	3b01      	subs	r3, #1
 801cd98:	9309      	str	r3, [sp, #36]	@ 0x24
 801cd9a:	e714      	b.n	801cbc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801cd9c:	b149      	cbz	r1, 801cdb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801cd9e:	5cba      	ldrb	r2, [r7, r2]
 801cda0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cda4:	4422      	add	r2, r4
 801cda6:	4660      	mov	r0, ip
 801cda8:	4666      	mov	r6, ip
 801cdaa:	e7a5      	b.n	801ccf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801cdac:	4660      	mov	r0, ip
 801cdae:	4662      	mov	r2, ip
 801cdb0:	e7a2      	b.n	801ccf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801cdb2:	4660      	mov	r0, ip
 801cdb4:	4662      	mov	r2, ip
 801cdb6:	e7f7      	b.n	801cda8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801cdb8:	b00f      	add	sp, #60	@ 0x3c
 801cdba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cdbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801cdbe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cdc2:	b085      	sub	sp, #20
 801cdc4:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801cdc8:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801cdcc:	9102      	str	r1, [sp, #8]
 801cdce:	2c00      	cmp	r4, #0
 801cdd0:	fb04 710c 	mla	r1, r4, ip, r7
 801cdd4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801cdd8:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801cddc:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801cde0:	eb02 0e01 	add.w	lr, r2, r1
 801cde4:	f2c0 8122 	blt.w	801d02c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801cde8:	45a0      	cmp	r8, r4
 801cdea:	f340 811f 	ble.w	801d02c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801cdee:	2f00      	cmp	r7, #0
 801cdf0:	f2c0 811a 	blt.w	801d028 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801cdf4:	45bc      	cmp	ip, r7
 801cdf6:	f340 8117 	ble.w	801d028 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801cdfa:	5c52      	ldrb	r2, [r2, r1]
 801cdfc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801ce00:	1c7a      	adds	r2, r7, #1
 801ce02:	f100 8116 	bmi.w	801d032 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ce06:	4594      	cmp	ip, r2
 801ce08:	f340 8113 	ble.w	801d032 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ce0c:	2e00      	cmp	r6, #0
 801ce0e:	f000 8112 	beq.w	801d036 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801ce12:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ce16:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801ce1a:	3401      	adds	r4, #1
 801ce1c:	f100 810f 	bmi.w	801d03e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ce20:	45a0      	cmp	r8, r4
 801ce22:	f340 810c 	ble.w	801d03e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ce26:	2800      	cmp	r0, #0
 801ce28:	f000 810c 	beq.w	801d044 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801ce2c:	2f00      	cmp	r7, #0
 801ce2e:	f2c0 8104 	blt.w	801d03a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ce32:	45bc      	cmp	ip, r7
 801ce34:	f340 8101 	ble.w	801d03a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ce38:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801ce3c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801ce40:	3701      	adds	r7, #1
 801ce42:	f100 8102 	bmi.w	801d04a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ce46:	45bc      	cmp	ip, r7
 801ce48:	f340 80ff 	ble.w	801d04a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ce4c:	2e00      	cmp	r6, #0
 801ce4e:	f000 80fe 	beq.w	801d04e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801ce52:	44f4      	add	ip, lr
 801ce54:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801ce58:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801ce5c:	b2b6      	uxth	r6, r6
 801ce5e:	b280      	uxth	r0, r0
 801ce60:	fb00 fe06 	mul.w	lr, r0, r6
 801ce64:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ce68:	0136      	lsls	r6, r6, #4
 801ce6a:	eba6 070e 	sub.w	r7, r6, lr
 801ce6e:	b280      	uxth	r0, r0
 801ce70:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801ce74:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ce78:	b2bf      	uxth	r7, r7
 801ce7a:	1a1b      	subs	r3, r3, r0
 801ce7c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ce80:	b29b      	uxth	r3, r3
 801ce82:	fb0a f607 	mul.w	r6, sl, r7
 801ce86:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ce8a:	fb0b 6603 	mla	r6, fp, r3, r6
 801ce8e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ce92:	fb00 6609 	mla	r6, r0, r9, r6
 801ce96:	fb0e 6608 	mla	r6, lr, r8, r6
 801ce9a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ce9e:	9600      	str	r6, [sp, #0]
 801cea0:	2e00      	cmp	r6, #0
 801cea2:	f000 80be 	beq.w	801d022 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801cea6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ceaa:	fb0b fc0c 	mul.w	ip, fp, ip
 801ceae:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801ceb2:	fb0b f505 	mul.w	r5, fp, r5
 801ceb6:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ceba:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801cebe:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801cec2:	44dc      	add	ip, fp
 801cec4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cec8:	9501      	str	r5, [sp, #4]
 801ceca:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801cece:	9503      	str	r5, [sp, #12]
 801ced0:	9d01      	ldr	r5, [sp, #4]
 801ced2:	9e02      	ldr	r6, [sp, #8]
 801ced4:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801ced8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cedc:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801cee0:	fb0a fc0c 	mul.w	ip, sl, ip
 801cee4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801cee8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ceec:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801cef0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801cef4:	4465      	add	r5, ip
 801cef6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801cefa:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801cefe:	fb09 fc0c 	mul.w	ip, r9, ip
 801cf02:	fb09 f904 	mul.w	r9, r9, r4
 801cf06:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801cf0a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801cf0e:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801cf12:	fb08 f404 	mul.w	r4, r8, r4
 801cf16:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801cf1a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801cf1e:	fb08 f802 	mul.w	r8, r8, r2
 801cf22:	fb0a fa01 	mul.w	sl, sl, r1
 801cf26:	0a22      	lsrs	r2, r4, #8
 801cf28:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801cf2c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801cf30:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801cf34:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801cf38:	4414      	add	r4, r2
 801cf3a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801cf3e:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801cf42:	0a2d      	lsrs	r5, r5, #8
 801cf44:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801cf48:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801cf4c:	9a03      	ldr	r2, [sp, #12]
 801cf4e:	8836      	ldrh	r6, [r6, #0]
 801cf50:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801cf54:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801cf58:	437d      	muls	r5, r7
 801cf5a:	4461      	add	r1, ip
 801cf5c:	0a24      	lsrs	r4, r4, #8
 801cf5e:	fb02 5503 	mla	r5, r2, r3, r5
 801cf62:	0a09      	lsrs	r1, r1, #8
 801cf64:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801cf68:	fb04 540e 	mla	r4, r4, lr, r5
 801cf6c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801cf70:	fb01 4100 	mla	r1, r1, r0, r4
 801cf74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cf78:	0a09      	lsrs	r1, r1, #8
 801cf7a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cf7e:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801cf82:	fb07 f70a 	mul.w	r7, r7, sl
 801cf86:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801cf8a:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801cf8e:	fb03 7101 	mla	r1, r3, r1, r7
 801cf92:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cf96:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801cf9a:	fb0e 1e08 	mla	lr, lr, r8, r1
 801cf9e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801cfa2:	fb00 e101 	mla	r1, r0, r1, lr
 801cfa6:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801cfaa:	9a00      	ldr	r2, [sp, #0]
 801cfac:	b287      	uxth	r7, r0
 801cfae:	437a      	muls	r2, r7
 801cfb0:	0a09      	lsrs	r1, r1, #8
 801cfb2:	1c53      	adds	r3, r2, #1
 801cfb4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801cfb8:	4321      	orrs	r1, r4
 801cfba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cfbe:	1235      	asrs	r5, r6, #8
 801cfc0:	0c0a      	lsrs	r2, r1, #16
 801cfc2:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801cfc6:	b2db      	uxtb	r3, r3
 801cfc8:	fb12 f207 	smulbb	r2, r2, r7
 801cfcc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cfd0:	fb05 2503 	mla	r5, r5, r3, r2
 801cfd4:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801cfd8:	10f2      	asrs	r2, r6, #3
 801cfda:	b2c8      	uxtb	r0, r1
 801cfdc:	00f6      	lsls	r6, r6, #3
 801cfde:	fb14 f407 	smulbb	r4, r4, r7
 801cfe2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801cfe6:	b2f6      	uxtb	r6, r6
 801cfe8:	fb10 f007 	smulbb	r0, r0, r7
 801cfec:	fb02 4203 	mla	r2, r2, r3, r4
 801cff0:	b2ad      	uxth	r5, r5
 801cff2:	fb06 0303 	mla	r3, r6, r3, r0
 801cff6:	b299      	uxth	r1, r3
 801cff8:	b294      	uxth	r4, r2
 801cffa:	1c6b      	adds	r3, r5, #1
 801cffc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d000:	1c62      	adds	r2, r4, #1
 801d002:	1c4b      	adds	r3, r1, #1
 801d004:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d008:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801d00c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d010:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d014:	0952      	lsrs	r2, r2, #5
 801d016:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d01a:	432b      	orrs	r3, r5
 801d01c:	4313      	orrs	r3, r2
 801d01e:	9a02      	ldr	r2, [sp, #8]
 801d020:	8013      	strh	r3, [r2, #0]
 801d022:	b005      	add	sp, #20
 801d024:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d028:	2500      	movs	r5, #0
 801d02a:	e6e9      	b.n	801ce00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801d02c:	2100      	movs	r1, #0
 801d02e:	460d      	mov	r5, r1
 801d030:	e6f3      	b.n	801ce1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801d032:	2100      	movs	r1, #0
 801d034:	e6f1      	b.n	801ce1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801d036:	4631      	mov	r1, r6
 801d038:	e6ef      	b.n	801ce1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801d03a:	2400      	movs	r4, #0
 801d03c:	e700      	b.n	801ce40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801d03e:	2200      	movs	r2, #0
 801d040:	4614      	mov	r4, r2
 801d042:	e70b      	b.n	801ce5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801d044:	4602      	mov	r2, r0
 801d046:	4604      	mov	r4, r0
 801d048:	e708      	b.n	801ce5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801d04a:	2200      	movs	r2, #0
 801d04c:	e706      	b.n	801ce5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801d04e:	4632      	mov	r2, r6
 801d050:	e704      	b.n	801ce5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801d052 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d052:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d056:	b09f      	sub	sp, #124	@ 0x7c
 801d058:	921b      	str	r2, [sp, #108]	@ 0x6c
 801d05a:	9309      	str	r3, [sp, #36]	@ 0x24
 801d05c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801d05e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801d062:	931c      	str	r3, [sp, #112]	@ 0x70
 801d064:	9119      	str	r1, [sp, #100]	@ 0x64
 801d066:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801d06a:	901d      	str	r0, [sp, #116]	@ 0x74
 801d06c:	6850      	ldr	r0, [r2, #4]
 801d06e:	6812      	ldr	r2, [r2, #0]
 801d070:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801d072:	fb00 1303 	mla	r3, r0, r3, r1
 801d076:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d07a:	930c      	str	r3, [sp, #48]	@ 0x30
 801d07c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801d07e:	681b      	ldr	r3, [r3, #0]
 801d080:	9312      	str	r3, [sp, #72]	@ 0x48
 801d082:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801d084:	685e      	ldr	r6, [r3, #4]
 801d086:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801d08a:	930d      	str	r3, [sp, #52]	@ 0x34
 801d08c:	3604      	adds	r6, #4
 801d08e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801d090:	2b00      	cmp	r3, #0
 801d092:	dc03      	bgt.n	801d09c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d094:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801d096:	2b00      	cmp	r3, #0
 801d098:	f340 8388 	ble.w	801d7ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801d09c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801d09e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d0a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d0a6:	1e48      	subs	r0, r1, #1
 801d0a8:	1e57      	subs	r7, r2, #1
 801d0aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d0ac:	2b00      	cmp	r3, #0
 801d0ae:	f340 8195 	ble.w	801d3dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801d0b2:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801d0b4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d0b8:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d0bc:	d406      	bmi.n	801d0cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d0be:	4584      	cmp	ip, r0
 801d0c0:	da04      	bge.n	801d0cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d0c2:	2b00      	cmp	r3, #0
 801d0c4:	db02      	blt.n	801d0cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d0c6:	42bb      	cmp	r3, r7
 801d0c8:	f2c0 8189 	blt.w	801d3de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801d0cc:	f11c 0c01 	adds.w	ip, ip, #1
 801d0d0:	f100 8177 	bmi.w	801d3c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d0d4:	4561      	cmp	r1, ip
 801d0d6:	f2c0 8174 	blt.w	801d3c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d0da:	3301      	adds	r3, #1
 801d0dc:	f100 8171 	bmi.w	801d3c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d0e0:	429a      	cmp	r2, r3
 801d0e2:	f2c0 816e 	blt.w	801d3c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d0e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d0e8:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801d0ea:	931a      	str	r3, [sp, #104]	@ 0x68
 801d0ec:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801d0ee:	2b00      	cmp	r3, #0
 801d0f0:	f340 8193 	ble.w	801d41a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801d0f4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801d0f6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d0fa:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801d0fc:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801d100:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801d102:	141b      	asrs	r3, r3, #16
 801d104:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801d108:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d10c:	f100 81d6 	bmi.w	801d4bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801d110:	f100 38ff 	add.w	r8, r0, #4294967295
 801d114:	4543      	cmp	r3, r8
 801d116:	f280 81d1 	bge.w	801d4bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801d11a:	f1bc 0f00 	cmp.w	ip, #0
 801d11e:	f2c0 81cd 	blt.w	801d4bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801d122:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d126:	45c4      	cmp	ip, r8
 801d128:	f280 81c8 	bge.w	801d4bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801d12c:	b200      	sxth	r0, r0
 801d12e:	fb0c 3300 	mla	r3, ip, r0, r3
 801d132:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d134:	eb04 0803 	add.w	r8, r4, r3
 801d138:	5ce3      	ldrb	r3, [r4, r3]
 801d13a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d13e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801d142:	2a00      	cmp	r2, #0
 801d144:	f000 81af 	beq.w	801d4a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801d148:	f898 c001 	ldrb.w	ip, [r8, #1]
 801d14c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801d150:	940e      	str	r4, [sp, #56]	@ 0x38
 801d152:	0e24      	lsrs	r4, r4, #24
 801d154:	9415      	str	r4, [sp, #84]	@ 0x54
 801d156:	b179      	cbz	r1, 801d178 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d158:	eb08 0c00 	add.w	ip, r8, r0
 801d15c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801d160:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801d164:	900a      	str	r0, [sp, #40]	@ 0x28
 801d166:	0e00      	lsrs	r0, r0, #24
 801d168:	9013      	str	r0, [sp, #76]	@ 0x4c
 801d16a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801d16e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801d172:	900f      	str	r0, [sp, #60]	@ 0x3c
 801d174:	0e00      	lsrs	r0, r0, #24
 801d176:	9016      	str	r0, [sp, #88]	@ 0x58
 801d178:	b292      	uxth	r2, r2
 801d17a:	b289      	uxth	r1, r1
 801d17c:	fb02 f901 	mul.w	r9, r2, r1
 801d180:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d184:	0112      	lsls	r2, r2, #4
 801d186:	eba2 0809 	sub.w	r8, r2, r9
 801d18a:	b289      	uxth	r1, r1
 801d18c:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801d190:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801d192:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d194:	fa1f f888 	uxth.w	r8, r8
 801d198:	1a52      	subs	r2, r2, r1
 801d19a:	b292      	uxth	r2, r2
 801d19c:	fb08 f000 	mul.w	r0, r8, r0
 801d1a0:	fb02 000e 	mla	r0, r2, lr, r0
 801d1a4:	fb01 0004 	mla	r0, r1, r4, r0
 801d1a8:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801d1aa:	fb09 0004 	mla	r0, r9, r4, r0
 801d1ae:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801d1b2:	2800      	cmp	r0, #0
 801d1b4:	f000 80fa 	beq.w	801d3ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d1b8:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801d1bc:	d01b      	beq.n	801d1f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801d1be:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801d1c2:	fb0e fa0a 	mul.w	sl, lr, sl
 801d1c6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d1ca:	fb0e fe03 	mul.w	lr, lr, r3
 801d1ce:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d1d2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d1d6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801d1da:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801d1de:	4453      	add	r3, sl
 801d1e0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d1e4:	0a1b      	lsrs	r3, r3, #8
 801d1e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d1ea:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d1ee:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801d1f2:	ea43 030c 	orr.w	r3, r3, ip
 801d1f6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801d1f8:	2cff      	cmp	r4, #255	@ 0xff
 801d1fa:	d021      	beq.n	801d240 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d1fc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d1fe:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801d202:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801d204:	fb04 fb0b 	mul.w	fp, r4, fp
 801d208:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d20a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d20e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801d210:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d214:	fb04 fa0a 	mul.w	sl, r4, sl
 801d218:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d21c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d220:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d224:	44de      	add	lr, fp
 801d226:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d22a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d22e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d232:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d236:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d23a:	ea4e 040a 	orr.w	r4, lr, sl
 801d23e:	940e      	str	r4, [sp, #56]	@ 0x38
 801d240:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d242:	2cff      	cmp	r4, #255	@ 0xff
 801d244:	d021      	beq.n	801d28a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801d246:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d248:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801d24c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d24e:	fb04 fb0b 	mul.w	fp, r4, fp
 801d252:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d254:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d258:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d25a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d25e:	fb04 fa0a 	mul.w	sl, r4, sl
 801d262:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d266:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d26a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d26e:	44de      	add	lr, fp
 801d270:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d274:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d278:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d27c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d280:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d284:	ea4e 040a 	orr.w	r4, lr, sl
 801d288:	940a      	str	r4, [sp, #40]	@ 0x28
 801d28a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801d28c:	2cff      	cmp	r4, #255	@ 0xff
 801d28e:	d021      	beq.n	801d2d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801d290:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d292:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801d296:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801d298:	fb04 fb0b 	mul.w	fp, r4, fp
 801d29c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d29e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d2a2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801d2a4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d2a8:	fb04 fa0a 	mul.w	sl, r4, sl
 801d2ac:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d2b0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d2b4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d2b8:	44de      	add	lr, fp
 801d2ba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d2be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d2c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d2c6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d2ca:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d2ce:	ea4e 040a 	orr.w	r4, lr, sl
 801d2d2:	940f      	str	r4, [sp, #60]	@ 0x3c
 801d2d4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d2d6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801d2da:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d2dc:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801d2e0:	fb08 fc0c 	mul.w	ip, r8, ip
 801d2e4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801d2e8:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801d2ec:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d2ee:	fb01 cc0e 	mla	ip, r1, lr, ip
 801d2f2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801d2f6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d2f8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d2fc:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801d300:	fb08 f80e 	mul.w	r8, r8, lr
 801d304:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d308:	fb02 8303 	mla	r3, r2, r3, r8
 801d30c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801d30e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d310:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801d314:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d316:	fb01 330a 	mla	r3, r1, sl, r3
 801d31a:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801d31e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801d320:	fb09 3901 	mla	r9, r9, r1, r3
 801d324:	4342      	muls	r2, r0
 801d326:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d32a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d32e:	883b      	ldrh	r3, [r7, #0]
 801d330:	1c50      	adds	r0, r2, #1
 801d332:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d336:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801d33a:	ea4c 0c09 	orr.w	ip, ip, r9
 801d33e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801d342:	1219      	asrs	r1, r3, #8
 801d344:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801d348:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801d34c:	b2c0      	uxtb	r0, r0
 801d34e:	fb12 f204 	smulbb	r2, r2, r4
 801d352:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801d356:	fb01 2100 	mla	r1, r1, r0, r2
 801d35a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801d35e:	10da      	asrs	r2, r3, #3
 801d360:	fa5f fc8c 	uxtb.w	ip, ip
 801d364:	00db      	lsls	r3, r3, #3
 801d366:	fb1c fc04 	smulbb	ip, ip, r4
 801d36a:	b2db      	uxtb	r3, r3
 801d36c:	b289      	uxth	r1, r1
 801d36e:	fb03 c300 	mla	r3, r3, r0, ip
 801d372:	fa1f fc83 	uxth.w	ip, r3
 801d376:	1c4b      	adds	r3, r1, #1
 801d378:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d37c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801d380:	fb1e fe04 	smulbb	lr, lr, r4
 801d384:	f10c 0301 	add.w	r3, ip, #1
 801d388:	fb02 e200 	mla	r2, r2, r0, lr
 801d38c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801d390:	b292      	uxth	r2, r2
 801d392:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801d396:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d39a:	430b      	orrs	r3, r1
 801d39c:	1c51      	adds	r1, r2, #1
 801d39e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d3a2:	0952      	lsrs	r2, r2, #5
 801d3a4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d3a8:	4313      	orrs	r3, r2
 801d3aa:	803b      	strh	r3, [r7, #0]
 801d3ac:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801d3ae:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801d3b0:	441a      	add	r2, r3
 801d3b2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d3b4:	9229      	str	r2, [sp, #164]	@ 0xa4
 801d3b6:	441d      	add	r5, r3
 801d3b8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801d3ba:	3b01      	subs	r3, #1
 801d3bc:	3702      	adds	r7, #2
 801d3be:	931a      	str	r3, [sp, #104]	@ 0x68
 801d3c0:	e694      	b.n	801d0ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d3c2:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801d3c4:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801d3c6:	441c      	add	r4, r3
 801d3c8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d3ca:	9429      	str	r4, [sp, #164]	@ 0xa4
 801d3cc:	441d      	add	r5, r3
 801d3ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d3d0:	3b01      	subs	r3, #1
 801d3d2:	9309      	str	r3, [sp, #36]	@ 0x24
 801d3d4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d3d6:	3302      	adds	r3, #2
 801d3d8:	930c      	str	r3, [sp, #48]	@ 0x30
 801d3da:	e666      	b.n	801d0aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d3dc:	d024      	beq.n	801d428 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801d3de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d3e0:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801d3e2:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801d3e4:	3b01      	subs	r3, #1
 801d3e6:	fb00 4003 	mla	r0, r0, r3, r4
 801d3ea:	1400      	asrs	r0, r0, #16
 801d3ec:	f53f ae7b 	bmi.w	801d0e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d3f0:	3901      	subs	r1, #1
 801d3f2:	4288      	cmp	r0, r1
 801d3f4:	f6bf ae77 	bge.w	801d0e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d3f8:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801d3fa:	fb01 5303 	mla	r3, r1, r3, r5
 801d3fe:	141b      	asrs	r3, r3, #16
 801d400:	f53f ae71 	bmi.w	801d0e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d404:	3a01      	subs	r2, #1
 801d406:	4293      	cmp	r3, r2
 801d408:	f6bf ae6d 	bge.w	801d0e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d40c:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801d410:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801d414:	f1bb 0f00 	cmp.w	fp, #0
 801d418:	dc70      	bgt.n	801d4fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801d41a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d41c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d420:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d422:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d426:	930c      	str	r3, [sp, #48]	@ 0x30
 801d428:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801d42a:	2b00      	cmp	r3, #0
 801d42c:	f340 81be 	ble.w	801d7ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801d430:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d434:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d438:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d43c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d43e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d442:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d446:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d44a:	eef0 6a62 	vmov.f32	s13, s5
 801d44e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d452:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d456:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d45a:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801d45e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d462:	eef0 6a43 	vmov.f32	s13, s6
 801d466:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d46a:	ee12 2a90 	vmov	r2, s5
 801d46e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d472:	fb92 f3f3 	sdiv	r3, r2, r3
 801d476:	ee13 2a10 	vmov	r2, s6
 801d47a:	932b      	str	r3, [sp, #172]	@ 0xac
 801d47c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d47e:	fb92 f3f3 	sdiv	r3, r2, r3
 801d482:	932c      	str	r3, [sp, #176]	@ 0xb0
 801d484:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801d486:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801d488:	3b01      	subs	r3, #1
 801d48a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d48e:	9319      	str	r3, [sp, #100]	@ 0x64
 801d490:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d492:	bf08      	it	eq
 801d494:	4613      	moveq	r3, r2
 801d496:	ee16 5a90 	vmov	r5, s13
 801d49a:	9309      	str	r3, [sp, #36]	@ 0x24
 801d49c:	eeb0 3a67 	vmov.f32	s6, s15
 801d4a0:	eef0 2a47 	vmov.f32	s5, s14
 801d4a4:	e5f3      	b.n	801d08e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d4a6:	2900      	cmp	r1, #0
 801d4a8:	f43f ae66 	beq.w	801d178 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d4ac:	f818 0000 	ldrb.w	r0, [r8, r0]
 801d4b0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801d4b4:	900a      	str	r0, [sp, #40]	@ 0x28
 801d4b6:	0e00      	lsrs	r0, r0, #24
 801d4b8:	9013      	str	r0, [sp, #76]	@ 0x4c
 801d4ba:	e65d      	b.n	801d178 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d4bc:	f113 0801 	adds.w	r8, r3, #1
 801d4c0:	f53f af74 	bmi.w	801d3ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d4c4:	4540      	cmp	r0, r8
 801d4c6:	f6ff af71 	blt.w	801d3ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d4ca:	f11c 0801 	adds.w	r8, ip, #1
 801d4ce:	f53f af6d 	bmi.w	801d3ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d4d2:	45c6      	cmp	lr, r8
 801d4d4:	f6ff af6a 	blt.w	801d3ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d4d8:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801d4da:	9302      	str	r3, [sp, #8]
 801d4dc:	b200      	sxth	r0, r0
 801d4de:	fa0f f38e 	sxth.w	r3, lr
 801d4e2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801d4e6:	e9cd c203 	strd	ip, r2, [sp, #12]
 801d4ea:	9301      	str	r3, [sp, #4]
 801d4ec:	9000      	str	r0, [sp, #0]
 801d4ee:	4633      	mov	r3, r6
 801d4f0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801d4f2:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801d4f4:	4639      	mov	r1, r7
 801d4f6:	f7ff fc62 	bl	801cdbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801d4fa:	e757      	b.n	801d3ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d4fc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801d4fe:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801d500:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d504:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801d506:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d50a:	1427      	asrs	r7, r4, #16
 801d50c:	142b      	asrs	r3, r5, #16
 801d50e:	fb01 7303 	mla	r3, r1, r3, r7
 801d512:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d514:	18e7      	adds	r7, r4, r3
 801d516:	5ce3      	ldrb	r3, [r4, r3]
 801d518:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d51c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d520:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801d524:	2a00      	cmp	r2, #0
 801d526:	f000 8137 	beq.w	801d798 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801d52a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801d52e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801d532:	9410      	str	r4, [sp, #64]	@ 0x40
 801d534:	0e24      	lsrs	r4, r4, #24
 801d536:	9417      	str	r4, [sp, #92]	@ 0x5c
 801d538:	b170      	cbz	r0, 801d558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801d53a:	eb07 0e01 	add.w	lr, r7, r1
 801d53e:	5c79      	ldrb	r1, [r7, r1]
 801d540:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d544:	910b      	str	r1, [sp, #44]	@ 0x2c
 801d546:	0e09      	lsrs	r1, r1, #24
 801d548:	9114      	str	r1, [sp, #80]	@ 0x50
 801d54a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801d54e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d552:	9111      	str	r1, [sp, #68]	@ 0x44
 801d554:	0e09      	lsrs	r1, r1, #24
 801d556:	9118      	str	r1, [sp, #96]	@ 0x60
 801d558:	b292      	uxth	r2, r2
 801d55a:	b280      	uxth	r0, r0
 801d55c:	fb02 f800 	mul.w	r8, r2, r0
 801d560:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801d564:	0112      	lsls	r2, r2, #4
 801d566:	eba2 0e08 	sub.w	lr, r2, r8
 801d56a:	b280      	uxth	r0, r0
 801d56c:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801d570:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801d572:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801d574:	fa1f fe8e 	uxth.w	lr, lr
 801d578:	1a12      	subs	r2, r2, r0
 801d57a:	b292      	uxth	r2, r2
 801d57c:	fb0e f101 	mul.w	r1, lr, r1
 801d580:	fb02 110c 	mla	r1, r2, ip, r1
 801d584:	fb00 1104 	mla	r1, r0, r4, r1
 801d588:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801d58a:	fb08 1104 	mla	r1, r8, r4, r1
 801d58e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d592:	2900      	cmp	r1, #0
 801d594:	f000 80f5 	beq.w	801d782 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801d598:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801d59c:	d019      	beq.n	801d5d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801d59e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801d5a2:	fb0c fa0a 	mul.w	sl, ip, sl
 801d5a6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d5aa:	fb0c fc03 	mul.w	ip, ip, r3
 801d5ae:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d5b2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d5b6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801d5ba:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801d5be:	4453      	add	r3, sl
 801d5c0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d5c4:	0a1b      	lsrs	r3, r3, #8
 801d5c6:	0a3f      	lsrs	r7, r7, #8
 801d5c8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d5cc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801d5d0:	433b      	orrs	r3, r7
 801d5d2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801d5d4:	2cff      	cmp	r4, #255	@ 0xff
 801d5d6:	d020      	beq.n	801d61a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801d5d8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d5da:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d5de:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801d5e0:	4367      	muls	r7, r4
 801d5e2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d5e4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d5e8:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801d5ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d5ee:	fb04 fa0a 	mul.w	sl, r4, sl
 801d5f2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d5f6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d5fa:	44bc      	add	ip, r7
 801d5fc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d600:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d604:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d608:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d60c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d610:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d614:	ea4c 040a 	orr.w	r4, ip, sl
 801d618:	9410      	str	r4, [sp, #64]	@ 0x40
 801d61a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801d61c:	2cff      	cmp	r4, #255	@ 0xff
 801d61e:	d020      	beq.n	801d662 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801d620:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d622:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d626:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801d628:	4367      	muls	r7, r4
 801d62a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d62c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d630:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801d632:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d636:	fb04 fa0a 	mul.w	sl, r4, sl
 801d63a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d63e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d642:	44bc      	add	ip, r7
 801d644:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d648:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d64c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d650:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d654:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d658:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d65c:	ea4c 040a 	orr.w	r4, ip, sl
 801d660:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d662:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801d664:	2cff      	cmp	r4, #255	@ 0xff
 801d666:	d020      	beq.n	801d6aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801d668:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801d66a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d66e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801d670:	4367      	muls	r7, r4
 801d672:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801d674:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d678:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801d67a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d67e:	fb04 fa0a 	mul.w	sl, r4, sl
 801d682:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d686:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d68a:	44bc      	add	ip, r7
 801d68c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d690:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d694:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d698:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d69c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d6a0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d6a4:	ea4c 040a 	orr.w	r4, ip, sl
 801d6a8:	9411      	str	r4, [sp, #68]	@ 0x44
 801d6aa:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d6ac:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d6b0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d6b2:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801d6b6:	fb0e f707 	mul.w	r7, lr, r7
 801d6ba:	fb02 770c 	mla	r7, r2, ip, r7
 801d6be:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801d6c2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801d6c4:	fb00 770c 	mla	r7, r0, ip, r7
 801d6c8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801d6cc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d6ce:	fb08 770c 	mla	r7, r8, ip, r7
 801d6d2:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801d6d6:	fb0e fe0c 	mul.w	lr, lr, ip
 801d6da:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d6de:	fb02 e303 	mla	r3, r2, r3, lr
 801d6e2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801d6e4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d6e6:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801d6ea:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801d6ec:	fb00 330a 	mla	r3, r0, sl, r3
 801d6f0:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801d6f4:	fb08 3c0c 	mla	ip, r8, ip, r3
 801d6f8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d6fa:	f8b9 0000 	ldrh.w	r0, [r9]
 801d6fe:	434b      	muls	r3, r1
 801d700:	0a3f      	lsrs	r7, r7, #8
 801d702:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d706:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801d70a:	1c59      	adds	r1, r3, #1
 801d70c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801d710:	ea47 070c 	orr.w	r7, r7, ip
 801d714:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d718:	1202      	asrs	r2, r0, #8
 801d71a:	0c3b      	lsrs	r3, r7, #16
 801d71c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801d720:	b2c9      	uxtb	r1, r1
 801d722:	fb13 f304 	smulbb	r3, r3, r4
 801d726:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801d72a:	fb02 3201 	mla	r2, r2, r1, r3
 801d72e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801d732:	10c3      	asrs	r3, r0, #3
 801d734:	b2ff      	uxtb	r7, r7
 801d736:	00c0      	lsls	r0, r0, #3
 801d738:	b292      	uxth	r2, r2
 801d73a:	fb1c fc04 	smulbb	ip, ip, r4
 801d73e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801d742:	b2c0      	uxtb	r0, r0
 801d744:	fb17 f704 	smulbb	r7, r7, r4
 801d748:	fb03 c301 	mla	r3, r3, r1, ip
 801d74c:	fb00 7001 	mla	r0, r0, r1, r7
 801d750:	f102 0c01 	add.w	ip, r2, #1
 801d754:	b280      	uxth	r0, r0
 801d756:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801d75a:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801d75e:	1c42      	adds	r2, r0, #1
 801d760:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801d764:	b29b      	uxth	r3, r3
 801d766:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d76a:	ea42 020c 	orr.w	r2, r2, ip
 801d76e:	f103 0c01 	add.w	ip, r3, #1
 801d772:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801d776:	095b      	lsrs	r3, r3, #5
 801d778:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d77c:	431a      	orrs	r2, r3
 801d77e:	f8a9 2000 	strh.w	r2, [r9]
 801d782:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801d784:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801d786:	441a      	add	r2, r3
 801d788:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d78a:	9229      	str	r2, [sp, #164]	@ 0xa4
 801d78c:	f109 0902 	add.w	r9, r9, #2
 801d790:	441d      	add	r5, r3
 801d792:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d796:	e63d      	b.n	801d414 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801d798:	2800      	cmp	r0, #0
 801d79a:	f43f aedd 	beq.w	801d558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801d79e:	5c79      	ldrb	r1, [r7, r1]
 801d7a0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d7a4:	910b      	str	r1, [sp, #44]	@ 0x2c
 801d7a6:	0e09      	lsrs	r1, r1, #24
 801d7a8:	9114      	str	r1, [sp, #80]	@ 0x50
 801d7aa:	e6d5      	b.n	801d558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801d7ac:	b01f      	add	sp, #124	@ 0x7c
 801d7ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d7b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801d7b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d7b6:	b089      	sub	sp, #36	@ 0x24
 801d7b8:	9101      	str	r1, [sp, #4]
 801d7ba:	9801      	ldr	r0, [sp, #4]
 801d7bc:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801d7c0:	8800      	ldrh	r0, [r0, #0]
 801d7c2:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801d7c6:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801d7ca:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801d7ce:	1206      	asrs	r6, r0, #8
 801d7d0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801d7d4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801d7d8:	9602      	str	r6, [sp, #8]
 801d7da:	10c6      	asrs	r6, r0, #3
 801d7dc:	00c0      	lsls	r0, r0, #3
 801d7de:	b2c0      	uxtb	r0, r0
 801d7e0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801d7e4:	9004      	str	r0, [sp, #16]
 801d7e6:	2f00      	cmp	r7, #0
 801d7e8:	fb07 100c 	mla	r0, r7, ip, r1
 801d7ec:	9603      	str	r6, [sp, #12]
 801d7ee:	eb02 0e00 	add.w	lr, r2, r0
 801d7f2:	f2c0 810a 	blt.w	801da0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801d7f6:	45b8      	cmp	r8, r7
 801d7f8:	f340 8107 	ble.w	801da0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801d7fc:	2900      	cmp	r1, #0
 801d7fe:	f2c0 8102 	blt.w	801da06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801d802:	458c      	cmp	ip, r1
 801d804:	f340 80ff 	ble.w	801da06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801d808:	5c12      	ldrb	r2, [r2, r0]
 801d80a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801d80e:	1c4a      	adds	r2, r1, #1
 801d810:	f100 80fe 	bmi.w	801da10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801d814:	4594      	cmp	ip, r2
 801d816:	f340 80fb 	ble.w	801da10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801d81a:	2d00      	cmp	r5, #0
 801d81c:	f000 80fa 	beq.w	801da14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801d820:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801d824:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801d828:	3701      	adds	r7, #1
 801d82a:	f100 80f7 	bmi.w	801da1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801d82e:	45b8      	cmp	r8, r7
 801d830:	f340 80f4 	ble.w	801da1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801d834:	2c00      	cmp	r4, #0
 801d836:	f000 80f4 	beq.w	801da22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801d83a:	2900      	cmp	r1, #0
 801d83c:	eb0e 020c 	add.w	r2, lr, ip
 801d840:	f2c0 80ea 	blt.w	801da18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801d844:	458c      	cmp	ip, r1
 801d846:	f340 80e7 	ble.w	801da18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801d84a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801d84e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801d852:	3101      	adds	r1, #1
 801d854:	f100 80e8 	bmi.w	801da28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801d858:	458c      	cmp	ip, r1
 801d85a:	f340 80e5 	ble.w	801da28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801d85e:	2d00      	cmp	r5, #0
 801d860:	f000 80e4 	beq.w	801da2c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801d864:	7852      	ldrb	r2, [r2, #1]
 801d866:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801d86a:	0e0b      	lsrs	r3, r1, #24
 801d86c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801d870:	9300      	str	r3, [sp, #0]
 801d872:	b2a4      	uxth	r4, r4
 801d874:	b2ab      	uxth	r3, r5
 801d876:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801d87a:	fb03 f904 	mul.w	r9, r3, r4
 801d87e:	fb0a f505 	mul.w	r5, sl, r5
 801d882:	011b      	lsls	r3, r3, #4
 801d884:	eba3 0e09 	sub.w	lr, r3, r9
 801d888:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801d88c:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801d890:	0a28      	lsrs	r0, r5, #8
 801d892:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801d896:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801d89a:	4405      	add	r5, r0
 801d89c:	0a2d      	lsrs	r5, r5, #8
 801d89e:	fb0a f303 	mul.w	r3, sl, r3
 801d8a2:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801d8a6:	9005      	str	r0, [sp, #20]
 801d8a8:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801d8ac:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d8b0:	0a1b      	lsrs	r3, r3, #8
 801d8b2:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801d8b6:	9306      	str	r3, [sp, #24]
 801d8b8:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801d8bc:	fb0b f303 	mul.w	r3, fp, r3
 801d8c0:	0a1d      	lsrs	r5, r3, #8
 801d8c2:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801d8c6:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801d8ca:	fb0b f606 	mul.w	r6, fp, r6
 801d8ce:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801d8d2:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801d8d6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801d8da:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801d8de:	fb08 f707 	mul.w	r7, r8, r7
 801d8e2:	441d      	add	r5, r3
 801d8e4:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801d8e8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801d8ec:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801d8f0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801d8f4:	fb08 fc0c 	mul.w	ip, r8, ip
 801d8f8:	0a1b      	lsrs	r3, r3, #8
 801d8fa:	9307      	str	r3, [sp, #28]
 801d8fc:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801d900:	0e0b      	lsrs	r3, r1, #24
 801d902:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801d906:	435f      	muls	r7, r3
 801d908:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801d90c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801d910:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801d914:	4460      	add	r0, ip
 801d916:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d91a:	b2a4      	uxth	r4, r4
 801d91c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d920:	0a2d      	lsrs	r5, r5, #8
 801d922:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801d926:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d92a:	fa1f fe8e 	uxth.w	lr, lr
 801d92e:	4359      	muls	r1, r3
 801d930:	1b12      	subs	r2, r2, r4
 801d932:	9b05      	ldr	r3, [sp, #20]
 801d934:	44bc      	add	ip, r7
 801d936:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801d93a:	b292      	uxth	r2, r2
 801d93c:	fb05 f50e 	mul.w	r5, r5, lr
 801d940:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d944:	fb03 5502 	mla	r5, r3, r2, r5
 801d948:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d94c:	9b06      	ldr	r3, [sp, #24]
 801d94e:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801d952:	0a36      	lsrs	r6, r6, #8
 801d954:	0a00      	lsrs	r0, r0, #8
 801d956:	fb0c 5509 	mla	r5, ip, r9, r5
 801d95a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801d95e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801d962:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801d966:	fb00 5504 	mla	r5, r0, r4, r5
 801d96a:	fb0e f606 	mul.w	r6, lr, r6
 801d96e:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801d972:	0a09      	lsrs	r1, r1, #8
 801d974:	9b07      	ldr	r3, [sp, #28]
 801d976:	fb02 6000 	mla	r0, r2, r0, r6
 801d97a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801d97e:	fb09 0001 	mla	r0, r9, r1, r0
 801d982:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d986:	fb0e fe0b 	mul.w	lr, lr, fp
 801d98a:	fb04 0003 	mla	r0, r4, r3, r0
 801d98e:	fb02 e20a 	mla	r2, r2, sl, lr
 801d992:	9b00      	ldr	r3, [sp, #0]
 801d994:	fb04 2408 	mla	r4, r4, r8, r2
 801d998:	fb09 4903 	mla	r9, r9, r3, r4
 801d99c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801d9a0:	9b02      	ldr	r3, [sp, #8]
 801d9a2:	9a04      	ldr	r2, [sp, #16]
 801d9a4:	fa5f f989 	uxtb.w	r9, r9
 801d9a8:	fb03 f109 	mul.w	r1, r3, r9
 801d9ac:	9b03      	ldr	r3, [sp, #12]
 801d9ae:	0a2d      	lsrs	r5, r5, #8
 801d9b0:	0a00      	lsrs	r0, r0, #8
 801d9b2:	fb03 f309 	mul.w	r3, r3, r9
 801d9b6:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801d9ba:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801d9be:	4305      	orrs	r5, r0
 801d9c0:	fb02 f909 	mul.w	r9, r2, r9
 801d9c4:	1c58      	adds	r0, r3, #1
 801d9c6:	1c4a      	adds	r2, r1, #1
 801d9c8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d9cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d9d0:	0a2b      	lsrs	r3, r5, #8
 801d9d2:	0c2a      	lsrs	r2, r5, #16
 801d9d4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d9d8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801d9dc:	00db      	lsls	r3, r3, #3
 801d9de:	0212      	lsls	r2, r2, #8
 801d9e0:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801d9e4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d9e8:	4313      	orrs	r3, r2
 801d9ea:	f109 0201 	add.w	r2, r9, #1
 801d9ee:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801d9f2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801d9f6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d9fa:	431d      	orrs	r5, r3
 801d9fc:	9b01      	ldr	r3, [sp, #4]
 801d9fe:	801d      	strh	r5, [r3, #0]
 801da00:	b009      	add	sp, #36	@ 0x24
 801da02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da06:	2000      	movs	r0, #0
 801da08:	e701      	b.n	801d80e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801da0a:	2600      	movs	r6, #0
 801da0c:	4630      	mov	r0, r6
 801da0e:	e70b      	b.n	801d828 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801da10:	2600      	movs	r6, #0
 801da12:	e709      	b.n	801d828 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801da14:	462e      	mov	r6, r5
 801da16:	e707      	b.n	801d828 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801da18:	2700      	movs	r7, #0
 801da1a:	e71a      	b.n	801d852 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801da1c:	2100      	movs	r1, #0
 801da1e:	460f      	mov	r7, r1
 801da20:	e723      	b.n	801d86a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801da22:	4621      	mov	r1, r4
 801da24:	4627      	mov	r7, r4
 801da26:	e720      	b.n	801d86a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801da28:	2100      	movs	r1, #0
 801da2a:	e71e      	b.n	801d86a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801da2c:	4629      	mov	r1, r5
 801da2e:	e71c      	b.n	801d86a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801da30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801da30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da34:	b09b      	sub	sp, #108	@ 0x6c
 801da36:	9218      	str	r2, [sp, #96]	@ 0x60
 801da38:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801da3a:	9116      	str	r1, [sp, #88]	@ 0x58
 801da3c:	9307      	str	r3, [sp, #28]
 801da3e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801da42:	9019      	str	r0, [sp, #100]	@ 0x64
 801da44:	6850      	ldr	r0, [r2, #4]
 801da46:	6812      	ldr	r2, [r2, #0]
 801da48:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801da4a:	fb00 1303 	mla	r3, r0, r3, r1
 801da4e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801da52:	930a      	str	r3, [sp, #40]	@ 0x28
 801da54:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801da56:	681b      	ldr	r3, [r3, #0]
 801da58:	930f      	str	r3, [sp, #60]	@ 0x3c
 801da5a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801da5c:	685e      	ldr	r6, [r3, #4]
 801da5e:	3604      	adds	r6, #4
 801da60:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801da62:	2b00      	cmp	r3, #0
 801da64:	dc03      	bgt.n	801da6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801da66:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801da68:	2b00      	cmp	r3, #0
 801da6a:	f340 8373 	ble.w	801e154 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801da6e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801da70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801da74:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801da78:	1e48      	subs	r0, r1, #1
 801da7a:	1e57      	subs	r7, r2, #1
 801da7c:	9b07      	ldr	r3, [sp, #28]
 801da7e:	2b00      	cmp	r3, #0
 801da80:	f340 8190 	ble.w	801dda4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801da84:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801da86:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801da8a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801da8e:	d406      	bmi.n	801da9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801da90:	4584      	cmp	ip, r0
 801da92:	da04      	bge.n	801da9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801da94:	2b00      	cmp	r3, #0
 801da96:	db02      	blt.n	801da9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801da98:	42bb      	cmp	r3, r7
 801da9a:	f2c0 8184 	blt.w	801dda6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801da9e:	f11c 0c01 	adds.w	ip, ip, #1
 801daa2:	f100 8172 	bmi.w	801dd8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801daa6:	4561      	cmp	r1, ip
 801daa8:	f2c0 816f 	blt.w	801dd8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801daac:	3301      	adds	r3, #1
 801daae:	f100 816c 	bmi.w	801dd8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801dab2:	429a      	cmp	r2, r3
 801dab4:	f2c0 8169 	blt.w	801dd8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801dab8:	9b07      	ldr	r3, [sp, #28]
 801daba:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801dabc:	9317      	str	r3, [sp, #92]	@ 0x5c
 801dabe:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801dac0:	2b00      	cmp	r3, #0
 801dac2:	f340 818e 	ble.w	801dde2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801dac6:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801dac8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801dacc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801dace:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801dad2:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801dad4:	141b      	asrs	r3, r3, #16
 801dad6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801dada:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801dade:	f100 81d1 	bmi.w	801de84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801dae2:	f101 38ff 	add.w	r8, r1, #4294967295
 801dae6:	4543      	cmp	r3, r8
 801dae8:	f280 81cc 	bge.w	801de84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801daec:	f1bc 0f00 	cmp.w	ip, #0
 801daf0:	f2c0 81c8 	blt.w	801de84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801daf4:	f10e 38ff 	add.w	r8, lr, #4294967295
 801daf8:	45c4      	cmp	ip, r8
 801dafa:	f280 81c3 	bge.w	801de84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801dafe:	b209      	sxth	r1, r1
 801db00:	fb0c 3301 	mla	r3, ip, r1, r3
 801db04:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801db06:	eb04 0803 	add.w	r8, r4, r3
 801db0a:	5ce3      	ldrb	r3, [r4, r3]
 801db0c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801db10:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801db14:	2a00      	cmp	r2, #0
 801db16:	f000 81aa 	beq.w	801de6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801db1a:	f898 c001 	ldrb.w	ip, [r8, #1]
 801db1e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801db22:	940b      	str	r4, [sp, #44]	@ 0x2c
 801db24:	0e24      	lsrs	r4, r4, #24
 801db26:	9412      	str	r4, [sp, #72]	@ 0x48
 801db28:	b178      	cbz	r0, 801db4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801db2a:	eb08 0c01 	add.w	ip, r8, r1
 801db2e:	f818 1001 	ldrb.w	r1, [r8, r1]
 801db32:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801db36:	9108      	str	r1, [sp, #32]
 801db38:	0e09      	lsrs	r1, r1, #24
 801db3a:	9110      	str	r1, [sp, #64]	@ 0x40
 801db3c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801db40:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801db44:	910c      	str	r1, [sp, #48]	@ 0x30
 801db46:	0e09      	lsrs	r1, r1, #24
 801db48:	9113      	str	r1, [sp, #76]	@ 0x4c
 801db4a:	b292      	uxth	r2, r2
 801db4c:	b280      	uxth	r0, r0
 801db4e:	fb02 f900 	mul.w	r9, r2, r0
 801db52:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801db56:	0112      	lsls	r2, r2, #4
 801db58:	eba2 0809 	sub.w	r8, r2, r9
 801db5c:	b280      	uxth	r0, r0
 801db5e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801db62:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801db64:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801db66:	fa1f f888 	uxth.w	r8, r8
 801db6a:	1a12      	subs	r2, r2, r0
 801db6c:	b292      	uxth	r2, r2
 801db6e:	fb08 f101 	mul.w	r1, r8, r1
 801db72:	fb02 110e 	mla	r1, r2, lr, r1
 801db76:	fb00 1104 	mla	r1, r0, r4, r1
 801db7a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801db7c:	fb09 1104 	mla	r1, r9, r4, r1
 801db80:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801db84:	2900      	cmp	r1, #0
 801db86:	f000 80f5 	beq.w	801dd74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801db8a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801db8e:	d01b      	beq.n	801dbc8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801db90:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801db94:	fb0e fa0a 	mul.w	sl, lr, sl
 801db98:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801db9c:	fb0e fe03 	mul.w	lr, lr, r3
 801dba0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801dba4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801dba8:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801dbac:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801dbb0:	4453      	add	r3, sl
 801dbb2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801dbb6:	0a1b      	lsrs	r3, r3, #8
 801dbb8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dbbc:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801dbc0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801dbc4:	ea43 030c 	orr.w	r3, r3, ip
 801dbc8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801dbca:	2cff      	cmp	r4, #255	@ 0xff
 801dbcc:	d021      	beq.n	801dc12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801dbce:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801dbd0:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801dbd4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801dbd6:	fb04 fb0b 	mul.w	fp, r4, fp
 801dbda:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801dbdc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801dbe0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801dbe2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801dbe6:	fb04 fa0a 	mul.w	sl, r4, sl
 801dbea:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801dbee:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801dbf2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801dbf6:	44de      	add	lr, fp
 801dbf8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dbfc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dc00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dc04:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801dc08:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801dc0c:	ea4e 040a 	orr.w	r4, lr, sl
 801dc10:	940b      	str	r4, [sp, #44]	@ 0x2c
 801dc12:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801dc14:	2cff      	cmp	r4, #255	@ 0xff
 801dc16:	d021      	beq.n	801dc5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801dc18:	9c08      	ldr	r4, [sp, #32]
 801dc1a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801dc1e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801dc20:	fb04 fb0b 	mul.w	fp, r4, fp
 801dc24:	9c08      	ldr	r4, [sp, #32]
 801dc26:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801dc2a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801dc2c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801dc30:	fb04 fa0a 	mul.w	sl, r4, sl
 801dc34:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801dc38:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801dc3c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801dc40:	44de      	add	lr, fp
 801dc42:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dc46:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dc4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dc4e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801dc52:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801dc56:	ea4e 040a 	orr.w	r4, lr, sl
 801dc5a:	9408      	str	r4, [sp, #32]
 801dc5c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801dc5e:	2cff      	cmp	r4, #255	@ 0xff
 801dc60:	d021      	beq.n	801dca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801dc62:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801dc64:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801dc68:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801dc6a:	fb04 fb0b 	mul.w	fp, r4, fp
 801dc6e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801dc70:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801dc74:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801dc76:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801dc7a:	fb04 fa0a 	mul.w	sl, r4, sl
 801dc7e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801dc82:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801dc86:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801dc8a:	44de      	add	lr, fp
 801dc8c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dc90:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dc94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dc98:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801dc9c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801dca0:	ea4e 040a 	orr.w	r4, lr, sl
 801dca4:	940c      	str	r4, [sp, #48]	@ 0x30
 801dca6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801dca8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801dcac:	9c08      	ldr	r4, [sp, #32]
 801dcae:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801dcb2:	fb08 fc0c 	mul.w	ip, r8, ip
 801dcb6:	fb02 cc0e 	mla	ip, r2, lr, ip
 801dcba:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801dcbe:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801dcc0:	fb00 cc0e 	mla	ip, r0, lr, ip
 801dcc4:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801dcc8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801dcca:	fb09 cc0e 	mla	ip, r9, lr, ip
 801dcce:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801dcd2:	fb08 f80e 	mul.w	r8, r8, lr
 801dcd6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801dcda:	fb02 8303 	mla	r3, r2, r3, r8
 801dcde:	9a08      	ldr	r2, [sp, #32]
 801dce0:	f8b7 8000 	ldrh.w	r8, [r7]
 801dce4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801dce8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801dcea:	fb00 330a 	mla	r3, r0, sl, r3
 801dcee:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801dcf2:	fb09 3900 	mla	r9, r9, r0, r3
 801dcf6:	43c9      	mvns	r1, r1
 801dcf8:	ea4f 2228 	mov.w	r2, r8, asr #8
 801dcfc:	fa5f fe81 	uxtb.w	lr, r1
 801dd00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd04:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dd08:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801dd0c:	fb02 f20e 	mul.w	r2, r2, lr
 801dd10:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801dd14:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801dd18:	ea4c 0c09 	orr.w	ip, ip, r9
 801dd1c:	1c53      	adds	r3, r2, #1
 801dd1e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801dd22:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801dd26:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801dd2a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dd2e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801dd32:	4a63      	ldr	r2, [pc, #396]	@ (801dec0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801dd34:	fb00 f00e 	mul.w	r0, r0, lr
 801dd38:	b2db      	uxtb	r3, r3
 801dd3a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801dd3e:	1c43      	adds	r3, r0, #1
 801dd40:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801dd44:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801dd48:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801dd4c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801dd50:	b2c9      	uxtb	r1, r1
 801dd52:	00db      	lsls	r3, r3, #3
 801dd54:	fb01 f10e 	mul.w	r1, r1, lr
 801dd58:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801dd5c:	4313      	orrs	r3, r2
 801dd5e:	1c4a      	adds	r2, r1, #1
 801dd60:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801dd64:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801dd68:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801dd6c:	ea4c 0c03 	orr.w	ip, ip, r3
 801dd70:	f8a7 c000 	strh.w	ip, [r7]
 801dd74:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801dd76:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801dd78:	441a      	add	r2, r3
 801dd7a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801dd7c:	9225      	str	r2, [sp, #148]	@ 0x94
 801dd7e:	441d      	add	r5, r3
 801dd80:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801dd82:	3b01      	subs	r3, #1
 801dd84:	3702      	adds	r7, #2
 801dd86:	9317      	str	r3, [sp, #92]	@ 0x5c
 801dd88:	e699      	b.n	801dabe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801dd8a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801dd8c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801dd8e:	441c      	add	r4, r3
 801dd90:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801dd92:	9425      	str	r4, [sp, #148]	@ 0x94
 801dd94:	441d      	add	r5, r3
 801dd96:	9b07      	ldr	r3, [sp, #28]
 801dd98:	3b01      	subs	r3, #1
 801dd9a:	9307      	str	r3, [sp, #28]
 801dd9c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dd9e:	3302      	adds	r3, #2
 801dda0:	930a      	str	r3, [sp, #40]	@ 0x28
 801dda2:	e66b      	b.n	801da7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801dda4:	d024      	beq.n	801ddf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801dda6:	9b07      	ldr	r3, [sp, #28]
 801dda8:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801ddaa:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ddac:	3b01      	subs	r3, #1
 801ddae:	fb00 4003 	mla	r0, r0, r3, r4
 801ddb2:	1400      	asrs	r0, r0, #16
 801ddb4:	f53f ae80 	bmi.w	801dab8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ddb8:	3901      	subs	r1, #1
 801ddba:	4288      	cmp	r0, r1
 801ddbc:	f6bf ae7c 	bge.w	801dab8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ddc0:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801ddc2:	fb01 5303 	mla	r3, r1, r3, r5
 801ddc6:	141b      	asrs	r3, r3, #16
 801ddc8:	f53f ae76 	bmi.w	801dab8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ddcc:	3a01      	subs	r2, #1
 801ddce:	4293      	cmp	r3, r2
 801ddd0:	f6bf ae72 	bge.w	801dab8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ddd4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ddd8:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801dddc:	f1bb 0f00 	cmp.w	fp, #0
 801dde0:	dc70      	bgt.n	801dec4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801dde2:	9b07      	ldr	r3, [sp, #28]
 801dde4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801dde8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ddea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ddee:	930a      	str	r3, [sp, #40]	@ 0x28
 801ddf0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ddf2:	2b00      	cmp	r3, #0
 801ddf4:	f340 81ae 	ble.w	801e154 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801ddf8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ddfc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801de00:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801de04:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801de06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801de0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801de0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801de12:	eef0 6a62 	vmov.f32	s13, s5
 801de16:	ee61 7a27 	vmul.f32	s15, s2, s15
 801de1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801de1e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801de22:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801de26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801de2a:	eef0 6a43 	vmov.f32	s13, s6
 801de2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801de32:	ee12 2a90 	vmov	r2, s5
 801de36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801de3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801de3e:	ee13 2a10 	vmov	r2, s6
 801de42:	9327      	str	r3, [sp, #156]	@ 0x9c
 801de44:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801de46:	fb92 f3f3 	sdiv	r3, r2, r3
 801de4a:	9328      	str	r3, [sp, #160]	@ 0xa0
 801de4c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801de4e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801de50:	3b01      	subs	r3, #1
 801de52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801de56:	9316      	str	r3, [sp, #88]	@ 0x58
 801de58:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801de5a:	bf08      	it	eq
 801de5c:	4613      	moveq	r3, r2
 801de5e:	ee16 5a90 	vmov	r5, s13
 801de62:	9307      	str	r3, [sp, #28]
 801de64:	eeb0 3a67 	vmov.f32	s6, s15
 801de68:	eef0 2a47 	vmov.f32	s5, s14
 801de6c:	e5f8      	b.n	801da60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801de6e:	2800      	cmp	r0, #0
 801de70:	f43f ae6b 	beq.w	801db4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801de74:	f818 1001 	ldrb.w	r1, [r8, r1]
 801de78:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801de7c:	9108      	str	r1, [sp, #32]
 801de7e:	0e09      	lsrs	r1, r1, #24
 801de80:	9110      	str	r1, [sp, #64]	@ 0x40
 801de82:	e662      	b.n	801db4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801de84:	f113 0801 	adds.w	r8, r3, #1
 801de88:	f53f af74 	bmi.w	801dd74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801de8c:	4541      	cmp	r1, r8
 801de8e:	f6ff af71 	blt.w	801dd74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801de92:	f11c 0801 	adds.w	r8, ip, #1
 801de96:	f53f af6d 	bmi.w	801dd74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801de9a:	45c6      	cmp	lr, r8
 801de9c:	f6ff af6a 	blt.w	801dd74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801dea0:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801dea4:	b209      	sxth	r1, r1
 801dea6:	fa0f f38e 	sxth.w	r3, lr
 801deaa:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801deae:	9301      	str	r3, [sp, #4]
 801deb0:	9100      	str	r1, [sp, #0]
 801deb2:	4633      	mov	r3, r6
 801deb4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801deb6:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801deb8:	4639      	mov	r1, r7
 801deba:	f7ff fc7a 	bl	801d7b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801debe:	e759      	b.n	801dd74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801dec0:	fffff800 	.word	0xfffff800
 801dec4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801dec6:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801dec8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801decc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801dece:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ded2:	1427      	asrs	r7, r4, #16
 801ded4:	142b      	asrs	r3, r5, #16
 801ded6:	fb01 7303 	mla	r3, r1, r3, r7
 801deda:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801dedc:	18e7      	adds	r7, r4, r3
 801dede:	5ce3      	ldrb	r3, [r4, r3]
 801dee0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801dee4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801dee8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801deec:	2a00      	cmp	r2, #0
 801deee:	f000 8127 	beq.w	801e140 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801def2:	f897 e001 	ldrb.w	lr, [r7, #1]
 801def6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801defa:	940d      	str	r4, [sp, #52]	@ 0x34
 801defc:	0e24      	lsrs	r4, r4, #24
 801defe:	9414      	str	r4, [sp, #80]	@ 0x50
 801df00:	b170      	cbz	r0, 801df20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801df02:	eb07 0e01 	add.w	lr, r7, r1
 801df06:	5c79      	ldrb	r1, [r7, r1]
 801df08:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801df0c:	9109      	str	r1, [sp, #36]	@ 0x24
 801df0e:	0e09      	lsrs	r1, r1, #24
 801df10:	9111      	str	r1, [sp, #68]	@ 0x44
 801df12:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801df16:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801df1a:	910e      	str	r1, [sp, #56]	@ 0x38
 801df1c:	0e09      	lsrs	r1, r1, #24
 801df1e:	9115      	str	r1, [sp, #84]	@ 0x54
 801df20:	b292      	uxth	r2, r2
 801df22:	b280      	uxth	r0, r0
 801df24:	fb02 f800 	mul.w	r8, r2, r0
 801df28:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801df2c:	0112      	lsls	r2, r2, #4
 801df2e:	eba2 0e08 	sub.w	lr, r2, r8
 801df32:	b280      	uxth	r0, r0
 801df34:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801df38:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801df3a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801df3c:	fa1f fe8e 	uxth.w	lr, lr
 801df40:	1a09      	subs	r1, r1, r0
 801df42:	b289      	uxth	r1, r1
 801df44:	fb0e f202 	mul.w	r2, lr, r2
 801df48:	fb01 220c 	mla	r2, r1, ip, r2
 801df4c:	fb00 2204 	mla	r2, r0, r4, r2
 801df50:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801df52:	fb08 2204 	mla	r2, r8, r4, r2
 801df56:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801df5a:	2a00      	cmp	r2, #0
 801df5c:	f000 80e5 	beq.w	801e12a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801df60:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801df64:	d019      	beq.n	801df9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801df66:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801df6a:	fb0c fa0a 	mul.w	sl, ip, sl
 801df6e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801df72:	fb0c fc03 	mul.w	ip, ip, r3
 801df76:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801df7a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801df7e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801df82:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801df86:	4453      	add	r3, sl
 801df88:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801df8c:	0a1b      	lsrs	r3, r3, #8
 801df8e:	0a3f      	lsrs	r7, r7, #8
 801df90:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801df94:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801df98:	433b      	orrs	r3, r7
 801df9a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801df9c:	2cff      	cmp	r4, #255	@ 0xff
 801df9e:	d020      	beq.n	801dfe2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801dfa0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801dfa2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801dfa6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801dfa8:	4367      	muls	r7, r4
 801dfaa:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801dfac:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801dfb0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801dfb2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dfb6:	fb04 fa0a 	mul.w	sl, r4, sl
 801dfba:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801dfbe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801dfc2:	44bc      	add	ip, r7
 801dfc4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801dfc8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dfcc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dfd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dfd4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801dfd8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801dfdc:	ea4c 040a 	orr.w	r4, ip, sl
 801dfe0:	940d      	str	r4, [sp, #52]	@ 0x34
 801dfe2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801dfe4:	2cff      	cmp	r4, #255	@ 0xff
 801dfe6:	d020      	beq.n	801e02a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801dfe8:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801dfea:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801dfee:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801dff0:	4367      	muls	r7, r4
 801dff2:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801dff4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801dff8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801dffa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dffe:	fb04 fa0a 	mul.w	sl, r4, sl
 801e002:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e006:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e00a:	44bc      	add	ip, r7
 801e00c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e010:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e014:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e018:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e01c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e020:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e024:	ea4c 040a 	orr.w	r4, ip, sl
 801e028:	9409      	str	r4, [sp, #36]	@ 0x24
 801e02a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801e02c:	2cff      	cmp	r4, #255	@ 0xff
 801e02e:	d020      	beq.n	801e072 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801e030:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e032:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e036:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801e038:	4367      	muls	r7, r4
 801e03a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e03c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e040:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801e042:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e046:	fb04 fa0a 	mul.w	sl, r4, sl
 801e04a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e04e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e052:	44bc      	add	ip, r7
 801e054:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e058:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e05c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e060:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e064:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e068:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e06c:	ea4c 040a 	orr.w	r4, ip, sl
 801e070:	940e      	str	r4, [sp, #56]	@ 0x38
 801e072:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e074:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e078:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801e07a:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801e07e:	fb0e f707 	mul.w	r7, lr, r7
 801e082:	fb01 770c 	mla	r7, r1, ip, r7
 801e086:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e08a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e08c:	fb00 770c 	mla	r7, r0, ip, r7
 801e090:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e094:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e096:	fb08 770c 	mla	r7, r8, ip, r7
 801e09a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801e09e:	fb0e fe0c 	mul.w	lr, lr, ip
 801e0a2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e0a6:	fb01 e303 	mla	r3, r1, r3, lr
 801e0aa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801e0ac:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801e0b0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801e0b2:	fb00 330a 	mla	r3, r0, sl, r3
 801e0b6:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801e0ba:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e0be:	f8b9 3000 	ldrh.w	r3, [r9]
 801e0c2:	43d2      	mvns	r2, r2
 801e0c4:	1218      	asrs	r0, r3, #8
 801e0c6:	b2d2      	uxtb	r2, r2
 801e0c8:	10d9      	asrs	r1, r3, #3
 801e0ca:	0a3f      	lsrs	r7, r7, #8
 801e0cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e0d0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e0d4:	00db      	lsls	r3, r3, #3
 801e0d6:	4350      	muls	r0, r2
 801e0d8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801e0dc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e0e0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e0e4:	b2db      	uxtb	r3, r3
 801e0e6:	ea47 070c 	orr.w	r7, r7, ip
 801e0ea:	4351      	muls	r1, r2
 801e0ec:	4353      	muls	r3, r2
 801e0ee:	1c42      	adds	r2, r0, #1
 801e0f0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e0f4:	0c3a      	lsrs	r2, r7, #16
 801e0f6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e0fa:	4a18      	ldr	r2, [pc, #96]	@ (801e15c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801e0fc:	b2c0      	uxtb	r0, r0
 801e0fe:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801e102:	1c4a      	adds	r2, r1, #1
 801e104:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e108:	0a3a      	lsrs	r2, r7, #8
 801e10a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e10e:	00c9      	lsls	r1, r1, #3
 801e110:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e114:	4301      	orrs	r1, r0
 801e116:	1c58      	adds	r0, r3, #1
 801e118:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e11c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801e120:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801e124:	4308      	orrs	r0, r1
 801e126:	f8a9 0000 	strh.w	r0, [r9]
 801e12a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801e12c:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801e12e:	441a      	add	r2, r3
 801e130:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e132:	9225      	str	r2, [sp, #148]	@ 0x94
 801e134:	f109 0902 	add.w	r9, r9, #2
 801e138:	441d      	add	r5, r3
 801e13a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e13e:	e64d      	b.n	801dddc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801e140:	2800      	cmp	r0, #0
 801e142:	f43f aeed 	beq.w	801df20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801e146:	5c79      	ldrb	r1, [r7, r1]
 801e148:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e14c:	9109      	str	r1, [sp, #36]	@ 0x24
 801e14e:	0e09      	lsrs	r1, r1, #24
 801e150:	9111      	str	r1, [sp, #68]	@ 0x44
 801e152:	e6e5      	b.n	801df20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801e154:	b01b      	add	sp, #108	@ 0x6c
 801e156:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e15a:	bf00      	nop
 801e15c:	fffff800 	.word	0xfffff800

0801e160 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801e160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e164:	b085      	sub	sp, #20
 801e166:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801e16a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801e16e:	9103      	str	r1, [sp, #12]
 801e170:	fb00 7406 	mla	r4, r0, r6, r7
 801e174:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801e178:	2800      	cmp	r0, #0
 801e17a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801e17e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801e182:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801e186:	9501      	str	r5, [sp, #4]
 801e188:	eb03 0904 	add.w	r9, r3, r4
 801e18c:	f2c0 8150 	blt.w	801e430 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801e190:	4583      	cmp	fp, r0
 801e192:	f340 814d 	ble.w	801e430 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801e196:	2f00      	cmp	r7, #0
 801e198:	f2c0 8146 	blt.w	801e428 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801e19c:	42be      	cmp	r6, r7
 801e19e:	f340 8143 	ble.w	801e428 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801e1a2:	f813 c004 	ldrb.w	ip, [r3, r4]
 801e1a6:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801e1aa:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801e1ae:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801e1b2:	4355      	muls	r5, r2
 801e1b4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e1b8:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801e1bc:	fb0c f203 	mul.w	r2, ip, r3
 801e1c0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801e1c4:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801e1c8:	441d      	add	r5, r3
 801e1ca:	f102 0320 	add.w	r3, r2, #32
 801e1ce:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e1d2:	0a1b      	lsrs	r3, r3, #8
 801e1d4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801e1d8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e1dc:	431c      	orrs	r4, r3
 801e1de:	1c7b      	adds	r3, r7, #1
 801e1e0:	f100 812b 	bmi.w	801e43a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801e1e4:	429e      	cmp	r6, r3
 801e1e6:	f340 8128 	ble.w	801e43a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801e1ea:	2900      	cmp	r1, #0
 801e1ec:	f000 8128 	beq.w	801e440 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801e1f0:	9a01      	ldr	r2, [sp, #4]
 801e1f2:	f899 3001 	ldrb.w	r3, [r9, #1]
 801e1f6:	8855      	ldrh	r5, [r2, #2]
 801e1f8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801e1fc:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801e200:	fb08 f802 	mul.w	r8, r8, r2
 801e204:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e208:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801e20c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801e210:	435d      	muls	r5, r3
 801e212:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e216:	44d0      	add	r8, sl
 801e218:	f105 0a20 	add.w	sl, r5, #32
 801e21c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801e220:	0a2d      	lsrs	r5, r5, #8
 801e222:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801e226:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e22a:	432a      	orrs	r2, r5
 801e22c:	3001      	adds	r0, #1
 801e22e:	f100 810d 	bmi.w	801e44c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801e232:	4583      	cmp	fp, r0
 801e234:	f340 810a 	ble.w	801e44c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801e238:	f1be 0f00 	cmp.w	lr, #0
 801e23c:	f000 810b 	beq.w	801e456 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801e240:	2f00      	cmp	r7, #0
 801e242:	f2c0 8100 	blt.w	801e446 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801e246:	42be      	cmp	r6, r7
 801e248:	f340 80fd 	ble.w	801e446 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801e24c:	9801      	ldr	r0, [sp, #4]
 801e24e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801e252:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801e256:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801e25a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801e25e:	fb0a fa00 	mul.w	sl, sl, r0
 801e262:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801e266:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801e26a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801e26e:	fb05 f808 	mul.w	r8, r5, r8
 801e272:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801e276:	4482      	add	sl, r0
 801e278:	f108 0020 	add.w	r0, r8, #32
 801e27c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801e280:	0a00      	lsrs	r0, r0, #8
 801e282:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801e286:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e28a:	ea4b 0b00 	orr.w	fp, fp, r0
 801e28e:	3701      	adds	r7, #1
 801e290:	f100 80e6 	bmi.w	801e460 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801e294:	42be      	cmp	r6, r7
 801e296:	f340 80e3 	ble.w	801e460 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801e29a:	2900      	cmp	r1, #0
 801e29c:	f000 80e3 	beq.w	801e466 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801e2a0:	3601      	adds	r6, #1
 801e2a2:	9801      	ldr	r0, [sp, #4]
 801e2a4:	f819 7006 	ldrb.w	r7, [r9, r6]
 801e2a8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801e2ac:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801e2b0:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801e2b4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e2b8:	fb09 f906 	mul.w	r9, r9, r6
 801e2bc:	fb07 f800 	mul.w	r8, r7, r0
 801e2c0:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801e2c4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801e2c8:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801e2cc:	44d1      	add	r9, sl
 801e2ce:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801e2d2:	f108 0020 	add.w	r0, r8, #32
 801e2d6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801e2da:	0a00      	lsrs	r0, r0, #8
 801e2dc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e2e0:	4330      	orrs	r0, r6
 801e2e2:	b28e      	uxth	r6, r1
 801e2e4:	fa1f f98e 	uxth.w	r9, lr
 801e2e8:	fb06 f809 	mul.w	r8, r6, r9
 801e2ec:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801e2f0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801e2f4:	0136      	lsls	r6, r6, #4
 801e2f6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e2fa:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801e2fe:	9601      	str	r6, [sp, #4]
 801e300:	ea4a 0404 	orr.w	r4, sl, r4
 801e304:	fa1f f689 	uxth.w	r6, r9
 801e308:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801e30c:	fb11 f90e 	smulbb	r9, r1, lr
 801e310:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801e314:	9602      	str	r6, [sp, #8]
 801e316:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e31a:	4626      	mov	r6, r4
 801e31c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e320:	f1ce 0410 	rsb	r4, lr, #16
 801e324:	1a64      	subs	r4, r4, r1
 801e326:	ea4a 0202 	orr.w	r2, sl, r2
 801e32a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801e32e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801e332:	434a      	muls	r2, r1
 801e334:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801e338:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e33c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e340:	fb04 2406 	mla	r4, r4, r6, r2
 801e344:	ea4a 0000 	orr.w	r0, sl, r0
 801e348:	fb09 4200 	mla	r2, r9, r0, r4
 801e34c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801e350:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e354:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801e358:	ea44 0b0b 	orr.w	fp, r4, fp
 801e35c:	9c01      	ldr	r4, [sp, #4]
 801e35e:	9e02      	ldr	r6, [sp, #8]
 801e360:	9903      	ldr	r1, [sp, #12]
 801e362:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801e366:	1ba4      	subs	r4, r4, r6
 801e368:	9e01      	ldr	r6, [sp, #4]
 801e36a:	8808      	ldrh	r0, [r1, #0]
 801e36c:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801e370:	eba6 0608 	sub.w	r6, r6, r8
 801e374:	b2b6      	uxth	r6, r6
 801e376:	b2a4      	uxth	r4, r4
 801e378:	4373      	muls	r3, r6
 801e37a:	fb0c 3304 	mla	r3, ip, r4, r3
 801e37e:	9c02      	ldr	r4, [sp, #8]
 801e380:	fb04 3505 	mla	r5, r4, r5, r3
 801e384:	fb08 5707 	mla	r7, r8, r7, r5
 801e388:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801e38c:	b289      	uxth	r1, r1
 801e38e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801e392:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801e396:	434f      	muls	r7, r1
 801e398:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801e39c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e3a0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e3a4:	1c7b      	adds	r3, r7, #1
 801e3a6:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e3aa:	ea42 0e0e 	orr.w	lr, r2, lr
 801e3ae:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801e3b2:	fa1f f28e 	uxth.w	r2, lr
 801e3b6:	1203      	asrs	r3, r0, #8
 801e3b8:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801e3bc:	b2ff      	uxtb	r7, r7
 801e3be:	1215      	asrs	r5, r2, #8
 801e3c0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801e3c4:	fb13 f307 	smulbb	r3, r3, r7
 801e3c8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e3cc:	fb05 3501 	mla	r5, r5, r1, r3
 801e3d0:	10c3      	asrs	r3, r0, #3
 801e3d2:	10d4      	asrs	r4, r2, #3
 801e3d4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801e3d8:	fb13 f307 	smulbb	r3, r3, r7
 801e3dc:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801e3e0:	fb04 3401 	mla	r4, r4, r1, r3
 801e3e4:	00c3      	lsls	r3, r0, #3
 801e3e6:	00d2      	lsls	r2, r2, #3
 801e3e8:	b2db      	uxtb	r3, r3
 801e3ea:	fb13 f307 	smulbb	r3, r3, r7
 801e3ee:	b2d2      	uxtb	r2, r2
 801e3f0:	fb02 3101 	mla	r1, r2, r1, r3
 801e3f4:	b2ad      	uxth	r5, r5
 801e3f6:	b289      	uxth	r1, r1
 801e3f8:	b2a4      	uxth	r4, r4
 801e3fa:	1c6b      	adds	r3, r5, #1
 801e3fc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e400:	1c62      	adds	r2, r4, #1
 801e402:	1c4b      	adds	r3, r1, #1
 801e404:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e408:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801e40c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e410:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e414:	0964      	lsrs	r4, r4, #5
 801e416:	432b      	orrs	r3, r5
 801e418:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801e41c:	9a03      	ldr	r2, [sp, #12]
 801e41e:	4323      	orrs	r3, r4
 801e420:	8013      	strh	r3, [r2, #0]
 801e422:	b005      	add	sp, #20
 801e424:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e428:	f04f 0c00 	mov.w	ip, #0
 801e42c:	4664      	mov	r4, ip
 801e42e:	e6d6      	b.n	801e1de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801e430:	2300      	movs	r3, #0
 801e432:	469c      	mov	ip, r3
 801e434:	461a      	mov	r2, r3
 801e436:	461c      	mov	r4, r3
 801e438:	e6f8      	b.n	801e22c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801e43a:	2300      	movs	r3, #0
 801e43c:	461a      	mov	r2, r3
 801e43e:	e6f5      	b.n	801e22c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801e440:	460b      	mov	r3, r1
 801e442:	460a      	mov	r2, r1
 801e444:	e6f2      	b.n	801e22c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801e446:	2500      	movs	r5, #0
 801e448:	46ab      	mov	fp, r5
 801e44a:	e720      	b.n	801e28e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801e44c:	2700      	movs	r7, #0
 801e44e:	463d      	mov	r5, r7
 801e450:	4638      	mov	r0, r7
 801e452:	46bb      	mov	fp, r7
 801e454:	e745      	b.n	801e2e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801e456:	4677      	mov	r7, lr
 801e458:	4675      	mov	r5, lr
 801e45a:	4670      	mov	r0, lr
 801e45c:	46f3      	mov	fp, lr
 801e45e:	e740      	b.n	801e2e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801e460:	2700      	movs	r7, #0
 801e462:	4638      	mov	r0, r7
 801e464:	e73d      	b.n	801e2e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801e466:	460f      	mov	r7, r1
 801e468:	4608      	mov	r0, r1
 801e46a:	e73a      	b.n	801e2e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801e46c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e46c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e470:	b097      	sub	sp, #92	@ 0x5c
 801e472:	9214      	str	r2, [sp, #80]	@ 0x50
 801e474:	9308      	str	r3, [sp, #32]
 801e476:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801e478:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801e47c:	9312      	str	r3, [sp, #72]	@ 0x48
 801e47e:	9111      	str	r1, [sp, #68]	@ 0x44
 801e480:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801e484:	9015      	str	r0, [sp, #84]	@ 0x54
 801e486:	6850      	ldr	r0, [r2, #4]
 801e488:	6812      	ldr	r2, [r2, #0]
 801e48a:	fb00 1303 	mla	r3, r0, r3, r1
 801e48e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e492:	9309      	str	r3, [sp, #36]	@ 0x24
 801e494:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e496:	681b      	ldr	r3, [r3, #0]
 801e498:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e49a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e49c:	685b      	ldr	r3, [r3, #4]
 801e49e:	930c      	str	r3, [sp, #48]	@ 0x30
 801e4a0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801e4a4:	930a      	str	r3, [sp, #40]	@ 0x28
 801e4a6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801e4a8:	2b00      	cmp	r3, #0
 801e4aa:	dc03      	bgt.n	801e4b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e4ac:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801e4ae:	2b00      	cmp	r3, #0
 801e4b0:	f340 83cb 	ble.w	801ec4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801e4b4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e4b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e4ba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e4be:	1e48      	subs	r0, r1, #1
 801e4c0:	1e55      	subs	r5, r2, #1
 801e4c2:	9b08      	ldr	r3, [sp, #32]
 801e4c4:	2b00      	cmp	r3, #0
 801e4c6:	f340 81a3 	ble.w	801e810 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801e4ca:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801e4cc:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e4ce:	1436      	asrs	r6, r6, #16
 801e4d0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801e4d4:	d406      	bmi.n	801e4e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e4d6:	4286      	cmp	r6, r0
 801e4d8:	da04      	bge.n	801e4e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e4da:	2b00      	cmp	r3, #0
 801e4dc:	db02      	blt.n	801e4e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e4de:	42ab      	cmp	r3, r5
 801e4e0:	f2c0 8197 	blt.w	801e812 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801e4e4:	3601      	adds	r6, #1
 801e4e6:	f100 8184 	bmi.w	801e7f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801e4ea:	42b1      	cmp	r1, r6
 801e4ec:	f2c0 8181 	blt.w	801e7f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801e4f0:	3301      	adds	r3, #1
 801e4f2:	f100 817e 	bmi.w	801e7f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801e4f6:	429a      	cmp	r2, r3
 801e4f8:	f2c0 817b 	blt.w	801e7f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801e4fc:	9b08      	ldr	r3, [sp, #32]
 801e4fe:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801e500:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e502:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801e506:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e508:	2b00      	cmp	r3, #0
 801e50a:	f340 81a4 	ble.w	801e856 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801e50e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e510:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801e512:	1418      	asrs	r0, r3, #16
 801e514:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e516:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801e51a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e51c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801e520:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e522:	142d      	asrs	r5, r5, #16
 801e524:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801e528:	f100 81f8 	bmi.w	801e91c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801e52c:	f102 3eff 	add.w	lr, r2, #4294967295
 801e530:	4575      	cmp	r5, lr
 801e532:	f280 81f3 	bge.w	801e91c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801e536:	2800      	cmp	r0, #0
 801e538:	f2c0 81f0 	blt.w	801e91c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801e53c:	f103 3eff 	add.w	lr, r3, #4294967295
 801e540:	4570      	cmp	r0, lr
 801e542:	f280 81eb 	bge.w	801e91c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801e546:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e548:	b212      	sxth	r2, r2
 801e54a:	fb00 5002 	mla	r0, r0, r2, r5
 801e54e:	fa1f fe81 	uxth.w	lr, r1
 801e552:	eb03 0a00 	add.w	sl, r3, r0
 801e556:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801e55a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801e55e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e562:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801e566:	b29b      	uxth	r3, r3
 801e568:	f1bc 0f00 	cmp.w	ip, #0
 801e56c:	f000 81b9 	beq.w	801e8e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801e570:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801e574:	940d      	str	r4, [sp, #52]	@ 0x34
 801e576:	eb0a 0b02 	add.w	fp, sl, r2
 801e57a:	fa1f fa8c 	uxth.w	sl, ip
 801e57e:	fb0a fe0e 	mul.w	lr, sl, lr
 801e582:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801e586:	fa1f fa8a 	uxth.w	sl, sl
 801e58a:	eba5 050e 	sub.w	r5, r5, lr
 801e58e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e592:	940e      	str	r4, [sp, #56]	@ 0x38
 801e594:	eba3 030a 	sub.w	r3, r3, sl
 801e598:	b2ad      	uxth	r5, r5
 801e59a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e59c:	b29b      	uxth	r3, r3
 801e59e:	fb08 f505 	mul.w	r5, r8, r5
 801e5a2:	fb09 5303 	mla	r3, r9, r3, r5
 801e5a6:	fb0a 3304 	mla	r3, sl, r4, r3
 801e5aa:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e5ac:	fb0e 3304 	mla	r3, lr, r4, r3
 801e5b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e5b4:	2b00      	cmp	r3, #0
 801e5b6:	f000 810f 	beq.w	801e7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e5ba:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e5bc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801e5c0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801e5c4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801e5c8:	f000 8190 	beq.w	801e8ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801e5cc:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801e5d0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e5d4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e5d8:	fb09 f000 	mul.w	r0, r9, r0
 801e5dc:	fb0a fe0e 	mul.w	lr, sl, lr
 801e5e0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801e5e4:	f100 0b20 	add.w	fp, r0, #32
 801e5e8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801e5ec:	44ce      	add	lr, r9
 801e5ee:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801e5f2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e5f6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801e5fa:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801e5fe:	ea4e 0909 	orr.w	r9, lr, r9
 801e602:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801e606:	8868      	ldrh	r0, [r5, #2]
 801e608:	d019      	beq.n	801e63e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801e60a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801e60e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e612:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e616:	fb08 f800 	mul.w	r8, r8, r0
 801e61a:	fb0a fe0e 	mul.w	lr, sl, lr
 801e61e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801e622:	f108 0b20 	add.w	fp, r8, #32
 801e626:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801e62a:	4486      	add	lr, r0
 801e62c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801e630:	0a00      	lsrs	r0, r0, #8
 801e632:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801e636:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e63a:	ea4e 0000 	orr.w	r0, lr, r0
 801e63e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801e642:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801e646:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801e64a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e64e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e652:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e656:	ea4e 0909 	orr.w	r9, lr, r9
 801e65a:	ea4a 0000 	orr.w	r0, sl, r0
 801e65e:	f1bc 0f00 	cmp.w	ip, #0
 801e662:	f000 8145 	beq.w	801e8f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801e666:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801e66a:	3a01      	subs	r2, #1
 801e66c:	0052      	lsls	r2, r2, #1
 801e66e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e670:	3202      	adds	r2, #2
 801e672:	2cff      	cmp	r4, #255	@ 0xff
 801e674:	eb05 0e02 	add.w	lr, r5, r2
 801e678:	5aaa      	ldrh	r2, [r5, r2]
 801e67a:	d018      	beq.n	801e6ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e67c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801e680:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e684:	fb04 fa02 	mul.w	sl, r4, r2
 801e688:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e68c:	fb08 f805 	mul.w	r8, r8, r5
 801e690:	f10a 0520 	add.w	r5, sl, #32
 801e694:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801e698:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801e69c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e6a0:	4442      	add	r2, r8
 801e6a2:	0a2d      	lsrs	r5, r5, #8
 801e6a4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801e6a8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e6ac:	432a      	orrs	r2, r5
 801e6ae:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e6b0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801e6b4:	2cff      	cmp	r4, #255	@ 0xff
 801e6b6:	d01a      	beq.n	801e6ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801e6b8:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801e6bc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e6c0:	fb04 fa05 	mul.w	sl, r4, r5
 801e6c4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e6c8:	fb08 f80e 	mul.w	r8, r8, lr
 801e6cc:	f10a 0e20 	add.w	lr, sl, #32
 801e6d0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801e6d4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801e6d8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e6dc:	4445      	add	r5, r8
 801e6de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e6e2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801e6e6:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801e6ea:	ea45 050e 	orr.w	r5, r5, lr
 801e6ee:	fb1c fe01 	smulbb	lr, ip, r1
 801e6f2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801e6f6:	f1cc 0810 	rsb	r8, ip, #16
 801e6fa:	eba8 0801 	sub.w	r8, r8, r1
 801e6fe:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801e702:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801e706:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801e70a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801e70e:	4341      	muls	r1, r0
 801e710:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e714:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e718:	ea4a 0202 	orr.w	r2, sl, r2
 801e71c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801e720:	fb09 1108 	mla	r1, r9, r8, r1
 801e724:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e728:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801e72c:	fb0c 1102 	mla	r1, ip, r2, r1
 801e730:	ea4b 0505 	orr.w	r5, fp, r5
 801e734:	fb0e 1e05 	mla	lr, lr, r5, r1
 801e738:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801e73c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e740:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e744:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e748:	ea42 0e0e 	orr.w	lr, r2, lr
 801e74c:	fa1f f28e 	uxth.w	r2, lr
 801e750:	2bff      	cmp	r3, #255	@ 0xff
 801e752:	d103      	bne.n	801e75c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e754:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801e756:	29ff      	cmp	r1, #255	@ 0xff
 801e758:	f000 80de 	beq.w	801e918 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801e75c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801e75e:	8838      	ldrh	r0, [r7, #0]
 801e760:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e762:	434b      	muls	r3, r1
 801e764:	f103 0c01 	add.w	ip, r3, #1
 801e768:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801e76c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801e770:	fa5f fc83 	uxtb.w	ip, r3
 801e774:	1203      	asrs	r3, r0, #8
 801e776:	1215      	asrs	r5, r2, #8
 801e778:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801e77c:	fb13 f30c 	smulbb	r3, r3, ip
 801e780:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e784:	fb05 3501 	mla	r5, r5, r1, r3
 801e788:	10c3      	asrs	r3, r0, #3
 801e78a:	10d1      	asrs	r1, r2, #3
 801e78c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801e790:	fb13 f30c 	smulbb	r3, r3, ip
 801e794:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e798:	fb01 3104 	mla	r1, r1, r4, r3
 801e79c:	00c3      	lsls	r3, r0, #3
 801e79e:	00d2      	lsls	r2, r2, #3
 801e7a0:	b2db      	uxtb	r3, r3
 801e7a2:	b2d2      	uxtb	r2, r2
 801e7a4:	fb13 f30c 	smulbb	r3, r3, ip
 801e7a8:	b2ad      	uxth	r5, r5
 801e7aa:	fb02 3304 	mla	r3, r2, r4, r3
 801e7ae:	b29a      	uxth	r2, r3
 801e7b0:	1c6b      	adds	r3, r5, #1
 801e7b2:	b289      	uxth	r1, r1
 801e7b4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e7b8:	1c53      	adds	r3, r2, #1
 801e7ba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e7be:	1c4a      	adds	r2, r1, #1
 801e7c0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e7c4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e7c8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e7cc:	0949      	lsrs	r1, r1, #5
 801e7ce:	432b      	orrs	r3, r5
 801e7d0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e7d4:	430b      	orrs	r3, r1
 801e7d6:	803b      	strh	r3, [r7, #0]
 801e7d8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e7da:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801e7dc:	4413      	add	r3, r2
 801e7de:	9321      	str	r3, [sp, #132]	@ 0x84
 801e7e0:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801e7e2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e7e4:	441a      	add	r2, r3
 801e7e6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e7e8:	9222      	str	r2, [sp, #136]	@ 0x88
 801e7ea:	3b01      	subs	r3, #1
 801e7ec:	3702      	adds	r7, #2
 801e7ee:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e7f0:	e689      	b.n	801e506 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e7f2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e7f4:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801e7f6:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801e7f8:	4433      	add	r3, r6
 801e7fa:	9321      	str	r3, [sp, #132]	@ 0x84
 801e7fc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e7fe:	441c      	add	r4, r3
 801e800:	9b08      	ldr	r3, [sp, #32]
 801e802:	9422      	str	r4, [sp, #136]	@ 0x88
 801e804:	3b01      	subs	r3, #1
 801e806:	9308      	str	r3, [sp, #32]
 801e808:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e80a:	3302      	adds	r3, #2
 801e80c:	9309      	str	r3, [sp, #36]	@ 0x24
 801e80e:	e658      	b.n	801e4c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801e810:	d028      	beq.n	801e864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801e812:	9b08      	ldr	r3, [sp, #32]
 801e814:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801e816:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801e818:	3b01      	subs	r3, #1
 801e81a:	fb00 5003 	mla	r0, r0, r3, r5
 801e81e:	1400      	asrs	r0, r0, #16
 801e820:	f53f ae6c 	bmi.w	801e4fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e824:	3901      	subs	r1, #1
 801e826:	4288      	cmp	r0, r1
 801e828:	f6bf ae68 	bge.w	801e4fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e82c:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801e82e:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801e830:	fb01 0303 	mla	r3, r1, r3, r0
 801e834:	141b      	asrs	r3, r3, #16
 801e836:	f53f ae61 	bmi.w	801e4fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e83a:	3a01      	subs	r2, #1
 801e83c:	4293      	cmp	r3, r2
 801e83e:	f6bf ae5d 	bge.w	801e4fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e842:	9b08      	ldr	r3, [sp, #32]
 801e844:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801e848:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e84a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801e84e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e850:	2b00      	cmp	r3, #0
 801e852:	f300 8082 	bgt.w	801e95a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801e856:	9b08      	ldr	r3, [sp, #32]
 801e858:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e85c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e85e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e862:	9309      	str	r3, [sp, #36]	@ 0x24
 801e864:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801e866:	2b00      	cmp	r3, #0
 801e868:	f340 81ef 	ble.w	801ec4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801e86c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e870:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e874:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e878:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e87a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e87e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e882:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e886:	eef0 6a62 	vmov.f32	s13, s5
 801e88a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e88e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e892:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e896:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801e89a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e89e:	eef0 6a43 	vmov.f32	s13, s6
 801e8a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e8a6:	ee12 2a90 	vmov	r2, s5
 801e8aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e8ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801e8b2:	ee13 2a10 	vmov	r2, s6
 801e8b6:	9323      	str	r3, [sp, #140]	@ 0x8c
 801e8b8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e8ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801e8be:	9324      	str	r3, [sp, #144]	@ 0x90
 801e8c0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801e8c2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801e8c4:	3b01      	subs	r3, #1
 801e8c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e8ca:	9311      	str	r3, [sp, #68]	@ 0x44
 801e8cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e8ce:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801e8d2:	bf08      	it	eq
 801e8d4:	4613      	moveq	r3, r2
 801e8d6:	9308      	str	r3, [sp, #32]
 801e8d8:	eeb0 3a67 	vmov.f32	s6, s15
 801e8dc:	eef0 2a47 	vmov.f32	s5, s14
 801e8e0:	e5e1      	b.n	801e4a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e8e2:	fb08 f505 	mul.w	r5, r8, r5
 801e8e6:	fb09 5303 	mla	r3, r9, r3, r5
 801e8ea:	e661      	b.n	801e5b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801e8ec:	4681      	mov	r9, r0
 801e8ee:	e688      	b.n	801e602 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801e8f0:	f1c1 0210 	rsb	r2, r1, #16
 801e8f4:	4341      	muls	r1, r0
 801e8f6:	fb09 1902 	mla	r9, r9, r2, r1
 801e8fa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e8fe:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801e902:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e906:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e90a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e90e:	ea42 0909 	orr.w	r9, r2, r9
 801e912:	fa1f f289 	uxth.w	r2, r9
 801e916:	e71b      	b.n	801e750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801e918:	803a      	strh	r2, [r7, #0]
 801e91a:	e75d      	b.n	801e7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e91c:	f115 0e01 	adds.w	lr, r5, #1
 801e920:	f53f af5a 	bmi.w	801e7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e924:	4572      	cmp	r2, lr
 801e926:	f6ff af57 	blt.w	801e7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e92a:	f110 0e01 	adds.w	lr, r0, #1
 801e92e:	f53f af53 	bmi.w	801e7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e932:	4573      	cmp	r3, lr
 801e934:	f6ff af50 	blt.w	801e7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e938:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e93a:	9502      	str	r5, [sp, #8]
 801e93c:	b21b      	sxth	r3, r3
 801e93e:	b212      	sxth	r2, r2
 801e940:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801e944:	9301      	str	r3, [sp, #4]
 801e946:	9200      	str	r2, [sp, #0]
 801e948:	e9cd c405 	strd	ip, r4, [sp, #20]
 801e94c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801e950:	4639      	mov	r1, r7
 801e952:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801e954:	f7ff fc04 	bl	801e160 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801e958:	e73e      	b.n	801e7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e95a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e95c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e960:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e962:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801e966:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e968:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e96c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e96e:	141f      	asrs	r7, r3, #16
 801e970:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e972:	141b      	asrs	r3, r3, #16
 801e974:	fb01 3707 	mla	r7, r1, r7, r3
 801e978:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e97a:	fa1f fc82 	uxth.w	ip, r2
 801e97e:	eb03 0a07 	add.w	sl, r3, r7
 801e982:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801e986:	f813 9007 	ldrb.w	r9, [r3, r7]
 801e98a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e98e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801e992:	b29b      	uxth	r3, r3
 801e994:	2d00      	cmp	r5, #0
 801e996:	f000 813d 	beq.w	801ec14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801e99a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801e99e:	940f      	str	r4, [sp, #60]	@ 0x3c
 801e9a0:	eb0a 0b01 	add.w	fp, sl, r1
 801e9a4:	fa1f fa85 	uxth.w	sl, r5
 801e9a8:	fb0a fc0c 	mul.w	ip, sl, ip
 801e9ac:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801e9b0:	fa1f fa8a 	uxth.w	sl, sl
 801e9b4:	eba0 000c 	sub.w	r0, r0, ip
 801e9b8:	eba3 030a 	sub.w	r3, r3, sl
 801e9bc:	b280      	uxth	r0, r0
 801e9be:	fb08 f000 	mul.w	r0, r8, r0
 801e9c2:	b29b      	uxth	r3, r3
 801e9c4:	fb09 0303 	mla	r3, r9, r3, r0
 801e9c8:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e9ca:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e9ce:	9410      	str	r4, [sp, #64]	@ 0x40
 801e9d0:	fb0a 3300 	mla	r3, sl, r0, r3
 801e9d4:	fb0c 3304 	mla	r3, ip, r4, r3
 801e9d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e9dc:	2b00      	cmp	r3, #0
 801e9de:	f000 810b 	beq.w	801ebf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801e9e2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801e9e4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e9e6:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801e9ea:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801e9ee:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801e9f2:	f000 8114 	beq.w	801ec1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801e9f6:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801e9fa:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e9fe:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ea02:	fb09 f707 	mul.w	r7, r9, r7
 801ea06:	fb0a fc0c 	mul.w	ip, sl, ip
 801ea0a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801ea0e:	f107 0b20 	add.w	fp, r7, #32
 801ea12:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801ea16:	44cc      	add	ip, r9
 801ea18:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801ea1c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ea20:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801ea24:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801ea28:	ea4c 0909 	orr.w	r9, ip, r9
 801ea2c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801ea30:	8847      	ldrh	r7, [r0, #2]
 801ea32:	d019      	beq.n	801ea68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801ea34:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801ea38:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801ea3c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ea40:	fb08 f807 	mul.w	r8, r8, r7
 801ea44:	fb0a fc0c 	mul.w	ip, sl, ip
 801ea48:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801ea4c:	f108 0b20 	add.w	fp, r8, #32
 801ea50:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801ea54:	44bc      	add	ip, r7
 801ea56:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801ea5a:	0a3f      	lsrs	r7, r7, #8
 801ea5c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801ea60:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ea64:	ea4c 0707 	orr.w	r7, ip, r7
 801ea68:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801ea6c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801ea70:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ea74:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801ea78:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ea7c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801ea80:	ea4c 0909 	orr.w	r9, ip, r9
 801ea84:	ea4a 0707 	orr.w	r7, sl, r7
 801ea88:	2d00      	cmp	r5, #0
 801ea8a:	f000 80ca 	beq.w	801ec22 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801ea8e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801ea92:	3901      	subs	r1, #1
 801ea94:	0049      	lsls	r1, r1, #1
 801ea96:	3102      	adds	r1, #2
 801ea98:	eb00 0c01 	add.w	ip, r0, r1
 801ea9c:	5a41      	ldrh	r1, [r0, r1]
 801ea9e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801eaa0:	28ff      	cmp	r0, #255	@ 0xff
 801eaa2:	d019      	beq.n	801ead8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801eaa4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801eaa6:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801eaaa:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801eaae:	fb04 fa01 	mul.w	sl, r4, r1
 801eab2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801eab6:	fb08 f800 	mul.w	r8, r8, r0
 801eaba:	f10a 0020 	add.w	r0, sl, #32
 801eabe:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801eac2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801eac6:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801eaca:	4441      	add	r1, r8
 801eacc:	0a00      	lsrs	r0, r0, #8
 801eace:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801ead2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ead6:	4301      	orrs	r1, r0
 801ead8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801eada:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801eade:	2cff      	cmp	r4, #255	@ 0xff
 801eae0:	d01a      	beq.n	801eb18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801eae2:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801eae6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801eaea:	fb04 fa00 	mul.w	sl, r4, r0
 801eaee:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801eaf2:	fb08 f80c 	mul.w	r8, r8, ip
 801eaf6:	f10a 0c20 	add.w	ip, sl, #32
 801eafa:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801eafe:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801eb02:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801eb06:	4440      	add	r0, r8
 801eb08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb0c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801eb10:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801eb14:	ea40 000c 	orr.w	r0, r0, ip
 801eb18:	fb15 fc02 	smulbb	ip, r5, r2
 801eb1c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801eb20:	f1c5 0810 	rsb	r8, r5, #16
 801eb24:	eba8 0802 	sub.w	r8, r8, r2
 801eb28:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801eb2c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801eb30:	437a      	muls	r2, r7
 801eb32:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801eb36:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801eb3a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801eb3e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801eb42:	fb09 2208 	mla	r2, r9, r8, r2
 801eb46:	ea4a 0101 	orr.w	r1, sl, r1
 801eb4a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801eb4e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801eb52:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801eb56:	fb05 2201 	mla	r2, r5, r1, r2
 801eb5a:	ea4b 0000 	orr.w	r0, fp, r0
 801eb5e:	fb0c 2200 	mla	r2, ip, r0, r2
 801eb62:	0d57      	lsrs	r7, r2, #21
 801eb64:	0952      	lsrs	r2, r2, #5
 801eb66:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801eb6a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801eb6e:	433a      	orrs	r2, r7
 801eb70:	2bff      	cmp	r3, #255	@ 0xff
 801eb72:	b292      	uxth	r2, r2
 801eb74:	d102      	bne.n	801eb7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801eb76:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801eb78:	29ff      	cmp	r1, #255	@ 0xff
 801eb7a:	d063      	beq.n	801ec44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801eb7c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801eb7e:	f8be 1000 	ldrh.w	r1, [lr]
 801eb82:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801eb84:	4343      	muls	r3, r0
 801eb86:	1c58      	adds	r0, r3, #1
 801eb88:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801eb8c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801eb90:	1208      	asrs	r0, r1, #8
 801eb92:	b2db      	uxtb	r3, r3
 801eb94:	1215      	asrs	r5, r2, #8
 801eb96:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801eb9a:	fb10 f003 	smulbb	r0, r0, r3
 801eb9e:	10cf      	asrs	r7, r1, #3
 801eba0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801eba4:	00c9      	lsls	r1, r1, #3
 801eba6:	fb05 0504 	mla	r5, r5, r4, r0
 801ebaa:	b2c9      	uxtb	r1, r1
 801ebac:	10d0      	asrs	r0, r2, #3
 801ebae:	00d2      	lsls	r2, r2, #3
 801ebb0:	fb11 f103 	smulbb	r1, r1, r3
 801ebb4:	b2d2      	uxtb	r2, r2
 801ebb6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ebba:	fb02 1204 	mla	r2, r2, r4, r1
 801ebbe:	fb17 f703 	smulbb	r7, r7, r3
 801ebc2:	b2ad      	uxth	r5, r5
 801ebc4:	b292      	uxth	r2, r2
 801ebc6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ebca:	fb00 7004 	mla	r0, r0, r4, r7
 801ebce:	1c6b      	adds	r3, r5, #1
 801ebd0:	1c57      	adds	r7, r2, #1
 801ebd2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ebd6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ebda:	b280      	uxth	r0, r0
 801ebdc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ebe0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801ebe4:	433d      	orrs	r5, r7
 801ebe6:	1c47      	adds	r7, r0, #1
 801ebe8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801ebec:	097f      	lsrs	r7, r7, #5
 801ebee:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ebf2:	433d      	orrs	r5, r7
 801ebf4:	f8ae 5000 	strh.w	r5, [lr]
 801ebf8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801ebfa:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801ebfc:	4413      	add	r3, r2
 801ebfe:	9321      	str	r3, [sp, #132]	@ 0x84
 801ec00:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801ec02:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ec04:	441a      	add	r2, r3
 801ec06:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801ec08:	9222      	str	r2, [sp, #136]	@ 0x88
 801ec0a:	3b01      	subs	r3, #1
 801ec0c:	f10e 0e02 	add.w	lr, lr, #2
 801ec10:	9313      	str	r3, [sp, #76]	@ 0x4c
 801ec12:	e61c      	b.n	801e84e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801ec14:	fb08 f000 	mul.w	r0, r8, r0
 801ec18:	fb09 0303 	mla	r3, r9, r3, r0
 801ec1c:	e6dc      	b.n	801e9d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801ec1e:	46b9      	mov	r9, r7
 801ec20:	e704      	b.n	801ea2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801ec22:	f1c2 0110 	rsb	r1, r2, #16
 801ec26:	437a      	muls	r2, r7
 801ec28:	fb09 2901 	mla	r9, r9, r1, r2
 801ec2c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ec30:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801ec34:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801ec38:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ec3c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ec40:	4302      	orrs	r2, r0
 801ec42:	e795      	b.n	801eb70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801ec44:	f8ae 2000 	strh.w	r2, [lr]
 801ec48:	e7d6      	b.n	801ebf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801ec4a:	b017      	add	sp, #92	@ 0x5c
 801ec4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ec50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ec50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec54:	b085      	sub	sp, #20
 801ec56:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801ec5a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801ec5e:	9103      	str	r1, [sp, #12]
 801ec60:	fb00 7406 	mla	r4, r0, r6, r7
 801ec64:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801ec68:	2800      	cmp	r0, #0
 801ec6a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801ec6e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801ec72:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801ec76:	9501      	str	r5, [sp, #4]
 801ec78:	eb02 0904 	add.w	r9, r2, r4
 801ec7c:	f2c0 8141 	blt.w	801ef02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801ec80:	4583      	cmp	fp, r0
 801ec82:	f340 813e 	ble.w	801ef02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801ec86:	2f00      	cmp	r7, #0
 801ec88:	f2c0 8137 	blt.w	801eefa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801ec8c:	42be      	cmp	r6, r7
 801ec8e:	f340 8134 	ble.w	801eefa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801ec92:	f812 c004 	ldrb.w	ip, [r2, r4]
 801ec96:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801ec9a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ec9e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801eca2:	4355      	muls	r5, r2
 801eca4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801eca8:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801ecac:	fb0c f203 	mul.w	r2, ip, r3
 801ecb0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801ecb4:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801ecb8:	441d      	add	r5, r3
 801ecba:	f102 0320 	add.w	r3, r2, #32
 801ecbe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ecc2:	0a1b      	lsrs	r3, r3, #8
 801ecc4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801ecc8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801eccc:	431c      	orrs	r4, r3
 801ecce:	1c7b      	adds	r3, r7, #1
 801ecd0:	f100 811c 	bmi.w	801ef0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801ecd4:	429e      	cmp	r6, r3
 801ecd6:	f340 8119 	ble.w	801ef0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801ecda:	2900      	cmp	r1, #0
 801ecdc:	f000 8119 	beq.w	801ef12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801ece0:	9a01      	ldr	r2, [sp, #4]
 801ece2:	f899 3001 	ldrb.w	r3, [r9, #1]
 801ece6:	8855      	ldrh	r5, [r2, #2]
 801ece8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801ecec:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801ecf0:	fb08 f802 	mul.w	r8, r8, r2
 801ecf4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ecf8:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801ecfc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801ed00:	435d      	muls	r5, r3
 801ed02:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ed06:	44d0      	add	r8, sl
 801ed08:	f105 0a20 	add.w	sl, r5, #32
 801ed0c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801ed10:	0a2d      	lsrs	r5, r5, #8
 801ed12:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801ed16:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ed1a:	432a      	orrs	r2, r5
 801ed1c:	3001      	adds	r0, #1
 801ed1e:	f100 80fe 	bmi.w	801ef1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801ed22:	4583      	cmp	fp, r0
 801ed24:	f340 80fb 	ble.w	801ef1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801ed28:	f1be 0f00 	cmp.w	lr, #0
 801ed2c:	f000 80fc 	beq.w	801ef28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801ed30:	2f00      	cmp	r7, #0
 801ed32:	f2c0 80f1 	blt.w	801ef18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ed36:	42be      	cmp	r6, r7
 801ed38:	f340 80ee 	ble.w	801ef18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ed3c:	9801      	ldr	r0, [sp, #4]
 801ed3e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801ed42:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801ed46:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ed4a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801ed4e:	fb0a fa00 	mul.w	sl, sl, r0
 801ed52:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801ed56:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801ed5a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801ed5e:	fb05 f808 	mul.w	r8, r5, r8
 801ed62:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801ed66:	4482      	add	sl, r0
 801ed68:	f108 0020 	add.w	r0, r8, #32
 801ed6c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ed70:	0a00      	lsrs	r0, r0, #8
 801ed72:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801ed76:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ed7a:	ea4b 0b00 	orr.w	fp, fp, r0
 801ed7e:	3701      	adds	r7, #1
 801ed80:	f100 80d7 	bmi.w	801ef32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ed84:	42be      	cmp	r6, r7
 801ed86:	f340 80d4 	ble.w	801ef32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ed8a:	2900      	cmp	r1, #0
 801ed8c:	f000 80d4 	beq.w	801ef38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801ed90:	3601      	adds	r6, #1
 801ed92:	9801      	ldr	r0, [sp, #4]
 801ed94:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ed98:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801ed9c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801eda0:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801eda4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801eda8:	fb09 f906 	mul.w	r9, r9, r6
 801edac:	fb07 f800 	mul.w	r8, r7, r0
 801edb0:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801edb4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801edb8:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801edbc:	44d1      	add	r9, sl
 801edbe:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801edc2:	f108 0020 	add.w	r0, r8, #32
 801edc6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801edca:	0a00      	lsrs	r0, r0, #8
 801edcc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801edd0:	4330      	orrs	r0, r6
 801edd2:	b28e      	uxth	r6, r1
 801edd4:	fa1f f98e 	uxth.w	r9, lr
 801edd8:	fb06 f809 	mul.w	r8, r6, r9
 801eddc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801ede0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ede4:	0136      	lsls	r6, r6, #4
 801ede6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801edea:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801edee:	9601      	str	r6, [sp, #4]
 801edf0:	ea4a 0404 	orr.w	r4, sl, r4
 801edf4:	fa1f f689 	uxth.w	r6, r9
 801edf8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801edfc:	fb11 f90e 	smulbb	r9, r1, lr
 801ee00:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801ee04:	9602      	str	r6, [sp, #8]
 801ee06:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ee0a:	4626      	mov	r6, r4
 801ee0c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ee10:	f1ce 0410 	rsb	r4, lr, #16
 801ee14:	1a64      	subs	r4, r4, r1
 801ee16:	ea4a 0202 	orr.w	r2, sl, r2
 801ee1a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801ee1e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ee22:	434a      	muls	r2, r1
 801ee24:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801ee28:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ee2c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ee30:	fb04 2406 	mla	r4, r4, r6, r2
 801ee34:	ea4a 0000 	orr.w	r0, sl, r0
 801ee38:	fb09 4200 	mla	r2, r9, r0, r4
 801ee3c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801ee40:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801ee44:	9801      	ldr	r0, [sp, #4]
 801ee46:	9903      	ldr	r1, [sp, #12]
 801ee48:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801ee4c:	ea44 0b0b 	orr.w	fp, r4, fp
 801ee50:	9c02      	ldr	r4, [sp, #8]
 801ee52:	8809      	ldrh	r1, [r1, #0]
 801ee54:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801ee58:	1b00      	subs	r0, r0, r4
 801ee5a:	9c01      	ldr	r4, [sp, #4]
 801ee5c:	eba4 0608 	sub.w	r6, r4, r8
 801ee60:	b2b6      	uxth	r6, r6
 801ee62:	b280      	uxth	r0, r0
 801ee64:	4373      	muls	r3, r6
 801ee66:	fb0c 3300 	mla	r3, ip, r0, r3
 801ee6a:	9802      	ldr	r0, [sp, #8]
 801ee6c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801ee70:	fb00 3505 	mla	r5, r0, r5, r3
 801ee74:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801ee78:	fb08 5707 	mla	r7, r8, r7, r5
 801ee7c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ee80:	120b      	asrs	r3, r1, #8
 801ee82:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ee86:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801ee8a:	b2ff      	uxtb	r7, r7
 801ee8c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ee90:	10c8      	asrs	r0, r1, #3
 801ee92:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ee96:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801ee9a:	00c9      	lsls	r1, r1, #3
 801ee9c:	437b      	muls	r3, r7
 801ee9e:	ea42 0e0e 	orr.w	lr, r2, lr
 801eea2:	b2c9      	uxtb	r1, r1
 801eea4:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801eea8:	fa1f f28e 	uxth.w	r2, lr
 801eeac:	4378      	muls	r0, r7
 801eeae:	434f      	muls	r7, r1
 801eeb0:	1c59      	adds	r1, r3, #1
 801eeb2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801eeb6:	1213      	asrs	r3, r2, #8
 801eeb8:	f023 0307 	bic.w	r3, r3, #7
 801eebc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801eec0:	1c41      	adds	r1, r0, #1
 801eec2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801eec6:	10d1      	asrs	r1, r2, #3
 801eec8:	f021 0103 	bic.w	r1, r1, #3
 801eecc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801eed0:	021b      	lsls	r3, r3, #8
 801eed2:	00c9      	lsls	r1, r1, #3
 801eed4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801eed8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801eedc:	430b      	orrs	r3, r1
 801eede:	1c79      	adds	r1, r7, #1
 801eee0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801eee4:	00d2      	lsls	r2, r2, #3
 801eee6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801eeea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801eeee:	431a      	orrs	r2, r3
 801eef0:	9b03      	ldr	r3, [sp, #12]
 801eef2:	801a      	strh	r2, [r3, #0]
 801eef4:	b005      	add	sp, #20
 801eef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eefa:	f04f 0c00 	mov.w	ip, #0
 801eefe:	4664      	mov	r4, ip
 801ef00:	e6e5      	b.n	801ecce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801ef02:	2300      	movs	r3, #0
 801ef04:	469c      	mov	ip, r3
 801ef06:	461a      	mov	r2, r3
 801ef08:	461c      	mov	r4, r3
 801ef0a:	e707      	b.n	801ed1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ef0c:	2300      	movs	r3, #0
 801ef0e:	461a      	mov	r2, r3
 801ef10:	e704      	b.n	801ed1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ef12:	460b      	mov	r3, r1
 801ef14:	460a      	mov	r2, r1
 801ef16:	e701      	b.n	801ed1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ef18:	2500      	movs	r5, #0
 801ef1a:	46ab      	mov	fp, r5
 801ef1c:	e72f      	b.n	801ed7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801ef1e:	2700      	movs	r7, #0
 801ef20:	463d      	mov	r5, r7
 801ef22:	4638      	mov	r0, r7
 801ef24:	46bb      	mov	fp, r7
 801ef26:	e754      	b.n	801edd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ef28:	4677      	mov	r7, lr
 801ef2a:	4675      	mov	r5, lr
 801ef2c:	4670      	mov	r0, lr
 801ef2e:	46f3      	mov	fp, lr
 801ef30:	e74f      	b.n	801edd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ef32:	2700      	movs	r7, #0
 801ef34:	4638      	mov	r0, r7
 801ef36:	e74c      	b.n	801edd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ef38:	460f      	mov	r7, r1
 801ef3a:	4608      	mov	r0, r1
 801ef3c:	e749      	b.n	801edd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801ef40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ef40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef44:	b093      	sub	sp, #76	@ 0x4c
 801ef46:	9210      	str	r2, [sp, #64]	@ 0x40
 801ef48:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ef4a:	910e      	str	r1, [sp, #56]	@ 0x38
 801ef4c:	9306      	str	r3, [sp, #24]
 801ef4e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801ef52:	9011      	str	r0, [sp, #68]	@ 0x44
 801ef54:	6850      	ldr	r0, [r2, #4]
 801ef56:	6812      	ldr	r2, [r2, #0]
 801ef58:	fb00 1303 	mla	r3, r0, r3, r1
 801ef5c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ef60:	9307      	str	r3, [sp, #28]
 801ef62:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ef64:	681b      	ldr	r3, [r3, #0]
 801ef66:	9308      	str	r3, [sp, #32]
 801ef68:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ef6a:	685b      	ldr	r3, [r3, #4]
 801ef6c:	9309      	str	r3, [sp, #36]	@ 0x24
 801ef6e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ef70:	2b00      	cmp	r3, #0
 801ef72:	dc03      	bgt.n	801ef7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ef74:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ef76:	2b00      	cmp	r3, #0
 801ef78:	f340 83b4 	ble.w	801f6e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801ef7c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ef7e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ef82:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ef86:	1e48      	subs	r0, r1, #1
 801ef88:	1e55      	subs	r5, r2, #1
 801ef8a:	9b06      	ldr	r3, [sp, #24]
 801ef8c:	2b00      	cmp	r3, #0
 801ef8e:	f340 8163 	ble.w	801f258 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801ef92:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801ef94:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ef96:	1436      	asrs	r6, r6, #16
 801ef98:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ef9c:	d406      	bmi.n	801efac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ef9e:	4286      	cmp	r6, r0
 801efa0:	da04      	bge.n	801efac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801efa2:	2b00      	cmp	r3, #0
 801efa4:	db02      	blt.n	801efac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801efa6:	42ab      	cmp	r3, r5
 801efa8:	f2c0 8157 	blt.w	801f25a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801efac:	3601      	adds	r6, #1
 801efae:	f100 8144 	bmi.w	801f23a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801efb2:	42b1      	cmp	r1, r6
 801efb4:	f2c0 8141 	blt.w	801f23a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801efb8:	3301      	adds	r3, #1
 801efba:	f100 813e 	bmi.w	801f23a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801efbe:	429a      	cmp	r2, r3
 801efc0:	f2c0 813b 	blt.w	801f23a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801efc4:	9b06      	ldr	r3, [sp, #24]
 801efc6:	9f07      	ldr	r7, [sp, #28]
 801efc8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801efca:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801efce:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801efd0:	2b00      	cmp	r3, #0
 801efd2:	f340 8164 	ble.w	801f29e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801efd6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801efd8:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801efda:	1418      	asrs	r0, r3, #16
 801efdc:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801efde:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801efe2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801efe4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801efe8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801efea:	142d      	asrs	r5, r5, #16
 801efec:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801eff0:	f100 81ee 	bmi.w	801f3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801eff4:	f102 3eff 	add.w	lr, r2, #4294967295
 801eff8:	4575      	cmp	r5, lr
 801effa:	f280 81e9 	bge.w	801f3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801effe:	2800      	cmp	r0, #0
 801f000:	f2c0 81e6 	blt.w	801f3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801f004:	f103 3eff 	add.w	lr, r3, #4294967295
 801f008:	4570      	cmp	r0, lr
 801f00a:	f280 81e1 	bge.w	801f3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801f00e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f010:	b212      	sxth	r2, r2
 801f012:	fb00 5002 	mla	r0, r0, r2, r5
 801f016:	fa1f fe81 	uxth.w	lr, r1
 801f01a:	eb03 0a00 	add.w	sl, r3, r0
 801f01e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801f022:	f813 9000 	ldrb.w	r9, [r3, r0]
 801f026:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f02a:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801f02e:	b29b      	uxth	r3, r3
 801f030:	f1bc 0f00 	cmp.w	ip, #0
 801f034:	f000 8179 	beq.w	801f32a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801f038:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801f03c:	940a      	str	r4, [sp, #40]	@ 0x28
 801f03e:	eb0a 0b02 	add.w	fp, sl, r2
 801f042:	fa1f fa8c 	uxth.w	sl, ip
 801f046:	fb0a fe0e 	mul.w	lr, sl, lr
 801f04a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801f04e:	fa1f fa8a 	uxth.w	sl, sl
 801f052:	eba5 050e 	sub.w	r5, r5, lr
 801f056:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f05a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801f05c:	eba3 030a 	sub.w	r3, r3, sl
 801f060:	b2ad      	uxth	r5, r5
 801f062:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801f064:	b29b      	uxth	r3, r3
 801f066:	fb08 f505 	mul.w	r5, r8, r5
 801f06a:	fb09 5303 	mla	r3, r9, r3, r5
 801f06e:	fb0a 3304 	mla	r3, sl, r4, r3
 801f072:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801f074:	fb0e 3304 	mla	r3, lr, r4, r3
 801f078:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f07c:	2b00      	cmp	r3, #0
 801f07e:	f000 80cf 	beq.w	801f220 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801f082:	9c08      	ldr	r4, [sp, #32]
 801f084:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801f088:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801f08c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801f090:	f000 8150 	beq.w	801f334 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801f094:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801f098:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f09c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f0a0:	fb09 f000 	mul.w	r0, r9, r0
 801f0a4:	fb0a fe0e 	mul.w	lr, sl, lr
 801f0a8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801f0ac:	f100 0b20 	add.w	fp, r0, #32
 801f0b0:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801f0b4:	44ce      	add	lr, r9
 801f0b6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801f0ba:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f0be:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f0c2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801f0c6:	ea4e 0909 	orr.w	r9, lr, r9
 801f0ca:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801f0ce:	8868      	ldrh	r0, [r5, #2]
 801f0d0:	d019      	beq.n	801f106 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801f0d2:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801f0d6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f0da:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f0de:	fb08 f800 	mul.w	r8, r8, r0
 801f0e2:	fb0a fe0e 	mul.w	lr, sl, lr
 801f0e6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801f0ea:	f108 0b20 	add.w	fp, r8, #32
 801f0ee:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801f0f2:	4486      	add	lr, r0
 801f0f4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801f0f8:	0a00      	lsrs	r0, r0, #8
 801f0fa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f0fe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f102:	ea4e 0000 	orr.w	r0, lr, r0
 801f106:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801f10a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f10e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801f112:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801f116:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f11a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f11e:	ea4e 0909 	orr.w	r9, lr, r9
 801f122:	ea4a 0000 	orr.w	r0, sl, r0
 801f126:	f1bc 0f00 	cmp.w	ip, #0
 801f12a:	f000 8105 	beq.w	801f338 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f12e:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801f132:	3a01      	subs	r2, #1
 801f134:	0052      	lsls	r2, r2, #1
 801f136:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801f138:	3202      	adds	r2, #2
 801f13a:	2cff      	cmp	r4, #255	@ 0xff
 801f13c:	eb05 0e02 	add.w	lr, r5, r2
 801f140:	5aaa      	ldrh	r2, [r5, r2]
 801f142:	d018      	beq.n	801f176 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801f144:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801f148:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f14c:	fb04 fa02 	mul.w	sl, r4, r2
 801f150:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f154:	fb08 f805 	mul.w	r8, r8, r5
 801f158:	f10a 0520 	add.w	r5, sl, #32
 801f15c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801f160:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801f164:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f168:	4442      	add	r2, r8
 801f16a:	0a2d      	lsrs	r5, r5, #8
 801f16c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801f170:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f174:	432a      	orrs	r2, r5
 801f176:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801f178:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801f17c:	2cff      	cmp	r4, #255	@ 0xff
 801f17e:	d01a      	beq.n	801f1b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801f180:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801f184:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f188:	fb04 fa05 	mul.w	sl, r4, r5
 801f18c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f190:	fb08 f80e 	mul.w	r8, r8, lr
 801f194:	f10a 0e20 	add.w	lr, sl, #32
 801f198:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801f19c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801f1a0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f1a4:	4445      	add	r5, r8
 801f1a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f1aa:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801f1ae:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801f1b2:	ea45 050e 	orr.w	r5, r5, lr
 801f1b6:	fb1c fe01 	smulbb	lr, ip, r1
 801f1ba:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801f1be:	f1cc 0810 	rsb	r8, ip, #16
 801f1c2:	eba8 0801 	sub.w	r8, r8, r1
 801f1c6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f1ca:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801f1ce:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801f1d2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801f1d6:	4341      	muls	r1, r0
 801f1d8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f1dc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f1e0:	ea4a 0202 	orr.w	r2, sl, r2
 801f1e4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801f1e8:	fb09 1108 	mla	r1, r9, r8, r1
 801f1ec:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f1f0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801f1f4:	fb0c 1102 	mla	r1, ip, r2, r1
 801f1f8:	ea4b 0505 	orr.w	r5, fp, r5
 801f1fc:	fb0e 1e05 	mla	lr, lr, r5, r1
 801f200:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f204:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f208:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f20c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f210:	ea42 0e0e 	orr.w	lr, r2, lr
 801f214:	fa1f f28e 	uxth.w	r2, lr
 801f218:	2bff      	cmp	r3, #255	@ 0xff
 801f21a:	f040 80a1 	bne.w	801f360 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801f21e:	803a      	strh	r2, [r7, #0]
 801f220:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801f222:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801f224:	4413      	add	r3, r2
 801f226:	931d      	str	r3, [sp, #116]	@ 0x74
 801f228:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801f22a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f22c:	441a      	add	r2, r3
 801f22e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f230:	921e      	str	r2, [sp, #120]	@ 0x78
 801f232:	3b01      	subs	r3, #1
 801f234:	3702      	adds	r7, #2
 801f236:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f238:	e6c9      	b.n	801efce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f23a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801f23c:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801f23e:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801f240:	4433      	add	r3, r6
 801f242:	931d      	str	r3, [sp, #116]	@ 0x74
 801f244:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f246:	441c      	add	r4, r3
 801f248:	9b06      	ldr	r3, [sp, #24]
 801f24a:	941e      	str	r4, [sp, #120]	@ 0x78
 801f24c:	3b01      	subs	r3, #1
 801f24e:	9306      	str	r3, [sp, #24]
 801f250:	9b07      	ldr	r3, [sp, #28]
 801f252:	3302      	adds	r3, #2
 801f254:	9307      	str	r3, [sp, #28]
 801f256:	e698      	b.n	801ef8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f258:	d028      	beq.n	801f2ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f25a:	9b06      	ldr	r3, [sp, #24]
 801f25c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801f25e:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801f260:	3b01      	subs	r3, #1
 801f262:	fb00 5003 	mla	r0, r0, r3, r5
 801f266:	1400      	asrs	r0, r0, #16
 801f268:	f53f aeac 	bmi.w	801efc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f26c:	3901      	subs	r1, #1
 801f26e:	4288      	cmp	r0, r1
 801f270:	f6bf aea8 	bge.w	801efc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f274:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801f276:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801f278:	fb01 0303 	mla	r3, r1, r3, r0
 801f27c:	141b      	asrs	r3, r3, #16
 801f27e:	f53f aea1 	bmi.w	801efc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f282:	3a01      	subs	r2, #1
 801f284:	4293      	cmp	r3, r2
 801f286:	f6bf ae9d 	bge.w	801efc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f28a:	9b06      	ldr	r3, [sp, #24]
 801f28c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801f290:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f292:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801f296:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f298:	2b00      	cmp	r3, #0
 801f29a:	f300 80b6 	bgt.w	801f40a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801f29e:	9b06      	ldr	r3, [sp, #24]
 801f2a0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f2a4:	9b07      	ldr	r3, [sp, #28]
 801f2a6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801f2aa:	9307      	str	r3, [sp, #28]
 801f2ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f2ae:	2b00      	cmp	r3, #0
 801f2b0:	f340 8218 	ble.w	801f6e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801f2b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f2b8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f2bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f2c0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f2c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f2c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f2ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f2ce:	eef0 6a62 	vmov.f32	s13, s5
 801f2d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f2d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f2da:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f2de:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801f2e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f2e6:	eef0 6a43 	vmov.f32	s13, s6
 801f2ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f2ee:	ee12 2a90 	vmov	r2, s5
 801f2f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f2f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f2fa:	ee13 2a10 	vmov	r2, s6
 801f2fe:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f300:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f302:	fb92 f3f3 	sdiv	r3, r2, r3
 801f306:	9320      	str	r3, [sp, #128]	@ 0x80
 801f308:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f30a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f30c:	3b01      	subs	r3, #1
 801f30e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f312:	930e      	str	r3, [sp, #56]	@ 0x38
 801f314:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f316:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801f31a:	bf08      	it	eq
 801f31c:	4613      	moveq	r3, r2
 801f31e:	9306      	str	r3, [sp, #24]
 801f320:	eeb0 3a67 	vmov.f32	s6, s15
 801f324:	eef0 2a47 	vmov.f32	s5, s14
 801f328:	e621      	b.n	801ef6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801f32a:	fb08 f505 	mul.w	r5, r8, r5
 801f32e:	fb09 5303 	mla	r3, r9, r3, r5
 801f332:	e6a1      	b.n	801f078 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801f334:	4681      	mov	r9, r0
 801f336:	e6c8      	b.n	801f0ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801f338:	f1c1 0210 	rsb	r2, r1, #16
 801f33c:	4341      	muls	r1, r0
 801f33e:	fb09 1902 	mla	r9, r9, r2, r1
 801f342:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f346:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801f34a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f34e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f352:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801f356:	ea42 0909 	orr.w	r9, r2, r9
 801f35a:	fa1f f289 	uxth.w	r2, r9
 801f35e:	e75b      	b.n	801f218 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801f360:	f8b7 c000 	ldrh.w	ip, [r7]
 801f364:	43db      	mvns	r3, r3
 801f366:	ea4f 202c 	mov.w	r0, ip, asr #8
 801f36a:	fa5f fe83 	uxtb.w	lr, r3
 801f36e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f372:	fb00 f00e 	mul.w	r0, r0, lr
 801f376:	1c41      	adds	r1, r0, #1
 801f378:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f37c:	1211      	asrs	r1, r2, #8
 801f37e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f382:	f021 0107 	bic.w	r1, r1, #7
 801f386:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801f38a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801f38e:	48d7      	ldr	r0, [pc, #860]	@ (801f6ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801f390:	fb05 f50e 	mul.w	r5, r5, lr
 801f394:	b2c9      	uxtb	r1, r1
 801f396:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801f39a:	1c69      	adds	r1, r5, #1
 801f39c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801f3a0:	10d1      	asrs	r1, r2, #3
 801f3a2:	f021 0103 	bic.w	r1, r1, #3
 801f3a6:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801f3aa:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801f3ae:	b2db      	uxtb	r3, r3
 801f3b0:	00c9      	lsls	r1, r1, #3
 801f3b2:	fb03 f30e 	mul.w	r3, r3, lr
 801f3b6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f3ba:	4301      	orrs	r1, r0
 801f3bc:	1c58      	adds	r0, r3, #1
 801f3be:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801f3c2:	00d2      	lsls	r2, r2, #3
 801f3c4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f3c8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f3cc:	430a      	orrs	r2, r1
 801f3ce:	e726      	b.n	801f21e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801f3d0:	f115 0e01 	adds.w	lr, r5, #1
 801f3d4:	f53f af24 	bmi.w	801f220 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801f3d8:	4572      	cmp	r2, lr
 801f3da:	f6ff af21 	blt.w	801f220 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801f3de:	f110 0e01 	adds.w	lr, r0, #1
 801f3e2:	f53f af1d 	bmi.w	801f220 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801f3e6:	4573      	cmp	r3, lr
 801f3e8:	f6ff af1a 	blt.w	801f220 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801f3ec:	b21b      	sxth	r3, r3
 801f3ee:	b212      	sxth	r2, r2
 801f3f0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801f3f4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801f3f8:	9301      	str	r3, [sp, #4]
 801f3fa:	9200      	str	r2, [sp, #0]
 801f3fc:	4639      	mov	r1, r7
 801f3fe:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801f402:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801f404:	f7ff fc24 	bl	801ec50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f408:	e70a      	b.n	801f220 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801f40a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801f40c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f410:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f412:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801f416:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f418:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f41c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f41e:	141f      	asrs	r7, r3, #16
 801f420:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801f422:	141b      	asrs	r3, r3, #16
 801f424:	fb01 3707 	mla	r7, r1, r7, r3
 801f428:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f42a:	fa1f fc82 	uxth.w	ip, r2
 801f42e:	eb03 0a07 	add.w	sl, r3, r7
 801f432:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801f436:	f813 9007 	ldrb.w	r9, [r3, r7]
 801f43a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f43e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801f442:	b29b      	uxth	r3, r3
 801f444:	2d00      	cmp	r5, #0
 801f446:	f000 80fe 	beq.w	801f646 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801f44a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801f44e:	940c      	str	r4, [sp, #48]	@ 0x30
 801f450:	eb0a 0b01 	add.w	fp, sl, r1
 801f454:	fa1f fa85 	uxth.w	sl, r5
 801f458:	fb0a fc0c 	mul.w	ip, sl, ip
 801f45c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801f460:	fa1f fa8a 	uxth.w	sl, sl
 801f464:	eba0 000c 	sub.w	r0, r0, ip
 801f468:	eba3 030a 	sub.w	r3, r3, sl
 801f46c:	b280      	uxth	r0, r0
 801f46e:	fb08 f000 	mul.w	r0, r8, r0
 801f472:	b29b      	uxth	r3, r3
 801f474:	fb09 0303 	mla	r3, r9, r3, r0
 801f478:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801f47a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f47e:	940d      	str	r4, [sp, #52]	@ 0x34
 801f480:	fb0a 3300 	mla	r3, sl, r0, r3
 801f484:	fb0c 3304 	mla	r3, ip, r4, r3
 801f488:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f48c:	2b00      	cmp	r3, #0
 801f48e:	f000 80cc 	beq.w	801f62a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801f492:	9808      	ldr	r0, [sp, #32]
 801f494:	9c08      	ldr	r4, [sp, #32]
 801f496:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801f49a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801f49e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801f4a2:	f000 80d5 	beq.w	801f650 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801f4a6:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801f4aa:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f4ae:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f4b2:	fb09 f707 	mul.w	r7, r9, r7
 801f4b6:	fb0a fc0c 	mul.w	ip, sl, ip
 801f4ba:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801f4be:	f107 0b20 	add.w	fp, r7, #32
 801f4c2:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801f4c6:	44cc      	add	ip, r9
 801f4c8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801f4cc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f4d0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f4d4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801f4d8:	ea4c 0909 	orr.w	r9, ip, r9
 801f4dc:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801f4e0:	8847      	ldrh	r7, [r0, #2]
 801f4e2:	d019      	beq.n	801f518 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801f4e4:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801f4e8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f4ec:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f4f0:	fb08 f807 	mul.w	r8, r8, r7
 801f4f4:	fb0a fc0c 	mul.w	ip, sl, ip
 801f4f8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801f4fc:	f108 0b20 	add.w	fp, r8, #32
 801f500:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801f504:	44bc      	add	ip, r7
 801f506:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801f50a:	0a3f      	lsrs	r7, r7, #8
 801f50c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f510:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f514:	ea4c 0707 	orr.w	r7, ip, r7
 801f518:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801f51c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801f520:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f524:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801f528:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f52c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801f530:	ea4c 0909 	orr.w	r9, ip, r9
 801f534:	ea4a 0707 	orr.w	r7, sl, r7
 801f538:	2d00      	cmp	r5, #0
 801f53a:	f000 808b 	beq.w	801f654 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801f53e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801f542:	3901      	subs	r1, #1
 801f544:	0049      	lsls	r1, r1, #1
 801f546:	3102      	adds	r1, #2
 801f548:	eb00 0c01 	add.w	ip, r0, r1
 801f54c:	5a41      	ldrh	r1, [r0, r1]
 801f54e:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801f550:	28ff      	cmp	r0, #255	@ 0xff
 801f552:	d019      	beq.n	801f588 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801f554:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801f556:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801f55a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f55e:	fb04 fa01 	mul.w	sl, r4, r1
 801f562:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f566:	fb08 f800 	mul.w	r8, r8, r0
 801f56a:	f10a 0020 	add.w	r0, sl, #32
 801f56e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801f572:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801f576:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f57a:	4441      	add	r1, r8
 801f57c:	0a00      	lsrs	r0, r0, #8
 801f57e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801f582:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f586:	4301      	orrs	r1, r0
 801f588:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f58a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801f58e:	2cff      	cmp	r4, #255	@ 0xff
 801f590:	d01a      	beq.n	801f5c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801f592:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801f596:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f59a:	fb04 fa00 	mul.w	sl, r4, r0
 801f59e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f5a2:	fb08 f80c 	mul.w	r8, r8, ip
 801f5a6:	f10a 0c20 	add.w	ip, sl, #32
 801f5aa:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801f5ae:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801f5b2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f5b6:	4440      	add	r0, r8
 801f5b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f5bc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801f5c0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801f5c4:	ea40 000c 	orr.w	r0, r0, ip
 801f5c8:	fb15 fc02 	smulbb	ip, r5, r2
 801f5cc:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801f5d0:	f1c5 0810 	rsb	r8, r5, #16
 801f5d4:	eba8 0802 	sub.w	r8, r8, r2
 801f5d8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801f5dc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801f5e0:	437a      	muls	r2, r7
 801f5e2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801f5e6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801f5ea:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f5ee:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f5f2:	fb09 2208 	mla	r2, r9, r8, r2
 801f5f6:	ea4a 0101 	orr.w	r1, sl, r1
 801f5fa:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801f5fe:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f602:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f606:	fb05 2201 	mla	r2, r5, r1, r2
 801f60a:	ea4b 0000 	orr.w	r0, fp, r0
 801f60e:	fb0c 2200 	mla	r2, ip, r0, r2
 801f612:	0d57      	lsrs	r7, r2, #21
 801f614:	0952      	lsrs	r2, r2, #5
 801f616:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f61a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f61e:	433a      	orrs	r2, r7
 801f620:	2bff      	cmp	r3, #255	@ 0xff
 801f622:	b292      	uxth	r2, r2
 801f624:	d127      	bne.n	801f676 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801f626:	f8ae 2000 	strh.w	r2, [lr]
 801f62a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801f62c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801f62e:	4413      	add	r3, r2
 801f630:	931d      	str	r3, [sp, #116]	@ 0x74
 801f632:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801f634:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f636:	441a      	add	r2, r3
 801f638:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f63a:	921e      	str	r2, [sp, #120]	@ 0x78
 801f63c:	3b01      	subs	r3, #1
 801f63e:	f10e 0e02 	add.w	lr, lr, #2
 801f642:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f644:	e627      	b.n	801f296 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f646:	fb08 f000 	mul.w	r0, r8, r0
 801f64a:	fb09 0303 	mla	r3, r9, r3, r0
 801f64e:	e71b      	b.n	801f488 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801f650:	46b9      	mov	r9, r7
 801f652:	e743      	b.n	801f4dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801f654:	f1c2 0110 	rsb	r1, r2, #16
 801f658:	437a      	muls	r2, r7
 801f65a:	fb09 2901 	mla	r9, r9, r1, r2
 801f65e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f662:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801f666:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801f66a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f66e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f672:	4302      	orrs	r2, r0
 801f674:	e7d4      	b.n	801f620 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801f676:	f8be 7000 	ldrh.w	r7, [lr]
 801f67a:	4c1c      	ldr	r4, [pc, #112]	@ (801f6ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801f67c:	43db      	mvns	r3, r3
 801f67e:	1238      	asrs	r0, r7, #8
 801f680:	fa5f fc83 	uxtb.w	ip, r3
 801f684:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f688:	10fd      	asrs	r5, r7, #3
 801f68a:	fb00 f00c 	mul.w	r0, r0, ip
 801f68e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801f692:	fb05 f10c 	mul.w	r1, r5, ip
 801f696:	1c45      	adds	r5, r0, #1
 801f698:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801f69c:	1215      	asrs	r5, r2, #8
 801f69e:	f025 0507 	bic.w	r5, r5, #7
 801f6a2:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801f6a6:	1c4d      	adds	r5, r1, #1
 801f6a8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801f6ac:	10d1      	asrs	r1, r2, #3
 801f6ae:	f021 0103 	bic.w	r1, r1, #3
 801f6b2:	00fb      	lsls	r3, r7, #3
 801f6b4:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801f6b8:	b2db      	uxtb	r3, r3
 801f6ba:	b2c0      	uxtb	r0, r0
 801f6bc:	00c9      	lsls	r1, r1, #3
 801f6be:	fb03 f30c 	mul.w	r3, r3, ip
 801f6c2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f6c6:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801f6ca:	4308      	orrs	r0, r1
 801f6cc:	1c59      	adds	r1, r3, #1
 801f6ce:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f6d2:	00d2      	lsls	r2, r2, #3
 801f6d4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f6d8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801f6dc:	4318      	orrs	r0, r3
 801f6de:	f8ae 0000 	strh.w	r0, [lr]
 801f6e2:	e7a2      	b.n	801f62a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801f6e4:	b013      	add	sp, #76	@ 0x4c
 801f6e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f6ea:	bf00      	nop
 801f6ec:	fffff800 	.word	0xfffff800

0801f6f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801f6f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f6f4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801f6f8:	fb05 4c03 	mla	ip, r5, r3, r4
 801f6fc:	2d00      	cmp	r5, #0
 801f6fe:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801f702:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801f706:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801f70a:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801f70e:	8808      	ldrh	r0, [r1, #0]
 801f710:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801f714:	f2c0 80a7 	blt.w	801f866 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801f718:	45aa      	cmp	sl, r5
 801f71a:	f340 80a4 	ble.w	801f866 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801f71e:	2c00      	cmp	r4, #0
 801f720:	f2c0 809f 	blt.w	801f862 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801f724:	42a3      	cmp	r3, r4
 801f726:	f340 809c 	ble.w	801f862 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801f72a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801f72e:	1c62      	adds	r2, r4, #1
 801f730:	f100 809c 	bmi.w	801f86c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801f734:	4293      	cmp	r3, r2
 801f736:	f340 8099 	ble.w	801f86c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801f73a:	f1b9 0f00 	cmp.w	r9, #0
 801f73e:	f000 8095 	beq.w	801f86c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801f742:	f8be c002 	ldrh.w	ip, [lr, #2]
 801f746:	3501      	adds	r5, #1
 801f748:	f100 8094 	bmi.w	801f874 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801f74c:	45aa      	cmp	sl, r5
 801f74e:	f340 8091 	ble.w	801f874 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801f752:	2f00      	cmp	r7, #0
 801f754:	f000 808e 	beq.w	801f874 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801f758:	2c00      	cmp	r4, #0
 801f75a:	f2c0 8089 	blt.w	801f870 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801f75e:	42a3      	cmp	r3, r4
 801f760:	f340 8086 	ble.w	801f870 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801f764:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801f768:	3401      	adds	r4, #1
 801f76a:	f100 8086 	bmi.w	801f87a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801f76e:	42a3      	cmp	r3, r4
 801f770:	f340 8083 	ble.w	801f87a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801f774:	f1b9 0f00 	cmp.w	r9, #0
 801f778:	d07f      	beq.n	801f87a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801f77a:	3301      	adds	r3, #1
 801f77c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801f780:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801f784:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801f788:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801f78c:	fb19 fe07 	smulbb	lr, r9, r7
 801f790:	ea44 0808 	orr.w	r8, r4, r8
 801f794:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801f798:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801f79c:	f1c7 0210 	rsb	r2, r7, #16
 801f7a0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801f7a4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801f7a8:	ea44 0c0c 	orr.w	ip, r4, ip
 801f7ac:	eba2 0209 	sub.w	r2, r2, r9
 801f7b0:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801f7b4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801f7b8:	fb04 f40c 	mul.w	r4, r4, ip
 801f7bc:	fb02 4808 	mla	r8, r2, r8, r4
 801f7c0:	041a      	lsls	r2, r3, #16
 801f7c2:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f7c6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f7ca:	4313      	orrs	r3, r2
 801f7cc:	042a      	lsls	r2, r5, #16
 801f7ce:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f7d2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801f7d6:	fb0e 8303 	mla	r3, lr, r3, r8
 801f7da:	432a      	orrs	r2, r5
 801f7dc:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801f7e0:	fb07 3202 	mla	r2, r7, r2, r3
 801f7e4:	0d53      	lsrs	r3, r2, #21
 801f7e6:	0952      	lsrs	r2, r2, #5
 801f7e8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f7ec:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f7f0:	431a      	orrs	r2, r3
 801f7f2:	b293      	uxth	r3, r2
 801f7f4:	b2b4      	uxth	r4, r6
 801f7f6:	1202      	asrs	r2, r0, #8
 801f7f8:	43f6      	mvns	r6, r6
 801f7fa:	b2f6      	uxtb	r6, r6
 801f7fc:	121d      	asrs	r5, r3, #8
 801f7fe:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801f802:	fb12 f206 	smulbb	r2, r2, r6
 801f806:	10c7      	asrs	r7, r0, #3
 801f808:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f80c:	00c0      	lsls	r0, r0, #3
 801f80e:	fb05 2504 	mla	r5, r5, r4, r2
 801f812:	b2c0      	uxtb	r0, r0
 801f814:	10da      	asrs	r2, r3, #3
 801f816:	00db      	lsls	r3, r3, #3
 801f818:	b2db      	uxtb	r3, r3
 801f81a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801f81e:	fb10 f006 	smulbb	r0, r0, r6
 801f822:	b2ad      	uxth	r5, r5
 801f824:	fb03 0004 	mla	r0, r3, r4, r0
 801f828:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f82c:	fb17 f706 	smulbb	r7, r7, r6
 801f830:	b280      	uxth	r0, r0
 801f832:	1c6b      	adds	r3, r5, #1
 801f834:	fb02 7204 	mla	r2, r2, r4, r7
 801f838:	b292      	uxth	r2, r2
 801f83a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f83e:	1c43      	adds	r3, r0, #1
 801f840:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f844:	1c50      	adds	r0, r2, #1
 801f846:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801f84a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f84e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f852:	0952      	lsrs	r2, r2, #5
 801f854:	432b      	orrs	r3, r5
 801f856:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f85a:	4313      	orrs	r3, r2
 801f85c:	800b      	strh	r3, [r1, #0]
 801f85e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f862:	4680      	mov	r8, r0
 801f864:	e763      	b.n	801f72e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801f866:	4684      	mov	ip, r0
 801f868:	4680      	mov	r8, r0
 801f86a:	e76c      	b.n	801f746 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801f86c:	4684      	mov	ip, r0
 801f86e:	e76a      	b.n	801f746 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801f870:	4605      	mov	r5, r0
 801f872:	e779      	b.n	801f768 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801f874:	4603      	mov	r3, r0
 801f876:	4605      	mov	r5, r0
 801f878:	e782      	b.n	801f780 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801f87a:	4603      	mov	r3, r0
 801f87c:	e780      	b.n	801f780 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801f87e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f87e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f882:	b093      	sub	sp, #76	@ 0x4c
 801f884:	461d      	mov	r5, r3
 801f886:	9210      	str	r2, [sp, #64]	@ 0x40
 801f888:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f88a:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801f88e:	920b      	str	r2, [sp, #44]	@ 0x2c
 801f890:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801f894:	910a      	str	r1, [sp, #40]	@ 0x28
 801f896:	6859      	ldr	r1, [r3, #4]
 801f898:	681b      	ldr	r3, [r3, #0]
 801f89a:	9011      	str	r0, [sp, #68]	@ 0x44
 801f89c:	fb01 2707 	mla	r7, r1, r7, r2
 801f8a0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801f8a4:	9307      	str	r3, [sp, #28]
 801f8a6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f8a8:	681b      	ldr	r3, [r3, #0]
 801f8aa:	9309      	str	r3, [sp, #36]	@ 0x24
 801f8ac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f8ae:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801f8b2:	43db      	mvns	r3, r3
 801f8b4:	b2db      	uxtb	r3, r3
 801f8b6:	9308      	str	r3, [sp, #32]
 801f8b8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f8ba:	2b00      	cmp	r3, #0
 801f8bc:	dc03      	bgt.n	801f8c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f8be:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f8c0:	2b00      	cmp	r3, #0
 801f8c2:	f340 8203 	ble.w	801fccc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801f8c6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f8c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f8cc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f8d0:	1e48      	subs	r0, r1, #1
 801f8d2:	f102 3cff 	add.w	ip, r2, #4294967295
 801f8d6:	2d00      	cmp	r5, #0
 801f8d8:	f340 80da 	ble.w	801fa90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801f8dc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f8e0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f8e4:	d406      	bmi.n	801f8f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f8e6:	4586      	cmp	lr, r0
 801f8e8:	da04      	bge.n	801f8f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f8ea:	2b00      	cmp	r3, #0
 801f8ec:	db02      	blt.n	801f8f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f8ee:	4563      	cmp	r3, ip
 801f8f0:	f2c0 80cf 	blt.w	801fa92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f8f4:	f11e 0e01 	adds.w	lr, lr, #1
 801f8f8:	f100 80c1 	bmi.w	801fa7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f8fc:	4571      	cmp	r1, lr
 801f8fe:	f2c0 80be 	blt.w	801fa7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f902:	3301      	adds	r3, #1
 801f904:	f100 80bb 	bmi.w	801fa7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f908:	429a      	cmp	r2, r3
 801f90a:	f2c0 80b8 	blt.w	801fa7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f90e:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801f912:	46a9      	mov	r9, r5
 801f914:	f1b9 0f00 	cmp.w	r9, #0
 801f918:	f340 80d8 	ble.w	801facc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801f91c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f91e:	1421      	asrs	r1, r4, #16
 801f920:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f924:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f928:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801f92c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801f930:	f100 8111 	bmi.w	801fb56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801f934:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f938:	4551      	cmp	r1, sl
 801f93a:	f280 810c 	bge.w	801fb56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801f93e:	2800      	cmp	r0, #0
 801f940:	f2c0 8109 	blt.w	801fb56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801f944:	f103 3aff 	add.w	sl, r3, #4294967295
 801f948:	4550      	cmp	r0, sl
 801f94a:	f280 8104 	bge.w	801fb56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801f94e:	fa0f f38e 	sxth.w	r3, lr
 801f952:	fb00 1103 	mla	r1, r0, r3, r1
 801f956:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801f958:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801f95c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801f960:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801f964:	f1bc 0f00 	cmp.w	ip, #0
 801f968:	d007      	beq.n	801f97a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801f96a:	005b      	lsls	r3, r3, #1
 801f96c:	eb0a 0003 	add.w	r0, sl, r3
 801f970:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801f974:	930c      	str	r3, [sp, #48]	@ 0x30
 801f976:	8843      	ldrh	r3, [r0, #2]
 801f978:	930d      	str	r3, [sp, #52]	@ 0x34
 801f97a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801f97e:	fb12 f30c 	smulbb	r3, r2, ip
 801f982:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f986:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801f98a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f98e:	10db      	asrs	r3, r3, #3
 801f990:	ea40 000e 	orr.w	r0, r0, lr
 801f994:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f998:	f1cc 0e10 	rsb	lr, ip, #16
 801f99c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f9a0:	ebae 0e02 	sub.w	lr, lr, r2
 801f9a4:	ea4a 0101 	orr.w	r1, sl, r1
 801f9a8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801f9ac:	4351      	muls	r1, r2
 801f9ae:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801f9b0:	9f08      	ldr	r7, [sp, #32]
 801f9b2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801f9b6:	fb0e 1e00 	mla	lr, lr, r0, r1
 801f9ba:	0410      	lsls	r0, r2, #16
 801f9bc:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f9c0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f9c4:	4310      	orrs	r0, r2
 801f9c6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801f9c8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f9ca:	0412      	lsls	r2, r2, #16
 801f9cc:	fb03 e000 	mla	r0, r3, r0, lr
 801f9d0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f9d4:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801f9d8:	ea42 020e 	orr.w	r2, r2, lr
 801f9dc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801f9e0:	fb03 0302 	mla	r3, r3, r2, r0
 801f9e4:	0d5a      	lsrs	r2, r3, #21
 801f9e6:	095b      	lsrs	r3, r3, #5
 801f9e8:	f8b8 0000 	ldrh.w	r0, [r8]
 801f9ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f9f0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f9f4:	4313      	orrs	r3, r2
 801f9f6:	b29b      	uxth	r3, r3
 801f9f8:	1201      	asrs	r1, r0, #8
 801f9fa:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801f9fe:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801fa02:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801fa06:	fb11 f107 	smulbb	r1, r1, r7
 801fa0a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801fa0e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801fa12:	00c0      	lsls	r0, r0, #3
 801fa14:	fb0c 1c02 	mla	ip, ip, r2, r1
 801fa18:	b2c0      	uxtb	r0, r0
 801fa1a:	10d9      	asrs	r1, r3, #3
 801fa1c:	00db      	lsls	r3, r3, #3
 801fa1e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801fa22:	b2db      	uxtb	r3, r3
 801fa24:	fb10 f007 	smulbb	r0, r0, r7
 801fa28:	fa1f fc8c 	uxth.w	ip, ip
 801fa2c:	fb03 0302 	mla	r3, r3, r2, r0
 801fa30:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801fa34:	fb1e fe07 	smulbb	lr, lr, r7
 801fa38:	fb01 e102 	mla	r1, r1, r2, lr
 801fa3c:	b29a      	uxth	r2, r3
 801fa3e:	f10c 0301 	add.w	r3, ip, #1
 801fa42:	b289      	uxth	r1, r1
 801fa44:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fa48:	1c53      	adds	r3, r2, #1
 801fa4a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fa4e:	1c4a      	adds	r2, r1, #1
 801fa50:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fa54:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801fa58:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fa5c:	0949      	lsrs	r1, r1, #5
 801fa5e:	ea43 030c 	orr.w	r3, r3, ip
 801fa62:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801fa66:	430b      	orrs	r3, r1
 801fa68:	f8a8 3000 	strh.w	r3, [r8]
 801fa6c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fa6e:	441c      	add	r4, r3
 801fa70:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fa72:	f108 0802 	add.w	r8, r8, #2
 801fa76:	441e      	add	r6, r3
 801fa78:	f109 39ff 	add.w	r9, r9, #4294967295
 801fa7c:	e74a      	b.n	801f914 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801fa7e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fa80:	441c      	add	r4, r3
 801fa82:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fa84:	441e      	add	r6, r3
 801fa86:	9b07      	ldr	r3, [sp, #28]
 801fa88:	3302      	adds	r3, #2
 801fa8a:	3d01      	subs	r5, #1
 801fa8c:	9307      	str	r3, [sp, #28]
 801fa8e:	e722      	b.n	801f8d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fa90:	d022      	beq.n	801fad8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801fa92:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801fa94:	1e6b      	subs	r3, r5, #1
 801fa96:	fb00 4003 	mla	r0, r0, r3, r4
 801fa9a:	1400      	asrs	r0, r0, #16
 801fa9c:	f53f af37 	bmi.w	801f90e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801faa0:	3901      	subs	r1, #1
 801faa2:	4288      	cmp	r0, r1
 801faa4:	f6bf af33 	bge.w	801f90e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801faa8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801faaa:	fb01 6303 	mla	r3, r1, r3, r6
 801faae:	141b      	asrs	r3, r3, #16
 801fab0:	f53f af2d 	bmi.w	801f90e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801fab4:	3a01      	subs	r2, #1
 801fab6:	4293      	cmp	r3, r2
 801fab8:	f6bf af29 	bge.w	801f90e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801fabc:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801fac0:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801fac4:	46a8      	mov	r8, r5
 801fac6:	f1b8 0f00 	cmp.w	r8, #0
 801faca:	dc5e      	bgt.n	801fb8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801facc:	9b07      	ldr	r3, [sp, #28]
 801face:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fad2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801fad6:	9307      	str	r3, [sp, #28]
 801fad8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fada:	2b00      	cmp	r3, #0
 801fadc:	f340 80f6 	ble.w	801fccc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fae0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fae4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fae8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801faec:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801faee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801faf2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801faf6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fafa:	eef0 6a62 	vmov.f32	s13, s5
 801fafe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fb02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb06:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fb0a:	ee16 4a90 	vmov	r4, s13
 801fb0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fb12:	eef0 6a43 	vmov.f32	s13, s6
 801fb16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fb1a:	ee12 2a90 	vmov	r2, s5
 801fb1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fb22:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb26:	ee13 2a10 	vmov	r2, s6
 801fb2a:	931f      	str	r3, [sp, #124]	@ 0x7c
 801fb2c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fb2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb32:	9320      	str	r3, [sp, #128]	@ 0x80
 801fb34:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fb36:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801fb38:	3b01      	subs	r3, #1
 801fb3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb3e:	930a      	str	r3, [sp, #40]	@ 0x28
 801fb40:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fb42:	ee16 6a90 	vmov	r6, s13
 801fb46:	bf14      	ite	ne
 801fb48:	461d      	movne	r5, r3
 801fb4a:	4615      	moveq	r5, r2
 801fb4c:	eeb0 3a67 	vmov.f32	s6, s15
 801fb50:	eef0 2a47 	vmov.f32	s5, s14
 801fb54:	e6b0      	b.n	801f8b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801fb56:	f111 0a01 	adds.w	sl, r1, #1
 801fb5a:	d487      	bmi.n	801fa6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801fb5c:	45d6      	cmp	lr, sl
 801fb5e:	db85      	blt.n	801fa6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801fb60:	f110 0a01 	adds.w	sl, r0, #1
 801fb64:	d482      	bmi.n	801fa6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801fb66:	4553      	cmp	r3, sl
 801fb68:	db80      	blt.n	801fa6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801fb6a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801fb6c:	9101      	str	r1, [sp, #4]
 801fb6e:	b21b      	sxth	r3, r3
 801fb70:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801fb74:	9300      	str	r3, [sp, #0]
 801fb76:	e9cd c704 	strd	ip, r7, [sp, #16]
 801fb7a:	fa0f f38e 	sxth.w	r3, lr
 801fb7e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801fb80:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801fb82:	4641      	mov	r1, r8
 801fb84:	f7ff fdb4 	bl	801f6f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801fb88:	e770      	b.n	801fa6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801fb8a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fb8c:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801fb8e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fb92:	1430      	asrs	r0, r6, #16
 801fb94:	1423      	asrs	r3, r4, #16
 801fb96:	fb01 3000 	mla	r0, r1, r0, r3
 801fb9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fb9c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801fba0:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801fba4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801fba8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fbac:	8858      	ldrh	r0, [r3, #2]
 801fbae:	f1be 0f00 	cmp.w	lr, #0
 801fbb2:	d00b      	beq.n	801fbcc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801fbb4:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801fbb8:	3901      	subs	r1, #1
 801fbba:	0049      	lsls	r1, r1, #1
 801fbbc:	3102      	adds	r1, #2
 801fbbe:	eb03 0b01 	add.w	fp, r3, r1
 801fbc2:	5a5b      	ldrh	r3, [r3, r1]
 801fbc4:	930e      	str	r3, [sp, #56]	@ 0x38
 801fbc6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801fbca:	930f      	str	r3, [sp, #60]	@ 0x3c
 801fbcc:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801fbd0:	fb12 f30e 	smulbb	r3, r2, lr
 801fbd4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801fbd8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801fbdc:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801fbe0:	10db      	asrs	r3, r3, #3
 801fbe2:	ea41 010c 	orr.w	r1, r1, ip
 801fbe6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801fbea:	f1ce 0c10 	rsb	ip, lr, #16
 801fbee:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801fbf2:	ebac 0c02 	sub.w	ip, ip, r2
 801fbf6:	ea4b 0000 	orr.w	r0, fp, r0
 801fbfa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801fbfe:	4350      	muls	r0, r2
 801fc00:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fc02:	9f08      	ldr	r7, [sp, #32]
 801fc04:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801fc08:	fb0c 0c01 	mla	ip, ip, r1, r0
 801fc0c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801fc10:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801fc14:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801fc16:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801fc18:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801fc1c:	0412      	lsls	r2, r2, #16
 801fc1e:	ea4b 0101 	orr.w	r1, fp, r1
 801fc22:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801fc26:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801fc2a:	fb03 c101 	mla	r1, r3, r1, ip
 801fc2e:	4302      	orrs	r2, r0
 801fc30:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801fc34:	fb03 1202 	mla	r2, r3, r2, r1
 801fc38:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801fc3c:	0952      	lsrs	r2, r2, #5
 801fc3e:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801fc42:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801fc46:	f8b9 2000 	ldrh.w	r2, [r9]
 801fc4a:	ea4b 0303 	orr.w	r3, fp, r3
 801fc4e:	b29b      	uxth	r3, r3
 801fc50:	1211      	asrs	r1, r2, #8
 801fc52:	1218      	asrs	r0, r3, #8
 801fc54:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801fc58:	fb11 f107 	smulbb	r1, r1, r7
 801fc5c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801fc60:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801fc64:	00d2      	lsls	r2, r2, #3
 801fc66:	fb00 100a 	mla	r0, r0, sl, r1
 801fc6a:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801fc6e:	10d9      	asrs	r1, r3, #3
 801fc70:	b2d2      	uxtb	r2, r2
 801fc72:	00db      	lsls	r3, r3, #3
 801fc74:	fb1c fc07 	smulbb	ip, ip, r7
 801fc78:	fb12 f207 	smulbb	r2, r2, r7
 801fc7c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801fc80:	b2db      	uxtb	r3, r3
 801fc82:	b280      	uxth	r0, r0
 801fc84:	fb01 c10a 	mla	r1, r1, sl, ip
 801fc88:	fb03 230a 	mla	r3, r3, sl, r2
 801fc8c:	b29b      	uxth	r3, r3
 801fc8e:	b289      	uxth	r1, r1
 801fc90:	1c42      	adds	r2, r0, #1
 801fc92:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fc96:	f101 0c01 	add.w	ip, r1, #1
 801fc9a:	1c5a      	adds	r2, r3, #1
 801fc9c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fca0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801fca4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fca6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801fcaa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fcae:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fcb2:	4310      	orrs	r0, r2
 801fcb4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801fcb8:	441c      	add	r4, r3
 801fcba:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fcbc:	ea40 000c 	orr.w	r0, r0, ip
 801fcc0:	f829 0b02 	strh.w	r0, [r9], #2
 801fcc4:	441e      	add	r6, r3
 801fcc6:	f108 38ff 	add.w	r8, r8, #4294967295
 801fcca:	e6fc      	b.n	801fac6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801fccc:	b013      	add	sp, #76	@ 0x4c
 801fcce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fcd2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801fcd2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801fcd6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801fcda:	fb0e 4703 	mla	r7, lr, r3, r4
 801fcde:	f1be 0f00 	cmp.w	lr, #0
 801fce2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801fce6:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801fcea:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801fcee:	8808      	ldrh	r0, [r1, #0]
 801fcf0:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801fcf4:	db60      	blt.n	801fdb8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801fcf6:	45f1      	cmp	r9, lr
 801fcf8:	dd5e      	ble.n	801fdb8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801fcfa:	2c00      	cmp	r4, #0
 801fcfc:	db5a      	blt.n	801fdb4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801fcfe:	42a3      	cmp	r3, r4
 801fd00:	dd58      	ble.n	801fdb4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801fd02:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801fd06:	1c62      	adds	r2, r4, #1
 801fd08:	d459      	bmi.n	801fdbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801fd0a:	4293      	cmp	r3, r2
 801fd0c:	dd57      	ble.n	801fdbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801fd0e:	2d00      	cmp	r5, #0
 801fd10:	d055      	beq.n	801fdbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801fd12:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801fd16:	f11e 0e01 	adds.w	lr, lr, #1
 801fd1a:	d454      	bmi.n	801fdc6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801fd1c:	45f1      	cmp	r9, lr
 801fd1e:	dd52      	ble.n	801fdc6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801fd20:	2e00      	cmp	r6, #0
 801fd22:	d050      	beq.n	801fdc6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801fd24:	2c00      	cmp	r4, #0
 801fd26:	db4c      	blt.n	801fdc2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801fd28:	42a3      	cmp	r3, r4
 801fd2a:	dd4a      	ble.n	801fdc2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801fd2c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801fd30:	3401      	adds	r4, #1
 801fd32:	d405      	bmi.n	801fd40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801fd34:	42a3      	cmp	r3, r4
 801fd36:	dd03      	ble.n	801fd40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801fd38:	b115      	cbz	r5, 801fd40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801fd3a:	3301      	adds	r3, #1
 801fd3c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801fd40:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801fd44:	fb15 f406 	smulbb	r4, r5, r6
 801fd48:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801fd4c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801fd50:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801fd54:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801fd58:	ea43 0c0c 	orr.w	ip, r3, ip
 801fd5c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801fd60:	f1c6 0310 	rsb	r3, r6, #16
 801fd64:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801fd68:	1b5b      	subs	r3, r3, r5
 801fd6a:	ea4e 0707 	orr.w	r7, lr, r7
 801fd6e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801fd72:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801fd76:	437d      	muls	r5, r7
 801fd78:	fb03 5c0c 	mla	ip, r3, ip, r5
 801fd7c:	0403      	lsls	r3, r0, #16
 801fd7e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801fd82:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801fd86:	4318      	orrs	r0, r3
 801fd88:	0413      	lsls	r3, r2, #16
 801fd8a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801fd8e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801fd92:	4313      	orrs	r3, r2
 801fd94:	fb04 c000 	mla	r0, r4, r0, ip
 801fd98:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801fd9c:	fb06 0003 	mla	r0, r6, r3, r0
 801fda0:	0d43      	lsrs	r3, r0, #21
 801fda2:	0940      	lsrs	r0, r0, #5
 801fda4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fda8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801fdac:	4318      	orrs	r0, r3
 801fdae:	8008      	strh	r0, [r1, #0]
 801fdb0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801fdb4:	4684      	mov	ip, r0
 801fdb6:	e7a6      	b.n	801fd06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801fdb8:	4607      	mov	r7, r0
 801fdba:	4684      	mov	ip, r0
 801fdbc:	e7ab      	b.n	801fd16 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801fdbe:	4607      	mov	r7, r0
 801fdc0:	e7a9      	b.n	801fd16 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801fdc2:	4602      	mov	r2, r0
 801fdc4:	e7b4      	b.n	801fd30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801fdc6:	4602      	mov	r2, r0
 801fdc8:	e7ba      	b.n	801fd40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801fdca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fdca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fdce:	b08f      	sub	sp, #60	@ 0x3c
 801fdd0:	461d      	mov	r5, r3
 801fdd2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801fdd4:	920c      	str	r2, [sp, #48]	@ 0x30
 801fdd6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801fdda:	9107      	str	r1, [sp, #28]
 801fddc:	6859      	ldr	r1, [r3, #4]
 801fdde:	681b      	ldr	r3, [r3, #0]
 801fde0:	900d      	str	r0, [sp, #52]	@ 0x34
 801fde2:	fb01 2707 	mla	r7, r1, r7, r2
 801fde6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801fdea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fdec:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801fdf0:	f8d3 8000 	ldr.w	r8, [r3]
 801fdf4:	9b07      	ldr	r3, [sp, #28]
 801fdf6:	2b00      	cmp	r3, #0
 801fdf8:	dc03      	bgt.n	801fe02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801fdfa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fdfc:	2b00      	cmp	r3, #0
 801fdfe:	f340 8181 	ble.w	8020104 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801fe02:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fe04:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fe08:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fe0c:	1e48      	subs	r0, r1, #1
 801fe0e:	f102 3cff 	add.w	ip, r2, #4294967295
 801fe12:	2d00      	cmp	r5, #0
 801fe14:	f340 809b 	ble.w	801ff4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801fe18:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fe1c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fe20:	d406      	bmi.n	801fe30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fe22:	4586      	cmp	lr, r0
 801fe24:	da04      	bge.n	801fe30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fe26:	2b00      	cmp	r3, #0
 801fe28:	db02      	blt.n	801fe30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fe2a:	4563      	cmp	r3, ip
 801fe2c:	f2c0 8090 	blt.w	801ff50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801fe30:	f11e 0e01 	adds.w	lr, lr, #1
 801fe34:	f100 8084 	bmi.w	801ff40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fe38:	4571      	cmp	r1, lr
 801fe3a:	f2c0 8081 	blt.w	801ff40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fe3e:	3301      	adds	r3, #1
 801fe40:	d47e      	bmi.n	801ff40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fe42:	429a      	cmp	r2, r3
 801fe44:	db7c      	blt.n	801ff40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fe46:	46aa      	mov	sl, r5
 801fe48:	46b9      	mov	r9, r7
 801fe4a:	f1ba 0f00 	cmp.w	sl, #0
 801fe4e:	f340 8099 	ble.w	801ff84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801fe52:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fe54:	1421      	asrs	r1, r4, #16
 801fe56:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fe5a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fe5e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fe62:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801fe66:	f100 80d0 	bmi.w	802000a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801fe6a:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fe6e:	4559      	cmp	r1, fp
 801fe70:	f280 80cb 	bge.w	802000a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801fe74:	2800      	cmp	r0, #0
 801fe76:	f2c0 80c8 	blt.w	802000a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801fe7a:	f103 3bff 	add.w	fp, r3, #4294967295
 801fe7e:	4558      	cmp	r0, fp
 801fe80:	f280 80c3 	bge.w	802000a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801fe84:	fa0f fe8e 	sxth.w	lr, lr
 801fe88:	fb00 110e 	mla	r1, r0, lr, r1
 801fe8c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801fe90:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801fe94:	8841      	ldrh	r1, [r0, #2]
 801fe96:	f1bc 0f00 	cmp.w	ip, #0
 801fe9a:	d00b      	beq.n	801feb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801fe9c:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801fea0:	3b01      	subs	r3, #1
 801fea2:	005b      	lsls	r3, r3, #1
 801fea4:	3302      	adds	r3, #2
 801fea6:	eb00 0e03 	add.w	lr, r0, r3
 801feaa:	5ac3      	ldrh	r3, [r0, r3]
 801feac:	9308      	str	r3, [sp, #32]
 801feae:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801feb2:	9309      	str	r3, [sp, #36]	@ 0x24
 801feb4:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801feb8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801febc:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801fec0:	ea40 000b 	orr.w	r0, r0, fp
 801fec4:	fb12 f30c 	smulbb	r3, r2, ip
 801fec8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801fecc:	10db      	asrs	r3, r3, #3
 801fece:	f1cc 0e10 	rsb	lr, ip, #16
 801fed2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801fed6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801feda:	ebae 0e02 	sub.w	lr, lr, r2
 801fede:	ea4b 0101 	orr.w	r1, fp, r1
 801fee2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801fee6:	4351      	muls	r1, r2
 801fee8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801feea:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801feee:	fb0e 1e00 	mla	lr, lr, r0, r1
 801fef2:	0410      	lsls	r0, r2, #16
 801fef4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801fef8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801fefc:	4310      	orrs	r0, r2
 801fefe:	9a08      	ldr	r2, [sp, #32]
 801ff00:	9908      	ldr	r1, [sp, #32]
 801ff02:	0412      	lsls	r2, r2, #16
 801ff04:	fb03 e000 	mla	r0, r3, r0, lr
 801ff08:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ff0c:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801ff10:	ea42 020e 	orr.w	r2, r2, lr
 801ff14:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801ff18:	fb03 0302 	mla	r3, r3, r2, r0
 801ff1c:	0d5a      	lsrs	r2, r3, #21
 801ff1e:	095b      	lsrs	r3, r3, #5
 801ff20:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ff24:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ff28:	4313      	orrs	r3, r2
 801ff2a:	f8a9 3000 	strh.w	r3, [r9]
 801ff2e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ff30:	441c      	add	r4, r3
 801ff32:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ff34:	f109 0902 	add.w	r9, r9, #2
 801ff38:	441e      	add	r6, r3
 801ff3a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ff3e:	e784      	b.n	801fe4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ff40:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ff42:	441c      	add	r4, r3
 801ff44:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ff46:	3d01      	subs	r5, #1
 801ff48:	441e      	add	r6, r3
 801ff4a:	3702      	adds	r7, #2
 801ff4c:	e761      	b.n	801fe12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ff4e:	d01d      	beq.n	801ff8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801ff50:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801ff52:	1e6b      	subs	r3, r5, #1
 801ff54:	fb00 4003 	mla	r0, r0, r3, r4
 801ff58:	1400      	asrs	r0, r0, #16
 801ff5a:	f53f af74 	bmi.w	801fe46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ff5e:	3901      	subs	r1, #1
 801ff60:	4288      	cmp	r0, r1
 801ff62:	f6bf af70 	bge.w	801fe46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ff66:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801ff68:	fb01 6303 	mla	r3, r1, r3, r6
 801ff6c:	141b      	asrs	r3, r3, #16
 801ff6e:	f53f af6a 	bmi.w	801fe46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ff72:	3a01      	subs	r2, #1
 801ff74:	4293      	cmp	r3, r2
 801ff76:	f6bf af66 	bge.w	801fe46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ff7a:	46a9      	mov	r9, r5
 801ff7c:	46ba      	mov	sl, r7
 801ff7e:	f1b9 0f00 	cmp.w	r9, #0
 801ff82:	dc5a      	bgt.n	802003a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801ff84:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ff88:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801ff8c:	9b07      	ldr	r3, [sp, #28]
 801ff8e:	2b00      	cmp	r3, #0
 801ff90:	f340 80b8 	ble.w	8020104 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801ff94:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ff98:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ff9c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ffa0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ffa2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ffa6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ffaa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ffae:	eef0 6a62 	vmov.f32	s13, s5
 801ffb2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ffb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ffba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ffbe:	ee16 4a90 	vmov	r4, s13
 801ffc2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ffc6:	eef0 6a43 	vmov.f32	s13, s6
 801ffca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ffce:	ee12 2a90 	vmov	r2, s5
 801ffd2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ffd6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ffda:	ee13 2a10 	vmov	r2, s6
 801ffde:	931b      	str	r3, [sp, #108]	@ 0x6c
 801ffe0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ffe2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ffe6:	931c      	str	r3, [sp, #112]	@ 0x70
 801ffe8:	9b07      	ldr	r3, [sp, #28]
 801ffea:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ffec:	3b01      	subs	r3, #1
 801ffee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fff2:	9307      	str	r3, [sp, #28]
 801fff4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801fff6:	ee16 6a90 	vmov	r6, s13
 801fffa:	bf14      	ite	ne
 801fffc:	461d      	movne	r5, r3
 801fffe:	4615      	moveq	r5, r2
 8020000:	eeb0 3a67 	vmov.f32	s6, s15
 8020004:	eef0 2a47 	vmov.f32	s5, s14
 8020008:	e6f4      	b.n	801fdf4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 802000a:	f111 0b01 	adds.w	fp, r1, #1
 802000e:	d48e      	bmi.n	801ff2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020010:	45de      	cmp	lr, fp
 8020012:	db8c      	blt.n	801ff2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020014:	f110 0b01 	adds.w	fp, r0, #1
 8020018:	d489      	bmi.n	801ff2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802001a:	455b      	cmp	r3, fp
 802001c:	db87      	blt.n	801ff2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802001e:	b21b      	sxth	r3, r3
 8020020:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8020024:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8020028:	9300      	str	r3, [sp, #0]
 802002a:	4642      	mov	r2, r8
 802002c:	fa0f f38e 	sxth.w	r3, lr
 8020030:	4649      	mov	r1, r9
 8020032:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8020034:	f7ff fe4d 	bl	801fcd2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8020038:	e779      	b.n	801ff2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802003a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802003c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020040:	1420      	asrs	r0, r4, #16
 8020042:	1431      	asrs	r1, r6, #16
 8020044:	fb03 0101 	mla	r1, r3, r1, r0
 8020048:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802004c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8020050:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8020054:	8841      	ldrh	r1, [r0, #2]
 8020056:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802005a:	f1be 0f00 	cmp.w	lr, #0
 802005e:	d00b      	beq.n	8020078 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8020060:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8020064:	3b01      	subs	r3, #1
 8020066:	005b      	lsls	r3, r3, #1
 8020068:	3302      	adds	r3, #2
 802006a:	eb00 0b03 	add.w	fp, r0, r3
 802006e:	5ac3      	ldrh	r3, [r0, r3]
 8020070:	930a      	str	r3, [sp, #40]	@ 0x28
 8020072:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020076:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020078:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802007c:	fb12 f30e 	smulbb	r3, r2, lr
 8020080:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8020084:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020088:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802008c:	10db      	asrs	r3, r3, #3
 802008e:	ea40 000c 	orr.w	r0, r0, ip
 8020092:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8020096:	f1ce 0c10 	rsb	ip, lr, #16
 802009a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802009e:	ebac 0c02 	sub.w	ip, ip, r2
 80200a2:	ea4b 0101 	orr.w	r1, fp, r1
 80200a6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80200aa:	4351      	muls	r1, r2
 80200ac:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80200ae:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80200b2:	fb0c 1c00 	mla	ip, ip, r0, r1
 80200b6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80200ba:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 80200be:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80200c0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80200c2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80200c6:	0412      	lsls	r2, r2, #16
 80200c8:	ea4b 0000 	orr.w	r0, fp, r0
 80200cc:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80200d0:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 80200d4:	fb03 c000 	mla	r0, r3, r0, ip
 80200d8:	ea42 0b0b 	orr.w	fp, r2, fp
 80200dc:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80200e0:	fb03 000b 	mla	r0, r3, fp, r0
 80200e4:	0d43      	lsrs	r3, r0, #21
 80200e6:	0940      	lsrs	r0, r0, #5
 80200e8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80200ec:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80200f0:	4318      	orrs	r0, r3
 80200f2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80200f4:	f82a 0b02 	strh.w	r0, [sl], #2
 80200f8:	441c      	add	r4, r3
 80200fa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80200fc:	f109 39ff 	add.w	r9, r9, #4294967295
 8020100:	441e      	add	r6, r3
 8020102:	e73c      	b.n	801ff7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8020104:	b00f      	add	sp, #60	@ 0x3c
 8020106:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802010a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802010a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802010e:	b085      	sub	sp, #20
 8020110:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8020114:	9102      	str	r1, [sp, #8]
 8020116:	2c00      	cmp	r4, #0
 8020118:	fb04 7103 	mla	r1, r4, r3, r7
 802011c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8020120:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8020124:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8020128:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802012c:	f2c0 811b 	blt.w	8020366 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8020130:	45a6      	cmp	lr, r4
 8020132:	f340 8118 	ble.w	8020366 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8020136:	2f00      	cmp	r7, #0
 8020138:	f2c0 8113 	blt.w	8020362 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802013c:	42bb      	cmp	r3, r7
 802013e:	f340 8110 	ble.w	8020362 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8020142:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8020146:	1c7a      	adds	r2, r7, #1
 8020148:	f100 8110 	bmi.w	802036c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802014c:	4293      	cmp	r3, r2
 802014e:	f340 810d 	ble.w	802036c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8020152:	2e00      	cmp	r6, #0
 8020154:	f000 810c 	beq.w	8020370 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8020158:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802015c:	3401      	adds	r4, #1
 802015e:	f100 810b 	bmi.w	8020378 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8020162:	45a6      	cmp	lr, r4
 8020164:	f340 8108 	ble.w	8020378 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8020168:	2800      	cmp	r0, #0
 802016a:	f000 8108 	beq.w	802037e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802016e:	2f00      	cmp	r7, #0
 8020170:	f2c0 8100 	blt.w	8020374 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8020174:	42bb      	cmp	r3, r7
 8020176:	f340 80fd 	ble.w	8020374 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802017a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802017e:	3701      	adds	r7, #1
 8020180:	f100 8100 	bmi.w	8020384 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8020184:	42bb      	cmp	r3, r7
 8020186:	f340 80fd 	ble.w	8020384 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802018a:	2e00      	cmp	r6, #0
 802018c:	f000 80fc 	beq.w	8020388 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8020190:	3301      	adds	r3, #1
 8020192:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8020196:	b2b6      	uxth	r6, r6
 8020198:	b280      	uxth	r0, r0
 802019a:	fb00 fe06 	mul.w	lr, r0, r6
 802019e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80201a2:	0136      	lsls	r6, r6, #4
 80201a4:	eba6 070e 	sub.w	r7, r6, lr
 80201a8:	b280      	uxth	r0, r0
 80201aa:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 80201ae:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80201b2:	b2bf      	uxth	r7, r7
 80201b4:	1a1b      	subs	r3, r3, r0
 80201b6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80201ba:	b29b      	uxth	r3, r3
 80201bc:	fb0a f607 	mul.w	r6, sl, r7
 80201c0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80201c4:	fb0b 6603 	mla	r6, fp, r3, r6
 80201c8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80201cc:	fb00 6609 	mla	r6, r0, r9, r6
 80201d0:	fb0e 6608 	mla	r6, lr, r8, r6
 80201d4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80201d8:	9600      	str	r6, [sp, #0]
 80201da:	2e00      	cmp	r6, #0
 80201dc:	f000 80be 	beq.w	802035c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80201e0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80201e4:	fb0b fc0c 	mul.w	ip, fp, ip
 80201e8:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80201ec:	fb0b f505 	mul.w	r5, fp, r5
 80201f0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80201f4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80201f8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80201fc:	44dc      	add	ip, fp
 80201fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020202:	9501      	str	r5, [sp, #4]
 8020204:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8020208:	9503      	str	r5, [sp, #12]
 802020a:	9d01      	ldr	r5, [sp, #4]
 802020c:	9e02      	ldr	r6, [sp, #8]
 802020e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8020212:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020216:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802021a:	fb0a fc0c 	mul.w	ip, sl, ip
 802021e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8020222:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8020226:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802022a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802022e:	4465      	add	r5, ip
 8020230:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020234:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8020238:	fb09 fc0c 	mul.w	ip, r9, ip
 802023c:	fb09 f904 	mul.w	r9, r9, r4
 8020240:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8020244:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020248:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 802024c:	fb08 f404 	mul.w	r4, r8, r4
 8020250:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020254:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020258:	fb08 f802 	mul.w	r8, r8, r2
 802025c:	fb0a fa01 	mul.w	sl, sl, r1
 8020260:	0a22      	lsrs	r2, r4, #8
 8020262:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8020266:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802026a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802026e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020272:	4414      	add	r4, r2
 8020274:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8020278:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 802027c:	0a2d      	lsrs	r5, r5, #8
 802027e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020282:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020286:	9a03      	ldr	r2, [sp, #12]
 8020288:	8836      	ldrh	r6, [r6, #0]
 802028a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802028e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020292:	437d      	muls	r5, r7
 8020294:	4461      	add	r1, ip
 8020296:	0a24      	lsrs	r4, r4, #8
 8020298:	fb02 5503 	mla	r5, r2, r3, r5
 802029c:	0a09      	lsrs	r1, r1, #8
 802029e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80202a2:	fb04 540e 	mla	r4, r4, lr, r5
 80202a6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80202aa:	fb01 4100 	mla	r1, r1, r0, r4
 80202ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80202b2:	0a09      	lsrs	r1, r1, #8
 80202b4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80202b8:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 80202bc:	fb07 f70a 	mul.w	r7, r7, sl
 80202c0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80202c4:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 80202c8:	fb03 7101 	mla	r1, r3, r1, r7
 80202cc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80202d0:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80202d4:	fb0e 1e08 	mla	lr, lr, r8, r1
 80202d8:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 80202dc:	fb00 e101 	mla	r1, r0, r1, lr
 80202e0:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 80202e4:	9a00      	ldr	r2, [sp, #0]
 80202e6:	b287      	uxth	r7, r0
 80202e8:	437a      	muls	r2, r7
 80202ea:	0a09      	lsrs	r1, r1, #8
 80202ec:	1c53      	adds	r3, r2, #1
 80202ee:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80202f2:	4321      	orrs	r1, r4
 80202f4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80202f8:	1235      	asrs	r5, r6, #8
 80202fa:	0c0a      	lsrs	r2, r1, #16
 80202fc:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8020300:	b2db      	uxtb	r3, r3
 8020302:	fb12 f207 	smulbb	r2, r2, r7
 8020306:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802030a:	fb05 2503 	mla	r5, r5, r3, r2
 802030e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8020312:	10f2      	asrs	r2, r6, #3
 8020314:	b2c8      	uxtb	r0, r1
 8020316:	00f6      	lsls	r6, r6, #3
 8020318:	fb14 f407 	smulbb	r4, r4, r7
 802031c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020320:	b2f6      	uxtb	r6, r6
 8020322:	fb10 f007 	smulbb	r0, r0, r7
 8020326:	fb02 4203 	mla	r2, r2, r3, r4
 802032a:	b2ad      	uxth	r5, r5
 802032c:	fb06 0303 	mla	r3, r6, r3, r0
 8020330:	b299      	uxth	r1, r3
 8020332:	b294      	uxth	r4, r2
 8020334:	1c6b      	adds	r3, r5, #1
 8020336:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802033a:	1c62      	adds	r2, r4, #1
 802033c:	1c4b      	adds	r3, r1, #1
 802033e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020342:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8020346:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802034a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802034e:	0952      	lsrs	r2, r2, #5
 8020350:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020354:	432b      	orrs	r3, r5
 8020356:	4313      	orrs	r3, r2
 8020358:	9a02      	ldr	r2, [sp, #8]
 802035a:	8013      	strh	r3, [r2, #0]
 802035c:	b005      	add	sp, #20
 802035e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020362:	2500      	movs	r5, #0
 8020364:	e6ef      	b.n	8020146 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8020366:	2100      	movs	r1, #0
 8020368:	460d      	mov	r5, r1
 802036a:	e6f7      	b.n	802015c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802036c:	2100      	movs	r1, #0
 802036e:	e6f5      	b.n	802015c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8020370:	4631      	mov	r1, r6
 8020372:	e6f3      	b.n	802015c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8020374:	2400      	movs	r4, #0
 8020376:	e702      	b.n	802017e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8020378:	2200      	movs	r2, #0
 802037a:	4614      	mov	r4, r2
 802037c:	e70b      	b.n	8020196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802037e:	4602      	mov	r2, r0
 8020380:	4604      	mov	r4, r0
 8020382:	e708      	b.n	8020196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8020384:	2200      	movs	r2, #0
 8020386:	e706      	b.n	8020196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8020388:	4632      	mov	r2, r6
 802038a:	e704      	b.n	8020196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0802038c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802038c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020390:	b09d      	sub	sp, #116	@ 0x74
 8020392:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 8020396:	9219      	str	r2, [sp, #100]	@ 0x64
 8020398:	9307      	str	r3, [sp, #28]
 802039a:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 802039c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 80203a0:	931a      	str	r3, [sp, #104]	@ 0x68
 80203a2:	9117      	str	r1, [sp, #92]	@ 0x5c
 80203a4:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 80203a8:	901b      	str	r0, [sp, #108]	@ 0x6c
 80203aa:	6850      	ldr	r0, [r2, #4]
 80203ac:	6812      	ldr	r2, [r2, #0]
 80203ae:	fb00 1303 	mla	r3, r0, r3, r1
 80203b2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80203b6:	930a      	str	r3, [sp, #40]	@ 0x28
 80203b8:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80203ba:	681b      	ldr	r3, [r3, #0]
 80203bc:	9310      	str	r3, [sp, #64]	@ 0x40
 80203be:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80203c2:	930b      	str	r3, [sp, #44]	@ 0x2c
 80203c4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80203c6:	2b00      	cmp	r3, #0
 80203c8:	dc03      	bgt.n	80203d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80203ca:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80203cc:	2b00      	cmp	r3, #0
 80203ce:	f340 8375 	ble.w	8020abc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80203d2:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80203d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80203d8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80203dc:	1e48      	subs	r0, r1, #1
 80203de:	1e57      	subs	r7, r2, #1
 80203e0:	9b07      	ldr	r3, [sp, #28]
 80203e2:	2b00      	cmp	r3, #0
 80203e4:	f340 818e 	ble.w	8020704 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80203e8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80203ec:	ea4f 4326 	mov.w	r3, r6, asr #16
 80203f0:	d406      	bmi.n	8020400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80203f2:	4584      	cmp	ip, r0
 80203f4:	da04      	bge.n	8020400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80203f6:	2b00      	cmp	r3, #0
 80203f8:	db02      	blt.n	8020400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80203fa:	42bb      	cmp	r3, r7
 80203fc:	f2c0 8183 	blt.w	8020706 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8020400:	f11c 0c01 	adds.w	ip, ip, #1
 8020404:	f100 8173 	bmi.w	80206ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8020408:	4561      	cmp	r1, ip
 802040a:	f2c0 8170 	blt.w	80206ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802040e:	3301      	adds	r3, #1
 8020410:	f100 816d 	bmi.w	80206ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8020414:	429a      	cmp	r2, r3
 8020416:	f2c0 816a 	blt.w	80206ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802041a:	9b07      	ldr	r3, [sp, #28]
 802041c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802041e:	9318      	str	r3, [sp, #96]	@ 0x60
 8020420:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020422:	2b00      	cmp	r3, #0
 8020424:	f340 818c 	ble.w	8020740 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8020428:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 802042a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802042c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020430:	689b      	ldr	r3, [r3, #8]
 8020432:	1422      	asrs	r2, r4, #16
 8020434:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020438:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802043c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020440:	f100 81cd 	bmi.w	80207de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020444:	f103 38ff 	add.w	r8, r3, #4294967295
 8020448:	4542      	cmp	r2, r8
 802044a:	f280 81c8 	bge.w	80207de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802044e:	f1bc 0f00 	cmp.w	ip, #0
 8020452:	f2c0 81c4 	blt.w	80207de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020456:	f10e 38ff 	add.w	r8, lr, #4294967295
 802045a:	45c4      	cmp	ip, r8
 802045c:	f280 81bf 	bge.w	80207de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020460:	b21b      	sxth	r3, r3
 8020462:	fb0c 2203 	mla	r2, ip, r3, r2
 8020466:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020468:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802046c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8020470:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8020474:	2800      	cmp	r0, #0
 8020476:	f000 81a9 	beq.w	80207cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 802047a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802047e:	950c      	str	r5, [sp, #48]	@ 0x30
 8020480:	0e2d      	lsrs	r5, r5, #24
 8020482:	9513      	str	r5, [sp, #76]	@ 0x4c
 8020484:	b181      	cbz	r1, 80204a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8020486:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 802048a:	3b01      	subs	r3, #1
 802048c:	009b      	lsls	r3, r3, #2
 802048e:	3304      	adds	r3, #4
 8020490:	eb08 0c03 	add.w	ip, r8, r3
 8020494:	f858 3003 	ldr.w	r3, [r8, r3]
 8020498:	9308      	str	r3, [sp, #32]
 802049a:	0e1b      	lsrs	r3, r3, #24
 802049c:	9311      	str	r3, [sp, #68]	@ 0x44
 802049e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80204a2:	930d      	str	r3, [sp, #52]	@ 0x34
 80204a4:	0e1b      	lsrs	r3, r3, #24
 80204a6:	9314      	str	r3, [sp, #80]	@ 0x50
 80204a8:	b280      	uxth	r0, r0
 80204aa:	b289      	uxth	r1, r1
 80204ac:	fb00 f901 	mul.w	r9, r0, r1
 80204b0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80204b4:	0100      	lsls	r0, r0, #4
 80204b6:	eba0 0809 	sub.w	r8, r0, r9
 80204ba:	b289      	uxth	r1, r1
 80204bc:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80204c0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80204c2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80204c4:	fa1f f888 	uxth.w	r8, r8
 80204c8:	1a5b      	subs	r3, r3, r1
 80204ca:	b29b      	uxth	r3, r3
 80204cc:	fb08 f000 	mul.w	r0, r8, r0
 80204d0:	fb03 000e 	mla	r0, r3, lr, r0
 80204d4:	fb01 0005 	mla	r0, r1, r5, r0
 80204d8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80204da:	fb09 0005 	mla	r0, r9, r5, r0
 80204de:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80204e2:	2800      	cmp	r0, #0
 80204e4:	f000 80fa 	beq.w	80206dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80204e8:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80204ec:	d01b      	beq.n	8020526 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80204ee:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 80204f2:	fb0e fa0a 	mul.w	sl, lr, sl
 80204f6:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80204fa:	fb0e fe02 	mul.w	lr, lr, r2
 80204fe:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8020502:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020506:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802050a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802050e:	4452      	add	r2, sl
 8020510:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020514:	0a12      	lsrs	r2, r2, #8
 8020516:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802051a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802051e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020522:	ea42 020c 	orr.w	r2, r2, ip
 8020526:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020528:	2dff      	cmp	r5, #255	@ 0xff
 802052a:	d021      	beq.n	8020570 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802052c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802052e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8020532:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020534:	fb05 fb0b 	mul.w	fp, r5, fp
 8020538:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802053a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802053e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020540:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020544:	fb05 fa0a 	mul.w	sl, r5, sl
 8020548:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802054c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020550:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020554:	44de      	add	lr, fp
 8020556:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802055a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802055e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020562:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020566:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802056a:	ea4e 050a 	orr.w	r5, lr, sl
 802056e:	950c      	str	r5, [sp, #48]	@ 0x30
 8020570:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8020572:	2dff      	cmp	r5, #255	@ 0xff
 8020574:	d021      	beq.n	80205ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8020576:	9d08      	ldr	r5, [sp, #32]
 8020578:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802057c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802057e:	fb05 fb0b 	mul.w	fp, r5, fp
 8020582:	9d08      	ldr	r5, [sp, #32]
 8020584:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8020588:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802058a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802058e:	fb05 fa0a 	mul.w	sl, r5, sl
 8020592:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020596:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802059a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802059e:	44de      	add	lr, fp
 80205a0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80205a4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80205a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80205ac:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80205b0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80205b4:	ea4e 050a 	orr.w	r5, lr, sl
 80205b8:	9508      	str	r5, [sp, #32]
 80205ba:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80205bc:	2dff      	cmp	r5, #255	@ 0xff
 80205be:	d021      	beq.n	8020604 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80205c0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80205c2:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80205c6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80205c8:	fb05 fb0b 	mul.w	fp, r5, fp
 80205cc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80205ce:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80205d2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80205d4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80205d8:	fb05 fa0a 	mul.w	sl, r5, sl
 80205dc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80205e0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80205e4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80205e8:	44de      	add	lr, fp
 80205ea:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80205ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80205f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80205f6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80205fa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80205fe:	ea4e 050a 	orr.w	r5, lr, sl
 8020602:	950d      	str	r5, [sp, #52]	@ 0x34
 8020604:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8020606:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802060a:	9d08      	ldr	r5, [sp, #32]
 802060c:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8020610:	fb08 fc0c 	mul.w	ip, r8, ip
 8020614:	fb03 cc0e 	mla	ip, r3, lr, ip
 8020618:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802061c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802061e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020622:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8020626:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8020628:	fb09 cc0e 	mla	ip, r9, lr, ip
 802062c:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8020630:	fb08 f80e 	mul.w	r8, r8, lr
 8020634:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020638:	fb03 8202 	mla	r2, r3, r2, r8
 802063c:	9b08      	ldr	r3, [sp, #32]
 802063e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020640:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 8020644:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020646:	fb01 220a 	mla	r2, r1, sl, r2
 802064a:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 802064e:	fb09 2901 	mla	r9, r9, r1, r2
 8020652:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8020654:	883b      	ldrh	r3, [r7, #0]
 8020656:	4342      	muls	r2, r0
 8020658:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802065c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020660:	1c50      	adds	r0, r2, #1
 8020662:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020666:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802066a:	ea4c 0c09 	orr.w	ip, ip, r9
 802066e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8020672:	1219      	asrs	r1, r3, #8
 8020674:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020678:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802067c:	b2c0      	uxtb	r0, r0
 802067e:	fb12 f205 	smulbb	r2, r2, r5
 8020682:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020686:	fb01 2100 	mla	r1, r1, r0, r2
 802068a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802068e:	10da      	asrs	r2, r3, #3
 8020690:	fa5f fc8c 	uxtb.w	ip, ip
 8020694:	00db      	lsls	r3, r3, #3
 8020696:	fb1c fc05 	smulbb	ip, ip, r5
 802069a:	b2db      	uxtb	r3, r3
 802069c:	b289      	uxth	r1, r1
 802069e:	fb03 c300 	mla	r3, r3, r0, ip
 80206a2:	fa1f fc83 	uxth.w	ip, r3
 80206a6:	1c4b      	adds	r3, r1, #1
 80206a8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80206ac:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80206b0:	fb1e fe05 	smulbb	lr, lr, r5
 80206b4:	f10c 0301 	add.w	r3, ip, #1
 80206b8:	fb02 e200 	mla	r2, r2, r0, lr
 80206bc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80206c0:	b292      	uxth	r2, r2
 80206c2:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80206c6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80206ca:	430b      	orrs	r3, r1
 80206cc:	1c51      	adds	r1, r2, #1
 80206ce:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80206d2:	0952      	lsrs	r2, r2, #5
 80206d4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80206d8:	4313      	orrs	r3, r2
 80206da:	803b      	strh	r3, [r7, #0]
 80206dc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80206de:	441c      	add	r4, r3
 80206e0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80206e2:	441e      	add	r6, r3
 80206e4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80206e6:	3b01      	subs	r3, #1
 80206e8:	3702      	adds	r7, #2
 80206ea:	9318      	str	r3, [sp, #96]	@ 0x60
 80206ec:	e698      	b.n	8020420 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80206ee:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80206f0:	441c      	add	r4, r3
 80206f2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80206f4:	441e      	add	r6, r3
 80206f6:	9b07      	ldr	r3, [sp, #28]
 80206f8:	3b01      	subs	r3, #1
 80206fa:	9307      	str	r3, [sp, #28]
 80206fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80206fe:	3302      	adds	r3, #2
 8020700:	930a      	str	r3, [sp, #40]	@ 0x28
 8020702:	e66d      	b.n	80203e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8020704:	d023      	beq.n	802074e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020706:	9b07      	ldr	r3, [sp, #28]
 8020708:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802070a:	3b01      	subs	r3, #1
 802070c:	fb00 4003 	mla	r0, r0, r3, r4
 8020710:	1400      	asrs	r0, r0, #16
 8020712:	f53f ae82 	bmi.w	802041a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020716:	3901      	subs	r1, #1
 8020718:	4288      	cmp	r0, r1
 802071a:	f6bf ae7e 	bge.w	802041a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802071e:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8020720:	fb01 6303 	mla	r3, r1, r3, r6
 8020724:	141b      	asrs	r3, r3, #16
 8020726:	f53f ae78 	bmi.w	802041a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802072a:	3a01      	subs	r2, #1
 802072c:	4293      	cmp	r3, r2
 802072e:	f6bf ae74 	bge.w	802041a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020732:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020736:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 802073a:	f1bb 0f00 	cmp.w	fp, #0
 802073e:	dc6c      	bgt.n	802081a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8020740:	9b07      	ldr	r3, [sp, #28]
 8020742:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020746:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020748:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802074c:	930a      	str	r3, [sp, #40]	@ 0x28
 802074e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8020750:	2b00      	cmp	r3, #0
 8020752:	f340 81b3 	ble.w	8020abc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020756:	ee30 0a04 	vadd.f32	s0, s0, s8
 802075a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802075e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020762:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8020764:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020768:	ee31 1a05 	vadd.f32	s2, s2, s10
 802076c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020770:	eef0 6a62 	vmov.f32	s13, s5
 8020774:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020778:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802077c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020780:	ee16 4a90 	vmov	r4, s13
 8020784:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020788:	eef0 6a43 	vmov.f32	s13, s6
 802078c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020790:	ee12 2a90 	vmov	r2, s5
 8020794:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020798:	fb92 f3f3 	sdiv	r3, r2, r3
 802079c:	ee13 2a10 	vmov	r2, s6
 80207a0:	9329      	str	r3, [sp, #164]	@ 0xa4
 80207a2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80207a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80207a8:	932a      	str	r3, [sp, #168]	@ 0xa8
 80207aa:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80207ac:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80207ae:	3b01      	subs	r3, #1
 80207b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80207b4:	9317      	str	r3, [sp, #92]	@ 0x5c
 80207b6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80207b8:	bf08      	it	eq
 80207ba:	4613      	moveq	r3, r2
 80207bc:	ee16 6a90 	vmov	r6, s13
 80207c0:	9307      	str	r3, [sp, #28]
 80207c2:	eeb0 3a67 	vmov.f32	s6, s15
 80207c6:	eef0 2a47 	vmov.f32	s5, s14
 80207ca:	e5fb      	b.n	80203c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80207cc:	2900      	cmp	r1, #0
 80207ce:	f43f ae6b 	beq.w	80204a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80207d2:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80207d6:	9308      	str	r3, [sp, #32]
 80207d8:	0e1b      	lsrs	r3, r3, #24
 80207da:	9311      	str	r3, [sp, #68]	@ 0x44
 80207dc:	e664      	b.n	80204a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80207de:	f112 0801 	adds.w	r8, r2, #1
 80207e2:	f53f af7b 	bmi.w	80206dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80207e6:	4543      	cmp	r3, r8
 80207e8:	f6ff af78 	blt.w	80206dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80207ec:	f11c 0801 	adds.w	r8, ip, #1
 80207f0:	f53f af74 	bmi.w	80206dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80207f4:	45c6      	cmp	lr, r8
 80207f6:	f6ff af71 	blt.w	80206dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80207fa:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 80207fc:	9201      	str	r2, [sp, #4]
 80207fe:	fa0f f28e 	sxth.w	r2, lr
 8020802:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8020806:	e9cd c002 	strd	ip, r0, [sp, #8]
 802080a:	9200      	str	r2, [sp, #0]
 802080c:	b21b      	sxth	r3, r3
 802080e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020810:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8020812:	4639      	mov	r1, r7
 8020814:	f7ff fc79 	bl	802010a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8020818:	e760      	b.n	80206dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802081a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802081c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802081e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020822:	1427      	asrs	r7, r4, #16
 8020824:	1433      	asrs	r3, r6, #16
 8020826:	fb01 7303 	mla	r3, r1, r3, r7
 802082a:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802082e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8020832:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020836:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802083a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802083e:	2a00      	cmp	r2, #0
 8020840:	f000 8133 	beq.w	8020aaa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8020844:	687d      	ldr	r5, [r7, #4]
 8020846:	950e      	str	r5, [sp, #56]	@ 0x38
 8020848:	0e2d      	lsrs	r5, r5, #24
 802084a:	9515      	str	r5, [sp, #84]	@ 0x54
 802084c:	b178      	cbz	r0, 802086e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802084e:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 8020852:	3901      	subs	r1, #1
 8020854:	0089      	lsls	r1, r1, #2
 8020856:	3104      	adds	r1, #4
 8020858:	eb07 0e01 	add.w	lr, r7, r1
 802085c:	5879      	ldr	r1, [r7, r1]
 802085e:	9109      	str	r1, [sp, #36]	@ 0x24
 8020860:	0e09      	lsrs	r1, r1, #24
 8020862:	9112      	str	r1, [sp, #72]	@ 0x48
 8020864:	f8de 1004 	ldr.w	r1, [lr, #4]
 8020868:	910f      	str	r1, [sp, #60]	@ 0x3c
 802086a:	0e09      	lsrs	r1, r1, #24
 802086c:	9116      	str	r1, [sp, #88]	@ 0x58
 802086e:	b292      	uxth	r2, r2
 8020870:	b280      	uxth	r0, r0
 8020872:	fb02 f800 	mul.w	r8, r2, r0
 8020876:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802087a:	0112      	lsls	r2, r2, #4
 802087c:	eba2 0e08 	sub.w	lr, r2, r8
 8020880:	b280      	uxth	r0, r0
 8020882:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8020886:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8020888:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802088a:	fa1f fe8e 	uxth.w	lr, lr
 802088e:	1a12      	subs	r2, r2, r0
 8020890:	b292      	uxth	r2, r2
 8020892:	fb0e f101 	mul.w	r1, lr, r1
 8020896:	fb02 110c 	mla	r1, r2, ip, r1
 802089a:	fb00 1105 	mla	r1, r0, r5, r1
 802089e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80208a0:	fb08 1105 	mla	r1, r8, r5, r1
 80208a4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80208a8:	2900      	cmp	r1, #0
 80208aa:	f000 80f5 	beq.w	8020a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80208ae:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80208b2:	d019      	beq.n	80208e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80208b4:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80208b8:	fb0c fa0a 	mul.w	sl, ip, sl
 80208bc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80208c0:	fb0c fc03 	mul.w	ip, ip, r3
 80208c4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80208c8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80208cc:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80208d0:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80208d4:	4453      	add	r3, sl
 80208d6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80208da:	0a1b      	lsrs	r3, r3, #8
 80208dc:	0a3f      	lsrs	r7, r7, #8
 80208de:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80208e2:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80208e6:	433b      	orrs	r3, r7
 80208e8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80208ea:	2dff      	cmp	r5, #255	@ 0xff
 80208ec:	d020      	beq.n	8020930 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80208ee:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80208f0:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80208f4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80208f6:	436f      	muls	r7, r5
 80208f8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80208fa:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80208fe:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8020900:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020904:	fb05 fa0a 	mul.w	sl, r5, sl
 8020908:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802090c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020910:	44bc      	add	ip, r7
 8020912:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020916:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802091a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802091e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020922:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020926:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802092a:	ea4c 050a 	orr.w	r5, ip, sl
 802092e:	950e      	str	r5, [sp, #56]	@ 0x38
 8020930:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020932:	2dff      	cmp	r5, #255	@ 0xff
 8020934:	d020      	beq.n	8020978 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8020936:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8020938:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802093c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802093e:	436f      	muls	r7, r5
 8020940:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8020942:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8020946:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020948:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802094c:	fb05 fa0a 	mul.w	sl, r5, sl
 8020950:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020954:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020958:	44bc      	add	ip, r7
 802095a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802095e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020962:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020966:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802096a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802096e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020972:	ea4c 050a 	orr.w	r5, ip, sl
 8020976:	9509      	str	r5, [sp, #36]	@ 0x24
 8020978:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802097a:	2dff      	cmp	r5, #255	@ 0xff
 802097c:	d020      	beq.n	80209c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802097e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8020980:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8020984:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8020986:	436f      	muls	r7, r5
 8020988:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802098a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802098e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8020990:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020994:	fb05 fa0a 	mul.w	sl, r5, sl
 8020998:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802099c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80209a0:	44bc      	add	ip, r7
 80209a2:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80209a6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80209aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80209ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80209b2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80209b6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80209ba:	ea4c 050a 	orr.w	r5, ip, sl
 80209be:	950f      	str	r5, [sp, #60]	@ 0x3c
 80209c0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80209c2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80209c6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80209c8:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80209cc:	fb0e f707 	mul.w	r7, lr, r7
 80209d0:	fb02 770c 	mla	r7, r2, ip, r7
 80209d4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80209d8:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80209da:	fb00 770c 	mla	r7, r0, ip, r7
 80209de:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80209e2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80209e4:	fb08 770c 	mla	r7, r8, ip, r7
 80209e8:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80209ec:	fb0e fe0c 	mul.w	lr, lr, ip
 80209f0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80209f4:	fb02 e303 	mla	r3, r2, r3, lr
 80209f8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80209fa:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80209fc:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8020a00:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020a02:	fb00 330a 	mla	r3, r0, sl, r3
 8020a06:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8020a0a:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020a0e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020a10:	f8b9 0000 	ldrh.w	r0, [r9]
 8020a14:	4359      	muls	r1, r3
 8020a16:	0a3f      	lsrs	r7, r7, #8
 8020a18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020a1c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020a20:	1c4b      	adds	r3, r1, #1
 8020a22:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8020a26:	ea47 070c 	orr.w	r7, r7, ip
 8020a2a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020a2e:	1202      	asrs	r2, r0, #8
 8020a30:	0c3b      	lsrs	r3, r7, #16
 8020a32:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020a36:	b2c9      	uxtb	r1, r1
 8020a38:	fb13 f305 	smulbb	r3, r3, r5
 8020a3c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8020a40:	fb02 3201 	mla	r2, r2, r1, r3
 8020a44:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020a48:	10c3      	asrs	r3, r0, #3
 8020a4a:	b2ff      	uxtb	r7, r7
 8020a4c:	00c0      	lsls	r0, r0, #3
 8020a4e:	b2c0      	uxtb	r0, r0
 8020a50:	fb17 f705 	smulbb	r7, r7, r5
 8020a54:	fb00 7001 	mla	r0, r0, r1, r7
 8020a58:	b292      	uxth	r2, r2
 8020a5a:	fb1c fc05 	smulbb	ip, ip, r5
 8020a5e:	b280      	uxth	r0, r0
 8020a60:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8020a64:	fb03 c301 	mla	r3, r3, r1, ip
 8020a68:	1c51      	adds	r1, r2, #1
 8020a6a:	f100 0c01 	add.w	ip, r0, #1
 8020a6e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020a72:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8020a76:	b29b      	uxth	r3, r3
 8020a78:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020a7c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8020a80:	ea4c 0202 	orr.w	r2, ip, r2
 8020a84:	f103 0c01 	add.w	ip, r3, #1
 8020a88:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020a8c:	095b      	lsrs	r3, r3, #5
 8020a8e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020a92:	431a      	orrs	r2, r3
 8020a94:	f8a9 2000 	strh.w	r2, [r9]
 8020a98:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8020a9a:	441c      	add	r4, r3
 8020a9c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8020a9e:	f109 0902 	add.w	r9, r9, #2
 8020aa2:	441e      	add	r6, r3
 8020aa4:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020aa8:	e647      	b.n	802073a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8020aaa:	2800      	cmp	r0, #0
 8020aac:	f43f aedf 	beq.w	802086e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8020ab0:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8020ab4:	9109      	str	r1, [sp, #36]	@ 0x24
 8020ab6:	0e09      	lsrs	r1, r1, #24
 8020ab8:	9112      	str	r1, [sp, #72]	@ 0x48
 8020aba:	e6d8      	b.n	802086e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8020abc:	b01d      	add	sp, #116	@ 0x74
 8020abe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020ac2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8020ac2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020ac6:	b085      	sub	sp, #20
 8020ac8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8020acc:	9102      	str	r1, [sp, #8]
 8020ace:	2c00      	cmp	r4, #0
 8020ad0:	fb04 7103 	mla	r1, r4, r3, r7
 8020ad4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8020ad8:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8020adc:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8020ae0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8020ae4:	f2c0 810c 	blt.w	8020d00 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8020ae8:	45a6      	cmp	lr, r4
 8020aea:	f340 8109 	ble.w	8020d00 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8020aee:	2f00      	cmp	r7, #0
 8020af0:	f2c0 8104 	blt.w	8020cfc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8020af4:	42bb      	cmp	r3, r7
 8020af6:	f340 8101 	ble.w	8020cfc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8020afa:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8020afe:	1c7a      	adds	r2, r7, #1
 8020b00:	f100 8101 	bmi.w	8020d06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8020b04:	4293      	cmp	r3, r2
 8020b06:	f340 80fe 	ble.w	8020d06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8020b0a:	2e00      	cmp	r6, #0
 8020b0c:	f000 80fd 	beq.w	8020d0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8020b10:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8020b14:	3401      	adds	r4, #1
 8020b16:	f100 80fc 	bmi.w	8020d12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8020b1a:	45a6      	cmp	lr, r4
 8020b1c:	f340 80f9 	ble.w	8020d12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8020b20:	2800      	cmp	r0, #0
 8020b22:	f000 80f9 	beq.w	8020d18 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8020b26:	2f00      	cmp	r7, #0
 8020b28:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8020b2c:	f2c0 80ef 	blt.w	8020d0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8020b30:	42bb      	cmp	r3, r7
 8020b32:	f340 80ec 	ble.w	8020d0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8020b36:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8020b3a:	3701      	adds	r7, #1
 8020b3c:	f100 80ef 	bmi.w	8020d1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8020b40:	42bb      	cmp	r3, r7
 8020b42:	f340 80ec 	ble.w	8020d1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8020b46:	2e00      	cmp	r6, #0
 8020b48:	f000 80eb 	beq.w	8020d22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8020b4c:	6852      	ldr	r2, [r2, #4]
 8020b4e:	b2b6      	uxth	r6, r6
 8020b50:	b280      	uxth	r0, r0
 8020b52:	fb00 fe06 	mul.w	lr, r0, r6
 8020b56:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020b5a:	0136      	lsls	r6, r6, #4
 8020b5c:	eba6 070e 	sub.w	r7, r6, lr
 8020b60:	b280      	uxth	r0, r0
 8020b62:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8020b66:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020b6a:	b2bf      	uxth	r7, r7
 8020b6c:	1a1b      	subs	r3, r3, r0
 8020b6e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020b72:	b29b      	uxth	r3, r3
 8020b74:	fb07 f60a 	mul.w	r6, r7, sl
 8020b78:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020b7c:	fb0b 6603 	mla	r6, fp, r3, r6
 8020b80:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020b84:	fb00 6609 	mla	r6, r0, r9, r6
 8020b88:	fb0e 6608 	mla	r6, lr, r8, r6
 8020b8c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020b90:	9600      	str	r6, [sp, #0]
 8020b92:	2e00      	cmp	r6, #0
 8020b94:	f000 80af 	beq.w	8020cf6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8020b98:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020b9c:	fb0b fc0c 	mul.w	ip, fp, ip
 8020ba0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8020ba4:	fb0b f505 	mul.w	r5, fp, r5
 8020ba8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8020bac:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8020bb0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020bb4:	44dc      	add	ip, fp
 8020bb6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020bba:	9501      	str	r5, [sp, #4]
 8020bbc:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8020bc0:	9503      	str	r5, [sp, #12]
 8020bc2:	9d01      	ldr	r5, [sp, #4]
 8020bc4:	9e02      	ldr	r6, [sp, #8]
 8020bc6:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8020bca:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020bce:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8020bd2:	fb0a fc0c 	mul.w	ip, sl, ip
 8020bd6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8020bda:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8020bde:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020be2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020be6:	4465      	add	r5, ip
 8020be8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020bec:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8020bf0:	fb09 fc0c 	mul.w	ip, r9, ip
 8020bf4:	fb09 f904 	mul.w	r9, r9, r4
 8020bf8:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8020bfc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020c00:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8020c04:	fb08 f404 	mul.w	r4, r8, r4
 8020c08:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020c0c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020c10:	fb08 f802 	mul.w	r8, r8, r2
 8020c14:	fb0a fa01 	mul.w	sl, sl, r1
 8020c18:	0a22      	lsrs	r2, r4, #8
 8020c1a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8020c1e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020c22:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8020c26:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020c2a:	4414      	add	r4, r2
 8020c2c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8020c30:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8020c34:	0a2d      	lsrs	r5, r5, #8
 8020c36:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020c3a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020c3e:	9a03      	ldr	r2, [sp, #12]
 8020c40:	8836      	ldrh	r6, [r6, #0]
 8020c42:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8020c46:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020c4a:	437d      	muls	r5, r7
 8020c4c:	4461      	add	r1, ip
 8020c4e:	0a24      	lsrs	r4, r4, #8
 8020c50:	fb02 5503 	mla	r5, r2, r3, r5
 8020c54:	0a09      	lsrs	r1, r1, #8
 8020c56:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8020c5a:	fb04 540e 	mla	r4, r4, lr, r5
 8020c5e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8020c62:	fb01 4100 	mla	r1, r1, r0, r4
 8020c66:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020c6a:	0a09      	lsrs	r1, r1, #8
 8020c6c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020c70:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8020c74:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020c78:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8020c7c:	fb07 f70a 	mul.w	r7, r7, sl
 8020c80:	fb03 7101 	mla	r1, r3, r1, r7
 8020c84:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020c88:	9b00      	ldr	r3, [sp, #0]
 8020c8a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8020c8e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020c92:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8020c96:	fb00 e101 	mla	r1, r0, r1, lr
 8020c9a:	43da      	mvns	r2, r3
 8020c9c:	1233      	asrs	r3, r6, #8
 8020c9e:	b2d2      	uxtb	r2, r2
 8020ca0:	10f0      	asrs	r0, r6, #3
 8020ca2:	0a09      	lsrs	r1, r1, #8
 8020ca4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020ca8:	00f6      	lsls	r6, r6, #3
 8020caa:	4353      	muls	r3, r2
 8020cac:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020cb0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020cb4:	b2f6      	uxtb	r6, r6
 8020cb6:	4321      	orrs	r1, r4
 8020cb8:	4350      	muls	r0, r2
 8020cba:	4356      	muls	r6, r2
 8020cbc:	1c5a      	adds	r2, r3, #1
 8020cbe:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020cc2:	0c0b      	lsrs	r3, r1, #16
 8020cc4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020cc8:	1c42      	adds	r2, r0, #1
 8020cca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020cce:	0a0a      	lsrs	r2, r1, #8
 8020cd0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020cd4:	021b      	lsls	r3, r3, #8
 8020cd6:	00d2      	lsls	r2, r2, #3
 8020cd8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020cdc:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8020ce0:	4313      	orrs	r3, r2
 8020ce2:	1c72      	adds	r2, r6, #1
 8020ce4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8020ce8:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8020cec:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020cf0:	4319      	orrs	r1, r3
 8020cf2:	9b02      	ldr	r3, [sp, #8]
 8020cf4:	8019      	strh	r1, [r3, #0]
 8020cf6:	b005      	add	sp, #20
 8020cf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020cfc:	2500      	movs	r5, #0
 8020cfe:	e6fe      	b.n	8020afe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8020d00:	2100      	movs	r1, #0
 8020d02:	460d      	mov	r5, r1
 8020d04:	e706      	b.n	8020b14 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8020d06:	2100      	movs	r1, #0
 8020d08:	e704      	b.n	8020b14 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8020d0a:	4631      	mov	r1, r6
 8020d0c:	e702      	b.n	8020b14 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8020d0e:	2400      	movs	r4, #0
 8020d10:	e713      	b.n	8020b3a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8020d12:	2200      	movs	r2, #0
 8020d14:	4614      	mov	r4, r2
 8020d16:	e71a      	b.n	8020b4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8020d18:	4602      	mov	r2, r0
 8020d1a:	4604      	mov	r4, r0
 8020d1c:	e717      	b.n	8020b4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8020d1e:	2200      	movs	r2, #0
 8020d20:	e715      	b.n	8020b4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8020d22:	4632      	mov	r2, r6
 8020d24:	e713      	b.n	8020b4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08020d28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020d28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d2c:	b09b      	sub	sp, #108	@ 0x6c
 8020d2e:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 8020d32:	9218      	str	r2, [sp, #96]	@ 0x60
 8020d34:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8020d36:	9116      	str	r1, [sp, #88]	@ 0x58
 8020d38:	9307      	str	r3, [sp, #28]
 8020d3a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8020d3e:	9019      	str	r0, [sp, #100]	@ 0x64
 8020d40:	6850      	ldr	r0, [r2, #4]
 8020d42:	6812      	ldr	r2, [r2, #0]
 8020d44:	fb00 1303 	mla	r3, r0, r3, r1
 8020d48:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020d4c:	930a      	str	r3, [sp, #40]	@ 0x28
 8020d4e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020d50:	681b      	ldr	r3, [r3, #0]
 8020d52:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020d54:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020d56:	2b00      	cmp	r3, #0
 8020d58:	dc03      	bgt.n	8020d62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020d5a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020d5c:	2b00      	cmp	r3, #0
 8020d5e:	f340 8386 	ble.w	802146e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020d62:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020d64:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020d68:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020d6c:	1e48      	subs	r0, r1, #1
 8020d6e:	1e57      	subs	r7, r2, #1
 8020d70:	9b07      	ldr	r3, [sp, #28]
 8020d72:	2b00      	cmp	r3, #0
 8020d74:	f340 8166 	ble.w	8021044 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8020d78:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020d7c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020d80:	d406      	bmi.n	8020d90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020d82:	4584      	cmp	ip, r0
 8020d84:	da04      	bge.n	8020d90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020d86:	2b00      	cmp	r3, #0
 8020d88:	db02      	blt.n	8020d90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020d8a:	42bb      	cmp	r3, r7
 8020d8c:	f2c0 815b 	blt.w	8021046 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8020d90:	f11c 0c01 	adds.w	ip, ip, #1
 8020d94:	f100 814b 	bmi.w	802102e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020d98:	4561      	cmp	r1, ip
 8020d9a:	f2c0 8148 	blt.w	802102e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020d9e:	3301      	adds	r3, #1
 8020da0:	f100 8145 	bmi.w	802102e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020da4:	429a      	cmp	r2, r3
 8020da6:	f2c0 8142 	blt.w	802102e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020daa:	9b07      	ldr	r3, [sp, #28]
 8020dac:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8020dae:	9317      	str	r3, [sp, #92]	@ 0x5c
 8020db0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8020db2:	2b00      	cmp	r3, #0
 8020db4:	f340 8165 	ble.w	8021082 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020db8:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8020dba:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020dbc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020dc0:	689b      	ldr	r3, [r3, #8]
 8020dc2:	1422      	asrs	r2, r4, #16
 8020dc4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020dc8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8020dcc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020dd0:	f100 81d5 	bmi.w	802117e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020dd4:	f103 38ff 	add.w	r8, r3, #4294967295
 8020dd8:	4542      	cmp	r2, r8
 8020dda:	f280 81d0 	bge.w	802117e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020dde:	f1bc 0f00 	cmp.w	ip, #0
 8020de2:	f2c0 81cc 	blt.w	802117e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020de6:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020dea:	45c4      	cmp	ip, r8
 8020dec:	f280 81c7 	bge.w	802117e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020df0:	b21b      	sxth	r3, r3
 8020df2:	fb0c 2203 	mla	r2, ip, r3, r2
 8020df6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8020df8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8020dfc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8020e00:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8020e04:	2900      	cmp	r1, #0
 8020e06:	f000 8182 	beq.w	802110e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020e0a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8020e0e:	950b      	str	r5, [sp, #44]	@ 0x2c
 8020e10:	0e2d      	lsrs	r5, r5, #24
 8020e12:	9512      	str	r5, [sp, #72]	@ 0x48
 8020e14:	b180      	cbz	r0, 8020e38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8020e16:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8020e1a:	3b01      	subs	r3, #1
 8020e1c:	009b      	lsls	r3, r3, #2
 8020e1e:	3304      	adds	r3, #4
 8020e20:	eb08 0c03 	add.w	ip, r8, r3
 8020e24:	f858 3003 	ldr.w	r3, [r8, r3]
 8020e28:	9308      	str	r3, [sp, #32]
 8020e2a:	0e1b      	lsrs	r3, r3, #24
 8020e2c:	9310      	str	r3, [sp, #64]	@ 0x40
 8020e2e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8020e32:	930c      	str	r3, [sp, #48]	@ 0x30
 8020e34:	0e1b      	lsrs	r3, r3, #24
 8020e36:	9313      	str	r3, [sp, #76]	@ 0x4c
 8020e38:	b289      	uxth	r1, r1
 8020e3a:	b280      	uxth	r0, r0
 8020e3c:	fb01 f900 	mul.w	r9, r1, r0
 8020e40:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020e44:	0109      	lsls	r1, r1, #4
 8020e46:	eba1 0809 	sub.w	r8, r1, r9
 8020e4a:	b280      	uxth	r0, r0
 8020e4c:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8020e50:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8020e52:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020e54:	fa1f f888 	uxth.w	r8, r8
 8020e58:	1a09      	subs	r1, r1, r0
 8020e5a:	b289      	uxth	r1, r1
 8020e5c:	fb08 f303 	mul.w	r3, r8, r3
 8020e60:	fb01 330e 	mla	r3, r1, lr, r3
 8020e64:	fb00 3305 	mla	r3, r0, r5, r3
 8020e68:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020e6a:	fb09 3305 	mla	r3, r9, r5, r3
 8020e6e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020e72:	2b00      	cmp	r3, #0
 8020e74:	f000 80d2 	beq.w	802101c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020e78:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8020e7c:	d01b      	beq.n	8020eb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8020e7e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8020e82:	fb0e fa0a 	mul.w	sl, lr, sl
 8020e86:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020e8a:	fb0e fe02 	mul.w	lr, lr, r2
 8020e8e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8020e92:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020e96:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020e9a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8020e9e:	4452      	add	r2, sl
 8020ea0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020ea4:	0a12      	lsrs	r2, r2, #8
 8020ea6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020eaa:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020eae:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020eb2:	ea42 020c 	orr.w	r2, r2, ip
 8020eb6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020eb8:	2dff      	cmp	r5, #255	@ 0xff
 8020eba:	d021      	beq.n	8020f00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8020ebc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020ebe:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8020ec2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020ec4:	fb05 fb0b 	mul.w	fp, r5, fp
 8020ec8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020eca:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8020ece:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020ed0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020ed4:	fb05 fa0a 	mul.w	sl, r5, sl
 8020ed8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020edc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020ee0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020ee4:	44de      	add	lr, fp
 8020ee6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020eea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020eee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020ef2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020ef6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020efa:	ea4e 050a 	orr.w	r5, lr, sl
 8020efe:	950b      	str	r5, [sp, #44]	@ 0x2c
 8020f00:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020f02:	2dff      	cmp	r5, #255	@ 0xff
 8020f04:	d021      	beq.n	8020f4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8020f06:	9d08      	ldr	r5, [sp, #32]
 8020f08:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8020f0c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020f0e:	fb05 fb0b 	mul.w	fp, r5, fp
 8020f12:	9d08      	ldr	r5, [sp, #32]
 8020f14:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8020f18:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020f1a:	fb05 fa0e 	mul.w	sl, r5, lr
 8020f1e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020f22:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020f26:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020f2a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020f2e:	44de      	add	lr, fp
 8020f30:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020f34:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020f38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f3c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020f40:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020f44:	ea4e 050a 	orr.w	r5, lr, sl
 8020f48:	9508      	str	r5, [sp, #32]
 8020f4a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020f4c:	2dff      	cmp	r5, #255	@ 0xff
 8020f4e:	d021      	beq.n	8020f94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8020f50:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8020f52:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8020f56:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020f58:	fb05 fb0b 	mul.w	fp, r5, fp
 8020f5c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8020f5e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8020f62:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020f64:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020f68:	fb05 fa0a 	mul.w	sl, r5, sl
 8020f6c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020f70:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020f74:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020f78:	44de      	add	lr, fp
 8020f7a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020f7e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020f82:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f86:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020f8a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020f8e:	ea4e 050a 	orr.w	r5, lr, sl
 8020f92:	950c      	str	r5, [sp, #48]	@ 0x30
 8020f94:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020f96:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020f9a:	9d08      	ldr	r5, [sp, #32]
 8020f9c:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8020fa0:	fb08 fc0c 	mul.w	ip, r8, ip
 8020fa4:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020fa8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8020fac:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8020fae:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020fb2:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8020fb6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020fb8:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020fbc:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8020fc0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020fc4:	fb08 f80e 	mul.w	r8, r8, lr
 8020fc8:	fb01 8202 	mla	r2, r1, r2, r8
 8020fcc:	9908      	ldr	r1, [sp, #32]
 8020fce:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8020fd2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8020fd4:	fb00 220a 	mla	r2, r0, sl, r2
 8020fd8:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 8020fdc:	fb09 2900 	mla	r9, r9, r0, r2
 8020fe0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020fe4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020fe8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020fec:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8020ff0:	ea4c 0c09 	orr.w	ip, ip, r9
 8020ff4:	2bff      	cmp	r3, #255	@ 0xff
 8020ff6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8020ffa:	f040 8091 	bne.w	8021120 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8020ffe:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8021002:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 8021006:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802100a:	f022 0207 	bic.w	r2, r2, #7
 802100e:	431a      	orrs	r2, r3
 8021010:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021014:	ea4c 0c02 	orr.w	ip, ip, r2
 8021018:	f8a7 c000 	strh.w	ip, [r7]
 802101c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802101e:	441c      	add	r4, r3
 8021020:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021022:	441e      	add	r6, r3
 8021024:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8021026:	3b01      	subs	r3, #1
 8021028:	3702      	adds	r7, #2
 802102a:	9317      	str	r3, [sp, #92]	@ 0x5c
 802102c:	e6c0      	b.n	8020db0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802102e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8021030:	441c      	add	r4, r3
 8021032:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021034:	441e      	add	r6, r3
 8021036:	9b07      	ldr	r3, [sp, #28]
 8021038:	3b01      	subs	r3, #1
 802103a:	9307      	str	r3, [sp, #28]
 802103c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802103e:	3302      	adds	r3, #2
 8021040:	930a      	str	r3, [sp, #40]	@ 0x28
 8021042:	e695      	b.n	8020d70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021044:	d024      	beq.n	8021090 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8021046:	9b07      	ldr	r3, [sp, #28]
 8021048:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 802104a:	3b01      	subs	r3, #1
 802104c:	fb00 4003 	mla	r0, r0, r3, r4
 8021050:	1400      	asrs	r0, r0, #16
 8021052:	f53f aeaa 	bmi.w	8020daa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8021056:	3901      	subs	r1, #1
 8021058:	4288      	cmp	r0, r1
 802105a:	f6bf aea6 	bge.w	8020daa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802105e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8021060:	fb01 6303 	mla	r3, r1, r3, r6
 8021064:	141b      	asrs	r3, r3, #16
 8021066:	f53f aea0 	bmi.w	8020daa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802106a:	3a01      	subs	r2, #1
 802106c:	4293      	cmp	r3, r2
 802106e:	f6bf ae9c 	bge.w	8020daa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8021072:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021076:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 802107a:	f1bb 0f00 	cmp.w	fp, #0
 802107e:	f300 809a 	bgt.w	80211b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8021082:	9b07      	ldr	r3, [sp, #28]
 8021084:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8021088:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802108a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802108e:	930a      	str	r3, [sp, #40]	@ 0x28
 8021090:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8021092:	2b00      	cmp	r3, #0
 8021094:	f340 81eb 	ble.w	802146e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8021098:	ee30 0a04 	vadd.f32	s0, s0, s8
 802109c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80210a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80210a4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80210a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80210aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80210ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80210b2:	eef0 6a62 	vmov.f32	s13, s5
 80210b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80210ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80210be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80210c2:	ee16 4a90 	vmov	r4, s13
 80210c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80210ca:	eef0 6a43 	vmov.f32	s13, s6
 80210ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80210d2:	ee12 2a90 	vmov	r2, s5
 80210d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80210da:	fb92 f3f3 	sdiv	r3, r2, r3
 80210de:	ee13 2a10 	vmov	r2, s6
 80210e2:	9327      	str	r3, [sp, #156]	@ 0x9c
 80210e4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80210e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80210ea:	9328      	str	r3, [sp, #160]	@ 0xa0
 80210ec:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80210ee:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80210f0:	3b01      	subs	r3, #1
 80210f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80210f6:	9316      	str	r3, [sp, #88]	@ 0x58
 80210f8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80210fa:	bf08      	it	eq
 80210fc:	4613      	moveq	r3, r2
 80210fe:	ee16 6a90 	vmov	r6, s13
 8021102:	9307      	str	r3, [sp, #28]
 8021104:	eeb0 3a67 	vmov.f32	s6, s15
 8021108:	eef0 2a47 	vmov.f32	s5, s14
 802110c:	e622      	b.n	8020d54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802110e:	2800      	cmp	r0, #0
 8021110:	f43f ae92 	beq.w	8020e38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8021114:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8021118:	9308      	str	r3, [sp, #32]
 802111a:	0e1b      	lsrs	r3, r3, #24
 802111c:	9310      	str	r3, [sp, #64]	@ 0x40
 802111e:	e68b      	b.n	8020e38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8021120:	8839      	ldrh	r1, [r7, #0]
 8021122:	4dd4      	ldr	r5, [pc, #848]	@ (8021474 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8021124:	43db      	mvns	r3, r3
 8021126:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802112a:	fa5f f883 	uxtb.w	r8, r3
 802112e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8021132:	fb0e fe08 	mul.w	lr, lr, r8
 8021136:	10c8      	asrs	r0, r1, #3
 8021138:	00cb      	lsls	r3, r1, #3
 802113a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802113e:	f10e 0101 	add.w	r1, lr, #1
 8021142:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8021146:	fb00 f008 	mul.w	r0, r0, r8
 802114a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802114e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8021152:	f100 0e01 	add.w	lr, r0, #1
 8021156:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802115a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802115e:	b2db      	uxtb	r3, r3
 8021160:	b2c9      	uxtb	r1, r1
 8021162:	00d2      	lsls	r2, r2, #3
 8021164:	fb03 f308 	mul.w	r3, r3, r8
 8021168:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802116c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021170:	430a      	orrs	r2, r1
 8021172:	1c59      	adds	r1, r3, #1
 8021174:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021178:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802117c:	e748      	b.n	8021010 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802117e:	f112 0801 	adds.w	r8, r2, #1
 8021182:	f53f af4b 	bmi.w	802101c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021186:	4543      	cmp	r3, r8
 8021188:	f6ff af48 	blt.w	802101c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802118c:	f11c 0801 	adds.w	r8, ip, #1
 8021190:	f53f af44 	bmi.w	802101c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021194:	45c6      	cmp	lr, r8
 8021196:	f6ff af41 	blt.w	802101c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802119a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802119e:	fa0f f28e 	sxth.w	r2, lr
 80211a2:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80211a6:	9200      	str	r2, [sp, #0]
 80211a8:	b21b      	sxth	r3, r3
 80211aa:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80211ac:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80211ae:	4639      	mov	r1, r7
 80211b0:	f7ff fc87 	bl	8020ac2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80211b4:	e732      	b.n	802101c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80211b6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80211b8:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80211ba:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80211be:	1421      	asrs	r1, r4, #16
 80211c0:	1433      	asrs	r3, r6, #16
 80211c2:	fb07 1303 	mla	r3, r7, r3, r1
 80211c6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80211c8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80211cc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80211d0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80211d4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80211d8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80211dc:	2a00      	cmp	r2, #0
 80211de:	f000 8107 	beq.w	80213f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80211e2:	684d      	ldr	r5, [r1, #4]
 80211e4:	950d      	str	r5, [sp, #52]	@ 0x34
 80211e6:	0e2d      	lsrs	r5, r5, #24
 80211e8:	9514      	str	r5, [sp, #80]	@ 0x50
 80211ea:	b178      	cbz	r0, 802120c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80211ec:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 80211f0:	3f01      	subs	r7, #1
 80211f2:	00bf      	lsls	r7, r7, #2
 80211f4:	3704      	adds	r7, #4
 80211f6:	eb01 0e07 	add.w	lr, r1, r7
 80211fa:	59c9      	ldr	r1, [r1, r7]
 80211fc:	9109      	str	r1, [sp, #36]	@ 0x24
 80211fe:	0e09      	lsrs	r1, r1, #24
 8021200:	9111      	str	r1, [sp, #68]	@ 0x44
 8021202:	f8de 1004 	ldr.w	r1, [lr, #4]
 8021206:	910e      	str	r1, [sp, #56]	@ 0x38
 8021208:	0e09      	lsrs	r1, r1, #24
 802120a:	9115      	str	r1, [sp, #84]	@ 0x54
 802120c:	b292      	uxth	r2, r2
 802120e:	b280      	uxth	r0, r0
 8021210:	fb02 f900 	mul.w	r9, r2, r0
 8021214:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021218:	0112      	lsls	r2, r2, #4
 802121a:	eba2 0e09 	sub.w	lr, r2, r9
 802121e:	b280      	uxth	r0, r0
 8021220:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8021224:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8021226:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8021228:	fa1f fe8e 	uxth.w	lr, lr
 802122c:	1a09      	subs	r1, r1, r0
 802122e:	b289      	uxth	r1, r1
 8021230:	fb0e f202 	mul.w	r2, lr, r2
 8021234:	fb01 220c 	mla	r2, r1, ip, r2
 8021238:	fb00 2205 	mla	r2, r0, r5, r2
 802123c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802123e:	fb09 2205 	mla	r2, r9, r5, r2
 8021242:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8021246:	2a00      	cmp	r2, #0
 8021248:	f000 80c9 	beq.w	80213de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802124c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8021250:	d019      	beq.n	8021286 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8021252:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8021256:	fb0c fa0a 	mul.w	sl, ip, sl
 802125a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802125e:	fb0c fc03 	mul.w	ip, ip, r3
 8021262:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021266:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802126a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802126e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8021272:	4453      	add	r3, sl
 8021274:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021278:	0a1b      	lsrs	r3, r3, #8
 802127a:	0a3f      	lsrs	r7, r7, #8
 802127c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021280:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8021284:	433b      	orrs	r3, r7
 8021286:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8021288:	2dff      	cmp	r5, #255	@ 0xff
 802128a:	d020      	beq.n	80212ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802128c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802128e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021292:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8021294:	436f      	muls	r7, r5
 8021296:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8021298:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802129c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802129e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80212a2:	fb05 fa0a 	mul.w	sl, r5, sl
 80212a6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80212aa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80212ae:	44bc      	add	ip, r7
 80212b0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80212b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80212b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80212bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80212c0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80212c4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80212c8:	ea4c 050a 	orr.w	r5, ip, sl
 80212cc:	950d      	str	r5, [sp, #52]	@ 0x34
 80212ce:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80212d0:	2dff      	cmp	r5, #255	@ 0xff
 80212d2:	d020      	beq.n	8021316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80212d4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80212d6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80212da:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80212dc:	436f      	muls	r7, r5
 80212de:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80212e0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80212e4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80212e6:	fb05 fa0c 	mul.w	sl, r5, ip
 80212ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80212ee:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80212f2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80212f6:	44bc      	add	ip, r7
 80212f8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80212fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021300:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021304:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021308:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802130c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021310:	ea4c 050a 	orr.w	r5, ip, sl
 8021314:	9509      	str	r5, [sp, #36]	@ 0x24
 8021316:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021318:	2dff      	cmp	r5, #255	@ 0xff
 802131a:	d020      	beq.n	802135e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 802131c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802131e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021322:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021324:	436f      	muls	r7, r5
 8021326:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021328:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802132c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802132e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021332:	fb05 fa0a 	mul.w	sl, r5, sl
 8021336:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802133a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802133e:	44bc      	add	ip, r7
 8021340:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021344:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021348:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802134c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021350:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021354:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021358:	ea4c 050a 	orr.w	r5, ip, sl
 802135c:	950e      	str	r5, [sp, #56]	@ 0x38
 802135e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8021360:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021364:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8021366:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802136a:	fb0e f707 	mul.w	r7, lr, r7
 802136e:	fb01 770c 	mla	r7, r1, ip, r7
 8021372:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021376:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021378:	fb00 770c 	mla	r7, r0, ip, r7
 802137c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021380:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8021382:	fb09 770c 	mla	r7, r9, ip, r7
 8021386:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802138a:	fb0e fe0c 	mul.w	lr, lr, ip
 802138e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021392:	fb01 e303 	mla	r3, r1, r3, lr
 8021396:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8021398:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802139c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802139e:	fb00 330a 	mla	r3, r0, sl, r3
 80213a2:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 80213a6:	fb09 3c0c 	mla	ip, r9, ip, r3
 80213aa:	0a3f      	lsrs	r7, r7, #8
 80213ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80213b0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80213b4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80213b8:	ea47 070c 	orr.w	r7, r7, ip
 80213bc:	2aff      	cmp	r2, #255	@ 0xff
 80213be:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80213c2:	d11e      	bne.n	8021402 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80213c4:	097a      	lsrs	r2, r7, #5
 80213c6:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 80213ca:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80213ce:	f023 0307 	bic.w	r3, r3, #7
 80213d2:	4313      	orrs	r3, r2
 80213d4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80213d8:	431f      	orrs	r7, r3
 80213da:	f8a8 7000 	strh.w	r7, [r8]
 80213de:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80213e0:	441c      	add	r4, r3
 80213e2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80213e4:	f108 0802 	add.w	r8, r8, #2
 80213e8:	441e      	add	r6, r3
 80213ea:	f10b 3bff 	add.w	fp, fp, #4294967295
 80213ee:	e644      	b.n	802107a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80213f0:	2800      	cmp	r0, #0
 80213f2:	f43f af0b 	beq.w	802120c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80213f6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80213fa:	9109      	str	r1, [sp, #36]	@ 0x24
 80213fc:	0e09      	lsrs	r1, r1, #24
 80213fe:	9111      	str	r1, [sp, #68]	@ 0x44
 8021400:	e704      	b.n	802120c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8021402:	f8b8 1000 	ldrh.w	r1, [r8]
 8021406:	43d2      	mvns	r2, r2
 8021408:	ea4f 2c21 	mov.w	ip, r1, asr #8
 802140c:	fa5f fe82 	uxtb.w	lr, r2
 8021410:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8021414:	fb0c fc0e 	mul.w	ip, ip, lr
 8021418:	10c8      	asrs	r0, r1, #3
 802141a:	00ca      	lsls	r2, r1, #3
 802141c:	f10c 0101 	add.w	r1, ip, #1
 8021420:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8021424:	0c39      	lsrs	r1, r7, #16
 8021426:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802142a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802142e:	4911      	ldr	r1, [pc, #68]	@ (8021474 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8021430:	fb00 f00e 	mul.w	r0, r0, lr
 8021434:	fa5f fc8c 	uxtb.w	ip, ip
 8021438:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 802143c:	b2d2      	uxtb	r2, r2
 802143e:	1c41      	adds	r1, r0, #1
 8021440:	fb02 f20e 	mul.w	r2, r2, lr
 8021444:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021448:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802144c:	1c51      	adds	r1, r2, #1
 802144e:	00c0      	lsls	r0, r0, #3
 8021450:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021454:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021458:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802145c:	ea4c 0c00 	orr.w	ip, ip, r0
 8021460:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8021464:	ea47 0c0c 	orr.w	ip, r7, ip
 8021468:	f8a8 c000 	strh.w	ip, [r8]
 802146c:	e7b7      	b.n	80213de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802146e:	b01b      	add	sp, #108	@ 0x6c
 8021470:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021474:	fffff800 	.word	0xfffff800

08021478 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8021478:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802147c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8021480:	2d00      	cmp	r5, #0
 8021482:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8021486:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 802148a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802148e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8021492:	fb05 0e03 	mla	lr, r5, r3, r0
 8021496:	f2c0 808c 	blt.w	80215b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802149a:	45a9      	cmp	r9, r5
 802149c:	f340 8089 	ble.w	80215b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80214a0:	2800      	cmp	r0, #0
 80214a2:	f2c0 8084 	blt.w	80215ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80214a6:	4580      	cmp	r8, r0
 80214a8:	f340 8081 	ble.w	80215ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80214ac:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80214b0:	f01e 0f01 	tst.w	lr, #1
 80214b4:	5d16      	ldrb	r6, [r2, r4]
 80214b6:	bf0c      	ite	eq
 80214b8:	f006 060f 	andeq.w	r6, r6, #15
 80214bc:	1136      	asrne	r6, r6, #4
 80214be:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80214c2:	b2f6      	uxtb	r6, r6
 80214c4:	1c44      	adds	r4, r0, #1
 80214c6:	d477      	bmi.n	80215b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80214c8:	45a0      	cmp	r8, r4
 80214ca:	dd75      	ble.n	80215b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80214cc:	2f00      	cmp	r7, #0
 80214ce:	d075      	beq.n	80215bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80214d0:	f10e 0a01 	add.w	sl, lr, #1
 80214d4:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80214d8:	f01a 0f01 	tst.w	sl, #1
 80214dc:	5d14      	ldrb	r4, [r2, r4]
 80214de:	bf0c      	ite	eq
 80214e0:	f004 040f 	andeq.w	r4, r4, #15
 80214e4:	1124      	asrne	r4, r4, #4
 80214e6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80214ea:	b2e4      	uxtb	r4, r4
 80214ec:	3501      	adds	r5, #1
 80214ee:	d469      	bmi.n	80215c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80214f0:	45a9      	cmp	r9, r5
 80214f2:	dd67      	ble.n	80215c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80214f4:	f1bc 0f00 	cmp.w	ip, #0
 80214f8:	d067      	beq.n	80215ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80214fa:	2800      	cmp	r0, #0
 80214fc:	db60      	blt.n	80215c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80214fe:	4580      	cmp	r8, r0
 8021500:	dd5e      	ble.n	80215c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8021502:	eb03 090e 	add.w	r9, r3, lr
 8021506:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802150a:	f019 0f01 	tst.w	r9, #1
 802150e:	5d55      	ldrb	r5, [r2, r5]
 8021510:	bf0c      	ite	eq
 8021512:	f005 050f 	andeq.w	r5, r5, #15
 8021516:	112d      	asrne	r5, r5, #4
 8021518:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802151c:	b2ed      	uxtb	r5, r5
 802151e:	3001      	adds	r0, #1
 8021520:	d456      	bmi.n	80215d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8021522:	4580      	cmp	r8, r0
 8021524:	dd54      	ble.n	80215d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8021526:	2f00      	cmp	r7, #0
 8021528:	d054      	beq.n	80215d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802152a:	3301      	adds	r3, #1
 802152c:	449e      	add	lr, r3
 802152e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8021532:	f01e 0f01 	tst.w	lr, #1
 8021536:	5cd0      	ldrb	r0, [r2, r3]
 8021538:	bf0c      	ite	eq
 802153a:	f000 000f 	andeq.w	r0, r0, #15
 802153e:	1100      	asrne	r0, r0, #4
 8021540:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021544:	b2c3      	uxtb	r3, r0
 8021546:	b2ba      	uxth	r2, r7
 8021548:	fa1f fc8c 	uxth.w	ip, ip
 802154c:	fb02 f00c 	mul.w	r0, r2, ip
 8021550:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8021554:	0112      	lsls	r2, r2, #4
 8021556:	fa1f fc8c 	uxth.w	ip, ip
 802155a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802155e:	1a12      	subs	r2, r2, r0
 8021560:	eba7 070c 	sub.w	r7, r7, ip
 8021564:	b292      	uxth	r2, r2
 8021566:	b2bf      	uxth	r7, r7
 8021568:	4362      	muls	r2, r4
 802156a:	fb06 2207 	mla	r2, r6, r7, r2
 802156e:	fb0c 2505 	mla	r5, ip, r5, r2
 8021572:	fb00 5303 	mla	r3, r0, r3, r5
 8021576:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802157a:	b1b3      	cbz	r3, 80215aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802157c:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 8021580:	435a      	muls	r2, r3
 8021582:	1c53      	adds	r3, r2, #1
 8021584:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021588:	4a2d      	ldr	r2, [pc, #180]	@ (8021640 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802158a:	121b      	asrs	r3, r3, #8
 802158c:	6812      	ldr	r2, [r2, #0]
 802158e:	2bff      	cmp	r3, #255	@ 0xff
 8021590:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8021594:	d120      	bne.n	80215d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8021596:	4b2b      	ldr	r3, [pc, #172]	@ (8021644 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8021598:	0950      	lsrs	r0, r2, #5
 802159a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802159e:	4033      	ands	r3, r6
 80215a0:	4318      	orrs	r0, r3
 80215a2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80215a6:	4302      	orrs	r2, r0
 80215a8:	800a      	strh	r2, [r1, #0]
 80215aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80215ae:	2600      	movs	r6, #0
 80215b0:	e788      	b.n	80214c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80215b2:	2400      	movs	r4, #0
 80215b4:	4626      	mov	r6, r4
 80215b6:	e799      	b.n	80214ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80215b8:	2400      	movs	r4, #0
 80215ba:	e797      	b.n	80214ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80215bc:	463c      	mov	r4, r7
 80215be:	e795      	b.n	80214ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80215c0:	2500      	movs	r5, #0
 80215c2:	e7ac      	b.n	802151e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80215c4:	2300      	movs	r3, #0
 80215c6:	461d      	mov	r5, r3
 80215c8:	e7bd      	b.n	8021546 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80215ca:	4663      	mov	r3, ip
 80215cc:	4665      	mov	r5, ip
 80215ce:	e7ba      	b.n	8021546 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80215d0:	2300      	movs	r3, #0
 80215d2:	e7b8      	b.n	8021546 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80215d4:	463b      	mov	r3, r7
 80215d6:	e7b6      	b.n	8021546 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80215d8:	880d      	ldrh	r5, [r1, #0]
 80215da:	b29f      	uxth	r7, r3
 80215dc:	122c      	asrs	r4, r5, #8
 80215de:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80215e2:	43db      	mvns	r3, r3
 80215e4:	b2db      	uxtb	r3, r3
 80215e6:	fb10 f007 	smulbb	r0, r0, r7
 80215ea:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80215ee:	fb04 0403 	mla	r4, r4, r3, r0
 80215f2:	b2f6      	uxtb	r6, r6
 80215f4:	10e8      	asrs	r0, r5, #3
 80215f6:	b2d2      	uxtb	r2, r2
 80215f8:	00ed      	lsls	r5, r5, #3
 80215fa:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80215fe:	fb12 f207 	smulbb	r2, r2, r7
 8021602:	fb16 f607 	smulbb	r6, r6, r7
 8021606:	b2ed      	uxtb	r5, r5
 8021608:	b2a4      	uxth	r4, r4
 802160a:	fb00 6603 	mla	r6, r0, r3, r6
 802160e:	fb05 2303 	mla	r3, r5, r3, r2
 8021612:	b29a      	uxth	r2, r3
 8021614:	1c63      	adds	r3, r4, #1
 8021616:	b2b0      	uxth	r0, r6
 8021618:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802161c:	1c53      	adds	r3, r2, #1
 802161e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021622:	1c42      	adds	r2, r0, #1
 8021624:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021628:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802162c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021630:	0940      	lsrs	r0, r0, #5
 8021632:	4323      	orrs	r3, r4
 8021634:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021638:	4303      	orrs	r3, r0
 802163a:	800b      	strh	r3, [r1, #0]
 802163c:	e7b5      	b.n	80215aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802163e:	bf00      	nop
 8021640:	200157d0 	.word	0x200157d0
 8021644:	00fff800 	.word	0x00fff800

08021648 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802164c:	b097      	sub	sp, #92	@ 0x5c
 802164e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 8021652:	9214      	str	r2, [sp, #80]	@ 0x50
 8021654:	9309      	str	r3, [sp, #36]	@ 0x24
 8021656:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8021658:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 802165c:	910d      	str	r1, [sp, #52]	@ 0x34
 802165e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021660:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8021664:	9015      	str	r0, [sp, #84]	@ 0x54
 8021666:	6850      	ldr	r0, [r2, #4]
 8021668:	6812      	ldr	r2, [r2, #0]
 802166a:	fb00 1303 	mla	r3, r0, r3, r1
 802166e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8021672:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021674:	689b      	ldr	r3, [r3, #8]
 8021676:	3301      	adds	r3, #1
 8021678:	f023 0301 	bic.w	r3, r3, #1
 802167c:	930a      	str	r3, [sp, #40]	@ 0x28
 802167e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021680:	681f      	ldr	r7, [r3, #0]
 8021682:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021684:	2b00      	cmp	r3, #0
 8021686:	dc03      	bgt.n	8021690 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021688:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802168a:	2b00      	cmp	r3, #0
 802168c:	f340 8287 	ble.w	8021b9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8021690:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021692:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021696:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802169a:	1e48      	subs	r0, r1, #1
 802169c:	f102 3cff 	add.w	ip, r2, #4294967295
 80216a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80216a2:	2b00      	cmp	r3, #0
 80216a4:	f340 80c4 	ble.w	8021830 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80216a8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80216ac:	ea4f 4326 	mov.w	r3, r6, asr #16
 80216b0:	d406      	bmi.n	80216c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80216b2:	4586      	cmp	lr, r0
 80216b4:	da04      	bge.n	80216c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80216b6:	2b00      	cmp	r3, #0
 80216b8:	db02      	blt.n	80216c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80216ba:	4563      	cmp	r3, ip
 80216bc:	f2c0 80b9 	blt.w	8021832 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80216c0:	f11e 0e01 	adds.w	lr, lr, #1
 80216c4:	f100 80aa 	bmi.w	802181c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80216c8:	4571      	cmp	r1, lr
 80216ca:	f2c0 80a7 	blt.w	802181c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80216ce:	3301      	adds	r3, #1
 80216d0:	f100 80a4 	bmi.w	802181c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80216d4:	429a      	cmp	r2, r3
 80216d6:	f2c0 80a1 	blt.w	802181c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80216da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80216dc:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 80216e0:	930e      	str	r3, [sp, #56]	@ 0x38
 80216e2:	46c8      	mov	r8, r9
 80216e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80216e6:	2b00      	cmp	r3, #0
 80216e8:	f340 80c3 	ble.w	8021872 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80216ec:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80216ee:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80216f2:	1423      	asrs	r3, r4, #16
 80216f4:	ea4f 4026 	mov.w	r0, r6, asr #16
 80216f8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80216fc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021700:	f100 814d 	bmi.w	802199e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8021704:	f10c 3bff 	add.w	fp, ip, #4294967295
 8021708:	455b      	cmp	r3, fp
 802170a:	f280 8148 	bge.w	802199e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802170e:	2800      	cmp	r0, #0
 8021710:	f2c0 8145 	blt.w	802199e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8021714:	f10e 3bff 	add.w	fp, lr, #4294967295
 8021718:	4558      	cmp	r0, fp
 802171a:	f280 8140 	bge.w	802199e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802171e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8021720:	fb00 3305 	mla	r3, r0, r5, r3
 8021724:	0858      	lsrs	r0, r3, #1
 8021726:	07dd      	lsls	r5, r3, #31
 8021728:	f817 c000 	ldrb.w	ip, [r7, r0]
 802172c:	bf54      	ite	pl
 802172e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021732:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021736:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802173a:	fa5f fc8c 	uxtb.w	ip, ip
 802173e:	2a00      	cmp	r2, #0
 8021740:	f000 80db 	beq.w	80218fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8021744:	1c58      	adds	r0, r3, #1
 8021746:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802174a:	07c0      	lsls	r0, r0, #31
 802174c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021750:	bf54      	ite	pl
 8021752:	f00e 0e0f 	andpl.w	lr, lr, #15
 8021756:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802175a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802175e:	fa5f f08e 	uxtb.w	r0, lr
 8021762:	9010      	str	r0, [sp, #64]	@ 0x40
 8021764:	b1c9      	cbz	r1, 802179a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8021766:	4453      	add	r3, sl
 8021768:	0858      	lsrs	r0, r3, #1
 802176a:	07dd      	lsls	r5, r3, #31
 802176c:	5c38      	ldrb	r0, [r7, r0]
 802176e:	bf54      	ite	pl
 8021770:	f000 000f 	andpl.w	r0, r0, #15
 8021774:	1100      	asrmi	r0, r0, #4
 8021776:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802177a:	3301      	adds	r3, #1
 802177c:	b2c0      	uxtb	r0, r0
 802177e:	900b      	str	r0, [sp, #44]	@ 0x2c
 8021780:	0858      	lsrs	r0, r3, #1
 8021782:	07dd      	lsls	r5, r3, #31
 8021784:	f817 e000 	ldrb.w	lr, [r7, r0]
 8021788:	bf54      	ite	pl
 802178a:	f00e 030f 	andpl.w	r3, lr, #15
 802178e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8021792:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8021796:	b2db      	uxtb	r3, r3
 8021798:	9311      	str	r3, [sp, #68]	@ 0x44
 802179a:	b292      	uxth	r2, r2
 802179c:	b289      	uxth	r1, r1
 802179e:	fb02 f301 	mul.w	r3, r2, r1
 80217a2:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80217a6:	0112      	lsls	r2, r2, #4
 80217a8:	b289      	uxth	r1, r1
 80217aa:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80217ae:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80217b0:	1ad2      	subs	r2, r2, r3
 80217b2:	1a40      	subs	r0, r0, r1
 80217b4:	b292      	uxth	r2, r2
 80217b6:	436a      	muls	r2, r5
 80217b8:	b280      	uxth	r0, r0
 80217ba:	fb0c 2c00 	mla	ip, ip, r0, r2
 80217be:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80217c0:	fb01 c102 	mla	r1, r1, r2, ip
 80217c4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80217c6:	fb03 1302 	mla	r3, r3, r2, r1
 80217ca:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80217ce:	b1db      	cbz	r3, 8021808 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80217d0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80217d2:	4353      	muls	r3, r2
 80217d4:	1c5a      	adds	r2, r3, #1
 80217d6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80217da:	4ac6      	ldr	r2, [pc, #792]	@ (8021af4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80217dc:	121b      	asrs	r3, r3, #8
 80217de:	6812      	ldr	r2, [r2, #0]
 80217e0:	2bff      	cmp	r3, #255	@ 0xff
 80217e2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80217e6:	f040 8099 	bne.w	802191c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80217ea:	0953      	lsrs	r3, r2, #5
 80217ec:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80217f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80217f4:	f02c 0c07 	bic.w	ip, ip, #7
 80217f8:	ea43 0c0c 	orr.w	ip, r3, ip
 80217fc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021800:	ea4c 0202 	orr.w	r2, ip, r2
 8021804:	f8a8 2000 	strh.w	r2, [r8]
 8021808:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802180a:	441c      	add	r4, r3
 802180c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802180e:	441e      	add	r6, r3
 8021810:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8021812:	3b01      	subs	r3, #1
 8021814:	f108 0802 	add.w	r8, r8, #2
 8021818:	930e      	str	r3, [sp, #56]	@ 0x38
 802181a:	e763      	b.n	80216e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802181c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802181e:	441c      	add	r4, r3
 8021820:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021822:	441e      	add	r6, r3
 8021824:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021826:	3b01      	subs	r3, #1
 8021828:	9309      	str	r3, [sp, #36]	@ 0x24
 802182a:	f109 0902 	add.w	r9, r9, #2
 802182e:	e737      	b.n	80216a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021830:	d024      	beq.n	802187c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8021832:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021834:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8021836:	3b01      	subs	r3, #1
 8021838:	fb00 4003 	mla	r0, r0, r3, r4
 802183c:	1400      	asrs	r0, r0, #16
 802183e:	f53f af4c 	bmi.w	80216da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021842:	3901      	subs	r1, #1
 8021844:	4288      	cmp	r0, r1
 8021846:	f6bf af48 	bge.w	80216da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802184a:	9924      	ldr	r1, [sp, #144]	@ 0x90
 802184c:	fb01 6303 	mla	r3, r1, r3, r6
 8021850:	141b      	asrs	r3, r3, #16
 8021852:	f53f af42 	bmi.w	80216da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021856:	3a01      	subs	r2, #1
 8021858:	4293      	cmp	r3, r2
 802185a:	f6bf af3e 	bge.w	80216da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802185e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8021862:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8021866:	930e      	str	r3, [sp, #56]	@ 0x38
 8021868:	46c8      	mov	r8, r9
 802186a:	f1bb 0f00 	cmp.w	fp, #0
 802186e:	f300 80b7 	bgt.w	80219e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8021872:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021874:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8021878:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802187c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802187e:	2b00      	cmp	r3, #0
 8021880:	f340 818d 	ble.w	8021b9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8021884:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021888:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802188c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021890:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021892:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021896:	ee31 1a05 	vadd.f32	s2, s2, s10
 802189a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802189e:	eef0 6a62 	vmov.f32	s13, s5
 80218a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80218a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80218aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80218ae:	ee16 4a90 	vmov	r4, s13
 80218b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80218b6:	eef0 6a43 	vmov.f32	s13, s6
 80218ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80218be:	ee12 2a90 	vmov	r2, s5
 80218c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80218c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80218ca:	ee13 2a10 	vmov	r2, s6
 80218ce:	9323      	str	r3, [sp, #140]	@ 0x8c
 80218d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80218d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80218d6:	9324      	str	r3, [sp, #144]	@ 0x90
 80218d8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80218da:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80218dc:	3b01      	subs	r3, #1
 80218de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80218e2:	930d      	str	r3, [sp, #52]	@ 0x34
 80218e4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80218e6:	bf08      	it	eq
 80218e8:	4613      	moveq	r3, r2
 80218ea:	ee16 6a90 	vmov	r6, s13
 80218ee:	9309      	str	r3, [sp, #36]	@ 0x24
 80218f0:	eeb0 3a67 	vmov.f32	s6, s15
 80218f4:	eef0 2a47 	vmov.f32	s5, s14
 80218f8:	e6c3      	b.n	8021682 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80218fa:	2900      	cmp	r1, #0
 80218fc:	f43f af4d 	beq.w	802179a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8021900:	eb0a 0003 	add.w	r0, sl, r3
 8021904:	0843      	lsrs	r3, r0, #1
 8021906:	07c0      	lsls	r0, r0, #31
 8021908:	5cfb      	ldrb	r3, [r7, r3]
 802190a:	bf54      	ite	pl
 802190c:	f003 030f 	andpl.w	r3, r3, #15
 8021910:	111b      	asrmi	r3, r3, #4
 8021912:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8021916:	b2db      	uxtb	r3, r3
 8021918:	930b      	str	r3, [sp, #44]	@ 0x2c
 802191a:	e73e      	b.n	802179a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802191c:	f8b8 e000 	ldrh.w	lr, [r8]
 8021920:	fa1f fb83 	uxth.w	fp, r3
 8021924:	ea4f 202e 	mov.w	r0, lr, asr #8
 8021928:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802192c:	43db      	mvns	r3, r3
 802192e:	b2db      	uxtb	r3, r3
 8021930:	fb11 f10b 	smulbb	r1, r1, fp
 8021934:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021938:	fb00 1003 	mla	r0, r0, r3, r1
 802193c:	fa5f fc8c 	uxtb.w	ip, ip
 8021940:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8021944:	b2d2      	uxtb	r2, r2
 8021946:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802194a:	b280      	uxth	r0, r0
 802194c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8021950:	fb1c fc0b 	smulbb	ip, ip, fp
 8021954:	fa5f fe8e 	uxtb.w	lr, lr
 8021958:	fb12 fb0b 	smulbb	fp, r2, fp
 802195c:	fb01 cc03 	mla	ip, r1, r3, ip
 8021960:	fb0e bb03 	mla	fp, lr, r3, fp
 8021964:	1c43      	adds	r3, r0, #1
 8021966:	fa1f fc8c 	uxth.w	ip, ip
 802196a:	fa1f fb8b 	uxth.w	fp, fp
 802196e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021972:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 8021976:	f10c 0101 	add.w	r1, ip, #1
 802197a:	f10b 0001 	add.w	r0, fp, #1
 802197e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8021982:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8021986:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802198a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802198e:	4318      	orrs	r0, r3
 8021990:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8021994:	ea40 000c 	orr.w	r0, r0, ip
 8021998:	f8a8 0000 	strh.w	r0, [r8]
 802199c:	e734      	b.n	8021808 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802199e:	f113 0b01 	adds.w	fp, r3, #1
 80219a2:	f53f af31 	bmi.w	8021808 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80219a6:	45dc      	cmp	ip, fp
 80219a8:	f6ff af2e 	blt.w	8021808 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80219ac:	f110 0b01 	adds.w	fp, r0, #1
 80219b0:	f53f af2a 	bmi.w	8021808 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80219b4:	45de      	cmp	lr, fp
 80219b6:	f6ff af27 	blt.w	8021808 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80219ba:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80219bc:	9302      	str	r3, [sp, #8]
 80219be:	fa0f f38e 	sxth.w	r3, lr
 80219c2:	9301      	str	r3, [sp, #4]
 80219c4:	fa0f f38c 	sxth.w	r3, ip
 80219c8:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80219cc:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80219d0:	9300      	str	r3, [sp, #0]
 80219d2:	463a      	mov	r2, r7
 80219d4:	4653      	mov	r3, sl
 80219d6:	4641      	mov	r1, r8
 80219d8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80219da:	f7ff fd4d 	bl	8021478 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80219de:	e713      	b.n	8021808 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80219e0:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80219e2:	1422      	asrs	r2, r4, #16
 80219e4:	1433      	asrs	r3, r6, #16
 80219e6:	fb05 2303 	mla	r3, r5, r3, r2
 80219ea:	085a      	lsrs	r2, r3, #1
 80219ec:	07dd      	lsls	r5, r3, #31
 80219ee:	5cba      	ldrb	r2, [r7, r2]
 80219f0:	bf54      	ite	pl
 80219f2:	f002 020f 	andpl.w	r2, r2, #15
 80219f6:	1112      	asrmi	r2, r2, #4
 80219f8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80219fc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8021a00:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021a04:	b2d2      	uxtb	r2, r2
 8021a06:	2900      	cmp	r1, #0
 8021a08:	d076      	beq.n	8021af8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021a0a:	f103 0e01 	add.w	lr, r3, #1
 8021a0e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8021a12:	f01e 0f01 	tst.w	lr, #1
 8021a16:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8021a1a:	bf0c      	ite	eq
 8021a1c:	f00c 0c0f 	andeq.w	ip, ip, #15
 8021a20:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8021a24:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021a28:	fa5f f58c 	uxtb.w	r5, ip
 8021a2c:	9512      	str	r5, [sp, #72]	@ 0x48
 8021a2e:	b300      	cbz	r0, 8021a72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8021a30:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021a32:	442b      	add	r3, r5
 8021a34:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8021a38:	07dd      	lsls	r5, r3, #31
 8021a3a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8021a3e:	bf54      	ite	pl
 8021a40:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021a44:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021a48:	3301      	adds	r3, #1
 8021a4a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021a4e:	fa5f f58c 	uxtb.w	r5, ip
 8021a52:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8021a56:	950c      	str	r5, [sp, #48]	@ 0x30
 8021a58:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8021a5c:	07dd      	lsls	r5, r3, #31
 8021a5e:	bf54      	ite	pl
 8021a60:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021a64:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021a68:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021a6c:	fa5f f38c 	uxtb.w	r3, ip
 8021a70:	9313      	str	r3, [sp, #76]	@ 0x4c
 8021a72:	b289      	uxth	r1, r1
 8021a74:	b280      	uxth	r0, r0
 8021a76:	fb01 f300 	mul.w	r3, r1, r0
 8021a7a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8021a7e:	0109      	lsls	r1, r1, #4
 8021a80:	b280      	uxth	r0, r0
 8021a82:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 8021a86:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021a88:	1ac9      	subs	r1, r1, r3
 8021a8a:	ebac 0c00 	sub.w	ip, ip, r0
 8021a8e:	b289      	uxth	r1, r1
 8021a90:	4369      	muls	r1, r5
 8021a92:	fa1f fc8c 	uxth.w	ip, ip
 8021a96:	fb02 120c 	mla	r2, r2, ip, r1
 8021a9a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8021a9c:	fb00 2001 	mla	r0, r0, r1, r2
 8021aa0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8021aa2:	fb03 0302 	mla	r3, r3, r2, r0
 8021aa6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021aaa:	b1d3      	cbz	r3, 8021ae2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8021aac:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8021aae:	4353      	muls	r3, r2
 8021ab0:	1c5a      	adds	r2, r3, #1
 8021ab2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8021ab6:	4a0f      	ldr	r2, [pc, #60]	@ (8021af4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8021ab8:	121b      	asrs	r3, r3, #8
 8021aba:	6812      	ldr	r2, [r2, #0]
 8021abc:	2bff      	cmp	r3, #255	@ 0xff
 8021abe:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8021ac2:	d12d      	bne.n	8021b20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8021ac4:	0953      	lsrs	r3, r2, #5
 8021ac6:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8021aca:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021ace:	f02c 0c07 	bic.w	ip, ip, #7
 8021ad2:	ea43 0c0c 	orr.w	ip, r3, ip
 8021ad6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021ada:	ea4c 0202 	orr.w	r2, ip, r2
 8021ade:	f8a8 2000 	strh.w	r2, [r8]
 8021ae2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8021ae4:	441c      	add	r4, r3
 8021ae6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021ae8:	f108 0802 	add.w	r8, r8, #2
 8021aec:	441e      	add	r6, r3
 8021aee:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021af2:	e6ba      	b.n	802186a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8021af4:	200157d0 	.word	0x200157d0
 8021af8:	2800      	cmp	r0, #0
 8021afa:	d0ba      	beq.n	8021a72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8021afc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021afe:	442b      	add	r3, r5
 8021b00:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8021b04:	07db      	lsls	r3, r3, #31
 8021b06:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8021b0a:	bf54      	ite	pl
 8021b0c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021b10:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021b14:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021b18:	fa5f f38c 	uxtb.w	r3, ip
 8021b1c:	930c      	str	r3, [sp, #48]	@ 0x30
 8021b1e:	e7a8      	b.n	8021a72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8021b20:	f8b8 e000 	ldrh.w	lr, [r8]
 8021b24:	fa1f fa83 	uxth.w	sl, r3
 8021b28:	ea4f 202e 	mov.w	r0, lr, asr #8
 8021b2c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8021b30:	43db      	mvns	r3, r3
 8021b32:	b2db      	uxtb	r3, r3
 8021b34:	fb11 f10a 	smulbb	r1, r1, sl
 8021b38:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021b3c:	fb00 1003 	mla	r0, r0, r3, r1
 8021b40:	b2d2      	uxtb	r2, r2
 8021b42:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8021b46:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021b4a:	fa5f fe8e 	uxtb.w	lr, lr
 8021b4e:	fb12 f20a 	smulbb	r2, r2, sl
 8021b52:	fb0e 2203 	mla	r2, lr, r3, r2
 8021b56:	fa5f fc8c 	uxtb.w	ip, ip
 8021b5a:	b280      	uxth	r0, r0
 8021b5c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8021b60:	b292      	uxth	r2, r2
 8021b62:	fb1c fc0a 	smulbb	ip, ip, sl
 8021b66:	fb01 cc03 	mla	ip, r1, r3, ip
 8021b6a:	1c43      	adds	r3, r0, #1
 8021b6c:	1c51      	adds	r1, r2, #1
 8021b6e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021b72:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8021b76:	fa1f fc8c 	uxth.w	ip, ip
 8021b7a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8021b7e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8021b82:	4308      	orrs	r0, r1
 8021b84:	f10c 0101 	add.w	r1, ip, #1
 8021b88:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8021b8c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8021b90:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8021b94:	ea40 000c 	orr.w	r0, r0, ip
 8021b98:	f8a8 0000 	strh.w	r0, [r8]
 8021b9c:	e7a1      	b.n	8021ae2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8021b9e:	b017      	add	sp, #92	@ 0x5c
 8021ba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021ba4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8021ba4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021ba8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8021bac:	2d00      	cmp	r5, #0
 8021bae:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8021bb2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8021bb6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8021bba:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8021bbe:	fb05 0e03 	mla	lr, r5, r3, r0
 8021bc2:	f2c0 80b0 	blt.w	8021d26 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8021bc6:	45a9      	cmp	r9, r5
 8021bc8:	f340 80ad 	ble.w	8021d26 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8021bcc:	2800      	cmp	r0, #0
 8021bce:	f2c0 80a8 	blt.w	8021d22 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8021bd2:	4580      	cmp	r8, r0
 8021bd4:	f340 80a5 	ble.w	8021d22 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8021bd8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8021bdc:	f01e 0f01 	tst.w	lr, #1
 8021be0:	5d16      	ldrb	r6, [r2, r4]
 8021be2:	bf0c      	ite	eq
 8021be4:	f006 060f 	andeq.w	r6, r6, #15
 8021be8:	1136      	asrne	r6, r6, #4
 8021bea:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8021bee:	b2f6      	uxtb	r6, r6
 8021bf0:	1c44      	adds	r4, r0, #1
 8021bf2:	f100 809b 	bmi.w	8021d2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8021bf6:	45a0      	cmp	r8, r4
 8021bf8:	f340 8098 	ble.w	8021d2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8021bfc:	2f00      	cmp	r7, #0
 8021bfe:	f000 8097 	beq.w	8021d30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8021c02:	f10e 0a01 	add.w	sl, lr, #1
 8021c06:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8021c0a:	f01a 0f01 	tst.w	sl, #1
 8021c0e:	5d14      	ldrb	r4, [r2, r4]
 8021c10:	bf0c      	ite	eq
 8021c12:	f004 040f 	andeq.w	r4, r4, #15
 8021c16:	1124      	asrne	r4, r4, #4
 8021c18:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8021c1c:	b2e4      	uxtb	r4, r4
 8021c1e:	3501      	adds	r5, #1
 8021c20:	f100 808a 	bmi.w	8021d38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8021c24:	45a9      	cmp	r9, r5
 8021c26:	f340 8087 	ble.w	8021d38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8021c2a:	f1bc 0f00 	cmp.w	ip, #0
 8021c2e:	f000 8086 	beq.w	8021d3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8021c32:	2800      	cmp	r0, #0
 8021c34:	db7e      	blt.n	8021d34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8021c36:	4580      	cmp	r8, r0
 8021c38:	dd7c      	ble.n	8021d34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8021c3a:	eb03 090e 	add.w	r9, r3, lr
 8021c3e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8021c42:	f019 0f01 	tst.w	r9, #1
 8021c46:	5d55      	ldrb	r5, [r2, r5]
 8021c48:	bf0c      	ite	eq
 8021c4a:	f005 050f 	andeq.w	r5, r5, #15
 8021c4e:	112d      	asrne	r5, r5, #4
 8021c50:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8021c54:	b2ed      	uxtb	r5, r5
 8021c56:	3001      	adds	r0, #1
 8021c58:	d474      	bmi.n	8021d44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8021c5a:	4580      	cmp	r8, r0
 8021c5c:	dd72      	ble.n	8021d44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8021c5e:	2f00      	cmp	r7, #0
 8021c60:	d072      	beq.n	8021d48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8021c62:	3301      	adds	r3, #1
 8021c64:	449e      	add	lr, r3
 8021c66:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8021c6a:	f01e 0f01 	tst.w	lr, #1
 8021c6e:	5cd0      	ldrb	r0, [r2, r3]
 8021c70:	bf0c      	ite	eq
 8021c72:	f000 000f 	andeq.w	r0, r0, #15
 8021c76:	1100      	asrne	r0, r0, #4
 8021c78:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021c7c:	b2c3      	uxtb	r3, r0
 8021c7e:	b2ba      	uxth	r2, r7
 8021c80:	fa1f fc8c 	uxth.w	ip, ip
 8021c84:	fb02 f00c 	mul.w	r0, r2, ip
 8021c88:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8021c8c:	0112      	lsls	r2, r2, #4
 8021c8e:	fa1f fc8c 	uxth.w	ip, ip
 8021c92:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8021c96:	1a12      	subs	r2, r2, r0
 8021c98:	eba7 070c 	sub.w	r7, r7, ip
 8021c9c:	b292      	uxth	r2, r2
 8021c9e:	b2bf      	uxth	r7, r7
 8021ca0:	4362      	muls	r2, r4
 8021ca2:	fb06 2207 	mla	r2, r6, r7, r2
 8021ca6:	fb0c 2505 	mla	r5, ip, r5, r2
 8021caa:	fb00 5303 	mla	r3, r0, r3, r5
 8021cae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021cb2:	b3a3      	cbz	r3, 8021d1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8021cb4:	4a25      	ldr	r2, [pc, #148]	@ (8021d4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8021cb6:	880e      	ldrh	r6, [r1, #0]
 8021cb8:	6815      	ldr	r5, [r2, #0]
 8021cba:	1234      	asrs	r4, r6, #8
 8021cbc:	b29a      	uxth	r2, r3
 8021cbe:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8021cc2:	43db      	mvns	r3, r3
 8021cc4:	b2db      	uxtb	r3, r3
 8021cc6:	fb10 f002 	smulbb	r0, r0, r2
 8021cca:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021cce:	fb04 0403 	mla	r4, r4, r3, r0
 8021cd2:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8021cd6:	10f0      	asrs	r0, r6, #3
 8021cd8:	b2ed      	uxtb	r5, r5
 8021cda:	00f6      	lsls	r6, r6, #3
 8021cdc:	fb17 f702 	smulbb	r7, r7, r2
 8021ce0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021ce4:	fb15 f202 	smulbb	r2, r5, r2
 8021ce8:	b2f6      	uxtb	r6, r6
 8021cea:	b2a4      	uxth	r4, r4
 8021cec:	fb00 7003 	mla	r0, r0, r3, r7
 8021cf0:	fb06 2303 	mla	r3, r6, r3, r2
 8021cf4:	b29a      	uxth	r2, r3
 8021cf6:	1c63      	adds	r3, r4, #1
 8021cf8:	b280      	uxth	r0, r0
 8021cfa:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8021cfe:	1c53      	adds	r3, r2, #1
 8021d00:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021d04:	1c42      	adds	r2, r0, #1
 8021d06:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021d0a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8021d0e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021d12:	0940      	lsrs	r0, r0, #5
 8021d14:	4323      	orrs	r3, r4
 8021d16:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021d1a:	4303      	orrs	r3, r0
 8021d1c:	800b      	strh	r3, [r1, #0]
 8021d1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021d22:	2600      	movs	r6, #0
 8021d24:	e764      	b.n	8021bf0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8021d26:	2400      	movs	r4, #0
 8021d28:	4626      	mov	r6, r4
 8021d2a:	e778      	b.n	8021c1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8021d2c:	2400      	movs	r4, #0
 8021d2e:	e776      	b.n	8021c1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8021d30:	463c      	mov	r4, r7
 8021d32:	e774      	b.n	8021c1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8021d34:	2500      	movs	r5, #0
 8021d36:	e78e      	b.n	8021c56 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8021d38:	2300      	movs	r3, #0
 8021d3a:	461d      	mov	r5, r3
 8021d3c:	e79f      	b.n	8021c7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021d3e:	4663      	mov	r3, ip
 8021d40:	4665      	mov	r5, ip
 8021d42:	e79c      	b.n	8021c7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021d44:	2300      	movs	r3, #0
 8021d46:	e79a      	b.n	8021c7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021d48:	463b      	mov	r3, r7
 8021d4a:	e798      	b.n	8021c7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021d4c:	200157d0 	.word	0x200157d0

08021d50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021d50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021d54:	b093      	sub	sp, #76	@ 0x4c
 8021d56:	461d      	mov	r5, r3
 8021d58:	920c      	str	r2, [sp, #48]	@ 0x30
 8021d5a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8021d5c:	9107      	str	r1, [sp, #28]
 8021d5e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8021d62:	9011      	str	r0, [sp, #68]	@ 0x44
 8021d64:	6850      	ldr	r0, [r2, #4]
 8021d66:	6812      	ldr	r2, [r2, #0]
 8021d68:	fb00 1303 	mla	r3, r0, r3, r1
 8021d6c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8021d70:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021d72:	689b      	ldr	r3, [r3, #8]
 8021d74:	3301      	adds	r3, #1
 8021d76:	f023 0301 	bic.w	r3, r3, #1
 8021d7a:	9306      	str	r3, [sp, #24]
 8021d7c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021d7e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8021d82:	681f      	ldr	r7, [r3, #0]
 8021d84:	9b07      	ldr	r3, [sp, #28]
 8021d86:	2b00      	cmp	r3, #0
 8021d88:	dc03      	bgt.n	8021d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021d8a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021d8c:	2b00      	cmp	r3, #0
 8021d8e:	f340 8267 	ble.w	8022260 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8021d92:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021d94:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021d98:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021d9c:	1e48      	subs	r0, r1, #1
 8021d9e:	f102 3cff 	add.w	ip, r2, #4294967295
 8021da2:	2d00      	cmp	r5, #0
 8021da4:	f340 80b8 	ble.w	8021f18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8021da8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021dac:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021db0:	d406      	bmi.n	8021dc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021db2:	4586      	cmp	lr, r0
 8021db4:	da04      	bge.n	8021dc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021db6:	2b00      	cmp	r3, #0
 8021db8:	db02      	blt.n	8021dc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021dba:	4563      	cmp	r3, ip
 8021dbc:	f2c0 80ad 	blt.w	8021f1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8021dc0:	f11e 0e01 	adds.w	lr, lr, #1
 8021dc4:	f100 80a0 	bmi.w	8021f08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021dc8:	4571      	cmp	r1, lr
 8021dca:	f2c0 809d 	blt.w	8021f08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021dce:	3301      	adds	r3, #1
 8021dd0:	f100 809a 	bmi.w	8021f08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021dd4:	429a      	cmp	r2, r3
 8021dd6:	f2c0 8097 	blt.w	8021f08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021dda:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8021dde:	9509      	str	r5, [sp, #36]	@ 0x24
 8021de0:	46c8      	mov	r8, r9
 8021de2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021de4:	2b00      	cmp	r3, #0
 8021de6:	f340 80b6 	ble.w	8021f56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8021dea:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8021dee:	9308      	str	r3, [sp, #32]
 8021df0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021df2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8021df6:	1423      	asrs	r3, r4, #16
 8021df8:	ea4f 4026 	mov.w	r0, r6, asr #16
 8021dfc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021e00:	f100 813e 	bmi.w	8022080 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8021e04:	f10c 3bff 	add.w	fp, ip, #4294967295
 8021e08:	455b      	cmp	r3, fp
 8021e0a:	f280 8139 	bge.w	8022080 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8021e0e:	2800      	cmp	r0, #0
 8021e10:	f2c0 8136 	blt.w	8022080 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8021e14:	f10e 3bff 	add.w	fp, lr, #4294967295
 8021e18:	4558      	cmp	r0, fp
 8021e1a:	f280 8131 	bge.w	8022080 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8021e1e:	9a06      	ldr	r2, [sp, #24]
 8021e20:	fb00 3302 	mla	r3, r0, r2, r3
 8021e24:	0858      	lsrs	r0, r3, #1
 8021e26:	07da      	lsls	r2, r3, #31
 8021e28:	f817 c000 	ldrb.w	ip, [r7, r0]
 8021e2c:	9a08      	ldr	r2, [sp, #32]
 8021e2e:	bf54      	ite	pl
 8021e30:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021e34:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021e38:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021e3c:	fa5f fc8c 	uxtb.w	ip, ip
 8021e40:	2a00      	cmp	r2, #0
 8021e42:	f000 80cb 	beq.w	8021fdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021e46:	1c58      	adds	r0, r3, #1
 8021e48:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8021e4c:	07c0      	lsls	r0, r0, #31
 8021e4e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021e52:	bf54      	ite	pl
 8021e54:	f00e 0e0f 	andpl.w	lr, lr, #15
 8021e58:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8021e5c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8021e60:	fa5f fe8e 	uxtb.w	lr, lr
 8021e64:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8021e68:	b1b9      	cbz	r1, 8021e9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8021e6a:	4453      	add	r3, sl
 8021e6c:	0858      	lsrs	r0, r3, #1
 8021e6e:	07da      	lsls	r2, r3, #31
 8021e70:	5c38      	ldrb	r0, [r7, r0]
 8021e72:	bf54      	ite	pl
 8021e74:	f000 000f 	andpl.w	r0, r0, #15
 8021e78:	1100      	asrmi	r0, r0, #4
 8021e7a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021e7e:	b2c0      	uxtb	r0, r0
 8021e80:	900a      	str	r0, [sp, #40]	@ 0x28
 8021e82:	1c58      	adds	r0, r3, #1
 8021e84:	0843      	lsrs	r3, r0, #1
 8021e86:	07c2      	lsls	r2, r0, #31
 8021e88:	5cfb      	ldrb	r3, [r7, r3]
 8021e8a:	bf54      	ite	pl
 8021e8c:	f003 030f 	andpl.w	r3, r3, #15
 8021e90:	111b      	asrmi	r3, r3, #4
 8021e92:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8021e96:	b2db      	uxtb	r3, r3
 8021e98:	930e      	str	r3, [sp, #56]	@ 0x38
 8021e9a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8021e9e:	b289      	uxth	r1, r1
 8021ea0:	fb02 f301 	mul.w	r3, r2, r1
 8021ea4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8021ea8:	0112      	lsls	r2, r2, #4
 8021eaa:	b289      	uxth	r1, r1
 8021eac:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8021eb0:	1a40      	subs	r0, r0, r1
 8021eb2:	fa1f fe80 	uxth.w	lr, r0
 8021eb6:	1ad2      	subs	r2, r2, r3
 8021eb8:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8021eba:	b292      	uxth	r2, r2
 8021ebc:	4342      	muls	r2, r0
 8021ebe:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8021ec2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8021ec4:	fb01 c102 	mla	r1, r1, r2, ip
 8021ec8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8021eca:	fb03 1302 	mla	r3, r3, r2, r1
 8021ece:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021ed2:	2bff      	cmp	r3, #255	@ 0xff
 8021ed4:	f040 8093 	bne.w	8021ffe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8021ed8:	4bbe      	ldr	r3, [pc, #760]	@ (80221d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8021eda:	681a      	ldr	r2, [r3, #0]
 8021edc:	4bbe      	ldr	r3, [pc, #760]	@ (80221d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8021ede:	0951      	lsrs	r1, r2, #5
 8021ee0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8021ee4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021ee8:	430b      	orrs	r3, r1
 8021eea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021eee:	4313      	orrs	r3, r2
 8021ef0:	f8a8 3000 	strh.w	r3, [r8]
 8021ef4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8021ef6:	441c      	add	r4, r3
 8021ef8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021efa:	441e      	add	r6, r3
 8021efc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021efe:	3b01      	subs	r3, #1
 8021f00:	f108 0802 	add.w	r8, r8, #2
 8021f04:	9309      	str	r3, [sp, #36]	@ 0x24
 8021f06:	e76c      	b.n	8021de2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021f08:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8021f0a:	441c      	add	r4, r3
 8021f0c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021f0e:	3d01      	subs	r5, #1
 8021f10:	441e      	add	r6, r3
 8021f12:	f109 0902 	add.w	r9, r9, #2
 8021f16:	e744      	b.n	8021da2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8021f18:	d021      	beq.n	8021f5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8021f1a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8021f1c:	1e6b      	subs	r3, r5, #1
 8021f1e:	fb00 4003 	mla	r0, r0, r3, r4
 8021f22:	1400      	asrs	r0, r0, #16
 8021f24:	f53f af59 	bmi.w	8021dda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021f28:	3901      	subs	r1, #1
 8021f2a:	4288      	cmp	r0, r1
 8021f2c:	f6bf af55 	bge.w	8021dda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021f30:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8021f32:	fb01 6303 	mla	r3, r1, r3, r6
 8021f36:	141b      	asrs	r3, r3, #16
 8021f38:	f53f af4f 	bmi.w	8021dda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021f3c:	3a01      	subs	r2, #1
 8021f3e:	4293      	cmp	r3, r2
 8021f40:	f6bf af4b 	bge.w	8021dda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021f44:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8021f48:	9308      	str	r3, [sp, #32]
 8021f4a:	46a8      	mov	r8, r5
 8021f4c:	46ce      	mov	lr, r9
 8021f4e:	f1b8 0f00 	cmp.w	r8, #0
 8021f52:	f300 80b5 	bgt.w	80220c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021f56:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8021f5a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8021f5e:	9b07      	ldr	r3, [sp, #28]
 8021f60:	2b00      	cmp	r3, #0
 8021f62:	f340 817d 	ble.w	8022260 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8021f66:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021f6a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021f6e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021f72:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021f74:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021f78:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021f7c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021f80:	eef0 6a62 	vmov.f32	s13, s5
 8021f84:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021f88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021f8c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021f90:	ee16 4a90 	vmov	r4, s13
 8021f94:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021f98:	eef0 6a43 	vmov.f32	s13, s6
 8021f9c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021fa0:	ee12 2a90 	vmov	r2, s5
 8021fa4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021fa8:	fb92 f3f3 	sdiv	r3, r2, r3
 8021fac:	ee13 2a10 	vmov	r2, s6
 8021fb0:	931f      	str	r3, [sp, #124]	@ 0x7c
 8021fb2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021fb4:	fb92 f3f3 	sdiv	r3, r2, r3
 8021fb8:	9320      	str	r3, [sp, #128]	@ 0x80
 8021fba:	9b07      	ldr	r3, [sp, #28]
 8021fbc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8021fbe:	3b01      	subs	r3, #1
 8021fc0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021fc4:	9307      	str	r3, [sp, #28]
 8021fc6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021fc8:	ee16 6a90 	vmov	r6, s13
 8021fcc:	bf14      	ite	ne
 8021fce:	461d      	movne	r5, r3
 8021fd0:	4615      	moveq	r5, r2
 8021fd2:	eeb0 3a67 	vmov.f32	s6, s15
 8021fd6:	eef0 2a47 	vmov.f32	s5, s14
 8021fda:	e6d3      	b.n	8021d84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8021fdc:	2900      	cmp	r1, #0
 8021fde:	f43f af5c 	beq.w	8021e9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8021fe2:	eb0a 0003 	add.w	r0, sl, r3
 8021fe6:	0843      	lsrs	r3, r0, #1
 8021fe8:	07c0      	lsls	r0, r0, #31
 8021fea:	5cfb      	ldrb	r3, [r7, r3]
 8021fec:	bf54      	ite	pl
 8021fee:	f003 030f 	andpl.w	r3, r3, #15
 8021ff2:	111b      	asrmi	r3, r3, #4
 8021ff4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8021ff8:	b2db      	uxtb	r3, r3
 8021ffa:	930a      	str	r3, [sp, #40]	@ 0x28
 8021ffc:	e74d      	b.n	8021e9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8021ffe:	2b00      	cmp	r3, #0
 8022000:	f43f af78 	beq.w	8021ef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8022004:	4a73      	ldr	r2, [pc, #460]	@ (80221d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8022006:	f8b8 c000 	ldrh.w	ip, [r8]
 802200a:	6810      	ldr	r0, [r2, #0]
 802200c:	fa1f fe83 	uxth.w	lr, r3
 8022010:	ea4f 212c 	mov.w	r1, ip, asr #8
 8022014:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8022018:	43db      	mvns	r3, r3
 802201a:	b2db      	uxtb	r3, r3
 802201c:	fb12 f20e 	smulbb	r2, r2, lr
 8022020:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8022024:	fb01 2103 	mla	r1, r1, r3, r2
 8022028:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802202c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022030:	b2c0      	uxtb	r0, r0
 8022032:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022036:	fb1b fb0e 	smulbb	fp, fp, lr
 802203a:	b289      	uxth	r1, r1
 802203c:	fb10 fe0e 	smulbb	lr, r0, lr
 8022040:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8022044:	fa5f fc8c 	uxtb.w	ip, ip
 8022048:	fb02 b203 	mla	r2, r2, r3, fp
 802204c:	1c48      	adds	r0, r1, #1
 802204e:	fb0c e303 	mla	r3, ip, r3, lr
 8022052:	b292      	uxth	r2, r2
 8022054:	b29b      	uxth	r3, r3
 8022056:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802205a:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 802205e:	f102 0b01 	add.w	fp, r2, #1
 8022062:	1c59      	adds	r1, r3, #1
 8022064:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022068:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802206c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8022070:	0952      	lsrs	r2, r2, #5
 8022072:	4301      	orrs	r1, r0
 8022074:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022078:	4311      	orrs	r1, r2
 802207a:	f8a8 1000 	strh.w	r1, [r8]
 802207e:	e739      	b.n	8021ef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8022080:	f113 0b01 	adds.w	fp, r3, #1
 8022084:	f53f af36 	bmi.w	8021ef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8022088:	45dc      	cmp	ip, fp
 802208a:	f6ff af33 	blt.w	8021ef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802208e:	f110 0b01 	adds.w	fp, r0, #1
 8022092:	f53f af2f 	bmi.w	8021ef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8022096:	45de      	cmp	lr, fp
 8022098:	f6ff af2c 	blt.w	8021ef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802209c:	9a08      	ldr	r2, [sp, #32]
 802209e:	9302      	str	r3, [sp, #8]
 80220a0:	fa0f f38e 	sxth.w	r3, lr
 80220a4:	9301      	str	r3, [sp, #4]
 80220a6:	fa0f f38c 	sxth.w	r3, ip
 80220aa:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80220ae:	9105      	str	r1, [sp, #20]
 80220b0:	9300      	str	r3, [sp, #0]
 80220b2:	463a      	mov	r2, r7
 80220b4:	4653      	mov	r3, sl
 80220b6:	4641      	mov	r1, r8
 80220b8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80220ba:	f7ff fd73 	bl	8021ba4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80220be:	e719      	b.n	8021ef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80220c0:	9906      	ldr	r1, [sp, #24]
 80220c2:	1422      	asrs	r2, r4, #16
 80220c4:	1433      	asrs	r3, r6, #16
 80220c6:	fb01 2303 	mla	r3, r1, r3, r2
 80220ca:	085a      	lsrs	r2, r3, #1
 80220cc:	07d9      	lsls	r1, r3, #31
 80220ce:	5cba      	ldrb	r2, [r7, r2]
 80220d0:	bf54      	ite	pl
 80220d2:	f002 020f 	andpl.w	r2, r2, #15
 80220d6:	1112      	asrmi	r2, r2, #4
 80220d8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80220dc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80220e0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80220e4:	b2d2      	uxtb	r2, r2
 80220e6:	2800      	cmp	r0, #0
 80220e8:	d062      	beq.n	80221b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80220ea:	f103 0a01 	add.w	sl, r3, #1
 80220ee:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80220f2:	f01a 0f01 	tst.w	sl, #1
 80220f6:	5c79      	ldrb	r1, [r7, r1]
 80220f8:	bf0c      	ite	eq
 80220fa:	f001 010f 	andeq.w	r1, r1, #15
 80220fe:	1109      	asrne	r1, r1, #4
 8022100:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022104:	b2c9      	uxtb	r1, r1
 8022106:	910f      	str	r1, [sp, #60]	@ 0x3c
 8022108:	f1bc 0f00 	cmp.w	ip, #0
 802210c:	d019      	beq.n	8022142 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802210e:	9908      	ldr	r1, [sp, #32]
 8022110:	440b      	add	r3, r1
 8022112:	0859      	lsrs	r1, r3, #1
 8022114:	f013 0f01 	tst.w	r3, #1
 8022118:	5c79      	ldrb	r1, [r7, r1]
 802211a:	bf0c      	ite	eq
 802211c:	f001 010f 	andeq.w	r1, r1, #15
 8022120:	1109      	asrne	r1, r1, #4
 8022122:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022126:	b2c9      	uxtb	r1, r1
 8022128:	3301      	adds	r3, #1
 802212a:	910b      	str	r1, [sp, #44]	@ 0x2c
 802212c:	0859      	lsrs	r1, r3, #1
 802212e:	07db      	lsls	r3, r3, #31
 8022130:	5c79      	ldrb	r1, [r7, r1]
 8022132:	bf54      	ite	pl
 8022134:	f001 010f 	andpl.w	r1, r1, #15
 8022138:	1109      	asrmi	r1, r1, #4
 802213a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802213e:	b2c9      	uxtb	r1, r1
 8022140:	9110      	str	r1, [sp, #64]	@ 0x40
 8022142:	b280      	uxth	r0, r0
 8022144:	fa1f fc8c 	uxth.w	ip, ip
 8022148:	fb00 f30c 	mul.w	r3, r0, ip
 802214c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8022150:	0100      	lsls	r0, r0, #4
 8022152:	fa1f fc8c 	uxth.w	ip, ip
 8022156:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 802215a:	eba1 010c 	sub.w	r1, r1, ip
 802215e:	fa1f fa81 	uxth.w	sl, r1
 8022162:	1ac0      	subs	r0, r0, r3
 8022164:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8022166:	b280      	uxth	r0, r0
 8022168:	4348      	muls	r0, r1
 802216a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802216c:	fb02 020a 	mla	r2, r2, sl, r0
 8022170:	fb0c 2c01 	mla	ip, ip, r1, r2
 8022174:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8022176:	fb03 c302 	mla	r3, r3, r2, ip
 802217a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802217e:	2bff      	cmp	r3, #255	@ 0xff
 8022180:	d12c      	bne.n	80221dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8022182:	4b14      	ldr	r3, [pc, #80]	@ (80221d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8022184:	681a      	ldr	r2, [r3, #0]
 8022186:	4b14      	ldr	r3, [pc, #80]	@ (80221d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8022188:	0951      	lsrs	r1, r2, #5
 802218a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802218e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022192:	430b      	orrs	r3, r1
 8022194:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022198:	4313      	orrs	r3, r2
 802219a:	f8ae 3000 	strh.w	r3, [lr]
 802219e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80221a0:	441c      	add	r4, r3
 80221a2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80221a4:	f10e 0e02 	add.w	lr, lr, #2
 80221a8:	441e      	add	r6, r3
 80221aa:	f108 38ff 	add.w	r8, r8, #4294967295
 80221ae:	e6ce      	b.n	8021f4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80221b0:	f1bc 0f00 	cmp.w	ip, #0
 80221b4:	d0c5      	beq.n	8022142 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80221b6:	9908      	ldr	r1, [sp, #32]
 80221b8:	440b      	add	r3, r1
 80221ba:	0859      	lsrs	r1, r3, #1
 80221bc:	07db      	lsls	r3, r3, #31
 80221be:	5c79      	ldrb	r1, [r7, r1]
 80221c0:	bf54      	ite	pl
 80221c2:	f001 010f 	andpl.w	r1, r1, #15
 80221c6:	1109      	asrmi	r1, r1, #4
 80221c8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80221cc:	b2c9      	uxtb	r1, r1
 80221ce:	910b      	str	r1, [sp, #44]	@ 0x2c
 80221d0:	e7b7      	b.n	8022142 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80221d2:	bf00      	nop
 80221d4:	200157d0 	.word	0x200157d0
 80221d8:	fffff800 	.word	0xfffff800
 80221dc:	2b00      	cmp	r3, #0
 80221de:	d0de      	beq.n	802219e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80221e0:	4a21      	ldr	r2, [pc, #132]	@ (8022268 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80221e2:	f8be c000 	ldrh.w	ip, [lr]
 80221e6:	6810      	ldr	r0, [r2, #0]
 80221e8:	fa1f fa83 	uxth.w	sl, r3
 80221ec:	ea4f 212c 	mov.w	r1, ip, asr #8
 80221f0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80221f4:	43db      	mvns	r3, r3
 80221f6:	b2db      	uxtb	r3, r3
 80221f8:	fb12 f20a 	smulbb	r2, r2, sl
 80221fc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8022200:	fb01 2103 	mla	r1, r1, r3, r2
 8022204:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8022208:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802220c:	b2c0      	uxtb	r0, r0
 802220e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022212:	fa5f fc8c 	uxtb.w	ip, ip
 8022216:	fb10 f00a 	smulbb	r0, r0, sl
 802221a:	fb0c 0003 	mla	r0, ip, r3, r0
 802221e:	b289      	uxth	r1, r1
 8022220:	fb1b fb0a 	smulbb	fp, fp, sl
 8022224:	b280      	uxth	r0, r0
 8022226:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802222a:	fb02 b203 	mla	r2, r2, r3, fp
 802222e:	1c4b      	adds	r3, r1, #1
 8022230:	f100 0b01 	add.w	fp, r0, #1
 8022234:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022238:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802223c:	b292      	uxth	r2, r2
 802223e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8022242:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8022246:	ea4b 0101 	orr.w	r1, fp, r1
 802224a:	f102 0b01 	add.w	fp, r2, #1
 802224e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8022252:	0952      	lsrs	r2, r2, #5
 8022254:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022258:	4311      	orrs	r1, r2
 802225a:	f8ae 1000 	strh.w	r1, [lr]
 802225e:	e79e      	b.n	802219e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022260:	b013      	add	sp, #76	@ 0x4c
 8022262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022266:	bf00      	nop
 8022268:	200157d0 	.word	0x200157d0

0802226c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802226c:	b570      	push	{r4, r5, r6, lr}
 802226e:	1208      	asrs	r0, r1, #8
 8022270:	b29e      	uxth	r6, r3
 8022272:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8022276:	1213      	asrs	r3, r2, #8
 8022278:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802227c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8022280:	fb13 f305 	smulbb	r3, r3, r5
 8022284:	fb10 f006 	smulbb	r0, r0, r6
 8022288:	4418      	add	r0, r3
 802228a:	10cc      	asrs	r4, r1, #3
 802228c:	10d3      	asrs	r3, r2, #3
 802228e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8022292:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8022296:	fb13 f305 	smulbb	r3, r3, r5
 802229a:	fb14 f406 	smulbb	r4, r4, r6
 802229e:	00c9      	lsls	r1, r1, #3
 80222a0:	00d2      	lsls	r2, r2, #3
 80222a2:	441c      	add	r4, r3
 80222a4:	b2d2      	uxtb	r2, r2
 80222a6:	b2cb      	uxtb	r3, r1
 80222a8:	fb12 f205 	smulbb	r2, r2, r5
 80222ac:	b280      	uxth	r0, r0
 80222ae:	fb13 f306 	smulbb	r3, r3, r6
 80222b2:	4413      	add	r3, r2
 80222b4:	1c42      	adds	r2, r0, #1
 80222b6:	b29b      	uxth	r3, r3
 80222b8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80222bc:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 80222c0:	1c58      	adds	r0, r3, #1
 80222c2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80222c6:	b2a4      	uxth	r4, r4
 80222c8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80222cc:	4310      	orrs	r0, r2
 80222ce:	1c62      	adds	r2, r4, #1
 80222d0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80222d4:	0964      	lsrs	r4, r4, #5
 80222d6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80222da:	4320      	orrs	r0, r4
 80222dc:	bd70      	pop	{r4, r5, r6, pc}
	...

080222e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80222e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80222e4:	b08f      	sub	sp, #60	@ 0x3c
 80222e6:	461c      	mov	r4, r3
 80222e8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80222ec:	9004      	str	r0, [sp, #16]
 80222ee:	460d      	mov	r5, r1
 80222f0:	4616      	mov	r6, r2
 80222f2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80222f4:	2f00      	cmp	r7, #0
 80222f6:	f000 80f6 	beq.w	80224e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80222fa:	6820      	ldr	r0, [r4, #0]
 80222fc:	6861      	ldr	r1, [r4, #4]
 80222fe:	aa0a      	add	r2, sp, #40	@ 0x28
 8022300:	c203      	stmia	r2!, {r0, r1}
 8022302:	6818      	ldr	r0, [r3, #0]
 8022304:	6859      	ldr	r1, [r3, #4]
 8022306:	aa0c      	add	r2, sp, #48	@ 0x30
 8022308:	c203      	stmia	r2!, {r0, r1}
 802230a:	a80a      	add	r0, sp, #40	@ 0x28
 802230c:	f7ee fa2a 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022310:	4621      	mov	r1, r4
 8022312:	a80c      	add	r0, sp, #48	@ 0x30
 8022314:	f7ee fa4e 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022318:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802231c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8022320:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8022324:	f002 0301 	and.w	r3, r2, #1
 8022328:	9306      	str	r3, [sp, #24]
 802232a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802232e:	f003 0101 	and.w	r1, r3, #1
 8022332:	9105      	str	r1, [sp, #20]
 8022334:	9805      	ldr	r0, [sp, #20]
 8022336:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 802233a:	4403      	add	r3, r0
 802233c:	fb01 2303 	mla	r3, r1, r3, r2
 8022340:	f04f 0802 	mov.w	r8, #2
 8022344:	fb93 f3f8 	sdiv	r3, r3, r8
 8022348:	441d      	add	r5, r3
 802234a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802234e:	441a      	add	r2, r3
 8022350:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022354:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8022358:	4419      	add	r1, r3
 802235a:	4b64      	ldr	r3, [pc, #400]	@ (80224ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802235c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8022360:	6818      	ldr	r0, [r3, #0]
 8022362:	6803      	ldr	r3, [r0, #0]
 8022364:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022366:	4798      	blx	r3
 8022368:	4a61      	ldr	r2, [pc, #388]	@ (80224f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 802236a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802236e:	8813      	ldrh	r3, [r2, #0]
 8022370:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8022374:	2fff      	cmp	r7, #255	@ 0xff
 8022376:	fb03 a404 	mla	r4, r3, r4, sl
 802237a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802237e:	f106 0604 	add.w	r6, r6, #4
 8022382:	4611      	mov	r1, r2
 8022384:	fb03 fb0b 	mul.w	fp, r3, fp
 8022388:	d06b      	beq.n	8022462 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 802238a:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 802238e:	9303      	str	r3, [sp, #12]
 8022390:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8022394:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8022398:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802239c:	9b07      	ldr	r3, [sp, #28]
 802239e:	42a3      	cmp	r3, r4
 80223a0:	f240 809c 	bls.w	80224dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80223a4:	9b06      	ldr	r3, [sp, #24]
 80223a6:	2b00      	cmp	r3, #0
 80223a8:	d039      	beq.n	802241e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80223aa:	782b      	ldrb	r3, [r5, #0]
 80223ac:	8822      	ldrh	r2, [r4, #0]
 80223ae:	9804      	ldr	r0, [sp, #16]
 80223b0:	f003 030f 	and.w	r3, r3, #15
 80223b4:	f105 0801 	add.w	r8, r5, #1
 80223b8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80223bc:	9b03      	ldr	r3, [sp, #12]
 80223be:	9300      	str	r3, [sp, #0]
 80223c0:	463b      	mov	r3, r7
 80223c2:	f7ff ff53 	bl	802226c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80223c6:	f824 0b02 	strh.w	r0, [r4], #2
 80223ca:	f109 3bff 	add.w	fp, r9, #4294967295
 80223ce:	f1bb 0f01 	cmp.w	fp, #1
 80223d2:	46a2      	mov	sl, r4
 80223d4:	f104 0404 	add.w	r4, r4, #4
 80223d8:	dd24      	ble.n	8022424 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80223da:	f898 3000 	ldrb.w	r3, [r8]
 80223de:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80223e2:	9804      	ldr	r0, [sp, #16]
 80223e4:	091b      	lsrs	r3, r3, #4
 80223e6:	f1ab 0b02 	sub.w	fp, fp, #2
 80223ea:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80223ee:	9b03      	ldr	r3, [sp, #12]
 80223f0:	9300      	str	r3, [sp, #0]
 80223f2:	463b      	mov	r3, r7
 80223f4:	f7ff ff3a 	bl	802226c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80223f8:	f824 0c04 	strh.w	r0, [r4, #-4]
 80223fc:	f818 3b01 	ldrb.w	r3, [r8], #1
 8022400:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8022404:	9804      	ldr	r0, [sp, #16]
 8022406:	f003 030f 	and.w	r3, r3, #15
 802240a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802240e:	9b03      	ldr	r3, [sp, #12]
 8022410:	9300      	str	r3, [sp, #0]
 8022412:	463b      	mov	r3, r7
 8022414:	f7ff ff2a 	bl	802226c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8022418:	f824 0c02 	strh.w	r0, [r4, #-2]
 802241c:	e7d7      	b.n	80223ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802241e:	46a8      	mov	r8, r5
 8022420:	46cb      	mov	fp, r9
 8022422:	e7d4      	b.n	80223ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8022424:	d10e      	bne.n	8022444 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8022426:	f898 3000 	ldrb.w	r3, [r8]
 802242a:	f8ba 2000 	ldrh.w	r2, [sl]
 802242e:	9804      	ldr	r0, [sp, #16]
 8022430:	091b      	lsrs	r3, r3, #4
 8022432:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8022436:	9b03      	ldr	r3, [sp, #12]
 8022438:	9300      	str	r3, [sp, #0]
 802243a:	463b      	mov	r3, r7
 802243c:	f7ff ff16 	bl	802226c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8022440:	f82a 0b02 	strh.w	r0, [sl], #2
 8022444:	9b08      	ldr	r3, [sp, #32]
 8022446:	9a05      	ldr	r2, [sp, #20]
 8022448:	881c      	ldrh	r4, [r3, #0]
 802244a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802244e:	eba4 0409 	sub.w	r4, r4, r9
 8022452:	4413      	add	r3, r2
 8022454:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8022458:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802245a:	fb93 f3f2 	sdiv	r3, r3, r2
 802245e:	441d      	add	r5, r3
 8022460:	e79c      	b.n	802239c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8022462:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8022466:	45a3      	cmp	fp, r4
 8022468:	d938      	bls.n	80224dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802246a:	9b06      	ldr	r3, [sp, #24]
 802246c:	b1f3      	cbz	r3, 80224ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802246e:	782b      	ldrb	r3, [r5, #0]
 8022470:	f003 030f 	and.w	r3, r3, #15
 8022474:	1c6a      	adds	r2, r5, #1
 8022476:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802247a:	8023      	strh	r3, [r4, #0]
 802247c:	f109 30ff 	add.w	r0, r9, #4294967295
 8022480:	3402      	adds	r4, #2
 8022482:	2801      	cmp	r0, #1
 8022484:	4623      	mov	r3, r4
 8022486:	f104 0404 	add.w	r4, r4, #4
 802248a:	dd12      	ble.n	80224b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 802248c:	7813      	ldrb	r3, [r2, #0]
 802248e:	091b      	lsrs	r3, r3, #4
 8022490:	3802      	subs	r0, #2
 8022492:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022496:	f824 3c04 	strh.w	r3, [r4, #-4]
 802249a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802249e:	f003 030f 	and.w	r3, r3, #15
 80224a2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80224a6:	f824 3c02 	strh.w	r3, [r4, #-2]
 80224aa:	e7ea      	b.n	8022482 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80224ac:	462a      	mov	r2, r5
 80224ae:	4648      	mov	r0, r9
 80224b0:	e7e7      	b.n	8022482 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80224b2:	d106      	bne.n	80224c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80224b4:	7812      	ldrb	r2, [r2, #0]
 80224b6:	0912      	lsrs	r2, r2, #4
 80224b8:	3302      	adds	r3, #2
 80224ba:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80224be:	f823 2c02 	strh.w	r2, [r3, #-2]
 80224c2:	880c      	ldrh	r4, [r1, #0]
 80224c4:	9a05      	ldr	r2, [sp, #20]
 80224c6:	eba4 0409 	sub.w	r4, r4, r9
 80224ca:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80224ce:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80224d2:	4413      	add	r3, r2
 80224d4:	fb93 f3f8 	sdiv	r3, r3, r8
 80224d8:	441d      	add	r5, r3
 80224da:	e7c4      	b.n	8022466 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80224dc:	4b03      	ldr	r3, [pc, #12]	@ (80224ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80224de:	6818      	ldr	r0, [r3, #0]
 80224e0:	6803      	ldr	r3, [r0, #0]
 80224e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80224e4:	4798      	blx	r3
 80224e6:	b00f      	add	sp, #60	@ 0x3c
 80224e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80224ec:	200157c0 	.word	0x200157c0
 80224f0:	200157ba 	.word	0x200157ba

080224f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80224f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80224f6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80224fa:	2dff      	cmp	r5, #255	@ 0xff
 80224fc:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8022500:	d10c      	bne.n	802251c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8022502:	2bff      	cmp	r3, #255	@ 0xff
 8022504:	d10a      	bne.n	802251c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8022506:	4b25      	ldr	r3, [pc, #148]	@ (802259c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8022508:	0948      	lsrs	r0, r1, #5
 802250a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802250e:	403b      	ands	r3, r7
 8022510:	4318      	orrs	r0, r3
 8022512:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8022516:	4308      	orrs	r0, r1
 8022518:	b280      	uxth	r0, r0
 802251a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802251c:	fb15 f503 	smulbb	r5, r5, r3
 8022520:	b2ab      	uxth	r3, r5
 8022522:	1c5d      	adds	r5, r3, #1
 8022524:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8022528:	1214      	asrs	r4, r2, #8
 802252a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802252e:	fa1f fc85 	uxth.w	ip, r5
 8022532:	10d6      	asrs	r6, r2, #3
 8022534:	00d0      	lsls	r0, r2, #3
 8022536:	43ed      	mvns	r5, r5
 8022538:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802253c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8022540:	b2eb      	uxtb	r3, r5
 8022542:	b2c0      	uxtb	r0, r0
 8022544:	fb12 f20c 	smulbb	r2, r2, ip
 8022548:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802254c:	fb04 2403 	mla	r4, r4, r3, r2
 8022550:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8022554:	b2c8      	uxtb	r0, r1
 8022556:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 802255a:	b2fd      	uxtb	r5, r7
 802255c:	fb10 f00c 	smulbb	r0, r0, ip
 8022560:	b2a4      	uxth	r4, r4
 8022562:	fb02 0003 	mla	r0, r2, r3, r0
 8022566:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802256a:	fb15 f50c 	smulbb	r5, r5, ip
 802256e:	fb06 5503 	mla	r5, r6, r3, r5
 8022572:	b283      	uxth	r3, r0
 8022574:	1c60      	adds	r0, r4, #1
 8022576:	b2ad      	uxth	r5, r5
 8022578:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802257c:	1c58      	adds	r0, r3, #1
 802257e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022582:	1c6b      	adds	r3, r5, #1
 8022584:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022588:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802258c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022590:	096d      	lsrs	r5, r5, #5
 8022592:	4320      	orrs	r0, r4
 8022594:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8022598:	4328      	orrs	r0, r5
 802259a:	e7be      	b.n	802251a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802259c:	00fff800 	.word	0x00fff800

080225a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80225a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80225a4:	461c      	mov	r4, r3
 80225a6:	b08d      	sub	sp, #52	@ 0x34
 80225a8:	460d      	mov	r5, r1
 80225aa:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80225ac:	6861      	ldr	r1, [r4, #4]
 80225ae:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 80225b2:	4680      	mov	r8, r0
 80225b4:	6820      	ldr	r0, [r4, #0]
 80225b6:	4616      	mov	r6, r2
 80225b8:	aa08      	add	r2, sp, #32
 80225ba:	c203      	stmia	r2!, {r0, r1}
 80225bc:	6818      	ldr	r0, [r3, #0]
 80225be:	6859      	ldr	r1, [r3, #4]
 80225c0:	aa0a      	add	r2, sp, #40	@ 0x28
 80225c2:	c203      	stmia	r2!, {r0, r1}
 80225c4:	a808      	add	r0, sp, #32
 80225c6:	f7ee f8cd 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80225ca:	4621      	mov	r1, r4
 80225cc:	a80a      	add	r0, sp, #40	@ 0x28
 80225ce:	f7ee f8f1 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80225d2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80225d6:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 80225da:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 80225de:	f002 0301 	and.w	r3, r2, #1
 80225e2:	9303      	str	r3, [sp, #12]
 80225e4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80225e8:	f003 0101 	and.w	r1, r3, #1
 80225ec:	9102      	str	r1, [sp, #8]
 80225ee:	9802      	ldr	r0, [sp, #8]
 80225f0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80225f4:	4403      	add	r3, r0
 80225f6:	fb01 2303 	mla	r3, r1, r3, r2
 80225fa:	f04f 0a02 	mov.w	sl, #2
 80225fe:	fb93 f3fa 	sdiv	r3, r3, sl
 8022602:	441d      	add	r5, r3
 8022604:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8022608:	441a      	add	r2, r3
 802260a:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802260e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8022612:	4a3f      	ldr	r2, [pc, #252]	@ (8022710 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8022614:	9205      	str	r2, [sp, #20]
 8022616:	4419      	add	r1, r3
 8022618:	6810      	ldr	r0, [r2, #0]
 802261a:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 802261e:	6803      	ldr	r3, [r0, #0]
 8022620:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022622:	4798      	blx	r3
 8022624:	4b3b      	ldr	r3, [pc, #236]	@ (8022714 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8022626:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 802262a:	8819      	ldrh	r1, [r3, #0]
 802262c:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8022630:	fb01 c404 	mla	r4, r1, r4, ip
 8022634:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8022638:	434f      	muls	r7, r1
 802263a:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802263e:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8022642:	3604      	adds	r6, #4
 8022644:	9204      	str	r2, [sp, #16]
 8022646:	9b04      	ldr	r3, [sp, #16]
 8022648:	429c      	cmp	r4, r3
 802264a:	d258      	bcs.n	80226fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 802264c:	9b03      	ldr	r3, [sp, #12]
 802264e:	2b00      	cmp	r3, #0
 8022650:	d034      	beq.n	80226bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8022652:	782b      	ldrb	r3, [r5, #0]
 8022654:	f003 030f 	and.w	r3, r3, #15
 8022658:	1c6f      	adds	r7, r5, #1
 802265a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802265e:	0e0b      	lsrs	r3, r1, #24
 8022660:	d006      	beq.n	8022670 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8022662:	8822      	ldrh	r2, [r4, #0]
 8022664:	9300      	str	r3, [sp, #0]
 8022666:	4640      	mov	r0, r8
 8022668:	464b      	mov	r3, r9
 802266a:	f7ff ff43 	bl	80224f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802266e:	8020      	strh	r0, [r4, #0]
 8022670:	3402      	adds	r4, #2
 8022672:	f10b 3aff 	add.w	sl, fp, #4294967295
 8022676:	f1ba 0f01 	cmp.w	sl, #1
 802267a:	dd22      	ble.n	80226c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 802267c:	783b      	ldrb	r3, [r7, #0]
 802267e:	091b      	lsrs	r3, r3, #4
 8022680:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8022684:	0e0b      	lsrs	r3, r1, #24
 8022686:	d006      	beq.n	8022696 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8022688:	8822      	ldrh	r2, [r4, #0]
 802268a:	9300      	str	r3, [sp, #0]
 802268c:	4640      	mov	r0, r8
 802268e:	464b      	mov	r3, r9
 8022690:	f7ff ff30 	bl	80224f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8022694:	8020      	strh	r0, [r4, #0]
 8022696:	f817 3b01 	ldrb.w	r3, [r7], #1
 802269a:	f003 030f 	and.w	r3, r3, #15
 802269e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80226a2:	0e0b      	lsrs	r3, r1, #24
 80226a4:	d006      	beq.n	80226b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80226a6:	8862      	ldrh	r2, [r4, #2]
 80226a8:	9300      	str	r3, [sp, #0]
 80226aa:	4640      	mov	r0, r8
 80226ac:	464b      	mov	r3, r9
 80226ae:	f7ff ff21 	bl	80224f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80226b2:	8060      	strh	r0, [r4, #2]
 80226b4:	3404      	adds	r4, #4
 80226b6:	f1aa 0a02 	sub.w	sl, sl, #2
 80226ba:	e7dc      	b.n	8022676 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80226bc:	462f      	mov	r7, r5
 80226be:	46da      	mov	sl, fp
 80226c0:	e7d9      	b.n	8022676 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80226c2:	d10d      	bne.n	80226e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80226c4:	783b      	ldrb	r3, [r7, #0]
 80226c6:	091b      	lsrs	r3, r3, #4
 80226c8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80226cc:	0e0b      	lsrs	r3, r1, #24
 80226ce:	d006      	beq.n	80226de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80226d0:	8822      	ldrh	r2, [r4, #0]
 80226d2:	9300      	str	r3, [sp, #0]
 80226d4:	4640      	mov	r0, r8
 80226d6:	464b      	mov	r3, r9
 80226d8:	f7ff ff0c 	bl	80224f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80226dc:	8020      	strh	r0, [r4, #0]
 80226de:	3402      	adds	r4, #2
 80226e0:	9b06      	ldr	r3, [sp, #24]
 80226e2:	9a02      	ldr	r2, [sp, #8]
 80226e4:	881b      	ldrh	r3, [r3, #0]
 80226e6:	eba3 030b 	sub.w	r3, r3, fp
 80226ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80226ee:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80226f2:	4413      	add	r3, r2
 80226f4:	9a07      	ldr	r2, [sp, #28]
 80226f6:	fb93 f3f2 	sdiv	r3, r3, r2
 80226fa:	441d      	add	r5, r3
 80226fc:	e7a3      	b.n	8022646 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80226fe:	9b05      	ldr	r3, [sp, #20]
 8022700:	6818      	ldr	r0, [r3, #0]
 8022702:	6803      	ldr	r3, [r0, #0]
 8022704:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022706:	4798      	blx	r3
 8022708:	b00d      	add	sp, #52	@ 0x34
 802270a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802270e:	bf00      	nop
 8022710:	200157c0 	.word	0x200157c0
 8022714:	200157ba 	.word	0x200157ba

08022718 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8022718:	b570      	push	{r4, r5, r6, lr}
 802271a:	1214      	asrs	r4, r2, #8
 802271c:	788d      	ldrb	r5, [r1, #2]
 802271e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8022722:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8022726:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802272a:	fb15 f503 	smulbb	r5, r5, r3
 802272e:	fb04 5506 	mla	r5, r4, r6, r5
 8022732:	10d0      	asrs	r0, r2, #3
 8022734:	784c      	ldrb	r4, [r1, #1]
 8022736:	7809      	ldrb	r1, [r1, #0]
 8022738:	00d2      	lsls	r2, r2, #3
 802273a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802273e:	b2d2      	uxtb	r2, r2
 8022740:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8022744:	fb14 f403 	smulbb	r4, r4, r3
 8022748:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802274c:	fb11 f303 	smulbb	r3, r1, r3
 8022750:	fb00 4406 	mla	r4, r0, r6, r4
 8022754:	fb02 3306 	mla	r3, r2, r6, r3
 8022758:	b2ad      	uxth	r5, r5
 802275a:	b29b      	uxth	r3, r3
 802275c:	b2a4      	uxth	r4, r4
 802275e:	1c68      	adds	r0, r5, #1
 8022760:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8022764:	1c62      	adds	r2, r4, #1
 8022766:	1c58      	adds	r0, r3, #1
 8022768:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802276c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8022770:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8022774:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022778:	0964      	lsrs	r4, r4, #5
 802277a:	4328      	orrs	r0, r5
 802277c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8022780:	4320      	orrs	r0, r4
 8022782:	bd70      	pop	{r4, r5, r6, pc}

08022784 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8022784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022788:	b08f      	sub	sp, #60	@ 0x3c
 802278a:	461c      	mov	r4, r3
 802278c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8022790:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022792:	4682      	mov	sl, r0
 8022794:	460e      	mov	r6, r1
 8022796:	4615      	mov	r5, r2
 8022798:	2f00      	cmp	r7, #0
 802279a:	f000 8142 	beq.w	8022a22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802279e:	6820      	ldr	r0, [r4, #0]
 80227a0:	6861      	ldr	r1, [r4, #4]
 80227a2:	aa0a      	add	r2, sp, #40	@ 0x28
 80227a4:	c203      	stmia	r2!, {r0, r1}
 80227a6:	6818      	ldr	r0, [r3, #0]
 80227a8:	6859      	ldr	r1, [r3, #4]
 80227aa:	aa0c      	add	r2, sp, #48	@ 0x30
 80227ac:	c203      	stmia	r2!, {r0, r1}
 80227ae:	a80a      	add	r0, sp, #40	@ 0x28
 80227b0:	f7ed ffd8 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80227b4:	4621      	mov	r1, r4
 80227b6:	a80c      	add	r0, sp, #48	@ 0x30
 80227b8:	f7ed fffc 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80227bc:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80227c0:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80227c4:	f002 0301 	and.w	r3, r2, #1
 80227c8:	9306      	str	r3, [sp, #24]
 80227ca:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80227ce:	f003 0101 	and.w	r1, r3, #1
 80227d2:	9105      	str	r1, [sp, #20]
 80227d4:	9805      	ldr	r0, [sp, #20]
 80227d6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80227da:	4403      	add	r3, r0
 80227dc:	fb01 2303 	mla	r3, r1, r3, r2
 80227e0:	f04f 0802 	mov.w	r8, #2
 80227e4:	fb93 f3f8 	sdiv	r3, r3, r8
 80227e8:	441e      	add	r6, r3
 80227ea:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80227ee:	441a      	add	r2, r3
 80227f0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80227f4:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80227f8:	4419      	add	r1, r3
 80227fa:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80227fe:	9303      	str	r3, [sp, #12]
 8022800:	4b89      	ldr	r3, [pc, #548]	@ (8022a28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8022802:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8022806:	6818      	ldr	r0, [r3, #0]
 8022808:	6803      	ldr	r3, [r0, #0]
 802280a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802280c:	4798      	blx	r3
 802280e:	4a87      	ldr	r2, [pc, #540]	@ (8022a2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8022810:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8022814:	8813      	ldrh	r3, [r2, #0]
 8022816:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 802281a:	2fff      	cmp	r7, #255	@ 0xff
 802281c:	fb03 9404 	mla	r4, r3, r4, r9
 8022820:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8022824:	f105 0504 	add.w	r5, r5, #4
 8022828:	4694      	mov	ip, r2
 802282a:	fb03 f30b 	mul.w	r3, r3, fp
 802282e:	d071      	beq.n	8022914 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8022830:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022834:	43f9      	mvns	r1, r7
 8022836:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802283a:	b2c9      	uxtb	r1, r1
 802283c:	9104      	str	r1, [sp, #16]
 802283e:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8022842:	9b07      	ldr	r3, [sp, #28]
 8022844:	42a3      	cmp	r3, r4
 8022846:	f240 80e7 	bls.w	8022a18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802284a:	9b06      	ldr	r3, [sp, #24]
 802284c:	2b00      	cmp	r3, #0
 802284e:	d03d      	beq.n	80228cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8022850:	7831      	ldrb	r1, [r6, #0]
 8022852:	9b04      	ldr	r3, [sp, #16]
 8022854:	8822      	ldrh	r2, [r4, #0]
 8022856:	9300      	str	r3, [sp, #0]
 8022858:	f001 010f 	and.w	r1, r1, #15
 802285c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8022860:	463b      	mov	r3, r7
 8022862:	4429      	add	r1, r5
 8022864:	4650      	mov	r0, sl
 8022866:	f7ff ff57 	bl	8022718 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802286a:	9b03      	ldr	r3, [sp, #12]
 802286c:	f824 0b02 	strh.w	r0, [r4], #2
 8022870:	f106 0801 	add.w	r8, r6, #1
 8022874:	f103 3bff 	add.w	fp, r3, #4294967295
 8022878:	f1bb 0f01 	cmp.w	fp, #1
 802287c:	46a1      	mov	r9, r4
 802287e:	f104 0404 	add.w	r4, r4, #4
 8022882:	dd27      	ble.n	80228d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8022884:	f898 1000 	ldrb.w	r1, [r8]
 8022888:	9b04      	ldr	r3, [sp, #16]
 802288a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802288e:	9300      	str	r3, [sp, #0]
 8022890:	0909      	lsrs	r1, r1, #4
 8022892:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8022896:	463b      	mov	r3, r7
 8022898:	4429      	add	r1, r5
 802289a:	4650      	mov	r0, sl
 802289c:	f7ff ff3c 	bl	8022718 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80228a0:	f824 0c04 	strh.w	r0, [r4, #-4]
 80228a4:	f818 1b01 	ldrb.w	r1, [r8], #1
 80228a8:	9b04      	ldr	r3, [sp, #16]
 80228aa:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80228ae:	9300      	str	r3, [sp, #0]
 80228b0:	f001 010f 	and.w	r1, r1, #15
 80228b4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80228b8:	463b      	mov	r3, r7
 80228ba:	4429      	add	r1, r5
 80228bc:	4650      	mov	r0, sl
 80228be:	f7ff ff2b 	bl	8022718 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80228c2:	f1ab 0b02 	sub.w	fp, fp, #2
 80228c6:	f824 0c02 	strh.w	r0, [r4, #-2]
 80228ca:	e7d5      	b.n	8022878 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80228cc:	46b0      	mov	r8, r6
 80228ce:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80228d2:	e7d1      	b.n	8022878 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80228d4:	d10f      	bne.n	80228f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80228d6:	f898 1000 	ldrb.w	r1, [r8]
 80228da:	9b04      	ldr	r3, [sp, #16]
 80228dc:	f8b9 2000 	ldrh.w	r2, [r9]
 80228e0:	9300      	str	r3, [sp, #0]
 80228e2:	0909      	lsrs	r1, r1, #4
 80228e4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80228e8:	463b      	mov	r3, r7
 80228ea:	4429      	add	r1, r5
 80228ec:	4650      	mov	r0, sl
 80228ee:	f7ff ff13 	bl	8022718 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80228f2:	f829 0b02 	strh.w	r0, [r9], #2
 80228f6:	9b08      	ldr	r3, [sp, #32]
 80228f8:	9a05      	ldr	r2, [sp, #20]
 80228fa:	881c      	ldrh	r4, [r3, #0]
 80228fc:	9b03      	ldr	r3, [sp, #12]
 80228fe:	1ae4      	subs	r4, r4, r3
 8022900:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8022904:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022908:	4413      	add	r3, r2
 802290a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802290c:	fb93 f3f2 	sdiv	r3, r3, r2
 8022910:	441e      	add	r6, r3
 8022912:	e796      	b.n	8022842 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8022914:	4f46      	ldr	r7, [pc, #280]	@ (8022a30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8022916:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802291a:	42a3      	cmp	r3, r4
 802291c:	d97c      	bls.n	8022a18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802291e:	9a06      	ldr	r2, [sp, #24]
 8022920:	2a00      	cmp	r2, #0
 8022922:	d054      	beq.n	80229ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8022924:	7830      	ldrb	r0, [r6, #0]
 8022926:	f000 000f 	and.w	r0, r0, #15
 802292a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802292e:	eb05 0e00 	add.w	lr, r5, r0
 8022932:	5c28      	ldrb	r0, [r5, r0]
 8022934:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8022938:	f89e e001 	ldrb.w	lr, [lr, #1]
 802293c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8022940:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8022944:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8022948:	ea42 020e 	orr.w	r2, r2, lr
 802294c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8022950:	f824 2b02 	strh.w	r2, [r4], #2
 8022954:	9a03      	ldr	r2, [sp, #12]
 8022956:	1c71      	adds	r1, r6, #1
 8022958:	f102 3eff 	add.w	lr, r2, #4294967295
 802295c:	f1be 0f01 	cmp.w	lr, #1
 8022960:	4620      	mov	r0, r4
 8022962:	f104 0404 	add.w	r4, r4, #4
 8022966:	dd36      	ble.n	80229d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8022968:	7808      	ldrb	r0, [r1, #0]
 802296a:	0900      	lsrs	r0, r0, #4
 802296c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022970:	eb05 0a00 	add.w	sl, r5, r0
 8022974:	f1ae 0e02 	sub.w	lr, lr, #2
 8022978:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802297c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8022980:	00d2      	lsls	r2, r2, #3
 8022982:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8022986:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802298a:	ea49 0202 	orr.w	r2, r9, r2
 802298e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8022992:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8022996:	f824 2c04 	strh.w	r2, [r4, #-4]
 802299a:	f811 0b01 	ldrb.w	r0, [r1], #1
 802299e:	f000 000f 	and.w	r0, r0, #15
 80229a2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80229a6:	eb05 0a00 	add.w	sl, r5, r0
 80229aa:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80229ae:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80229b2:	00d2      	lsls	r2, r2, #3
 80229b4:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80229b8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80229bc:	ea49 0202 	orr.w	r2, r9, r2
 80229c0:	f815 9000 	ldrb.w	r9, [r5, r0]
 80229c4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80229c8:	f824 2c02 	strh.w	r2, [r4, #-2]
 80229cc:	e7c6      	b.n	802295c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80229ce:	4631      	mov	r1, r6
 80229d0:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80229d4:	e7c2      	b.n	802295c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80229d6:	d111      	bne.n	80229fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 80229d8:	7809      	ldrb	r1, [r1, #0]
 80229da:	0909      	lsrs	r1, r1, #4
 80229dc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80229e0:	186c      	adds	r4, r5, r1
 80229e2:	5c69      	ldrb	r1, [r5, r1]
 80229e4:	78a2      	ldrb	r2, [r4, #2]
 80229e6:	7864      	ldrb	r4, [r4, #1]
 80229e8:	00e4      	lsls	r4, r4, #3
 80229ea:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80229ee:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80229f2:	4322      	orrs	r2, r4
 80229f4:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80229f8:	f820 2b02 	strh.w	r2, [r0], #2
 80229fc:	9a03      	ldr	r2, [sp, #12]
 80229fe:	f8bc 4000 	ldrh.w	r4, [ip]
 8022a02:	9905      	ldr	r1, [sp, #20]
 8022a04:	1aa4      	subs	r4, r4, r2
 8022a06:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8022a0a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8022a0e:	440a      	add	r2, r1
 8022a10:	fb92 f2f8 	sdiv	r2, r2, r8
 8022a14:	4416      	add	r6, r2
 8022a16:	e780      	b.n	802291a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8022a18:	4b03      	ldr	r3, [pc, #12]	@ (8022a28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8022a1a:	6818      	ldr	r0, [r3, #0]
 8022a1c:	6803      	ldr	r3, [r0, #0]
 8022a1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022a20:	4798      	blx	r3
 8022a22:	b00f      	add	sp, #60	@ 0x3c
 8022a24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022a28:	200157c0 	.word	0x200157c0
 8022a2c:	200157ba 	.word	0x200157ba
 8022a30:	fffff800 	.word	0xfffff800

08022a34 <CRC_Lock>:
 8022a34:	b530      	push	{r4, r5, lr}
 8022a36:	4a2d      	ldr	r2, [pc, #180]	@ (8022aec <CRC_Lock+0xb8>)
 8022a38:	6813      	ldr	r3, [r2, #0]
 8022a3a:	f023 0301 	bic.w	r3, r3, #1
 8022a3e:	6013      	str	r3, [r2, #0]
 8022a40:	4b2b      	ldr	r3, [pc, #172]	@ (8022af0 <CRC_Lock+0xbc>)
 8022a42:	681c      	ldr	r4, [r3, #0]
 8022a44:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8022a48:	4014      	ands	r4, r2
 8022a4a:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8022a4e:	42ac      	cmp	r4, r5
 8022a50:	d005      	beq.n	8022a5e <CRC_Lock+0x2a>
 8022a52:	681c      	ldr	r4, [r3, #0]
 8022a54:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8022a58:	4014      	ands	r4, r2
 8022a5a:	42ac      	cmp	r4, r5
 8022a5c:	d125      	bne.n	8022aaa <CRC_Lock+0x76>
 8022a5e:	4b25      	ldr	r3, [pc, #148]	@ (8022af4 <CRC_Lock+0xc0>)
 8022a60:	681b      	ldr	r3, [r3, #0]
 8022a62:	2b00      	cmp	r3, #0
 8022a64:	d139      	bne.n	8022ada <CRC_Lock+0xa6>
 8022a66:	4b24      	ldr	r3, [pc, #144]	@ (8022af8 <CRC_Lock+0xc4>)
 8022a68:	681a      	ldr	r2, [r3, #0]
 8022a6a:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8022a6e:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8022a72:	d00d      	beq.n	8022a90 <CRC_Lock+0x5c>
 8022a74:	681a      	ldr	r2, [r3, #0]
 8022a76:	f240 4483 	movw	r4, #1155	@ 0x483
 8022a7a:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8022a7e:	42a2      	cmp	r2, r4
 8022a80:	d006      	beq.n	8022a90 <CRC_Lock+0x5c>
 8022a82:	681b      	ldr	r3, [r3, #0]
 8022a84:	f240 4285 	movw	r2, #1157	@ 0x485
 8022a88:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8022a8c:	4293      	cmp	r3, r2
 8022a8e:	d124      	bne.n	8022ada <CRC_Lock+0xa6>
 8022a90:	4b1a      	ldr	r3, [pc, #104]	@ (8022afc <CRC_Lock+0xc8>)
 8022a92:	2201      	movs	r2, #1
 8022a94:	601a      	str	r2, [r3, #0]
 8022a96:	681a      	ldr	r2, [r3, #0]
 8022a98:	2a00      	cmp	r2, #0
 8022a9a:	d1fc      	bne.n	8022a96 <CRC_Lock+0x62>
 8022a9c:	4b18      	ldr	r3, [pc, #96]	@ (8022b00 <CRC_Lock+0xcc>)
 8022a9e:	6018      	str	r0, [r3, #0]
 8022aa0:	6818      	ldr	r0, [r3, #0]
 8022aa2:	1a43      	subs	r3, r0, r1
 8022aa4:	4258      	negs	r0, r3
 8022aa6:	4158      	adcs	r0, r3
 8022aa8:	e00e      	b.n	8022ac8 <CRC_Lock+0x94>
 8022aaa:	681b      	ldr	r3, [r3, #0]
 8022aac:	4013      	ands	r3, r2
 8022aae:	f24d 2220 	movw	r2, #53792	@ 0xd220
 8022ab2:	4293      	cmp	r3, r2
 8022ab4:	d111      	bne.n	8022ada <CRC_Lock+0xa6>
 8022ab6:	4b13      	ldr	r3, [pc, #76]	@ (8022b04 <CRC_Lock+0xd0>)
 8022ab8:	681b      	ldr	r3, [r3, #0]
 8022aba:	f240 4286 	movw	r2, #1158	@ 0x486
 8022abe:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8022ac2:	4293      	cmp	r3, r2
 8022ac4:	d001      	beq.n	8022aca <CRC_Lock+0x96>
 8022ac6:	2000      	movs	r0, #0
 8022ac8:	bd30      	pop	{r4, r5, pc}
 8022aca:	4b0f      	ldr	r3, [pc, #60]	@ (8022b08 <CRC_Lock+0xd4>)
 8022acc:	2201      	movs	r2, #1
 8022ace:	601a      	str	r2, [r3, #0]
 8022ad0:	681a      	ldr	r2, [r3, #0]
 8022ad2:	2a00      	cmp	r2, #0
 8022ad4:	d1fc      	bne.n	8022ad0 <CRC_Lock+0x9c>
 8022ad6:	4b0d      	ldr	r3, [pc, #52]	@ (8022b0c <CRC_Lock+0xd8>)
 8022ad8:	e7e1      	b.n	8022a9e <CRC_Lock+0x6a>
 8022ada:	4b0d      	ldr	r3, [pc, #52]	@ (8022b10 <CRC_Lock+0xdc>)
 8022adc:	2201      	movs	r2, #1
 8022ade:	601a      	str	r2, [r3, #0]
 8022ae0:	681a      	ldr	r2, [r3, #0]
 8022ae2:	2a00      	cmp	r2, #0
 8022ae4:	d1fc      	bne.n	8022ae0 <CRC_Lock+0xac>
 8022ae6:	4b0b      	ldr	r3, [pc, #44]	@ (8022b14 <CRC_Lock+0xe0>)
 8022ae8:	e7d9      	b.n	8022a9e <CRC_Lock+0x6a>
 8022aea:	bf00      	nop
 8022aec:	e0002000 	.word	0xe0002000
 8022af0:	e000ed00 	.word	0xe000ed00
 8022af4:	e0042000 	.word	0xe0042000
 8022af8:	5c001000 	.word	0x5c001000
 8022afc:	58024c08 	.word	0x58024c08
 8022b00:	58024c00 	.word	0x58024c00
 8022b04:	46008ff0 	.word	0x46008ff0
 8022b08:	46024c08 	.word	0x46024c08
 8022b0c:	46024c00 	.word	0x46024c00
 8022b10:	40023008 	.word	0x40023008
 8022b14:	40023000 	.word	0x40023000

08022b18 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8022b18:	6101      	str	r1, [r0, #16]
 8022b1a:	4770      	bx	lr

08022b1c <_ZN8touchgfx8Gestures4tickEv>:
 8022b1c:	7b83      	ldrb	r3, [r0, #14]
 8022b1e:	b14b      	cbz	r3, 8022b34 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8022b20:	8903      	ldrh	r3, [r0, #8]
 8022b22:	3301      	adds	r3, #1
 8022b24:	b29b      	uxth	r3, r3
 8022b26:	2b07      	cmp	r3, #7
 8022b28:	8103      	strh	r3, [r0, #8]
 8022b2a:	bf81      	itttt	hi
 8022b2c:	2300      	movhi	r3, #0
 8022b2e:	8143      	strhhi	r3, [r0, #10]
 8022b30:	8183      	strhhi	r3, [r0, #12]
 8022b32:	7383      	strbhi	r3, [r0, #14]
 8022b34:	4770      	bx	lr
	...

08022b38 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8022b38:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8022b3c:	4698      	mov	r8, r3
 8022b3e:	8883      	ldrh	r3, [r0, #4]
 8022b40:	f8ad 3006 	strh.w	r3, [sp, #6]
 8022b44:	eba8 0303 	sub.w	r3, r8, r3
 8022b48:	b21b      	sxth	r3, r3
 8022b4a:	4604      	mov	r4, r0
 8022b4c:	2b00      	cmp	r3, #0
 8022b4e:	4617      	mov	r7, r2
 8022b50:	4a18      	ldr	r2, [pc, #96]	@ (8022bb4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8022b52:	9200      	str	r2, [sp, #0]
 8022b54:	bfb8      	it	lt
 8022b56:	425b      	neglt	r3, r3
 8022b58:	8aa2      	ldrh	r2, [r4, #20]
 8022b5a:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8022b5e:	f8ad 800a 	strh.w	r8, [sp, #10]
 8022b62:	b21b      	sxth	r3, r3
 8022b64:	460e      	mov	r6, r1
 8022b66:	4293      	cmp	r3, r2
 8022b68:	88c1      	ldrh	r1, [r0, #6]
 8022b6a:	f8ad 1008 	strh.w	r1, [sp, #8]
 8022b6e:	f04f 0000 	mov.w	r0, #0
 8022b72:	f88d 0004 	strb.w	r0, [sp, #4]
 8022b76:	f8ad 500c 	strh.w	r5, [sp, #12]
 8022b7a:	dc07      	bgt.n	8022b8c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8022b7c:	1a69      	subs	r1, r5, r1
 8022b7e:	b209      	sxth	r1, r1
 8022b80:	2900      	cmp	r1, #0
 8022b82:	bfb8      	it	lt
 8022b84:	4249      	neglt	r1, r1
 8022b86:	b209      	sxth	r1, r1
 8022b88:	428a      	cmp	r2, r1
 8022b8a:	da10      	bge.n	8022bae <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8022b8c:	6920      	ldr	r0, [r4, #16]
 8022b8e:	6803      	ldr	r3, [r0, #0]
 8022b90:	4669      	mov	r1, sp
 8022b92:	685b      	ldr	r3, [r3, #4]
 8022b94:	4798      	blx	r3
 8022b96:	eba8 0606 	sub.w	r6, r8, r6
 8022b9a:	2300      	movs	r3, #0
 8022b9c:	1bef      	subs	r7, r5, r7
 8022b9e:	2001      	movs	r0, #1
 8022ba0:	8123      	strh	r3, [r4, #8]
 8022ba2:	8166      	strh	r6, [r4, #10]
 8022ba4:	81a7      	strh	r7, [r4, #12]
 8022ba6:	f8a4 8004 	strh.w	r8, [r4, #4]
 8022baa:	80e5      	strh	r5, [r4, #6]
 8022bac:	73a0      	strb	r0, [r4, #14]
 8022bae:	b004      	add	sp, #16
 8022bb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022bb4:	08027ad4 	.word	0x08027ad4

08022bb8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8022bb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022bba:	461e      	mov	r6, r3
 8022bbc:	1e4b      	subs	r3, r1, #1
 8022bbe:	2b01      	cmp	r3, #1
 8022bc0:	b085      	sub	sp, #20
 8022bc2:	4604      	mov	r4, r0
 8022bc4:	460d      	mov	r5, r1
 8022bc6:	4617      	mov	r7, r2
 8022bc8:	d84b      	bhi.n	8022c62 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8022bca:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8022bce:	1cd3      	adds	r3, r2, #3
 8022bd0:	b29b      	uxth	r3, r3
 8022bd2:	2b06      	cmp	r3, #6
 8022bd4:	d916      	bls.n	8022c04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8022bd6:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8022c78 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8022bda:	f8cd c004 	str.w	ip, [sp, #4]
 8022bde:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8022be2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8022be6:	6900      	ldr	r0, [r0, #16]
 8022be8:	f8ad 100c 	strh.w	r1, [sp, #12]
 8022bec:	f04f 0c00 	mov.w	ip, #0
 8022bf0:	f88d c008 	strb.w	ip, [sp, #8]
 8022bf4:	f8ad 200a 	strh.w	r2, [sp, #10]
 8022bf8:	f8ad 300e 	strh.w	r3, [sp, #14]
 8022bfc:	6803      	ldr	r3, [r0, #0]
 8022bfe:	a901      	add	r1, sp, #4
 8022c00:	689b      	ldr	r3, [r3, #8]
 8022c02:	4798      	blx	r3
 8022c04:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8022c08:	1cd3      	adds	r3, r2, #3
 8022c0a:	b29b      	uxth	r3, r3
 8022c0c:	2b06      	cmp	r3, #6
 8022c0e:	d916      	bls.n	8022c3e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022c10:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8022c78 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8022c14:	f8cd c004 	str.w	ip, [sp, #4]
 8022c18:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8022c1c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8022c20:	6920      	ldr	r0, [r4, #16]
 8022c22:	f8ad 100c 	strh.w	r1, [sp, #12]
 8022c26:	f04f 0c01 	mov.w	ip, #1
 8022c2a:	f88d c008 	strb.w	ip, [sp, #8]
 8022c2e:	f8ad 200a 	strh.w	r2, [sp, #10]
 8022c32:	f8ad 300e 	strh.w	r3, [sp, #14]
 8022c36:	6803      	ldr	r3, [r0, #0]
 8022c38:	a901      	add	r1, sp, #4
 8022c3a:	689b      	ldr	r3, [r3, #8]
 8022c3c:	4798      	blx	r3
 8022c3e:	4b0d      	ldr	r3, [pc, #52]	@ (8022c74 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8022c40:	9301      	str	r3, [sp, #4]
 8022c42:	6920      	ldr	r0, [r4, #16]
 8022c44:	f88d 5008 	strb.w	r5, [sp, #8]
 8022c48:	2300      	movs	r3, #0
 8022c4a:	f8ad 700a 	strh.w	r7, [sp, #10]
 8022c4e:	f8ad 600c 	strh.w	r6, [sp, #12]
 8022c52:	f8ad 300e 	strh.w	r3, [sp, #14]
 8022c56:	6803      	ldr	r3, [r0, #0]
 8022c58:	a901      	add	r1, sp, #4
 8022c5a:	681b      	ldr	r3, [r3, #0]
 8022c5c:	4798      	blx	r3
 8022c5e:	b005      	add	sp, #20
 8022c60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8022c62:	2900      	cmp	r1, #0
 8022c64:	d1eb      	bne.n	8022c3e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022c66:	80a2      	strh	r2, [r4, #4]
 8022c68:	80c6      	strh	r6, [r0, #6]
 8022c6a:	60a1      	str	r1, [r4, #8]
 8022c6c:	81a1      	strh	r1, [r4, #12]
 8022c6e:	73a1      	strb	r1, [r4, #14]
 8022c70:	e7e5      	b.n	8022c3e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022c72:	bf00      	nop
 8022c74:	08027ac0 	.word	0x08027ac0
 8022c78:	08027ae8 	.word	0x08027ae8

08022c7c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8022c7c:	10c9      	asrs	r1, r1, #3
 8022c7e:	2900      	cmp	r1, #0
 8022c80:	bfb8      	it	lt
 8022c82:	4249      	neglt	r1, r1
 8022c84:	2801      	cmp	r0, #1
 8022c86:	d108      	bne.n	8022c9a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8022c88:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8022c8c:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8022c90:	4601      	mov	r1, r0
 8022c92:	dd02      	ble.n	8022c9a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8022c94:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 8022c98:	4770      	bx	lr
 8022c9a:	29ff      	cmp	r1, #255	@ 0xff
 8022c9c:	bfa8      	it	ge
 8022c9e:	21ff      	movge	r1, #255	@ 0xff
 8022ca0:	4608      	mov	r0, r1
 8022ca2:	4770      	bx	lr

08022ca4 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8022ca4:	b410      	push	{r4}
 8022ca6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8022caa:	429c      	cmp	r4, r3
 8022cac:	d803      	bhi.n	8022cb6 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8022cae:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022cb2:	f7ec b85d 	b.w	800ed70 <_ZN8touchgfx7Outline6lineToEii>
 8022cb6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022cba:	4770      	bx	lr

08022cbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8022cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022cc0:	b08b      	sub	sp, #44	@ 0x2c
 8022cc2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8022cc6:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8022cca:	9308      	str	r3, [sp, #32]
 8022ccc:	4606      	mov	r6, r0
 8022cce:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8022cd2:	9309      	str	r3, [sp, #36]	@ 0x24
 8022cd4:	468a      	mov	sl, r1
 8022cd6:	f7ec f9b8 	bl	800f04a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8022cda:	68b5      	ldr	r5, [r6, #8]
 8022cdc:	4604      	mov	r4, r0
 8022cde:	2d00      	cmp	r5, #0
 8022ce0:	d044      	beq.n	8022d6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8022ce2:	6873      	ldr	r3, [r6, #4]
 8022ce4:	42ab      	cmp	r3, r5
 8022ce6:	d33d      	bcc.n	8022d64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8022ce8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8022cec:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 8022cf0:	eb02 0b03 	add.w	fp, r2, r3
 8022cf4:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8022cf8:	fb02 1203 	mla	r2, r2, r3, r1
 8022cfc:	9205      	str	r2, [sp, #20]
 8022cfe:	1e6a      	subs	r2, r5, #1
 8022d00:	9204      	str	r2, [sp, #16]
 8022d02:	f04f 0800 	mov.w	r8, #0
 8022d06:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8022d0a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8022d0e:	454b      	cmp	r3, r9
 8022d10:	463a      	mov	r2, r7
 8022d12:	d008      	beq.n	8022d26 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8022d14:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 8022d18:	eb03 0b09 	add.w	fp, r3, r9
 8022d1c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8022d20:	fb03 1309 	mla	r3, r3, r9, r1
 8022d24:	9305      	str	r3, [sp, #20]
 8022d26:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8022d2a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8022d2e:	4498      	add	r8, r3
 8022d30:	9b04      	ldr	r3, [sp, #16]
 8022d32:	3b01      	subs	r3, #1
 8022d34:	9304      	str	r3, [sp, #16]
 8022d36:	9b04      	ldr	r3, [sp, #16]
 8022d38:	3301      	adds	r3, #1
 8022d3a:	d015      	beq.n	8022d68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8022d3c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8022d40:	42bb      	cmp	r3, r7
 8022d42:	d117      	bne.n	8022d74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8022d44:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8022d48:	9b04      	ldr	r3, [sp, #16]
 8022d4a:	4548      	cmp	r0, r9
 8022d4c:	f103 33ff 	add.w	r3, r3, #4294967295
 8022d50:	d17f      	bne.n	8022e52 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8022d52:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8022d56:	4401      	add	r1, r0
 8022d58:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8022d5c:	4480      	add	r8, r0
 8022d5e:	e7e9      	b.n	8022d34 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8022d60:	461f      	mov	r7, r3
 8022d62:	e044      	b.n	8022dee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8022d64:	2000      	movs	r0, #0
 8022d66:	e002      	b.n	8022d6e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8022d68:	2900      	cmp	r1, #0
 8022d6a:	d16f      	bne.n	8022e4c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8022d6c:	2001      	movs	r0, #1
 8022d6e:	b00b      	add	sp, #44	@ 0x2c
 8022d70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022d74:	2900      	cmp	r1, #0
 8022d76:	d030      	beq.n	8022dda <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8022d78:	2f00      	cmp	r7, #0
 8022d7a:	db29      	blt.n	8022dd0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8022d7c:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8022d80:	42bb      	cmp	r3, r7
 8022d82:	dd25      	ble.n	8022dd0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8022d84:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8022d88:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8022d8c:	f7ff ff76 	bl	8022c7c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8022d90:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022d92:	fb10 f003 	smulbb	r0, r0, r3
 8022d96:	b280      	uxth	r0, r0
 8022d98:	1c41      	adds	r1, r0, #1
 8022d9a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022d9e:	1209      	asrs	r1, r1, #8
 8022da0:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8022da4:	d014      	beq.n	8022dd0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8022da6:	9808      	ldr	r0, [sp, #32]
 8022da8:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8022daa:	b2c9      	uxtb	r1, r1
 8022dac:	b2ba      	uxth	r2, r7
 8022dae:	9102      	str	r1, [sp, #8]
 8022db0:	2101      	movs	r1, #1
 8022db2:	4413      	add	r3, r2
 8022db4:	9101      	str	r1, [sp, #4]
 8022db6:	4402      	add	r2, r0
 8022db8:	fa0f f18b 	sxth.w	r1, fp
 8022dbc:	f8da 0000 	ldr.w	r0, [sl]
 8022dc0:	9100      	str	r1, [sp, #0]
 8022dc2:	6941      	ldr	r1, [r0, #20]
 8022dc4:	b21b      	sxth	r3, r3
 8022dc6:	460d      	mov	r5, r1
 8022dc8:	b212      	sxth	r2, r2
 8022dca:	9905      	ldr	r1, [sp, #20]
 8022dcc:	4650      	mov	r0, sl
 8022dce:	47a8      	blx	r5
 8022dd0:	9b04      	ldr	r3, [sp, #16]
 8022dd2:	3301      	adds	r3, #1
 8022dd4:	f107 0201 	add.w	r2, r7, #1
 8022dd8:	d0c8      	beq.n	8022d6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8022dda:	f9b4 7000 	ldrsh.w	r7, [r4]
 8022dde:	1abb      	subs	r3, r7, r2
 8022de0:	2b00      	cmp	r3, #0
 8022de2:	dd31      	ble.n	8022e48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8022de4:	2a00      	cmp	r2, #0
 8022de6:	dabb      	bge.n	8022d60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8022de8:	2f00      	cmp	r7, #0
 8022dea:	dd2d      	ble.n	8022e48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8022dec:	2200      	movs	r2, #0
 8022dee:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8022df2:	19d1      	adds	r1, r2, r7
 8022df4:	4299      	cmp	r1, r3
 8022df6:	db02      	blt.n	8022dfe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8022df8:	1a9f      	subs	r7, r3, r2
 8022dfa:	2f00      	cmp	r7, #0
 8022dfc:	dd24      	ble.n	8022e48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8022dfe:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8022e02:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8022e06:	f7ff ff39 	bl	8022c7c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8022e0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022e0c:	fb10 f003 	smulbb	r0, r0, r3
 8022e10:	b280      	uxth	r0, r0
 8022e12:	1c41      	adds	r1, r0, #1
 8022e14:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022e18:	1209      	asrs	r1, r1, #8
 8022e1a:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8022e1e:	d013      	beq.n	8022e48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8022e20:	9808      	ldr	r0, [sp, #32]
 8022e22:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8022e24:	b292      	uxth	r2, r2
 8022e26:	b2c9      	uxtb	r1, r1
 8022e28:	4413      	add	r3, r2
 8022e2a:	9102      	str	r1, [sp, #8]
 8022e2c:	4402      	add	r2, r0
 8022e2e:	b23f      	sxth	r7, r7
 8022e30:	f8da 0000 	ldr.w	r0, [sl]
 8022e34:	9701      	str	r7, [sp, #4]
 8022e36:	fa0f f18b 	sxth.w	r1, fp
 8022e3a:	9100      	str	r1, [sp, #0]
 8022e3c:	6947      	ldr	r7, [r0, #20]
 8022e3e:	9905      	ldr	r1, [sp, #20]
 8022e40:	b21b      	sxth	r3, r3
 8022e42:	b212      	sxth	r2, r2
 8022e44:	4650      	mov	r0, sl
 8022e46:	47b8      	blx	r7
 8022e48:	464b      	mov	r3, r9
 8022e4a:	e75c      	b.n	8022d06 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8022e4c:	2f00      	cmp	r7, #0
 8022e4e:	da95      	bge.n	8022d7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8022e50:	e78c      	b.n	8022d6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8022e52:	2900      	cmp	r1, #0
 8022e54:	d0f8      	beq.n	8022e48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8022e56:	e78f      	b.n	8022d78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08022e58 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8022e58:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8022e5c:	461e      	mov	r6, r3
 8022e5e:	4b36      	ldr	r3, [pc, #216]	@ (8022f38 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 8022e60:	e9c0 3100 	strd	r3, r1, [r0]
 8022e64:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8022e68:	8103      	strh	r3, [r0, #8]
 8022e6a:	2500      	movs	r5, #0
 8022e6c:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8022e70:	7283      	strb	r3, [r0, #10]
 8022e72:	f100 0814 	add.w	r8, r0, #20
 8022e76:	4604      	mov	r4, r0
 8022e78:	8185      	strh	r5, [r0, #12]
 8022e7a:	81c5      	strh	r5, [r0, #14]
 8022e7c:	8205      	strh	r5, [r0, #16]
 8022e7e:	8245      	strh	r5, [r0, #18]
 8022e80:	4640      	mov	r0, r8
 8022e82:	4617      	mov	r7, r2
 8022e84:	f7eb faac 	bl	800e3e0 <_ZN8touchgfx7OutlineC1Ev>
 8022e88:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8022e8c:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 8022e90:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 8022e94:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 8022e98:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8022e9c:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 8022ea0:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 8022ea4:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 8022ea8:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 8022eac:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 8022eb0:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 8022eb4:	6830      	ldr	r0, [r6, #0]
 8022eb6:	6871      	ldr	r1, [r6, #4]
 8022eb8:	8872      	ldrh	r2, [r6, #2]
 8022eba:	8835      	ldrh	r5, [r6, #0]
 8022ebc:	466b      	mov	r3, sp
 8022ebe:	c303      	stmia	r3!, {r0, r1}
 8022ec0:	887b      	ldrh	r3, [r7, #2]
 8022ec2:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 8022ec6:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 8022eca:	4413      	add	r3, r2
 8022ecc:	883a      	ldrh	r2, [r7, #0]
 8022ece:	81e3      	strh	r3, [r4, #14]
 8022ed0:	442a      	add	r2, r5
 8022ed2:	81a2      	strh	r2, [r4, #12]
 8022ed4:	8220      	strh	r0, [r4, #16]
 8022ed6:	8261      	strh	r1, [r4, #18]
 8022ed8:	4668      	mov	r0, sp
 8022eda:	4639      	mov	r1, r7
 8022edc:	f7ed fc6a 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022ee0:	f104 000c 	add.w	r0, r4, #12
 8022ee4:	f7ed fc3e 	bl	8010764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022ee8:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8022eec:	f8bd 2000 	ldrh.w	r2, [sp]
 8022ef0:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8022ef4:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 8022ef8:	4640      	mov	r0, r8
 8022efa:	f7eb fa55 	bl	800e3a8 <_ZN8touchgfx7Outline5resetEv>
 8022efe:	f9bd 3000 	ldrsh.w	r3, [sp]
 8022f02:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 8022f06:	015b      	lsls	r3, r3, #5
 8022f08:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8022f0a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8022f0e:	015b      	lsls	r3, r3, #5
 8022f10:	6523      	str	r3, [r4, #80]	@ 0x50
 8022f12:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8022f16:	015b      	lsls	r3, r3, #5
 8022f18:	6563      	str	r3, [r4, #84]	@ 0x54
 8022f1a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8022f1e:	015b      	lsls	r3, r3, #5
 8022f20:	65a3      	str	r3, [r4, #88]	@ 0x58
 8022f22:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8022f26:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 8022f2a:	4620      	mov	r0, r4
 8022f2c:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 8022f30:	b002      	add	sp, #8
 8022f32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022f36:	bf00      	nop
 8022f38:	08027e24 	.word	0x08027e24

08022f3c <_ZN8touchgfx6Canvas5closeEv>:
 8022f3c:	b538      	push	{r3, r4, r5, lr}
 8022f3e:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8022f42:	4604      	mov	r4, r0
 8022f44:	b193      	cbz	r3, 8022f6c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8022f46:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 8022f4a:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 8022f4e:	4213      	tst	r3, r2
 8022f50:	d10c      	bne.n	8022f6c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8022f52:	f100 0514 	add.w	r5, r0, #20
 8022f56:	b123      	cbz	r3, 8022f62 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8022f58:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 8022f5c:	4628      	mov	r0, r5
 8022f5e:	f7ff fea1 	bl	8022ca4 <_ZN8touchgfx10Rasterizer6lineToEii>
 8022f62:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 8022f66:	4628      	mov	r0, r5
 8022f68:	f7ff fe9c 	bl	8022ca4 <_ZN8touchgfx10Rasterizer6lineToEii>
 8022f6c:	2300      	movs	r3, #0
 8022f6e:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8022f72:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 8022f76:	4298      	cmp	r0, r3
 8022f78:	bf34      	ite	cc
 8022f7a:	2000      	movcc	r0, #0
 8022f7c:	2001      	movcs	r0, #1
 8022f7e:	bd38      	pop	{r3, r4, r5, pc}

08022f80 <_ZN8touchgfx6Canvas6renderEh>:
 8022f80:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8022f84:	7a85      	ldrb	r5, [r0, #10]
 8022f86:	4369      	muls	r1, r5
 8022f88:	1c4d      	adds	r5, r1, #1
 8022f8a:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022f8e:	122d      	asrs	r5, r5, #8
 8022f90:	4604      	mov	r4, r0
 8022f92:	f000 8099 	beq.w	80230c8 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8022f96:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 8022f9a:	2b00      	cmp	r3, #0
 8022f9c:	f000 8094 	beq.w	80230c8 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8022fa0:	f7ff ffcc 	bl	8022f3c <_ZN8touchgfx6Canvas5closeEv>
 8022fa4:	4607      	mov	r7, r0
 8022fa6:	2800      	cmp	r0, #0
 8022fa8:	d045      	beq.n	8023036 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8022faa:	6860      	ldr	r0, [r4, #4]
 8022fac:	4e47      	ldr	r6, [pc, #284]	@ (80230cc <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 8022fae:	6803      	ldr	r3, [r0, #0]
 8022fb0:	6837      	ldr	r7, [r6, #0]
 8022fb2:	689b      	ldr	r3, [r3, #8]
 8022fb4:	4798      	blx	r3
 8022fb6:	4601      	mov	r1, r0
 8022fb8:	4638      	mov	r0, r7
 8022fba:	f7e8 fdd9 	bl	800bb70 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8022fbe:	4607      	mov	r7, r0
 8022fc0:	f7e0 f87a 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 8022fc4:	6803      	ldr	r3, [r0, #0]
 8022fc6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022fc8:	4798      	blx	r3
 8022fca:	4680      	mov	r8, r0
 8022fcc:	f7e0 f874 	bl	80030b8 <_ZN8touchgfx3HAL3lcdEv>
 8022fd0:	6803      	ldr	r3, [r0, #0]
 8022fd2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022fd4:	4798      	blx	r3
 8022fd6:	280b      	cmp	r0, #11
 8022fd8:	d85b      	bhi.n	8023092 <_ZN8touchgfx6Canvas6renderEh+0x112>
 8022fda:	e8df f000 	tbb	[pc, r0]
 8022fde:	5c51      	.short	0x5c51
 8022fe0:	305a066c 	.word	0x305a066c
 8022fe4:	65656540 	.word	0x65656540
 8022fe8:	6565      	.short	0x6565
 8022fea:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8022fee:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8022ff2:	2208      	movs	r2, #8
 8022ff4:	fb91 f2f2 	sdiv	r2, r1, r2
 8022ff8:	fb08 2303 	mla	r3, r8, r3, r2
 8022ffc:	441f      	add	r7, r3
 8022ffe:	424b      	negs	r3, r1
 8023000:	f003 0307 	and.w	r3, r3, #7
 8023004:	f001 0107 	and.w	r1, r1, #7
 8023008:	bf58      	it	pl
 802300a:	4259      	negpl	r1, r3
 802300c:	b2c9      	uxtb	r1, r1
 802300e:	b2ed      	uxtb	r5, r5
 8023010:	463a      	mov	r2, r7
 8023012:	e9cd 1500 	strd	r1, r5, [sp]
 8023016:	fa0f f388 	sxth.w	r3, r8
 802301a:	6861      	ldr	r1, [r4, #4]
 802301c:	f104 0014 	add.w	r0, r4, #20
 8023020:	f7ff fe4c 	bl	8022cbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8023024:	4607      	mov	r7, r0
 8023026:	6860      	ldr	r0, [r4, #4]
 8023028:	6803      	ldr	r3, [r0, #0]
 802302a:	691b      	ldr	r3, [r3, #16]
 802302c:	4798      	blx	r3
 802302e:	6830      	ldr	r0, [r6, #0]
 8023030:	6803      	ldr	r3, [r0, #0]
 8023032:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023034:	4798      	blx	r3
 8023036:	4638      	mov	r0, r7
 8023038:	b002      	add	sp, #8
 802303a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802303e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8023042:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8023046:	2204      	movs	r2, #4
 8023048:	fb91 f2f2 	sdiv	r2, r1, r2
 802304c:	fb08 2303 	mla	r3, r8, r3, r2
 8023050:	441f      	add	r7, r3
 8023052:	424b      	negs	r3, r1
 8023054:	f003 0303 	and.w	r3, r3, #3
 8023058:	f001 0103 	and.w	r1, r1, #3
 802305c:	e7d4      	b.n	8023008 <_ZN8touchgfx6Canvas6renderEh+0x88>
 802305e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8023062:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8023066:	2900      	cmp	r1, #0
 8023068:	f04f 0202 	mov.w	r2, #2
 802306c:	fb91 f2f2 	sdiv	r2, r1, r2
 8023070:	f001 0101 	and.w	r1, r1, #1
 8023074:	fb08 2303 	mla	r3, r8, r3, r2
 8023078:	441f      	add	r7, r3
 802307a:	bfb8      	it	lt
 802307c:	4249      	neglt	r1, r1
 802307e:	e7c5      	b.n	802300c <_ZN8touchgfx6Canvas6renderEh+0x8c>
 8023080:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8023084:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023088:	fb08 f303 	mul.w	r3, r8, r3
 802308c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8023090:	441f      	add	r7, r3
 8023092:	2100      	movs	r1, #0
 8023094:	e7bb      	b.n	802300e <_ZN8touchgfx6Canvas6renderEh+0x8e>
 8023096:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802309a:	fb08 f203 	mul.w	r2, r8, r3
 802309e:	89a3      	ldrh	r3, [r4, #12]
 80230a0:	2103      	movs	r1, #3
 80230a2:	fb13 2301 	smlabb	r3, r3, r1, r2
 80230a6:	e7f3      	b.n	8023090 <_ZN8touchgfx6Canvas6renderEh+0x110>
 80230a8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80230ac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80230b0:	fb08 2303 	mla	r3, r8, r3, r2
 80230b4:	e7ec      	b.n	8023090 <_ZN8touchgfx6Canvas6renderEh+0x110>
 80230b6:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80230ba:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80230be:	fb08 f303 	mul.w	r3, r8, r3
 80230c2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80230c6:	e7e3      	b.n	8023090 <_ZN8touchgfx6Canvas6renderEh+0x110>
 80230c8:	2701      	movs	r7, #1
 80230ca:	e7b4      	b.n	8023036 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 80230cc:	200157c0 	.word	0x200157c0

080230d0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80230d0:	b510      	push	{r4, lr}
 80230d2:	4b06      	ldr	r3, [pc, #24]	@ (80230ec <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 80230d4:	781b      	ldrb	r3, [r3, #0]
 80230d6:	2b01      	cmp	r3, #1
 80230d8:	d107      	bne.n	80230ea <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 80230da:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 80230de:	680b      	ldr	r3, [r1, #0]
 80230e0:	6814      	ldr	r4, [r2, #0]
 80230e2:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80230e6:	6013      	str	r3, [r2, #0]
 80230e8:	600c      	str	r4, [r1, #0]
 80230ea:	bd10      	pop	{r4, pc}
 80230ec:	200157b8 	.word	0x200157b8

080230f0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80230f0:	b513      	push	{r0, r1, r4, lr}
 80230f2:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 80230f6:	4604      	mov	r4, r0
 80230f8:	e9cd 2100 	strd	r2, r1, [sp]
 80230fc:	b9a3      	cbnz	r3, 8023128 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80230fe:	466a      	mov	r2, sp
 8023100:	a901      	add	r1, sp, #4
 8023102:	4620      	mov	r0, r4
 8023104:	f7ff ffe4 	bl	80230d0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8023108:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 802310a:	9901      	ldr	r1, [sp, #4]
 802310c:	9a00      	ldr	r2, [sp, #0]
 802310e:	1ac9      	subs	r1, r1, r3
 8023110:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8023112:	9101      	str	r1, [sp, #4]
 8023114:	1ad2      	subs	r2, r2, r3
 8023116:	2a00      	cmp	r2, #0
 8023118:	9200      	str	r2, [sp, #0]
 802311a:	da0b      	bge.n	8023134 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802311c:	2301      	movs	r3, #1
 802311e:	2900      	cmp	r1, #0
 8023120:	da0e      	bge.n	8023140 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8023122:	f043 0304 	orr.w	r3, r3, #4
 8023126:	e013      	b.n	8023150 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8023128:	f7ff ff08 	bl	8022f3c <_ZN8touchgfx6Canvas5closeEv>
 802312c:	2800      	cmp	r0, #0
 802312e:	d1e6      	bne.n	80230fe <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8023130:	b002      	add	sp, #8
 8023132:	bd10      	pop	{r4, pc}
 8023134:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8023136:	429a      	cmp	r2, r3
 8023138:	bfac      	ite	ge
 802313a:	2302      	movge	r3, #2
 802313c:	2300      	movlt	r3, #0
 802313e:	e7ee      	b.n	802311e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8023140:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8023142:	4281      	cmp	r1, r0
 8023144:	bfac      	ite	ge
 8023146:	2008      	movge	r0, #8
 8023148:	2000      	movlt	r0, #0
 802314a:	4318      	orrs	r0, r3
 802314c:	b2c3      	uxtb	r3, r0
 802314e:	b158      	cbz	r0, 8023168 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8023150:	2200      	movs	r2, #0
 8023152:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 8023156:	9901      	ldr	r1, [sp, #4]
 8023158:	9a00      	ldr	r2, [sp, #0]
 802315a:	66e1      	str	r1, [r4, #108]	@ 0x6c
 802315c:	6722      	str	r2, [r4, #112]	@ 0x70
 802315e:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 8023162:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 8023166:	e7e3      	b.n	8023130 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8023168:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 802316c:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8023170:	4298      	cmp	r0, r3
 8023172:	d803      	bhi.n	802317c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8023174:	f104 0014 	add.w	r0, r4, #20
 8023178:	f7eb fe14 	bl	800eda4 <_ZN8touchgfx7Outline6moveToEii>
 802317c:	2301      	movs	r3, #1
 802317e:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8023182:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8023186:	2300      	movs	r3, #0
 8023188:	e7e5      	b.n	8023156 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802318a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802318a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802318c:	ab02      	add	r3, sp, #8
 802318e:	4604      	mov	r4, r0
 8023190:	f843 2d08 	str.w	r2, [r3, #-8]!
 8023194:	9101      	str	r1, [sp, #4]
 8023196:	461a      	mov	r2, r3
 8023198:	a901      	add	r1, sp, #4
 802319a:	f7ff ff99 	bl	80230d0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802319e:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80231a0:	9901      	ldr	r1, [sp, #4]
 80231a2:	9a00      	ldr	r2, [sp, #0]
 80231a4:	1ac9      	subs	r1, r1, r3
 80231a6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80231a8:	9101      	str	r1, [sp, #4]
 80231aa:	1ad2      	subs	r2, r2, r3
 80231ac:	2a00      	cmp	r2, #0
 80231ae:	9200      	str	r2, [sp, #0]
 80231b0:	db1c      	blt.n	80231ec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80231b2:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80231b4:	429a      	cmp	r2, r3
 80231b6:	bfac      	ite	ge
 80231b8:	2002      	movge	r0, #2
 80231ba:	2000      	movlt	r0, #0
 80231bc:	2900      	cmp	r1, #0
 80231be:	db17      	blt.n	80231f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80231c0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80231c2:	4299      	cmp	r1, r3
 80231c4:	bfac      	ite	ge
 80231c6:	2308      	movge	r3, #8
 80231c8:	2300      	movlt	r3, #0
 80231ca:	4303      	orrs	r3, r0
 80231cc:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 80231d0:	b2dd      	uxtb	r5, r3
 80231d2:	b978      	cbnz	r0, 80231f4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80231d4:	f104 0014 	add.w	r0, r4, #20
 80231d8:	f7ff fd64 	bl	8022ca4 <_ZN8touchgfx10Rasterizer6lineToEii>
 80231dc:	9b01      	ldr	r3, [sp, #4]
 80231de:	6623      	str	r3, [r4, #96]	@ 0x60
 80231e0:	9b00      	ldr	r3, [sp, #0]
 80231e2:	6663      	str	r3, [r4, #100]	@ 0x64
 80231e4:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 80231e8:	b002      	add	sp, #8
 80231ea:	bd70      	pop	{r4, r5, r6, pc}
 80231ec:	2001      	movs	r0, #1
 80231ee:	e7e5      	b.n	80231bc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80231f0:	2304      	movs	r3, #4
 80231f2:	e7ea      	b.n	80231ca <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80231f4:	b113      	cbz	r3, 80231fc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80231f6:	ea10 0305 	ands.w	r3, r0, r5
 80231fa:	d11c      	bne.n	8023236 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80231fc:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8023200:	f104 0614 	add.w	r6, r4, #20
 8023204:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 8023208:	b98b      	cbnz	r3, 802322e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802320a:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 802320e:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8023212:	4298      	cmp	r0, r3
 8023214:	d802      	bhi.n	802321c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8023216:	4630      	mov	r0, r6
 8023218:	f7eb fdc4 	bl	800eda4 <_ZN8touchgfx7Outline6moveToEii>
 802321c:	2301      	movs	r3, #1
 802321e:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8023222:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8023226:	e9dd 2100 	ldrd	r2, r1, [sp]
 802322a:	4630      	mov	r0, r6
 802322c:	e7d4      	b.n	80231d8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802322e:	4630      	mov	r0, r6
 8023230:	f7ff fd38 	bl	8022ca4 <_ZN8touchgfx10Rasterizer6lineToEii>
 8023234:	e7f7      	b.n	8023226 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8023236:	461d      	mov	r5, r3
 8023238:	e7d0      	b.n	80231dc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802323c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 802323c:	b538      	push	{r3, r4, r5, lr}
 802323e:	ed2d 8b10 	vpush	{d8-d15}
 8023242:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 8023246:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 80233b0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 802324a:	4605      	mov	r5, r0
 802324c:	eeb0 ca40 	vmov.f32	s24, s0
 8023250:	eef0 ca60 	vmov.f32	s25, s1
 8023254:	eeb0 da41 	vmov.f32	s26, s2
 8023258:	eef0 da61 	vmov.f32	s27, s3
 802325c:	eeb0 ea42 	vmov.f32	s28, s4
 8023260:	eef0 ea62 	vmov.f32	s29, s5
 8023264:	460c      	mov	r4, r1
 8023266:	eef0 aa6b 	vmov.f32	s21, s23
 802326a:	2c08      	cmp	r4, #8
 802326c:	d86e      	bhi.n	802334c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 802326e:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 8023272:	ee7d 7aee 	vsub.f32	s15, s27, s29
 8023276:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 802327a:	ee3e 7aec 	vsub.f32	s14, s29, s25
 802327e:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 8023282:	ee3c fa0d 	vadd.f32	s30, s24, s26
 8023286:	eee6 7a07 	vfma.f32	s15, s12, s14
 802328a:	ee7c faad 	vadd.f32	s31, s25, s27
 802328e:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 8023292:	ee3d aaae 	vadd.f32	s20, s27, s29
 8023296:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802329a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802329e:	ee2f fa2b 	vmul.f32	s30, s30, s23
 80232a2:	ee6f faab 	vmul.f32	s31, s31, s23
 80232a6:	ee69 9aab 	vmul.f32	s19, s19, s23
 80232aa:	ee2a aa2b 	vmul.f32	s20, s20, s23
 80232ae:	bf48      	it	mi
 80232b0:	eef1 7a67 	vnegmi.f32	s15, s15
 80232b4:	ee7f 8a29 	vadd.f32	s17, s30, s19
 80232b8:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 80232bc:	eef4 7acb 	vcmpe.f32	s15, s22
 80232c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80232c4:	ee68 8aab 	vmul.f32	s17, s17, s23
 80232c8:	ee29 9a2b 	vmul.f32	s18, s18, s23
 80232cc:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 80232d0:	dd3f      	ble.n	8023352 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 80232d2:	ee27 7a07 	vmul.f32	s14, s14, s14
 80232d6:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80232da:	eea6 7aa6 	vfma.f32	s14, s13, s13
 80232de:	ee27 7a06 	vmul.f32	s14, s14, s12
 80232e2:	eef4 7ac7 	vcmpe.f32	s15, s14
 80232e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80232ea:	d847      	bhi.n	802337c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 80232ec:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 80232f0:	ee3e 0aed 	vsub.f32	s0, s29, s27
 80232f4:	f000 fa59 	bl	80237aa <atan2f>
 80232f8:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 80232fc:	eeb0 8a40 	vmov.f32	s16, s0
 8023300:	ee3d 0aec 	vsub.f32	s0, s27, s25
 8023304:	f000 fa51 	bl	80237aa <atan2f>
 8023308:	ee38 0a40 	vsub.f32	s0, s16, s0
 802330c:	eddf 7a29 	vldr	s15, [pc, #164]	@ 80233b4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 8023310:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8023314:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023318:	bf48      	it	mi
 802331a:	eeb1 0a40 	vnegmi.f32	s0, s0
 802331e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8023322:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023326:	bfa4      	itt	ge
 8023328:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 80233b8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 802332c:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 8023330:	eddf 7a22 	vldr	s15, [pc, #136]	@ 80233bc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 8023334:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8023338:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802333c:	d51e      	bpl.n	802337c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 802333e:	eef0 0a49 	vmov.f32	s1, s18
 8023342:	eeb0 0a68 	vmov.f32	s0, s17
 8023346:	4628      	mov	r0, r5
 8023348:	f7e9 fe1a 	bl	800cf80 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802334c:	ecbd 8b10 	vpop	{d8-d15}
 8023350:	bd38      	pop	{r3, r4, r5, pc}
 8023352:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 8023356:	eeb0 7a68 	vmov.f32	s14, s17
 802335a:	eea7 7aea 	vfms.f32	s14, s15, s21
 802335e:	ee7c 7aae 	vadd.f32	s15, s25, s29
 8023362:	eef0 6a49 	vmov.f32	s13, s18
 8023366:	eee7 6aea 	vfms.f32	s13, s15, s21
 802336a:	ee66 7aa6 	vmul.f32	s15, s13, s13
 802336e:	eee7 7a07 	vfma.f32	s15, s14, s14
 8023372:	eef4 7ac6 	vcmpe.f32	s15, s12
 8023376:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802337a:	d9e0      	bls.n	802333e <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 802337c:	3401      	adds	r4, #1
 802337e:	eef0 0a6c 	vmov.f32	s1, s25
 8023382:	eeb0 0a4c 	vmov.f32	s0, s24
 8023386:	4621      	mov	r1, r4
 8023388:	eef0 2a49 	vmov.f32	s5, s18
 802338c:	eeb0 2a68 	vmov.f32	s4, s17
 8023390:	eef0 1a6f 	vmov.f32	s3, s31
 8023394:	eeb0 1a4f 	vmov.f32	s2, s30
 8023398:	4628      	mov	r0, r5
 802339a:	f7ff ff4f 	bl	802323c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 802339e:	eef0 da4a 	vmov.f32	s27, s20
 80233a2:	eeb0 da69 	vmov.f32	s26, s19
 80233a6:	eef0 ca49 	vmov.f32	s25, s18
 80233aa:	eeb0 ca68 	vmov.f32	s24, s17
 80233ae:	e75c      	b.n	802326a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 80233b0:	2edbe6ff 	.word	0x2edbe6ff
 80233b4:	40490fdb 	.word	0x40490fdb
 80233b8:	40c90fdb 	.word	0x40c90fdb
 80233bc:	3dcccccd 	.word	0x3dcccccd

080233c0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 80233c0:	b530      	push	{r4, r5, lr}
 80233c2:	ed2d 8b10 	vpush	{d8-d15}
 80233c6:	4604      	mov	r4, r0
 80233c8:	b085      	sub	sp, #20
 80233ca:	eef0 8a40 	vmov.f32	s17, s0
 80233ce:	eef0 9a60 	vmov.f32	s19, s1
 80233d2:	eef0 fa41 	vmov.f32	s31, s2
 80233d6:	eeb0 fa61 	vmov.f32	s30, s3
 80233da:	eef0 ba42 	vmov.f32	s23, s4
 80233de:	eeb0 ca62 	vmov.f32	s24, s5
 80233e2:	eef0 aa43 	vmov.f32	s21, s6
 80233e6:	eeb0 ba63 	vmov.f32	s22, s7
 80233ea:	460d      	mov	r5, r1
 80233ec:	2d08      	cmp	r5, #8
 80233ee:	f200 8115 	bhi.w	802361c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 80233f2:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 80233f6:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80233fa:	ee7f 6aab 	vadd.f32	s13, s31, s23
 80233fe:	ee26 6a27 	vmul.f32	s12, s12, s15
 8023402:	ee38 daaf 	vadd.f32	s26, s17, s31
 8023406:	ed8d 6a01 	vstr	s12, [sp, #4]
 802340a:	eea6 6aa7 	vfma.f32	s12, s13, s15
 802340e:	ee2d da27 	vmul.f32	s26, s26, s15
 8023412:	ee7c ca0b 	vadd.f32	s25, s24, s22
 8023416:	eeb0 ea4d 	vmov.f32	s28, s26
 802341a:	eea6 eaa7 	vfma.f32	s28, s13, s15
 802341e:	ee6c caa7 	vmul.f32	s25, s25, s15
 8023422:	ee66 6a27 	vmul.f32	s13, s12, s15
 8023426:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 802342a:	edcd 6a03 	vstr	s13, [sp, #12]
 802342e:	ee79 da8f 	vadd.f32	s27, s19, s30
 8023432:	eef0 6a6c 	vmov.f32	s13, s25
 8023436:	eee7 6a27 	vfma.f32	s13, s14, s15
 802343a:	ee6d daa7 	vmul.f32	s27, s27, s15
 802343e:	ee2e ea27 	vmul.f32	s28, s28, s15
 8023442:	eef0 ea6d 	vmov.f32	s29, s27
 8023446:	eee7 ea27 	vfma.f32	s29, s14, s15
 802344a:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802344e:	ee6e eaa7 	vmul.f32	s29, s29, s15
 8023452:	ed8d 7a02 	vstr	s14, [sp, #8]
 8023456:	ed9d 7a03 	vldr	s14, [sp, #12]
 802345a:	ee3e 9a07 	vadd.f32	s18, s28, s14
 802345e:	ed9d 7a02 	vldr	s14, [sp, #8]
 8023462:	ee3e aa87 	vadd.f32	s20, s29, s14
 8023466:	ee29 9a27 	vmul.f32	s18, s18, s15
 802346a:	ee2a aa27 	vmul.f32	s20, s20, s15
 802346e:	eef0 6a67 	vmov.f32	s13, s15
 8023472:	2d00      	cmp	r5, #0
 8023474:	f000 810d 	beq.w	8023692 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8023478:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 802347c:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 8023480:	ee7b 7a69 	vsub.f32	s15, s22, s19
 8023484:	ee3f 6aea 	vsub.f32	s12, s31, s21
 8023488:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 802348c:	ee3b 5aea 	vsub.f32	s10, s23, s21
 8023490:	eea6 7a27 	vfma.f32	s14, s12, s15
 8023494:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 8023498:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 802349c:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 80234a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80234a4:	eea5 6a27 	vfma.f32	s12, s10, s15
 80234a8:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 80236d8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 80234ac:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80234b0:	bf48      	it	mi
 80234b2:	eeb1 7a47 	vnegmi.f32	s14, s14
 80234b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80234ba:	eeb4 7ae4 	vcmpe.f32	s14, s9
 80234be:	bf48      	it	mi
 80234c0:	eeb1 6a46 	vnegmi.f32	s12, s12
 80234c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80234c8:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 80234cc:	f340 80aa 	ble.w	8023624 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 80234d0:	eeb4 6ae4 	vcmpe.f32	s12, s9
 80234d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80234d8:	dd5c      	ble.n	8023594 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 80234da:	ee65 5aa5 	vmul.f32	s11, s11, s11
 80234de:	ee37 7a06 	vadd.f32	s14, s14, s12
 80234e2:	eee7 5aa7 	vfma.f32	s11, s15, s15
 80234e6:	ee27 7a07 	vmul.f32	s14, s14, s14
 80234ea:	ee65 7a85 	vmul.f32	s15, s11, s10
 80234ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80234f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80234f6:	f200 80cc 	bhi.w	8023692 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80234fa:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80234fe:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8023502:	f000 f952 	bl	80237aa <atan2f>
 8023506:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 802350a:	eeb0 8a40 	vmov.f32	s16, s0
 802350e:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8023512:	f000 f94a 	bl	80237aa <atan2f>
 8023516:	ee38 fa40 	vsub.f32	s30, s16, s0
 802351a:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 802351e:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 8023522:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023526:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 802352a:	bf48      	it	mi
 802352c:	eeb1 fa4f 	vnegmi.f32	s30, s30
 8023530:	f000 f93b 	bl	80237aa <atan2f>
 8023534:	ee30 0a48 	vsub.f32	s0, s0, s16
 8023538:	eddf 7a68 	vldr	s15, [pc, #416]	@ 80236dc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802353c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8023540:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023544:	eeb4 fae7 	vcmpe.f32	s30, s15
 8023548:	bf48      	it	mi
 802354a:	eeb1 0a40 	vnegmi.f32	s0, s0
 802354e:	eddf 7a63 	vldr	s15, [pc, #396]	@ 80236dc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8023552:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023556:	bfa8      	it	ge
 8023558:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 80236e0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802355c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8023560:	bfa8      	it	ge
 8023562:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 8023566:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802356a:	bfa8      	it	ge
 802356c:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 80236e0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8023570:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 80236e4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8023574:	bfa8      	it	ge
 8023576:	ee37 0a40 	vsubge.f32	s0, s14, s0
 802357a:	ee3f 0a00 	vadd.f32	s0, s30, s0
 802357e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8023582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023586:	f140 8084 	bpl.w	8023692 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802358a:	eef0 0a4a 	vmov.f32	s1, s20
 802358e:	eeb0 0a49 	vmov.f32	s0, s18
 8023592:	e040      	b.n	8023616 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 8023594:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8023598:	ee27 7a07 	vmul.f32	s14, s14, s14
 802359c:	eee5 7aa5 	vfma.f32	s15, s11, s11
 80235a0:	ee67 7a85 	vmul.f32	s15, s15, s10
 80235a4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80235a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80235ac:	d871      	bhi.n	8023692 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80235ae:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80235b2:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 80235b6:	f000 f8f8 	bl	80237aa <atan2f>
 80235ba:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 80235be:	eeb0 8a40 	vmov.f32	s16, s0
 80235c2:	ee3f 0a69 	vsub.f32	s0, s30, s19
 80235c6:	f000 f8f0 	bl	80237aa <atan2f>
 80235ca:	ee38 0a40 	vsub.f32	s0, s16, s0
 80235ce:	eddf 7a43 	vldr	s15, [pc, #268]	@ 80236dc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 80235d2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80235d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80235da:	bf48      	it	mi
 80235dc:	eeb1 0a40 	vnegmi.f32	s0, s0
 80235e0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80235e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80235e8:	bfa4      	itt	ge
 80235ea:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 80236e0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 80235ee:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 80235f2:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 80236e4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 80235f6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80235fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80235fe:	d548      	bpl.n	8023692 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8023600:	eef0 0a4f 	vmov.f32	s1, s30
 8023604:	eeb0 0a6f 	vmov.f32	s0, s31
 8023608:	4620      	mov	r0, r4
 802360a:	f7e9 fcb9 	bl	800cf80 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802360e:	eef0 0a4c 	vmov.f32	s1, s24
 8023612:	eeb0 0a6b 	vmov.f32	s0, s23
 8023616:	4620      	mov	r0, r4
 8023618:	f7e9 fcb2 	bl	800cf80 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802361c:	b005      	add	sp, #20
 802361e:	ecbd 8b10 	vpop	{d8-d15}
 8023622:	bd30      	pop	{r4, r5, pc}
 8023624:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 80236d8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8023628:	eeb4 6ac7 	vcmpe.f32	s12, s14
 802362c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023630:	dd19      	ble.n	8023666 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 8023632:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8023636:	ee26 7a06 	vmul.f32	s14, s12, s12
 802363a:	eee5 7aa5 	vfma.f32	s15, s11, s11
 802363e:	ee67 7a85 	vmul.f32	s15, s15, s10
 8023642:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8023646:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802364a:	d822      	bhi.n	8023692 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802364c:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8023650:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8023654:	f000 f8a9 	bl	80237aa <atan2f>
 8023658:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802365c:	eeb0 8a40 	vmov.f32	s16, s0
 8023660:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8023664:	e7af      	b.n	80235c6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 8023666:	ee78 7aaa 	vadd.f32	s15, s17, s21
 802366a:	eeb0 7a49 	vmov.f32	s14, s18
 802366e:	eea7 7ae6 	vfms.f32	s14, s15, s13
 8023672:	ee79 7a8b 	vadd.f32	s15, s19, s22
 8023676:	eeb0 6a4a 	vmov.f32	s12, s20
 802367a:	eea7 6ae6 	vfms.f32	s12, s15, s13
 802367e:	ee66 7a06 	vmul.f32	s15, s12, s12
 8023682:	eee7 7a07 	vfma.f32	s15, s14, s14
 8023686:	eef4 7ac5 	vcmpe.f32	s15, s10
 802368a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802368e:	f67f af7c 	bls.w	802358a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 8023692:	3501      	adds	r5, #1
 8023694:	eef0 0a69 	vmov.f32	s1, s19
 8023698:	eeb0 0a68 	vmov.f32	s0, s17
 802369c:	4629      	mov	r1, r5
 802369e:	eef0 3a4a 	vmov.f32	s7, s20
 80236a2:	eeb0 3a49 	vmov.f32	s6, s18
 80236a6:	eef0 2a6e 	vmov.f32	s5, s29
 80236aa:	eeb0 2a4e 	vmov.f32	s4, s28
 80236ae:	eef0 1a6d 	vmov.f32	s3, s27
 80236b2:	eeb0 1a4d 	vmov.f32	s2, s26
 80236b6:	4620      	mov	r0, r4
 80236b8:	f7ff fe82 	bl	80233c0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 80236bc:	eeb0 ca6c 	vmov.f32	s24, s25
 80236c0:	eddd ba01 	vldr	s23, [sp, #4]
 80236c4:	ed9d fa02 	vldr	s30, [sp, #8]
 80236c8:	eddd fa03 	vldr	s31, [sp, #12]
 80236cc:	eef0 9a4a 	vmov.f32	s19, s20
 80236d0:	eef0 8a49 	vmov.f32	s17, s18
 80236d4:	e68a      	b.n	80233ec <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 80236d6:	bf00      	nop
 80236d8:	2edbe6ff 	.word	0x2edbe6ff
 80236dc:	40490fdb 	.word	0x40490fdb
 80236e0:	40c90fdb 	.word	0x40c90fdb
 80236e4:	3dcccccd 	.word	0x3dcccccd

080236e8 <_ZN8touchgfx6CanvasD1Ev>:
 80236e8:	b510      	push	{r4, lr}
 80236ea:	4b04      	ldr	r3, [pc, #16]	@ (80236fc <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80236ec:	4604      	mov	r4, r0
 80236ee:	f840 3b14 	str.w	r3, [r0], #20
 80236f2:	f7ea fe51 	bl	800e398 <_ZN8touchgfx7OutlineD1Ev>
 80236f6:	4620      	mov	r0, r4
 80236f8:	bd10      	pop	{r4, pc}
 80236fa:	bf00      	nop
 80236fc:	08027e24 	.word	0x08027e24

08023700 <_ZN8touchgfx6CanvasD0Ev>:
 8023700:	b510      	push	{r4, lr}
 8023702:	4604      	mov	r4, r0
 8023704:	f7ff fff0 	bl	80236e8 <_ZN8touchgfx6CanvasD1Ev>
 8023708:	4620      	mov	r0, r4
 802370a:	2174      	movs	r1, #116	@ 0x74
 802370c:	f000 f826 	bl	802375c <_ZdlPvj>
 8023710:	4620      	mov	r0, r4
 8023712:	bd10      	pop	{r4, pc}

08023714 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8023714:	b570      	push	{r4, r5, r6, lr}
 8023716:	790b      	ldrb	r3, [r1, #4]
 8023718:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 802371c:	2b00      	cmp	r3, #0
 802371e:	bf0c      	ite	eq
 8023720:	2301      	moveq	r3, #1
 8023722:	2300      	movne	r3, #0
 8023724:	4604      	mov	r4, r0
 8023726:	460e      	mov	r6, r1
 8023728:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 802372c:	d109      	bne.n	8023742 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 802372e:	b14d      	cbz	r5, 8023744 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8023730:	7933      	ldrb	r3, [r6, #4]
 8023732:	2b01      	cmp	r3, #1
 8023734:	d10c      	bne.n	8023750 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8023736:	6823      	ldr	r3, [r4, #0]
 8023738:	4620      	mov	r0, r4
 802373a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 802373c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8023740:	4718      	bx	r3
 8023742:	b12d      	cbz	r5, 8023750 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8023744:	6823      	ldr	r3, [r4, #0]
 8023746:	4620      	mov	r0, r4
 8023748:	695b      	ldr	r3, [r3, #20]
 802374a:	4798      	blx	r3
 802374c:	2d00      	cmp	r5, #0
 802374e:	d1ef      	bne.n	8023730 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8023750:	bd70      	pop	{r4, r5, r6, pc}

08023752 <__aeabi_atexit>:
 8023752:	460b      	mov	r3, r1
 8023754:	4601      	mov	r1, r0
 8023756:	4618      	mov	r0, r3
 8023758:	f001 b81e 	b.w	8024798 <__cxa_atexit>

0802375c <_ZdlPvj>:
 802375c:	f000 b812 	b.w	8023784 <_ZdlPv>

08023760 <__cxa_guard_acquire>:
 8023760:	6802      	ldr	r2, [r0, #0]
 8023762:	07d2      	lsls	r2, r2, #31
 8023764:	4603      	mov	r3, r0
 8023766:	d405      	bmi.n	8023774 <__cxa_guard_acquire+0x14>
 8023768:	7842      	ldrb	r2, [r0, #1]
 802376a:	b102      	cbz	r2, 802376e <__cxa_guard_acquire+0xe>
 802376c:	deff      	udf	#255	@ 0xff
 802376e:	2001      	movs	r0, #1
 8023770:	7058      	strb	r0, [r3, #1]
 8023772:	4770      	bx	lr
 8023774:	2000      	movs	r0, #0
 8023776:	4770      	bx	lr

08023778 <__cxa_guard_release>:
 8023778:	2301      	movs	r3, #1
 802377a:	6003      	str	r3, [r0, #0]
 802377c:	4770      	bx	lr

0802377e <__cxa_pure_virtual>:
 802377e:	b508      	push	{r3, lr}
 8023780:	f000 f80e 	bl	80237a0 <_ZSt9terminatev>

08023784 <_ZdlPv>:
 8023784:	f000 bf52 	b.w	802462c <free>

08023788 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8023788:	b508      	push	{r3, lr}
 802378a:	4780      	blx	r0
 802378c:	f000 ff1a 	bl	80245c4 <abort>

08023790 <_ZSt13get_terminatev>:
 8023790:	4b02      	ldr	r3, [pc, #8]	@ (802379c <_ZSt13get_terminatev+0xc>)
 8023792:	6818      	ldr	r0, [r3, #0]
 8023794:	f3bf 8f5b 	dmb	ish
 8023798:	4770      	bx	lr
 802379a:	bf00      	nop
 802379c:	20000108 	.word	0x20000108

080237a0 <_ZSt9terminatev>:
 80237a0:	b508      	push	{r3, lr}
 80237a2:	f7ff fff5 	bl	8023790 <_ZSt13get_terminatev>
 80237a6:	f7ff ffef 	bl	8023788 <_ZN10__cxxabiv111__terminateEPFvvE>

080237aa <atan2f>:
 80237aa:	f000 b94d 	b.w	8023a48 <__ieee754_atan2f>
	...

080237b0 <sqrtf>:
 80237b0:	b508      	push	{r3, lr}
 80237b2:	ed2d 8b02 	vpush	{d8}
 80237b6:	eeb0 8a40 	vmov.f32	s16, s0
 80237ba:	f000 f8a1 	bl	8023900 <__ieee754_sqrtf>
 80237be:	eeb4 8a48 	vcmp.f32	s16, s16
 80237c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80237c6:	d60c      	bvs.n	80237e2 <sqrtf+0x32>
 80237c8:	eddf 8a07 	vldr	s17, [pc, #28]	@ 80237e8 <sqrtf+0x38>
 80237cc:	eeb4 8ae8 	vcmpe.f32	s16, s17
 80237d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80237d4:	d505      	bpl.n	80237e2 <sqrtf+0x32>
 80237d6:	f001 f9a7 	bl	8024b28 <__errno>
 80237da:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 80237de:	2321      	movs	r3, #33	@ 0x21
 80237e0:	6003      	str	r3, [r0, #0]
 80237e2:	ecbd 8b02 	vpop	{d8}
 80237e6:	bd08      	pop	{r3, pc}
 80237e8:	00000000 	.word	0x00000000

080237ec <cosf>:
 80237ec:	ee10 3a10 	vmov	r3, s0
 80237f0:	b507      	push	{r0, r1, r2, lr}
 80237f2:	4a1e      	ldr	r2, [pc, #120]	@ (802386c <cosf+0x80>)
 80237f4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80237f8:	4293      	cmp	r3, r2
 80237fa:	d806      	bhi.n	802380a <cosf+0x1e>
 80237fc:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8023870 <cosf+0x84>
 8023800:	b003      	add	sp, #12
 8023802:	f85d eb04 	ldr.w	lr, [sp], #4
 8023806:	f000 b87f 	b.w	8023908 <__kernel_cosf>
 802380a:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802380e:	d304      	bcc.n	802381a <cosf+0x2e>
 8023810:	ee30 0a40 	vsub.f32	s0, s0, s0
 8023814:	b003      	add	sp, #12
 8023816:	f85d fb04 	ldr.w	pc, [sp], #4
 802381a:	4668      	mov	r0, sp
 802381c:	f000 f9b4 	bl	8023b88 <__ieee754_rem_pio2f>
 8023820:	f000 0003 	and.w	r0, r0, #3
 8023824:	2801      	cmp	r0, #1
 8023826:	d009      	beq.n	802383c <cosf+0x50>
 8023828:	2802      	cmp	r0, #2
 802382a:	d010      	beq.n	802384e <cosf+0x62>
 802382c:	b9b0      	cbnz	r0, 802385c <cosf+0x70>
 802382e:	eddd 0a01 	vldr	s1, [sp, #4]
 8023832:	ed9d 0a00 	vldr	s0, [sp]
 8023836:	f000 f867 	bl	8023908 <__kernel_cosf>
 802383a:	e7eb      	b.n	8023814 <cosf+0x28>
 802383c:	eddd 0a01 	vldr	s1, [sp, #4]
 8023840:	ed9d 0a00 	vldr	s0, [sp]
 8023844:	f000 f8b8 	bl	80239b8 <__kernel_sinf>
 8023848:	eeb1 0a40 	vneg.f32	s0, s0
 802384c:	e7e2      	b.n	8023814 <cosf+0x28>
 802384e:	eddd 0a01 	vldr	s1, [sp, #4]
 8023852:	ed9d 0a00 	vldr	s0, [sp]
 8023856:	f000 f857 	bl	8023908 <__kernel_cosf>
 802385a:	e7f5      	b.n	8023848 <cosf+0x5c>
 802385c:	eddd 0a01 	vldr	s1, [sp, #4]
 8023860:	ed9d 0a00 	vldr	s0, [sp]
 8023864:	2001      	movs	r0, #1
 8023866:	f000 f8a7 	bl	80239b8 <__kernel_sinf>
 802386a:	e7d3      	b.n	8023814 <cosf+0x28>
 802386c:	3f490fd8 	.word	0x3f490fd8
 8023870:	00000000 	.word	0x00000000

08023874 <sinf>:
 8023874:	ee10 3a10 	vmov	r3, s0
 8023878:	b507      	push	{r0, r1, r2, lr}
 802387a:	4a1f      	ldr	r2, [pc, #124]	@ (80238f8 <sinf+0x84>)
 802387c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8023880:	4293      	cmp	r3, r2
 8023882:	d807      	bhi.n	8023894 <sinf+0x20>
 8023884:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 80238fc <sinf+0x88>
 8023888:	2000      	movs	r0, #0
 802388a:	b003      	add	sp, #12
 802388c:	f85d eb04 	ldr.w	lr, [sp], #4
 8023890:	f000 b892 	b.w	80239b8 <__kernel_sinf>
 8023894:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8023898:	d304      	bcc.n	80238a4 <sinf+0x30>
 802389a:	ee30 0a40 	vsub.f32	s0, s0, s0
 802389e:	b003      	add	sp, #12
 80238a0:	f85d fb04 	ldr.w	pc, [sp], #4
 80238a4:	4668      	mov	r0, sp
 80238a6:	f000 f96f 	bl	8023b88 <__ieee754_rem_pio2f>
 80238aa:	f000 0003 	and.w	r0, r0, #3
 80238ae:	2801      	cmp	r0, #1
 80238b0:	d00a      	beq.n	80238c8 <sinf+0x54>
 80238b2:	2802      	cmp	r0, #2
 80238b4:	d00f      	beq.n	80238d6 <sinf+0x62>
 80238b6:	b9c0      	cbnz	r0, 80238ea <sinf+0x76>
 80238b8:	eddd 0a01 	vldr	s1, [sp, #4]
 80238bc:	ed9d 0a00 	vldr	s0, [sp]
 80238c0:	2001      	movs	r0, #1
 80238c2:	f000 f879 	bl	80239b8 <__kernel_sinf>
 80238c6:	e7ea      	b.n	802389e <sinf+0x2a>
 80238c8:	eddd 0a01 	vldr	s1, [sp, #4]
 80238cc:	ed9d 0a00 	vldr	s0, [sp]
 80238d0:	f000 f81a 	bl	8023908 <__kernel_cosf>
 80238d4:	e7e3      	b.n	802389e <sinf+0x2a>
 80238d6:	eddd 0a01 	vldr	s1, [sp, #4]
 80238da:	ed9d 0a00 	vldr	s0, [sp]
 80238de:	2001      	movs	r0, #1
 80238e0:	f000 f86a 	bl	80239b8 <__kernel_sinf>
 80238e4:	eeb1 0a40 	vneg.f32	s0, s0
 80238e8:	e7d9      	b.n	802389e <sinf+0x2a>
 80238ea:	eddd 0a01 	vldr	s1, [sp, #4]
 80238ee:	ed9d 0a00 	vldr	s0, [sp]
 80238f2:	f000 f809 	bl	8023908 <__kernel_cosf>
 80238f6:	e7f5      	b.n	80238e4 <sinf+0x70>
 80238f8:	3f490fd8 	.word	0x3f490fd8
 80238fc:	00000000 	.word	0x00000000

08023900 <__ieee754_sqrtf>:
 8023900:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8023904:	4770      	bx	lr
	...

08023908 <__kernel_cosf>:
 8023908:	ee10 3a10 	vmov	r3, s0
 802390c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8023910:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8023914:	eef0 6a40 	vmov.f32	s13, s0
 8023918:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802391c:	d204      	bcs.n	8023928 <__kernel_cosf+0x20>
 802391e:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8023922:	ee17 2a90 	vmov	r2, s15
 8023926:	b342      	cbz	r2, 802397a <__kernel_cosf+0x72>
 8023928:	ee26 7aa6 	vmul.f32	s14, s13, s13
 802392c:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8023998 <__kernel_cosf+0x90>
 8023930:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 802399c <__kernel_cosf+0x94>
 8023934:	4a1a      	ldr	r2, [pc, #104]	@ (80239a0 <__kernel_cosf+0x98>)
 8023936:	eea7 6a27 	vfma.f32	s12, s14, s15
 802393a:	4293      	cmp	r3, r2
 802393c:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80239a4 <__kernel_cosf+0x9c>
 8023940:	eee6 7a07 	vfma.f32	s15, s12, s14
 8023944:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 80239a8 <__kernel_cosf+0xa0>
 8023948:	eea7 6a87 	vfma.f32	s12, s15, s14
 802394c:	eddf 7a17 	vldr	s15, [pc, #92]	@ 80239ac <__kernel_cosf+0xa4>
 8023950:	eee6 7a07 	vfma.f32	s15, s12, s14
 8023954:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 80239b0 <__kernel_cosf+0xa8>
 8023958:	eea7 6a87 	vfma.f32	s12, s15, s14
 802395c:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8023960:	ee26 6a07 	vmul.f32	s12, s12, s14
 8023964:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8023968:	eee7 0a06 	vfma.f32	s1, s14, s12
 802396c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8023970:	d804      	bhi.n	802397c <__kernel_cosf+0x74>
 8023972:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8023976:	ee30 0a67 	vsub.f32	s0, s0, s15
 802397a:	4770      	bx	lr
 802397c:	4a0d      	ldr	r2, [pc, #52]	@ (80239b4 <__kernel_cosf+0xac>)
 802397e:	4293      	cmp	r3, r2
 8023980:	bf9a      	itte	ls
 8023982:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8023986:	ee07 3a10 	vmovls	s14, r3
 802398a:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 802398e:	ee30 0a47 	vsub.f32	s0, s0, s14
 8023992:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023996:	e7ec      	b.n	8023972 <__kernel_cosf+0x6a>
 8023998:	ad47d74e 	.word	0xad47d74e
 802399c:	310f74f6 	.word	0x310f74f6
 80239a0:	3e999999 	.word	0x3e999999
 80239a4:	b493f27c 	.word	0xb493f27c
 80239a8:	37d00d01 	.word	0x37d00d01
 80239ac:	bab60b61 	.word	0xbab60b61
 80239b0:	3d2aaaab 	.word	0x3d2aaaab
 80239b4:	3f480000 	.word	0x3f480000

080239b8 <__kernel_sinf>:
 80239b8:	ee10 3a10 	vmov	r3, s0
 80239bc:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80239c0:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80239c4:	d204      	bcs.n	80239d0 <__kernel_sinf+0x18>
 80239c6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80239ca:	ee17 3a90 	vmov	r3, s15
 80239ce:	b35b      	cbz	r3, 8023a28 <__kernel_sinf+0x70>
 80239d0:	ee20 7a00 	vmul.f32	s14, s0, s0
 80239d4:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8023a2c <__kernel_sinf+0x74>
 80239d8:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8023a30 <__kernel_sinf+0x78>
 80239dc:	eea7 6a27 	vfma.f32	s12, s14, s15
 80239e0:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8023a34 <__kernel_sinf+0x7c>
 80239e4:	eee6 7a07 	vfma.f32	s15, s12, s14
 80239e8:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 8023a38 <__kernel_sinf+0x80>
 80239ec:	eea7 6a87 	vfma.f32	s12, s15, s14
 80239f0:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8023a3c <__kernel_sinf+0x84>
 80239f4:	ee60 6a07 	vmul.f32	s13, s0, s14
 80239f8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80239fc:	b930      	cbnz	r0, 8023a0c <__kernel_sinf+0x54>
 80239fe:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8023a40 <__kernel_sinf+0x88>
 8023a02:	eea7 6a27 	vfma.f32	s12, s14, s15
 8023a06:	eea6 0a26 	vfma.f32	s0, s12, s13
 8023a0a:	4770      	bx	lr
 8023a0c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8023a10:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8023a14:	eee0 7a86 	vfma.f32	s15, s1, s12
 8023a18:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8023a1c:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8023a44 <__kernel_sinf+0x8c>
 8023a20:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8023a24:	ee30 0a60 	vsub.f32	s0, s0, s1
 8023a28:	4770      	bx	lr
 8023a2a:	bf00      	nop
 8023a2c:	2f2ec9d3 	.word	0x2f2ec9d3
 8023a30:	b2d72f34 	.word	0xb2d72f34
 8023a34:	3638ef1b 	.word	0x3638ef1b
 8023a38:	b9500d01 	.word	0xb9500d01
 8023a3c:	3c088889 	.word	0x3c088889
 8023a40:	be2aaaab 	.word	0xbe2aaaab
 8023a44:	3e2aaaab 	.word	0x3e2aaaab

08023a48 <__ieee754_atan2f>:
 8023a48:	ee10 2a90 	vmov	r2, s1
 8023a4c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8023a50:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8023a54:	b510      	push	{r4, lr}
 8023a56:	eef0 7a40 	vmov.f32	s15, s0
 8023a5a:	d806      	bhi.n	8023a6a <__ieee754_atan2f+0x22>
 8023a5c:	ee10 0a10 	vmov	r0, s0
 8023a60:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8023a64:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8023a68:	d904      	bls.n	8023a74 <__ieee754_atan2f+0x2c>
 8023a6a:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8023a6e:	eeb0 0a67 	vmov.f32	s0, s15
 8023a72:	bd10      	pop	{r4, pc}
 8023a74:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8023a78:	d103      	bne.n	8023a82 <__ieee754_atan2f+0x3a>
 8023a7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023a7e:	f000 b9b3 	b.w	8023de8 <atanf>
 8023a82:	1794      	asrs	r4, r2, #30
 8023a84:	f004 0402 	and.w	r4, r4, #2
 8023a88:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8023a8c:	b943      	cbnz	r3, 8023aa0 <__ieee754_atan2f+0x58>
 8023a8e:	2c02      	cmp	r4, #2
 8023a90:	d05e      	beq.n	8023b50 <__ieee754_atan2f+0x108>
 8023a92:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8023b64 <__ieee754_atan2f+0x11c>
 8023a96:	2c03      	cmp	r4, #3
 8023a98:	bf08      	it	eq
 8023a9a:	eef0 7a47 	vmoveq.f32	s15, s14
 8023a9e:	e7e6      	b.n	8023a6e <__ieee754_atan2f+0x26>
 8023aa0:	b941      	cbnz	r1, 8023ab4 <__ieee754_atan2f+0x6c>
 8023aa2:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8023b68 <__ieee754_atan2f+0x120>
 8023aa6:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8023b6c <__ieee754_atan2f+0x124>
 8023aaa:	2800      	cmp	r0, #0
 8023aac:	bfa8      	it	ge
 8023aae:	eef0 7a47 	vmovge.f32	s15, s14
 8023ab2:	e7dc      	b.n	8023a6e <__ieee754_atan2f+0x26>
 8023ab4:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8023ab8:	d110      	bne.n	8023adc <__ieee754_atan2f+0x94>
 8023aba:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8023abe:	f104 34ff 	add.w	r4, r4, #4294967295
 8023ac2:	d107      	bne.n	8023ad4 <__ieee754_atan2f+0x8c>
 8023ac4:	2c02      	cmp	r4, #2
 8023ac6:	d846      	bhi.n	8023b56 <__ieee754_atan2f+0x10e>
 8023ac8:	4b29      	ldr	r3, [pc, #164]	@ (8023b70 <__ieee754_atan2f+0x128>)
 8023aca:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8023ace:	edd3 7a00 	vldr	s15, [r3]
 8023ad2:	e7cc      	b.n	8023a6e <__ieee754_atan2f+0x26>
 8023ad4:	2c02      	cmp	r4, #2
 8023ad6:	d841      	bhi.n	8023b5c <__ieee754_atan2f+0x114>
 8023ad8:	4b26      	ldr	r3, [pc, #152]	@ (8023b74 <__ieee754_atan2f+0x12c>)
 8023ada:	e7f6      	b.n	8023aca <__ieee754_atan2f+0x82>
 8023adc:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8023ae0:	d0df      	beq.n	8023aa2 <__ieee754_atan2f+0x5a>
 8023ae2:	1a5b      	subs	r3, r3, r1
 8023ae4:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8023ae8:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8023aec:	da1a      	bge.n	8023b24 <__ieee754_atan2f+0xdc>
 8023aee:	2a00      	cmp	r2, #0
 8023af0:	da01      	bge.n	8023af6 <__ieee754_atan2f+0xae>
 8023af2:	313c      	adds	r1, #60	@ 0x3c
 8023af4:	db19      	blt.n	8023b2a <__ieee754_atan2f+0xe2>
 8023af6:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8023afa:	f000 fa49 	bl	8023f90 <fabsf>
 8023afe:	f000 f973 	bl	8023de8 <atanf>
 8023b02:	eef0 7a40 	vmov.f32	s15, s0
 8023b06:	2c01      	cmp	r4, #1
 8023b08:	d012      	beq.n	8023b30 <__ieee754_atan2f+0xe8>
 8023b0a:	2c02      	cmp	r4, #2
 8023b0c:	d017      	beq.n	8023b3e <__ieee754_atan2f+0xf6>
 8023b0e:	2c00      	cmp	r4, #0
 8023b10:	d0ad      	beq.n	8023a6e <__ieee754_atan2f+0x26>
 8023b12:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8023b78 <__ieee754_atan2f+0x130>
 8023b16:	ee77 7a87 	vadd.f32	s15, s15, s14
 8023b1a:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8023b7c <__ieee754_atan2f+0x134>
 8023b1e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023b22:	e7a4      	b.n	8023a6e <__ieee754_atan2f+0x26>
 8023b24:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8023b6c <__ieee754_atan2f+0x124>
 8023b28:	e7ed      	b.n	8023b06 <__ieee754_atan2f+0xbe>
 8023b2a:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8023b80 <__ieee754_atan2f+0x138>
 8023b2e:	e7ea      	b.n	8023b06 <__ieee754_atan2f+0xbe>
 8023b30:	ee17 3a90 	vmov	r3, s15
 8023b34:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8023b38:	ee07 3a90 	vmov	s15, r3
 8023b3c:	e797      	b.n	8023a6e <__ieee754_atan2f+0x26>
 8023b3e:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8023b78 <__ieee754_atan2f+0x130>
 8023b42:	ee77 7a87 	vadd.f32	s15, s15, s14
 8023b46:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8023b7c <__ieee754_atan2f+0x134>
 8023b4a:	ee77 7a67 	vsub.f32	s15, s14, s15
 8023b4e:	e78e      	b.n	8023a6e <__ieee754_atan2f+0x26>
 8023b50:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8023b7c <__ieee754_atan2f+0x134>
 8023b54:	e78b      	b.n	8023a6e <__ieee754_atan2f+0x26>
 8023b56:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8023b84 <__ieee754_atan2f+0x13c>
 8023b5a:	e788      	b.n	8023a6e <__ieee754_atan2f+0x26>
 8023b5c:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8023b80 <__ieee754_atan2f+0x138>
 8023b60:	e785      	b.n	8023a6e <__ieee754_atan2f+0x26>
 8023b62:	bf00      	nop
 8023b64:	c0490fdb 	.word	0xc0490fdb
 8023b68:	bfc90fdb 	.word	0xbfc90fdb
 8023b6c:	3fc90fdb 	.word	0x3fc90fdb
 8023b70:	08027e3c 	.word	0x08027e3c
 8023b74:	08027e30 	.word	0x08027e30
 8023b78:	33bbbd2e 	.word	0x33bbbd2e
 8023b7c:	40490fdb 	.word	0x40490fdb
 8023b80:	00000000 	.word	0x00000000
 8023b84:	3f490fdb 	.word	0x3f490fdb

08023b88 <__ieee754_rem_pio2f>:
 8023b88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023b8a:	ee10 6a10 	vmov	r6, s0
 8023b8e:	4b88      	ldr	r3, [pc, #544]	@ (8023db0 <__ieee754_rem_pio2f+0x228>)
 8023b90:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8023b94:	429d      	cmp	r5, r3
 8023b96:	b087      	sub	sp, #28
 8023b98:	4604      	mov	r4, r0
 8023b9a:	d805      	bhi.n	8023ba8 <__ieee754_rem_pio2f+0x20>
 8023b9c:	2300      	movs	r3, #0
 8023b9e:	ed80 0a00 	vstr	s0, [r0]
 8023ba2:	6043      	str	r3, [r0, #4]
 8023ba4:	2000      	movs	r0, #0
 8023ba6:	e022      	b.n	8023bee <__ieee754_rem_pio2f+0x66>
 8023ba8:	4b82      	ldr	r3, [pc, #520]	@ (8023db4 <__ieee754_rem_pio2f+0x22c>)
 8023baa:	429d      	cmp	r5, r3
 8023bac:	d83a      	bhi.n	8023c24 <__ieee754_rem_pio2f+0x9c>
 8023bae:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8023bb2:	2e00      	cmp	r6, #0
 8023bb4:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8023db8 <__ieee754_rem_pio2f+0x230>
 8023bb8:	4a80      	ldr	r2, [pc, #512]	@ (8023dbc <__ieee754_rem_pio2f+0x234>)
 8023bba:	f023 030f 	bic.w	r3, r3, #15
 8023bbe:	dd18      	ble.n	8023bf2 <__ieee754_rem_pio2f+0x6a>
 8023bc0:	4293      	cmp	r3, r2
 8023bc2:	ee70 7a47 	vsub.f32	s15, s0, s14
 8023bc6:	bf09      	itett	eq
 8023bc8:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8023dc0 <__ieee754_rem_pio2f+0x238>
 8023bcc:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 8023dc4 <__ieee754_rem_pio2f+0x23c>
 8023bd0:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8023dc8 <__ieee754_rem_pio2f+0x240>
 8023bd4:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8023bd8:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8023bdc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023be0:	ed80 7a00 	vstr	s14, [r0]
 8023be4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8023be8:	edc0 7a01 	vstr	s15, [r0, #4]
 8023bec:	2001      	movs	r0, #1
 8023bee:	b007      	add	sp, #28
 8023bf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023bf2:	4293      	cmp	r3, r2
 8023bf4:	ee70 7a07 	vadd.f32	s15, s0, s14
 8023bf8:	bf09      	itett	eq
 8023bfa:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8023dc0 <__ieee754_rem_pio2f+0x238>
 8023bfe:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 8023dc4 <__ieee754_rem_pio2f+0x23c>
 8023c02:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8023dc8 <__ieee754_rem_pio2f+0x240>
 8023c06:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8023c0a:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8023c0e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023c12:	ed80 7a00 	vstr	s14, [r0]
 8023c16:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8023c1a:	edc0 7a01 	vstr	s15, [r0, #4]
 8023c1e:	f04f 30ff 	mov.w	r0, #4294967295
 8023c22:	e7e4      	b.n	8023bee <__ieee754_rem_pio2f+0x66>
 8023c24:	4b69      	ldr	r3, [pc, #420]	@ (8023dcc <__ieee754_rem_pio2f+0x244>)
 8023c26:	429d      	cmp	r5, r3
 8023c28:	d873      	bhi.n	8023d12 <__ieee754_rem_pio2f+0x18a>
 8023c2a:	f000 f9b1 	bl	8023f90 <fabsf>
 8023c2e:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8023dd0 <__ieee754_rem_pio2f+0x248>
 8023c32:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8023c36:	eee0 7a07 	vfma.f32	s15, s0, s14
 8023c3a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8023c3e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8023c42:	ee17 0a90 	vmov	r0, s15
 8023c46:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8023db8 <__ieee754_rem_pio2f+0x230>
 8023c4a:	eea7 0a67 	vfms.f32	s0, s14, s15
 8023c4e:	281f      	cmp	r0, #31
 8023c50:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8023dc4 <__ieee754_rem_pio2f+0x23c>
 8023c54:	ee67 7a27 	vmul.f32	s15, s14, s15
 8023c58:	eeb1 6a47 	vneg.f32	s12, s14
 8023c5c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8023c60:	ee16 1a90 	vmov	r1, s13
 8023c64:	dc09      	bgt.n	8023c7a <__ieee754_rem_pio2f+0xf2>
 8023c66:	4a5b      	ldr	r2, [pc, #364]	@ (8023dd4 <__ieee754_rem_pio2f+0x24c>)
 8023c68:	1e47      	subs	r7, r0, #1
 8023c6a:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8023c6e:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8023c72:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8023c76:	4293      	cmp	r3, r2
 8023c78:	d107      	bne.n	8023c8a <__ieee754_rem_pio2f+0x102>
 8023c7a:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8023c7e:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8023c82:	2a08      	cmp	r2, #8
 8023c84:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8023c88:	dc14      	bgt.n	8023cb4 <__ieee754_rem_pio2f+0x12c>
 8023c8a:	6021      	str	r1, [r4, #0]
 8023c8c:	ed94 7a00 	vldr	s14, [r4]
 8023c90:	ee30 0a47 	vsub.f32	s0, s0, s14
 8023c94:	2e00      	cmp	r6, #0
 8023c96:	ee30 0a67 	vsub.f32	s0, s0, s15
 8023c9a:	ed84 0a01 	vstr	s0, [r4, #4]
 8023c9e:	daa6      	bge.n	8023bee <__ieee754_rem_pio2f+0x66>
 8023ca0:	eeb1 7a47 	vneg.f32	s14, s14
 8023ca4:	eeb1 0a40 	vneg.f32	s0, s0
 8023ca8:	ed84 7a00 	vstr	s14, [r4]
 8023cac:	ed84 0a01 	vstr	s0, [r4, #4]
 8023cb0:	4240      	negs	r0, r0
 8023cb2:	e79c      	b.n	8023bee <__ieee754_rem_pio2f+0x66>
 8023cb4:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8023dc0 <__ieee754_rem_pio2f+0x238>
 8023cb8:	eef0 6a40 	vmov.f32	s13, s0
 8023cbc:	eee6 6a25 	vfma.f32	s13, s12, s11
 8023cc0:	ee70 7a66 	vsub.f32	s15, s0, s13
 8023cc4:	eee6 7a25 	vfma.f32	s15, s12, s11
 8023cc8:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8023dc8 <__ieee754_rem_pio2f+0x240>
 8023ccc:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8023cd0:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8023cd4:	ee15 2a90 	vmov	r2, s11
 8023cd8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8023cdc:	1a5b      	subs	r3, r3, r1
 8023cde:	2b19      	cmp	r3, #25
 8023ce0:	dc04      	bgt.n	8023cec <__ieee754_rem_pio2f+0x164>
 8023ce2:	edc4 5a00 	vstr	s11, [r4]
 8023ce6:	eeb0 0a66 	vmov.f32	s0, s13
 8023cea:	e7cf      	b.n	8023c8c <__ieee754_rem_pio2f+0x104>
 8023cec:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8023dd8 <__ieee754_rem_pio2f+0x250>
 8023cf0:	eeb0 0a66 	vmov.f32	s0, s13
 8023cf4:	eea6 0a25 	vfma.f32	s0, s12, s11
 8023cf8:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8023cfc:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8023ddc <__ieee754_rem_pio2f+0x254>
 8023d00:	eee6 7a25 	vfma.f32	s15, s12, s11
 8023d04:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8023d08:	ee30 7a67 	vsub.f32	s14, s0, s15
 8023d0c:	ed84 7a00 	vstr	s14, [r4]
 8023d10:	e7bc      	b.n	8023c8c <__ieee754_rem_pio2f+0x104>
 8023d12:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8023d16:	d306      	bcc.n	8023d26 <__ieee754_rem_pio2f+0x19e>
 8023d18:	ee70 7a40 	vsub.f32	s15, s0, s0
 8023d1c:	edc0 7a01 	vstr	s15, [r0, #4]
 8023d20:	edc0 7a00 	vstr	s15, [r0]
 8023d24:	e73e      	b.n	8023ba4 <__ieee754_rem_pio2f+0x1c>
 8023d26:	15ea      	asrs	r2, r5, #23
 8023d28:	3a86      	subs	r2, #134	@ 0x86
 8023d2a:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8023d2e:	ee07 3a90 	vmov	s15, r3
 8023d32:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8023d36:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8023de0 <__ieee754_rem_pio2f+0x258>
 8023d3a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8023d3e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023d42:	ed8d 7a03 	vstr	s14, [sp, #12]
 8023d46:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8023d4a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8023d4e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8023d52:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023d56:	ed8d 7a04 	vstr	s14, [sp, #16]
 8023d5a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8023d5e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8023d62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023d66:	edcd 7a05 	vstr	s15, [sp, #20]
 8023d6a:	d11e      	bne.n	8023daa <__ieee754_rem_pio2f+0x222>
 8023d6c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8023d70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023d74:	bf0c      	ite	eq
 8023d76:	2301      	moveq	r3, #1
 8023d78:	2302      	movne	r3, #2
 8023d7a:	491a      	ldr	r1, [pc, #104]	@ (8023de4 <__ieee754_rem_pio2f+0x25c>)
 8023d7c:	9101      	str	r1, [sp, #4]
 8023d7e:	2102      	movs	r1, #2
 8023d80:	9100      	str	r1, [sp, #0]
 8023d82:	a803      	add	r0, sp, #12
 8023d84:	4621      	mov	r1, r4
 8023d86:	f000 f971 	bl	802406c <__kernel_rem_pio2f>
 8023d8a:	2e00      	cmp	r6, #0
 8023d8c:	f6bf af2f 	bge.w	8023bee <__ieee754_rem_pio2f+0x66>
 8023d90:	edd4 7a00 	vldr	s15, [r4]
 8023d94:	eef1 7a67 	vneg.f32	s15, s15
 8023d98:	edc4 7a00 	vstr	s15, [r4]
 8023d9c:	edd4 7a01 	vldr	s15, [r4, #4]
 8023da0:	eef1 7a67 	vneg.f32	s15, s15
 8023da4:	edc4 7a01 	vstr	s15, [r4, #4]
 8023da8:	e782      	b.n	8023cb0 <__ieee754_rem_pio2f+0x128>
 8023daa:	2303      	movs	r3, #3
 8023dac:	e7e5      	b.n	8023d7a <__ieee754_rem_pio2f+0x1f2>
 8023dae:	bf00      	nop
 8023db0:	3f490fd8 	.word	0x3f490fd8
 8023db4:	4016cbe3 	.word	0x4016cbe3
 8023db8:	3fc90f80 	.word	0x3fc90f80
 8023dbc:	3fc90fd0 	.word	0x3fc90fd0
 8023dc0:	37354400 	.word	0x37354400
 8023dc4:	37354443 	.word	0x37354443
 8023dc8:	2e85a308 	.word	0x2e85a308
 8023dcc:	43490f80 	.word	0x43490f80
 8023dd0:	3f22f984 	.word	0x3f22f984
 8023dd4:	08027e48 	.word	0x08027e48
 8023dd8:	2e85a300 	.word	0x2e85a300
 8023ddc:	248d3132 	.word	0x248d3132
 8023de0:	43800000 	.word	0x43800000
 8023de4:	08027ec8 	.word	0x08027ec8

08023de8 <atanf>:
 8023de8:	b538      	push	{r3, r4, r5, lr}
 8023dea:	ee10 5a10 	vmov	r5, s0
 8023dee:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 8023df2:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 8023df6:	eef0 7a40 	vmov.f32	s15, s0
 8023dfa:	d310      	bcc.n	8023e1e <atanf+0x36>
 8023dfc:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8023e00:	d904      	bls.n	8023e0c <atanf+0x24>
 8023e02:	ee70 7a00 	vadd.f32	s15, s0, s0
 8023e06:	eeb0 0a67 	vmov.f32	s0, s15
 8023e0a:	bd38      	pop	{r3, r4, r5, pc}
 8023e0c:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8023f44 <atanf+0x15c>
 8023e10:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 8023f48 <atanf+0x160>
 8023e14:	2d00      	cmp	r5, #0
 8023e16:	bfc8      	it	gt
 8023e18:	eef0 7a47 	vmovgt.f32	s15, s14
 8023e1c:	e7f3      	b.n	8023e06 <atanf+0x1e>
 8023e1e:	4b4b      	ldr	r3, [pc, #300]	@ (8023f4c <atanf+0x164>)
 8023e20:	429c      	cmp	r4, r3
 8023e22:	d810      	bhi.n	8023e46 <atanf+0x5e>
 8023e24:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 8023e28:	d20a      	bcs.n	8023e40 <atanf+0x58>
 8023e2a:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8023f50 <atanf+0x168>
 8023e2e:	ee30 7a07 	vadd.f32	s14, s0, s14
 8023e32:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8023e36:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8023e3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023e3e:	dce2      	bgt.n	8023e06 <atanf+0x1e>
 8023e40:	f04f 33ff 	mov.w	r3, #4294967295
 8023e44:	e013      	b.n	8023e6e <atanf+0x86>
 8023e46:	f000 f8a3 	bl	8023f90 <fabsf>
 8023e4a:	4b42      	ldr	r3, [pc, #264]	@ (8023f54 <atanf+0x16c>)
 8023e4c:	429c      	cmp	r4, r3
 8023e4e:	d84f      	bhi.n	8023ef0 <atanf+0x108>
 8023e50:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8023e54:	429c      	cmp	r4, r3
 8023e56:	d841      	bhi.n	8023edc <atanf+0xf4>
 8023e58:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 8023e5c:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8023e60:	eea0 7a27 	vfma.f32	s14, s0, s15
 8023e64:	2300      	movs	r3, #0
 8023e66:	ee30 0a27 	vadd.f32	s0, s0, s15
 8023e6a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023e6e:	1c5a      	adds	r2, r3, #1
 8023e70:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8023e74:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8023f58 <atanf+0x170>
 8023e78:	eddf 5a38 	vldr	s11, [pc, #224]	@ 8023f5c <atanf+0x174>
 8023e7c:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 8023f60 <atanf+0x178>
 8023e80:	ee66 6a06 	vmul.f32	s13, s12, s12
 8023e84:	eee6 5a87 	vfma.f32	s11, s13, s14
 8023e88:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 8023f64 <atanf+0x17c>
 8023e8c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8023e90:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8023f68 <atanf+0x180>
 8023e94:	eee7 5a26 	vfma.f32	s11, s14, s13
 8023e98:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8023f6c <atanf+0x184>
 8023e9c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8023ea0:	eddf 5a33 	vldr	s11, [pc, #204]	@ 8023f70 <atanf+0x188>
 8023ea4:	eee7 5a26 	vfma.f32	s11, s14, s13
 8023ea8:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8023f74 <atanf+0x18c>
 8023eac:	eea6 5a87 	vfma.f32	s10, s13, s14
 8023eb0:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8023f78 <atanf+0x190>
 8023eb4:	eea5 7a26 	vfma.f32	s14, s10, s13
 8023eb8:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 8023f7c <atanf+0x194>
 8023ebc:	eea7 5a26 	vfma.f32	s10, s14, s13
 8023ec0:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 8023f80 <atanf+0x198>
 8023ec4:	eea5 7a26 	vfma.f32	s14, s10, s13
 8023ec8:	ee27 7a26 	vmul.f32	s14, s14, s13
 8023ecc:	eea5 7a86 	vfma.f32	s14, s11, s12
 8023ed0:	ee27 7a87 	vmul.f32	s14, s15, s14
 8023ed4:	d121      	bne.n	8023f1a <atanf+0x132>
 8023ed6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023eda:	e794      	b.n	8023e06 <atanf+0x1e>
 8023edc:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8023ee0:	ee30 7a67 	vsub.f32	s14, s0, s15
 8023ee4:	ee30 0a27 	vadd.f32	s0, s0, s15
 8023ee8:	2301      	movs	r3, #1
 8023eea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023eee:	e7be      	b.n	8023e6e <atanf+0x86>
 8023ef0:	4b24      	ldr	r3, [pc, #144]	@ (8023f84 <atanf+0x19c>)
 8023ef2:	429c      	cmp	r4, r3
 8023ef4:	d80b      	bhi.n	8023f0e <atanf+0x126>
 8023ef6:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8023efa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023efe:	eea0 7a27 	vfma.f32	s14, s0, s15
 8023f02:	2302      	movs	r3, #2
 8023f04:	ee70 6a67 	vsub.f32	s13, s0, s15
 8023f08:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8023f0c:	e7af      	b.n	8023e6e <atanf+0x86>
 8023f0e:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8023f12:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023f16:	2303      	movs	r3, #3
 8023f18:	e7a9      	b.n	8023e6e <atanf+0x86>
 8023f1a:	4a1b      	ldr	r2, [pc, #108]	@ (8023f88 <atanf+0x1a0>)
 8023f1c:	491b      	ldr	r1, [pc, #108]	@ (8023f8c <atanf+0x1a4>)
 8023f1e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8023f22:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8023f26:	edd3 6a00 	vldr	s13, [r3]
 8023f2a:	ee37 7a66 	vsub.f32	s14, s14, s13
 8023f2e:	2d00      	cmp	r5, #0
 8023f30:	ee37 7a67 	vsub.f32	s14, s14, s15
 8023f34:	edd2 7a00 	vldr	s15, [r2]
 8023f38:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023f3c:	bfb8      	it	lt
 8023f3e:	eef1 7a67 	vneglt.f32	s15, s15
 8023f42:	e760      	b.n	8023e06 <atanf+0x1e>
 8023f44:	bfc90fdb 	.word	0xbfc90fdb
 8023f48:	3fc90fdb 	.word	0x3fc90fdb
 8023f4c:	3edfffff 	.word	0x3edfffff
 8023f50:	7149f2ca 	.word	0x7149f2ca
 8023f54:	3f97ffff 	.word	0x3f97ffff
 8023f58:	3c8569d7 	.word	0x3c8569d7
 8023f5c:	3d4bda59 	.word	0x3d4bda59
 8023f60:	bd6ef16b 	.word	0xbd6ef16b
 8023f64:	3d886b35 	.word	0x3d886b35
 8023f68:	3dba2e6e 	.word	0x3dba2e6e
 8023f6c:	3e124925 	.word	0x3e124925
 8023f70:	3eaaaaab 	.word	0x3eaaaaab
 8023f74:	bd15a221 	.word	0xbd15a221
 8023f78:	bd9d8795 	.word	0xbd9d8795
 8023f7c:	bde38e38 	.word	0xbde38e38
 8023f80:	be4ccccd 	.word	0xbe4ccccd
 8023f84:	401bffff 	.word	0x401bffff
 8023f88:	080281f0 	.word	0x080281f0
 8023f8c:	080281e0 	.word	0x080281e0

08023f90 <fabsf>:
 8023f90:	ee10 3a10 	vmov	r3, s0
 8023f94:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8023f98:	ee00 3a10 	vmov	s0, r3
 8023f9c:	4770      	bx	lr
	...

08023fa0 <scalbnf>:
 8023fa0:	ee10 3a10 	vmov	r3, s0
 8023fa4:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8023fa8:	d02b      	beq.n	8024002 <scalbnf+0x62>
 8023faa:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8023fae:	d302      	bcc.n	8023fb6 <scalbnf+0x16>
 8023fb0:	ee30 0a00 	vadd.f32	s0, s0, s0
 8023fb4:	4770      	bx	lr
 8023fb6:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8023fba:	d123      	bne.n	8024004 <scalbnf+0x64>
 8023fbc:	4b24      	ldr	r3, [pc, #144]	@ (8024050 <scalbnf+0xb0>)
 8023fbe:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8024054 <scalbnf+0xb4>
 8023fc2:	4298      	cmp	r0, r3
 8023fc4:	ee20 0a27 	vmul.f32	s0, s0, s15
 8023fc8:	db17      	blt.n	8023ffa <scalbnf+0x5a>
 8023fca:	ee10 3a10 	vmov	r3, s0
 8023fce:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8023fd2:	3a19      	subs	r2, #25
 8023fd4:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8023fd8:	4288      	cmp	r0, r1
 8023fda:	dd15      	ble.n	8024008 <scalbnf+0x68>
 8023fdc:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8024058 <scalbnf+0xb8>
 8023fe0:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 802405c <scalbnf+0xbc>
 8023fe4:	ee10 3a10 	vmov	r3, s0
 8023fe8:	eeb0 7a67 	vmov.f32	s14, s15
 8023fec:	2b00      	cmp	r3, #0
 8023fee:	bfb8      	it	lt
 8023ff0:	eef0 7a66 	vmovlt.f32	s15, s13
 8023ff4:	ee27 0a87 	vmul.f32	s0, s15, s14
 8023ff8:	4770      	bx	lr
 8023ffa:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8024060 <scalbnf+0xc0>
 8023ffe:	ee27 0a80 	vmul.f32	s0, s15, s0
 8024002:	4770      	bx	lr
 8024004:	0dd2      	lsrs	r2, r2, #23
 8024006:	e7e5      	b.n	8023fd4 <scalbnf+0x34>
 8024008:	4410      	add	r0, r2
 802400a:	28fe      	cmp	r0, #254	@ 0xfe
 802400c:	dce6      	bgt.n	8023fdc <scalbnf+0x3c>
 802400e:	2800      	cmp	r0, #0
 8024010:	dd06      	ble.n	8024020 <scalbnf+0x80>
 8024012:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8024016:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802401a:	ee00 3a10 	vmov	s0, r3
 802401e:	4770      	bx	lr
 8024020:	f110 0f16 	cmn.w	r0, #22
 8024024:	da09      	bge.n	802403a <scalbnf+0x9a>
 8024026:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8024060 <scalbnf+0xc0>
 802402a:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8024064 <scalbnf+0xc4>
 802402e:	ee10 3a10 	vmov	r3, s0
 8024032:	eeb0 7a67 	vmov.f32	s14, s15
 8024036:	2b00      	cmp	r3, #0
 8024038:	e7d9      	b.n	8023fee <scalbnf+0x4e>
 802403a:	3019      	adds	r0, #25
 802403c:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8024040:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8024044:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8024068 <scalbnf+0xc8>
 8024048:	ee07 3a90 	vmov	s15, r3
 802404c:	e7d7      	b.n	8023ffe <scalbnf+0x5e>
 802404e:	bf00      	nop
 8024050:	ffff3cb0 	.word	0xffff3cb0
 8024054:	4c000000 	.word	0x4c000000
 8024058:	7149f2ca 	.word	0x7149f2ca
 802405c:	f149f2ca 	.word	0xf149f2ca
 8024060:	0da24260 	.word	0x0da24260
 8024064:	8da24260 	.word	0x8da24260
 8024068:	33000000 	.word	0x33000000

0802406c <__kernel_rem_pio2f>:
 802406c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024070:	ed2d 8b04 	vpush	{d8-d9}
 8024074:	b0d9      	sub	sp, #356	@ 0x164
 8024076:	4690      	mov	r8, r2
 8024078:	9001      	str	r0, [sp, #4]
 802407a:	4ab6      	ldr	r2, [pc, #728]	@ (8024354 <__kernel_rem_pio2f+0x2e8>)
 802407c:	9866      	ldr	r0, [sp, #408]	@ 0x198
 802407e:	f118 0f04 	cmn.w	r8, #4
 8024082:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8024086:	460f      	mov	r7, r1
 8024088:	f103 3bff 	add.w	fp, r3, #4294967295
 802408c:	db26      	blt.n	80240dc <__kernel_rem_pio2f+0x70>
 802408e:	f1b8 0203 	subs.w	r2, r8, #3
 8024092:	bf48      	it	mi
 8024094:	f108 0204 	addmi.w	r2, r8, #4
 8024098:	10d2      	asrs	r2, r2, #3
 802409a:	1c55      	adds	r5, r2, #1
 802409c:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802409e:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8024364 <__kernel_rem_pio2f+0x2f8>
 80240a2:	00e8      	lsls	r0, r5, #3
 80240a4:	eba2 060b 	sub.w	r6, r2, fp
 80240a8:	9002      	str	r0, [sp, #8]
 80240aa:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 80240ae:	eb0a 0c0b 	add.w	ip, sl, fp
 80240b2:	ac1c      	add	r4, sp, #112	@ 0x70
 80240b4:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 80240b8:	2000      	movs	r0, #0
 80240ba:	4560      	cmp	r0, ip
 80240bc:	dd10      	ble.n	80240e0 <__kernel_rem_pio2f+0x74>
 80240be:	a91c      	add	r1, sp, #112	@ 0x70
 80240c0:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 80240c4:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 80240c8:	2600      	movs	r6, #0
 80240ca:	4556      	cmp	r6, sl
 80240cc:	dc24      	bgt.n	8024118 <__kernel_rem_pio2f+0xac>
 80240ce:	f8dd e004 	ldr.w	lr, [sp, #4]
 80240d2:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8024364 <__kernel_rem_pio2f+0x2f8>
 80240d6:	4684      	mov	ip, r0
 80240d8:	2400      	movs	r4, #0
 80240da:	e016      	b.n	802410a <__kernel_rem_pio2f+0x9e>
 80240dc:	2200      	movs	r2, #0
 80240de:	e7dc      	b.n	802409a <__kernel_rem_pio2f+0x2e>
 80240e0:	42c6      	cmn	r6, r0
 80240e2:	bf5d      	ittte	pl
 80240e4:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 80240e8:	ee07 1a90 	vmovpl	s15, r1
 80240ec:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80240f0:	eef0 7a47 	vmovmi.f32	s15, s14
 80240f4:	ece4 7a01 	vstmia	r4!, {s15}
 80240f8:	3001      	adds	r0, #1
 80240fa:	e7de      	b.n	80240ba <__kernel_rem_pio2f+0x4e>
 80240fc:	ecfe 6a01 	vldmia	lr!, {s13}
 8024100:	ed3c 7a01 	vldmdb	ip!, {s14}
 8024104:	eee6 7a87 	vfma.f32	s15, s13, s14
 8024108:	3401      	adds	r4, #1
 802410a:	455c      	cmp	r4, fp
 802410c:	ddf6      	ble.n	80240fc <__kernel_rem_pio2f+0x90>
 802410e:	ece9 7a01 	vstmia	r9!, {s15}
 8024112:	3601      	adds	r6, #1
 8024114:	3004      	adds	r0, #4
 8024116:	e7d8      	b.n	80240ca <__kernel_rem_pio2f+0x5e>
 8024118:	a908      	add	r1, sp, #32
 802411a:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802411e:	9104      	str	r1, [sp, #16]
 8024120:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8024122:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 8024360 <__kernel_rem_pio2f+0x2f4>
 8024126:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 802435c <__kernel_rem_pio2f+0x2f0>
 802412a:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 802412e:	9203      	str	r2, [sp, #12]
 8024130:	4654      	mov	r4, sl
 8024132:	00a2      	lsls	r2, r4, #2
 8024134:	9205      	str	r2, [sp, #20]
 8024136:	aa58      	add	r2, sp, #352	@ 0x160
 8024138:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 802413c:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8024140:	a944      	add	r1, sp, #272	@ 0x110
 8024142:	aa08      	add	r2, sp, #32
 8024144:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8024148:	4694      	mov	ip, r2
 802414a:	4626      	mov	r6, r4
 802414c:	2e00      	cmp	r6, #0
 802414e:	dc4c      	bgt.n	80241ea <__kernel_rem_pio2f+0x17e>
 8024150:	4628      	mov	r0, r5
 8024152:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8024156:	f7ff ff23 	bl	8023fa0 <scalbnf>
 802415a:	eeb0 8a40 	vmov.f32	s16, s0
 802415e:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 8024162:	ee28 0a00 	vmul.f32	s0, s16, s0
 8024166:	f000 f9e9 	bl	802453c <floorf>
 802416a:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 802416e:	eea0 8a67 	vfms.f32	s16, s0, s15
 8024172:	2d00      	cmp	r5, #0
 8024174:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8024178:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802417c:	ee17 9a90 	vmov	r9, s15
 8024180:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024184:	ee38 8a67 	vsub.f32	s16, s16, s15
 8024188:	dd41      	ble.n	802420e <__kernel_rem_pio2f+0x1a2>
 802418a:	f104 3cff 	add.w	ip, r4, #4294967295
 802418e:	a908      	add	r1, sp, #32
 8024190:	f1c5 0e08 	rsb	lr, r5, #8
 8024194:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8024198:	fa46 f00e 	asr.w	r0, r6, lr
 802419c:	4481      	add	r9, r0
 802419e:	fa00 f00e 	lsl.w	r0, r0, lr
 80241a2:	1a36      	subs	r6, r6, r0
 80241a4:	f1c5 0007 	rsb	r0, r5, #7
 80241a8:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 80241ac:	4106      	asrs	r6, r0
 80241ae:	2e00      	cmp	r6, #0
 80241b0:	dd3c      	ble.n	802422c <__kernel_rem_pio2f+0x1c0>
 80241b2:	f04f 0e00 	mov.w	lr, #0
 80241b6:	f109 0901 	add.w	r9, r9, #1
 80241ba:	4670      	mov	r0, lr
 80241bc:	4574      	cmp	r4, lr
 80241be:	dc68      	bgt.n	8024292 <__kernel_rem_pio2f+0x226>
 80241c0:	2d00      	cmp	r5, #0
 80241c2:	dd03      	ble.n	80241cc <__kernel_rem_pio2f+0x160>
 80241c4:	2d01      	cmp	r5, #1
 80241c6:	d074      	beq.n	80242b2 <__kernel_rem_pio2f+0x246>
 80241c8:	2d02      	cmp	r5, #2
 80241ca:	d07d      	beq.n	80242c8 <__kernel_rem_pio2f+0x25c>
 80241cc:	2e02      	cmp	r6, #2
 80241ce:	d12d      	bne.n	802422c <__kernel_rem_pio2f+0x1c0>
 80241d0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80241d4:	ee30 8a48 	vsub.f32	s16, s0, s16
 80241d8:	b340      	cbz	r0, 802422c <__kernel_rem_pio2f+0x1c0>
 80241da:	4628      	mov	r0, r5
 80241dc:	9306      	str	r3, [sp, #24]
 80241de:	f7ff fedf 	bl	8023fa0 <scalbnf>
 80241e2:	9b06      	ldr	r3, [sp, #24]
 80241e4:	ee38 8a40 	vsub.f32	s16, s16, s0
 80241e8:	e020      	b.n	802422c <__kernel_rem_pio2f+0x1c0>
 80241ea:	ee60 7a28 	vmul.f32	s15, s0, s17
 80241ee:	3e01      	subs	r6, #1
 80241f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80241f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80241f8:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80241fc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8024200:	ecac 0a01 	vstmia	ip!, {s0}
 8024204:	ed30 0a01 	vldmdb	r0!, {s0}
 8024208:	ee37 0a80 	vadd.f32	s0, s15, s0
 802420c:	e79e      	b.n	802414c <__kernel_rem_pio2f+0xe0>
 802420e:	d105      	bne.n	802421c <__kernel_rem_pio2f+0x1b0>
 8024210:	1e60      	subs	r0, r4, #1
 8024212:	a908      	add	r1, sp, #32
 8024214:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8024218:	11f6      	asrs	r6, r6, #7
 802421a:	e7c8      	b.n	80241ae <__kernel_rem_pio2f+0x142>
 802421c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8024220:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8024224:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024228:	da31      	bge.n	802428e <__kernel_rem_pio2f+0x222>
 802422a:	2600      	movs	r6, #0
 802422c:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8024230:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024234:	f040 8098 	bne.w	8024368 <__kernel_rem_pio2f+0x2fc>
 8024238:	1e60      	subs	r0, r4, #1
 802423a:	2200      	movs	r2, #0
 802423c:	4550      	cmp	r0, sl
 802423e:	da4b      	bge.n	80242d8 <__kernel_rem_pio2f+0x26c>
 8024240:	2a00      	cmp	r2, #0
 8024242:	d065      	beq.n	8024310 <__kernel_rem_pio2f+0x2a4>
 8024244:	3c01      	subs	r4, #1
 8024246:	ab08      	add	r3, sp, #32
 8024248:	3d08      	subs	r5, #8
 802424a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802424e:	2b00      	cmp	r3, #0
 8024250:	d0f8      	beq.n	8024244 <__kernel_rem_pio2f+0x1d8>
 8024252:	4628      	mov	r0, r5
 8024254:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8024258:	f7ff fea2 	bl	8023fa0 <scalbnf>
 802425c:	1c63      	adds	r3, r4, #1
 802425e:	aa44      	add	r2, sp, #272	@ 0x110
 8024260:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8024360 <__kernel_rem_pio2f+0x2f4>
 8024264:	0099      	lsls	r1, r3, #2
 8024266:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802426a:	4623      	mov	r3, r4
 802426c:	2b00      	cmp	r3, #0
 802426e:	f280 80a9 	bge.w	80243c4 <__kernel_rem_pio2f+0x358>
 8024272:	4623      	mov	r3, r4
 8024274:	2b00      	cmp	r3, #0
 8024276:	f2c0 80c7 	blt.w	8024408 <__kernel_rem_pio2f+0x39c>
 802427a:	aa44      	add	r2, sp, #272	@ 0x110
 802427c:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8024280:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8024358 <__kernel_rem_pio2f+0x2ec>
 8024284:	eddf 7a37 	vldr	s15, [pc, #220]	@ 8024364 <__kernel_rem_pio2f+0x2f8>
 8024288:	2000      	movs	r0, #0
 802428a:	1ae2      	subs	r2, r4, r3
 802428c:	e0b1      	b.n	80243f2 <__kernel_rem_pio2f+0x386>
 802428e:	2602      	movs	r6, #2
 8024290:	e78f      	b.n	80241b2 <__kernel_rem_pio2f+0x146>
 8024292:	f852 1b04 	ldr.w	r1, [r2], #4
 8024296:	b948      	cbnz	r0, 80242ac <__kernel_rem_pio2f+0x240>
 8024298:	b121      	cbz	r1, 80242a4 <__kernel_rem_pio2f+0x238>
 802429a:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802429e:	f842 1c04 	str.w	r1, [r2, #-4]
 80242a2:	2101      	movs	r1, #1
 80242a4:	f10e 0e01 	add.w	lr, lr, #1
 80242a8:	4608      	mov	r0, r1
 80242aa:	e787      	b.n	80241bc <__kernel_rem_pio2f+0x150>
 80242ac:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 80242b0:	e7f5      	b.n	802429e <__kernel_rem_pio2f+0x232>
 80242b2:	f104 3cff 	add.w	ip, r4, #4294967295
 80242b6:	aa08      	add	r2, sp, #32
 80242b8:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80242bc:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80242c0:	a908      	add	r1, sp, #32
 80242c2:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 80242c6:	e781      	b.n	80241cc <__kernel_rem_pio2f+0x160>
 80242c8:	f104 3cff 	add.w	ip, r4, #4294967295
 80242cc:	aa08      	add	r2, sp, #32
 80242ce:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80242d2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80242d6:	e7f3      	b.n	80242c0 <__kernel_rem_pio2f+0x254>
 80242d8:	a908      	add	r1, sp, #32
 80242da:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80242de:	3801      	subs	r0, #1
 80242e0:	430a      	orrs	r2, r1
 80242e2:	e7ab      	b.n	802423c <__kernel_rem_pio2f+0x1d0>
 80242e4:	3201      	adds	r2, #1
 80242e6:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 80242ea:	2e00      	cmp	r6, #0
 80242ec:	d0fa      	beq.n	80242e4 <__kernel_rem_pio2f+0x278>
 80242ee:	9905      	ldr	r1, [sp, #20]
 80242f0:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 80242f4:	eb0d 0001 	add.w	r0, sp, r1
 80242f8:	18e6      	adds	r6, r4, r3
 80242fa:	a91c      	add	r1, sp, #112	@ 0x70
 80242fc:	f104 0c01 	add.w	ip, r4, #1
 8024300:	384c      	subs	r0, #76	@ 0x4c
 8024302:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8024306:	4422      	add	r2, r4
 8024308:	4562      	cmp	r2, ip
 802430a:	da04      	bge.n	8024316 <__kernel_rem_pio2f+0x2aa>
 802430c:	4614      	mov	r4, r2
 802430e:	e710      	b.n	8024132 <__kernel_rem_pio2f+0xc6>
 8024310:	9804      	ldr	r0, [sp, #16]
 8024312:	2201      	movs	r2, #1
 8024314:	e7e7      	b.n	80242e6 <__kernel_rem_pio2f+0x27a>
 8024316:	9903      	ldr	r1, [sp, #12]
 8024318:	f8dd e004 	ldr.w	lr, [sp, #4]
 802431c:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 8024320:	9105      	str	r1, [sp, #20]
 8024322:	ee07 1a90 	vmov	s15, r1
 8024326:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802432a:	2400      	movs	r4, #0
 802432c:	ece6 7a01 	vstmia	r6!, {s15}
 8024330:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8024364 <__kernel_rem_pio2f+0x2f8>
 8024334:	46b1      	mov	r9, r6
 8024336:	455c      	cmp	r4, fp
 8024338:	dd04      	ble.n	8024344 <__kernel_rem_pio2f+0x2d8>
 802433a:	ece0 7a01 	vstmia	r0!, {s15}
 802433e:	f10c 0c01 	add.w	ip, ip, #1
 8024342:	e7e1      	b.n	8024308 <__kernel_rem_pio2f+0x29c>
 8024344:	ecfe 6a01 	vldmia	lr!, {s13}
 8024348:	ed39 7a01 	vldmdb	r9!, {s14}
 802434c:	3401      	adds	r4, #1
 802434e:	eee6 7a87 	vfma.f32	s15, s13, s14
 8024352:	e7f0      	b.n	8024336 <__kernel_rem_pio2f+0x2ca>
 8024354:	0802822c 	.word	0x0802822c
 8024358:	08028200 	.word	0x08028200
 802435c:	43800000 	.word	0x43800000
 8024360:	3b800000 	.word	0x3b800000
 8024364:	00000000 	.word	0x00000000
 8024368:	9b02      	ldr	r3, [sp, #8]
 802436a:	eeb0 0a48 	vmov.f32	s0, s16
 802436e:	eba3 0008 	sub.w	r0, r3, r8
 8024372:	f7ff fe15 	bl	8023fa0 <scalbnf>
 8024376:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 802435c <__kernel_rem_pio2f+0x2f0>
 802437a:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802437e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024382:	db19      	blt.n	80243b8 <__kernel_rem_pio2f+0x34c>
 8024384:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8024360 <__kernel_rem_pio2f+0x2f4>
 8024388:	ee60 7a27 	vmul.f32	s15, s0, s15
 802438c:	aa08      	add	r2, sp, #32
 802438e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8024392:	3508      	adds	r5, #8
 8024394:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024398:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802439c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80243a0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80243a4:	ee10 3a10 	vmov	r3, s0
 80243a8:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80243ac:	ee17 3a90 	vmov	r3, s15
 80243b0:	3401      	adds	r4, #1
 80243b2:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80243b6:	e74c      	b.n	8024252 <__kernel_rem_pio2f+0x1e6>
 80243b8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80243bc:	aa08      	add	r2, sp, #32
 80243be:	ee10 3a10 	vmov	r3, s0
 80243c2:	e7f6      	b.n	80243b2 <__kernel_rem_pio2f+0x346>
 80243c4:	a808      	add	r0, sp, #32
 80243c6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 80243ca:	9001      	str	r0, [sp, #4]
 80243cc:	ee07 0a90 	vmov	s15, r0
 80243d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80243d4:	3b01      	subs	r3, #1
 80243d6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80243da:	ee20 0a07 	vmul.f32	s0, s0, s14
 80243de:	ed62 7a01 	vstmdb	r2!, {s15}
 80243e2:	e743      	b.n	802426c <__kernel_rem_pio2f+0x200>
 80243e4:	ecfc 6a01 	vldmia	ip!, {s13}
 80243e8:	ecb5 7a01 	vldmia	r5!, {s14}
 80243ec:	eee6 7a87 	vfma.f32	s15, s13, s14
 80243f0:	3001      	adds	r0, #1
 80243f2:	4550      	cmp	r0, sl
 80243f4:	dc01      	bgt.n	80243fa <__kernel_rem_pio2f+0x38e>
 80243f6:	4290      	cmp	r0, r2
 80243f8:	ddf4      	ble.n	80243e4 <__kernel_rem_pio2f+0x378>
 80243fa:	a858      	add	r0, sp, #352	@ 0x160
 80243fc:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8024400:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 8024404:	3b01      	subs	r3, #1
 8024406:	e735      	b.n	8024274 <__kernel_rem_pio2f+0x208>
 8024408:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802440a:	2b02      	cmp	r3, #2
 802440c:	dc09      	bgt.n	8024422 <__kernel_rem_pio2f+0x3b6>
 802440e:	2b00      	cmp	r3, #0
 8024410:	dc27      	bgt.n	8024462 <__kernel_rem_pio2f+0x3f6>
 8024412:	d040      	beq.n	8024496 <__kernel_rem_pio2f+0x42a>
 8024414:	f009 0007 	and.w	r0, r9, #7
 8024418:	b059      	add	sp, #356	@ 0x164
 802441a:	ecbd 8b04 	vpop	{d8-d9}
 802441e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024422:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8024424:	2b03      	cmp	r3, #3
 8024426:	d1f5      	bne.n	8024414 <__kernel_rem_pio2f+0x3a8>
 8024428:	aa30      	add	r2, sp, #192	@ 0xc0
 802442a:	1f0b      	subs	r3, r1, #4
 802442c:	4413      	add	r3, r2
 802442e:	461a      	mov	r2, r3
 8024430:	4620      	mov	r0, r4
 8024432:	2800      	cmp	r0, #0
 8024434:	dc50      	bgt.n	80244d8 <__kernel_rem_pio2f+0x46c>
 8024436:	4622      	mov	r2, r4
 8024438:	2a01      	cmp	r2, #1
 802443a:	dc5d      	bgt.n	80244f8 <__kernel_rem_pio2f+0x48c>
 802443c:	ab30      	add	r3, sp, #192	@ 0xc0
 802443e:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 8024364 <__kernel_rem_pio2f+0x2f8>
 8024442:	440b      	add	r3, r1
 8024444:	2c01      	cmp	r4, #1
 8024446:	dc67      	bgt.n	8024518 <__kernel_rem_pio2f+0x4ac>
 8024448:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 802444c:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8024450:	2e00      	cmp	r6, #0
 8024452:	d167      	bne.n	8024524 <__kernel_rem_pio2f+0x4b8>
 8024454:	edc7 6a00 	vstr	s13, [r7]
 8024458:	ed87 7a01 	vstr	s14, [r7, #4]
 802445c:	edc7 7a02 	vstr	s15, [r7, #8]
 8024460:	e7d8      	b.n	8024414 <__kernel_rem_pio2f+0x3a8>
 8024462:	ab30      	add	r3, sp, #192	@ 0xc0
 8024464:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 8024364 <__kernel_rem_pio2f+0x2f8>
 8024468:	440b      	add	r3, r1
 802446a:	4622      	mov	r2, r4
 802446c:	2a00      	cmp	r2, #0
 802446e:	da24      	bge.n	80244ba <__kernel_rem_pio2f+0x44e>
 8024470:	b34e      	cbz	r6, 80244c6 <__kernel_rem_pio2f+0x45a>
 8024472:	eef1 7a47 	vneg.f32	s15, s14
 8024476:	edc7 7a00 	vstr	s15, [r7]
 802447a:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 802447e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024482:	aa31      	add	r2, sp, #196	@ 0xc4
 8024484:	2301      	movs	r3, #1
 8024486:	429c      	cmp	r4, r3
 8024488:	da20      	bge.n	80244cc <__kernel_rem_pio2f+0x460>
 802448a:	b10e      	cbz	r6, 8024490 <__kernel_rem_pio2f+0x424>
 802448c:	eef1 7a67 	vneg.f32	s15, s15
 8024490:	edc7 7a01 	vstr	s15, [r7, #4]
 8024494:	e7be      	b.n	8024414 <__kernel_rem_pio2f+0x3a8>
 8024496:	ab30      	add	r3, sp, #192	@ 0xc0
 8024498:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 8024364 <__kernel_rem_pio2f+0x2f8>
 802449c:	440b      	add	r3, r1
 802449e:	2c00      	cmp	r4, #0
 80244a0:	da05      	bge.n	80244ae <__kernel_rem_pio2f+0x442>
 80244a2:	b10e      	cbz	r6, 80244a8 <__kernel_rem_pio2f+0x43c>
 80244a4:	eef1 7a67 	vneg.f32	s15, s15
 80244a8:	edc7 7a00 	vstr	s15, [r7]
 80244ac:	e7b2      	b.n	8024414 <__kernel_rem_pio2f+0x3a8>
 80244ae:	ed33 7a01 	vldmdb	r3!, {s14}
 80244b2:	3c01      	subs	r4, #1
 80244b4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80244b8:	e7f1      	b.n	802449e <__kernel_rem_pio2f+0x432>
 80244ba:	ed73 7a01 	vldmdb	r3!, {s15}
 80244be:	3a01      	subs	r2, #1
 80244c0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80244c4:	e7d2      	b.n	802446c <__kernel_rem_pio2f+0x400>
 80244c6:	eef0 7a47 	vmov.f32	s15, s14
 80244ca:	e7d4      	b.n	8024476 <__kernel_rem_pio2f+0x40a>
 80244cc:	ecb2 7a01 	vldmia	r2!, {s14}
 80244d0:	3301      	adds	r3, #1
 80244d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80244d6:	e7d6      	b.n	8024486 <__kernel_rem_pio2f+0x41a>
 80244d8:	ed72 7a01 	vldmdb	r2!, {s15}
 80244dc:	edd2 6a01 	vldr	s13, [r2, #4]
 80244e0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80244e4:	3801      	subs	r0, #1
 80244e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80244ea:	ed82 7a00 	vstr	s14, [r2]
 80244ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80244f2:	edc2 7a01 	vstr	s15, [r2, #4]
 80244f6:	e79c      	b.n	8024432 <__kernel_rem_pio2f+0x3c6>
 80244f8:	ed73 7a01 	vldmdb	r3!, {s15}
 80244fc:	edd3 6a01 	vldr	s13, [r3, #4]
 8024500:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8024504:	3a01      	subs	r2, #1
 8024506:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802450a:	ed83 7a00 	vstr	s14, [r3]
 802450e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8024512:	edc3 7a01 	vstr	s15, [r3, #4]
 8024516:	e78f      	b.n	8024438 <__kernel_rem_pio2f+0x3cc>
 8024518:	ed33 7a01 	vldmdb	r3!, {s14}
 802451c:	3c01      	subs	r4, #1
 802451e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8024522:	e78f      	b.n	8024444 <__kernel_rem_pio2f+0x3d8>
 8024524:	eef1 6a66 	vneg.f32	s13, s13
 8024528:	eeb1 7a47 	vneg.f32	s14, s14
 802452c:	edc7 6a00 	vstr	s13, [r7]
 8024530:	ed87 7a01 	vstr	s14, [r7, #4]
 8024534:	eef1 7a67 	vneg.f32	s15, s15
 8024538:	e790      	b.n	802445c <__kernel_rem_pio2f+0x3f0>
 802453a:	bf00      	nop

0802453c <floorf>:
 802453c:	ee10 3a10 	vmov	r3, s0
 8024540:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8024544:	3a7f      	subs	r2, #127	@ 0x7f
 8024546:	2a16      	cmp	r2, #22
 8024548:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802454c:	dc2b      	bgt.n	80245a6 <floorf+0x6a>
 802454e:	2a00      	cmp	r2, #0
 8024550:	da12      	bge.n	8024578 <floorf+0x3c>
 8024552:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80245b8 <floorf+0x7c>
 8024556:	ee30 0a27 	vadd.f32	s0, s0, s15
 802455a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802455e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024562:	dd06      	ble.n	8024572 <floorf+0x36>
 8024564:	2b00      	cmp	r3, #0
 8024566:	da24      	bge.n	80245b2 <floorf+0x76>
 8024568:	2900      	cmp	r1, #0
 802456a:	4b14      	ldr	r3, [pc, #80]	@ (80245bc <floorf+0x80>)
 802456c:	bf08      	it	eq
 802456e:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 8024572:	ee00 3a10 	vmov	s0, r3
 8024576:	4770      	bx	lr
 8024578:	4911      	ldr	r1, [pc, #68]	@ (80245c0 <floorf+0x84>)
 802457a:	4111      	asrs	r1, r2
 802457c:	420b      	tst	r3, r1
 802457e:	d0fa      	beq.n	8024576 <floorf+0x3a>
 8024580:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 80245b8 <floorf+0x7c>
 8024584:	ee30 0a27 	vadd.f32	s0, s0, s15
 8024588:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802458c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024590:	ddef      	ble.n	8024572 <floorf+0x36>
 8024592:	2b00      	cmp	r3, #0
 8024594:	bfbe      	ittt	lt
 8024596:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 802459a:	fa40 f202 	asrlt.w	r2, r0, r2
 802459e:	189b      	addlt	r3, r3, r2
 80245a0:	ea23 0301 	bic.w	r3, r3, r1
 80245a4:	e7e5      	b.n	8024572 <floorf+0x36>
 80245a6:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 80245aa:	d3e4      	bcc.n	8024576 <floorf+0x3a>
 80245ac:	ee30 0a00 	vadd.f32	s0, s0, s0
 80245b0:	4770      	bx	lr
 80245b2:	2300      	movs	r3, #0
 80245b4:	e7dd      	b.n	8024572 <floorf+0x36>
 80245b6:	bf00      	nop
 80245b8:	7149f2ca 	.word	0x7149f2ca
 80245bc:	bf800000 	.word	0xbf800000
 80245c0:	007fffff 	.word	0x007fffff

080245c4 <abort>:
 80245c4:	b508      	push	{r3, lr}
 80245c6:	2006      	movs	r0, #6
 80245c8:	f000 fa3c 	bl	8024a44 <raise>
 80245cc:	2001      	movs	r0, #1
 80245ce:	f7dd fba1 	bl	8001d14 <_exit>
	...

080245d4 <__assert_func>:
 80245d4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80245d6:	4614      	mov	r4, r2
 80245d8:	461a      	mov	r2, r3
 80245da:	4b09      	ldr	r3, [pc, #36]	@ (8024600 <__assert_func+0x2c>)
 80245dc:	681b      	ldr	r3, [r3, #0]
 80245de:	4605      	mov	r5, r0
 80245e0:	68d8      	ldr	r0, [r3, #12]
 80245e2:	b14c      	cbz	r4, 80245f8 <__assert_func+0x24>
 80245e4:	4b07      	ldr	r3, [pc, #28]	@ (8024604 <__assert_func+0x30>)
 80245e6:	9100      	str	r1, [sp, #0]
 80245e8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80245ec:	4906      	ldr	r1, [pc, #24]	@ (8024608 <__assert_func+0x34>)
 80245ee:	462b      	mov	r3, r5
 80245f0:	f000 f984 	bl	80248fc <fiprintf>
 80245f4:	f7ff ffe6 	bl	80245c4 <abort>
 80245f8:	4b04      	ldr	r3, [pc, #16]	@ (802460c <__assert_func+0x38>)
 80245fa:	461c      	mov	r4, r3
 80245fc:	e7f3      	b.n	80245e6 <__assert_func+0x12>
 80245fe:	bf00      	nop
 8024600:	20000118 	.word	0x20000118
 8024604:	08026727 	.word	0x08026727
 8024608:	08026734 	.word	0x08026734
 802460c:	08026762 	.word	0x08026762

08024610 <atexit>:
 8024610:	2300      	movs	r3, #0
 8024612:	4601      	mov	r1, r0
 8024614:	461a      	mov	r2, r3
 8024616:	4618      	mov	r0, r3
 8024618:	f000 bac2 	b.w	8024ba0 <__register_exitproc>

0802461c <malloc>:
 802461c:	4b02      	ldr	r3, [pc, #8]	@ (8024628 <malloc+0xc>)
 802461e:	4601      	mov	r1, r0
 8024620:	6818      	ldr	r0, [r3, #0]
 8024622:	f000 b82d 	b.w	8024680 <_malloc_r>
 8024626:	bf00      	nop
 8024628:	20000118 	.word	0x20000118

0802462c <free>:
 802462c:	4b02      	ldr	r3, [pc, #8]	@ (8024638 <free+0xc>)
 802462e:	4601      	mov	r1, r0
 8024630:	6818      	ldr	r0, [r3, #0]
 8024632:	f000 bb11 	b.w	8024c58 <_free_r>
 8024636:	bf00      	nop
 8024638:	20000118 	.word	0x20000118

0802463c <sbrk_aligned>:
 802463c:	b570      	push	{r4, r5, r6, lr}
 802463e:	4e0f      	ldr	r6, [pc, #60]	@ (802467c <sbrk_aligned+0x40>)
 8024640:	460c      	mov	r4, r1
 8024642:	6831      	ldr	r1, [r6, #0]
 8024644:	4605      	mov	r5, r0
 8024646:	b911      	cbnz	r1, 802464e <sbrk_aligned+0x12>
 8024648:	f000 fa4c 	bl	8024ae4 <_sbrk_r>
 802464c:	6030      	str	r0, [r6, #0]
 802464e:	4621      	mov	r1, r4
 8024650:	4628      	mov	r0, r5
 8024652:	f000 fa47 	bl	8024ae4 <_sbrk_r>
 8024656:	1c43      	adds	r3, r0, #1
 8024658:	d103      	bne.n	8024662 <sbrk_aligned+0x26>
 802465a:	f04f 34ff 	mov.w	r4, #4294967295
 802465e:	4620      	mov	r0, r4
 8024660:	bd70      	pop	{r4, r5, r6, pc}
 8024662:	1cc4      	adds	r4, r0, #3
 8024664:	f024 0403 	bic.w	r4, r4, #3
 8024668:	42a0      	cmp	r0, r4
 802466a:	d0f8      	beq.n	802465e <sbrk_aligned+0x22>
 802466c:	1a21      	subs	r1, r4, r0
 802466e:	4628      	mov	r0, r5
 8024670:	f000 fa38 	bl	8024ae4 <_sbrk_r>
 8024674:	3001      	adds	r0, #1
 8024676:	d1f2      	bne.n	802465e <sbrk_aligned+0x22>
 8024678:	e7ef      	b.n	802465a <sbrk_aligned+0x1e>
 802467a:	bf00      	nop
 802467c:	2001621c 	.word	0x2001621c

08024680 <_malloc_r>:
 8024680:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024684:	1ccd      	adds	r5, r1, #3
 8024686:	f025 0503 	bic.w	r5, r5, #3
 802468a:	3508      	adds	r5, #8
 802468c:	2d0c      	cmp	r5, #12
 802468e:	bf38      	it	cc
 8024690:	250c      	movcc	r5, #12
 8024692:	2d00      	cmp	r5, #0
 8024694:	4606      	mov	r6, r0
 8024696:	db01      	blt.n	802469c <_malloc_r+0x1c>
 8024698:	42a9      	cmp	r1, r5
 802469a:	d904      	bls.n	80246a6 <_malloc_r+0x26>
 802469c:	230c      	movs	r3, #12
 802469e:	6033      	str	r3, [r6, #0]
 80246a0:	2000      	movs	r0, #0
 80246a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80246a6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 802477c <_malloc_r+0xfc>
 80246aa:	f000 f869 	bl	8024780 <__malloc_lock>
 80246ae:	f8d8 3000 	ldr.w	r3, [r8]
 80246b2:	461c      	mov	r4, r3
 80246b4:	bb44      	cbnz	r4, 8024708 <_malloc_r+0x88>
 80246b6:	4629      	mov	r1, r5
 80246b8:	4630      	mov	r0, r6
 80246ba:	f7ff ffbf 	bl	802463c <sbrk_aligned>
 80246be:	1c43      	adds	r3, r0, #1
 80246c0:	4604      	mov	r4, r0
 80246c2:	d158      	bne.n	8024776 <_malloc_r+0xf6>
 80246c4:	f8d8 4000 	ldr.w	r4, [r8]
 80246c8:	4627      	mov	r7, r4
 80246ca:	2f00      	cmp	r7, #0
 80246cc:	d143      	bne.n	8024756 <_malloc_r+0xd6>
 80246ce:	2c00      	cmp	r4, #0
 80246d0:	d04b      	beq.n	802476a <_malloc_r+0xea>
 80246d2:	6823      	ldr	r3, [r4, #0]
 80246d4:	4639      	mov	r1, r7
 80246d6:	4630      	mov	r0, r6
 80246d8:	eb04 0903 	add.w	r9, r4, r3
 80246dc:	f000 fa02 	bl	8024ae4 <_sbrk_r>
 80246e0:	4581      	cmp	r9, r0
 80246e2:	d142      	bne.n	802476a <_malloc_r+0xea>
 80246e4:	6821      	ldr	r1, [r4, #0]
 80246e6:	1a6d      	subs	r5, r5, r1
 80246e8:	4629      	mov	r1, r5
 80246ea:	4630      	mov	r0, r6
 80246ec:	f7ff ffa6 	bl	802463c <sbrk_aligned>
 80246f0:	3001      	adds	r0, #1
 80246f2:	d03a      	beq.n	802476a <_malloc_r+0xea>
 80246f4:	6823      	ldr	r3, [r4, #0]
 80246f6:	442b      	add	r3, r5
 80246f8:	6023      	str	r3, [r4, #0]
 80246fa:	f8d8 3000 	ldr.w	r3, [r8]
 80246fe:	685a      	ldr	r2, [r3, #4]
 8024700:	bb62      	cbnz	r2, 802475c <_malloc_r+0xdc>
 8024702:	f8c8 7000 	str.w	r7, [r8]
 8024706:	e00f      	b.n	8024728 <_malloc_r+0xa8>
 8024708:	6822      	ldr	r2, [r4, #0]
 802470a:	1b52      	subs	r2, r2, r5
 802470c:	d420      	bmi.n	8024750 <_malloc_r+0xd0>
 802470e:	2a0b      	cmp	r2, #11
 8024710:	d917      	bls.n	8024742 <_malloc_r+0xc2>
 8024712:	1961      	adds	r1, r4, r5
 8024714:	42a3      	cmp	r3, r4
 8024716:	6025      	str	r5, [r4, #0]
 8024718:	bf18      	it	ne
 802471a:	6059      	strne	r1, [r3, #4]
 802471c:	6863      	ldr	r3, [r4, #4]
 802471e:	bf08      	it	eq
 8024720:	f8c8 1000 	streq.w	r1, [r8]
 8024724:	5162      	str	r2, [r4, r5]
 8024726:	604b      	str	r3, [r1, #4]
 8024728:	4630      	mov	r0, r6
 802472a:	f000 f82f 	bl	802478c <__malloc_unlock>
 802472e:	f104 000b 	add.w	r0, r4, #11
 8024732:	1d23      	adds	r3, r4, #4
 8024734:	f020 0007 	bic.w	r0, r0, #7
 8024738:	1ac2      	subs	r2, r0, r3
 802473a:	bf1c      	itt	ne
 802473c:	1a1b      	subne	r3, r3, r0
 802473e:	50a3      	strne	r3, [r4, r2]
 8024740:	e7af      	b.n	80246a2 <_malloc_r+0x22>
 8024742:	6862      	ldr	r2, [r4, #4]
 8024744:	42a3      	cmp	r3, r4
 8024746:	bf0c      	ite	eq
 8024748:	f8c8 2000 	streq.w	r2, [r8]
 802474c:	605a      	strne	r2, [r3, #4]
 802474e:	e7eb      	b.n	8024728 <_malloc_r+0xa8>
 8024750:	4623      	mov	r3, r4
 8024752:	6864      	ldr	r4, [r4, #4]
 8024754:	e7ae      	b.n	80246b4 <_malloc_r+0x34>
 8024756:	463c      	mov	r4, r7
 8024758:	687f      	ldr	r7, [r7, #4]
 802475a:	e7b6      	b.n	80246ca <_malloc_r+0x4a>
 802475c:	461a      	mov	r2, r3
 802475e:	685b      	ldr	r3, [r3, #4]
 8024760:	42a3      	cmp	r3, r4
 8024762:	d1fb      	bne.n	802475c <_malloc_r+0xdc>
 8024764:	2300      	movs	r3, #0
 8024766:	6053      	str	r3, [r2, #4]
 8024768:	e7de      	b.n	8024728 <_malloc_r+0xa8>
 802476a:	230c      	movs	r3, #12
 802476c:	6033      	str	r3, [r6, #0]
 802476e:	4630      	mov	r0, r6
 8024770:	f000 f80c 	bl	802478c <__malloc_unlock>
 8024774:	e794      	b.n	80246a0 <_malloc_r+0x20>
 8024776:	6005      	str	r5, [r0, #0]
 8024778:	e7d6      	b.n	8024728 <_malloc_r+0xa8>
 802477a:	bf00      	nop
 802477c:	20016220 	.word	0x20016220

08024780 <__malloc_lock>:
 8024780:	4801      	ldr	r0, [pc, #4]	@ (8024788 <__malloc_lock+0x8>)
 8024782:	f000 b9fc 	b.w	8024b7e <__retarget_lock_acquire_recursive>
 8024786:	bf00      	nop
 8024788:	20016364 	.word	0x20016364

0802478c <__malloc_unlock>:
 802478c:	4801      	ldr	r0, [pc, #4]	@ (8024794 <__malloc_unlock+0x8>)
 802478e:	f000 b9f7 	b.w	8024b80 <__retarget_lock_release_recursive>
 8024792:	bf00      	nop
 8024794:	20016364 	.word	0x20016364

08024798 <__cxa_atexit>:
 8024798:	b510      	push	{r4, lr}
 802479a:	4604      	mov	r4, r0
 802479c:	4804      	ldr	r0, [pc, #16]	@ (80247b0 <__cxa_atexit+0x18>)
 802479e:	4613      	mov	r3, r2
 80247a0:	b120      	cbz	r0, 80247ac <__cxa_atexit+0x14>
 80247a2:	460a      	mov	r2, r1
 80247a4:	2002      	movs	r0, #2
 80247a6:	4621      	mov	r1, r4
 80247a8:	f000 f9fa 	bl	8024ba0 <__register_exitproc>
 80247ac:	bd10      	pop	{r4, pc}
 80247ae:	bf00      	nop
 80247b0:	08024ba1 	.word	0x08024ba1

080247b4 <std>:
 80247b4:	2300      	movs	r3, #0
 80247b6:	b510      	push	{r4, lr}
 80247b8:	4604      	mov	r4, r0
 80247ba:	e9c0 3300 	strd	r3, r3, [r0]
 80247be:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80247c2:	6083      	str	r3, [r0, #8]
 80247c4:	8181      	strh	r1, [r0, #12]
 80247c6:	6643      	str	r3, [r0, #100]	@ 0x64
 80247c8:	81c2      	strh	r2, [r0, #14]
 80247ca:	6183      	str	r3, [r0, #24]
 80247cc:	4619      	mov	r1, r3
 80247ce:	2208      	movs	r2, #8
 80247d0:	305c      	adds	r0, #92	@ 0x5c
 80247d2:	f000 f906 	bl	80249e2 <memset>
 80247d6:	4b0d      	ldr	r3, [pc, #52]	@ (802480c <std+0x58>)
 80247d8:	6263      	str	r3, [r4, #36]	@ 0x24
 80247da:	4b0d      	ldr	r3, [pc, #52]	@ (8024810 <std+0x5c>)
 80247dc:	62a3      	str	r3, [r4, #40]	@ 0x28
 80247de:	4b0d      	ldr	r3, [pc, #52]	@ (8024814 <std+0x60>)
 80247e0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80247e2:	4b0d      	ldr	r3, [pc, #52]	@ (8024818 <std+0x64>)
 80247e4:	6323      	str	r3, [r4, #48]	@ 0x30
 80247e6:	4b0d      	ldr	r3, [pc, #52]	@ (802481c <std+0x68>)
 80247e8:	6224      	str	r4, [r4, #32]
 80247ea:	429c      	cmp	r4, r3
 80247ec:	d006      	beq.n	80247fc <std+0x48>
 80247ee:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80247f2:	4294      	cmp	r4, r2
 80247f4:	d002      	beq.n	80247fc <std+0x48>
 80247f6:	33d0      	adds	r3, #208	@ 0xd0
 80247f8:	429c      	cmp	r4, r3
 80247fa:	d105      	bne.n	8024808 <std+0x54>
 80247fc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8024800:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024804:	f000 b9ba 	b.w	8024b7c <__retarget_lock_init_recursive>
 8024808:	bd10      	pop	{r4, pc}
 802480a:	bf00      	nop
 802480c:	0802495d 	.word	0x0802495d
 8024810:	0802497f 	.word	0x0802497f
 8024814:	080249b7 	.word	0x080249b7
 8024818:	080249db 	.word	0x080249db
 802481c:	20016224 	.word	0x20016224

08024820 <stdio_exit_handler>:
 8024820:	4a02      	ldr	r2, [pc, #8]	@ (802482c <stdio_exit_handler+0xc>)
 8024822:	4903      	ldr	r1, [pc, #12]	@ (8024830 <stdio_exit_handler+0x10>)
 8024824:	4803      	ldr	r0, [pc, #12]	@ (8024834 <stdio_exit_handler+0x14>)
 8024826:	f000 b87b 	b.w	8024920 <_fwalk_sglue>
 802482a:	bf00      	nop
 802482c:	2000010c 	.word	0x2000010c
 8024830:	08025391 	.word	0x08025391
 8024834:	2000011c 	.word	0x2000011c

08024838 <cleanup_stdio>:
 8024838:	6841      	ldr	r1, [r0, #4]
 802483a:	4b0c      	ldr	r3, [pc, #48]	@ (802486c <cleanup_stdio+0x34>)
 802483c:	4299      	cmp	r1, r3
 802483e:	b510      	push	{r4, lr}
 8024840:	4604      	mov	r4, r0
 8024842:	d001      	beq.n	8024848 <cleanup_stdio+0x10>
 8024844:	f000 fda4 	bl	8025390 <_fflush_r>
 8024848:	68a1      	ldr	r1, [r4, #8]
 802484a:	4b09      	ldr	r3, [pc, #36]	@ (8024870 <cleanup_stdio+0x38>)
 802484c:	4299      	cmp	r1, r3
 802484e:	d002      	beq.n	8024856 <cleanup_stdio+0x1e>
 8024850:	4620      	mov	r0, r4
 8024852:	f000 fd9d 	bl	8025390 <_fflush_r>
 8024856:	68e1      	ldr	r1, [r4, #12]
 8024858:	4b06      	ldr	r3, [pc, #24]	@ (8024874 <cleanup_stdio+0x3c>)
 802485a:	4299      	cmp	r1, r3
 802485c:	d004      	beq.n	8024868 <cleanup_stdio+0x30>
 802485e:	4620      	mov	r0, r4
 8024860:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024864:	f000 bd94 	b.w	8025390 <_fflush_r>
 8024868:	bd10      	pop	{r4, pc}
 802486a:	bf00      	nop
 802486c:	20016224 	.word	0x20016224
 8024870:	2001628c 	.word	0x2001628c
 8024874:	200162f4 	.word	0x200162f4

08024878 <global_stdio_init.part.0>:
 8024878:	b510      	push	{r4, lr}
 802487a:	4b0b      	ldr	r3, [pc, #44]	@ (80248a8 <global_stdio_init.part.0+0x30>)
 802487c:	4c0b      	ldr	r4, [pc, #44]	@ (80248ac <global_stdio_init.part.0+0x34>)
 802487e:	4a0c      	ldr	r2, [pc, #48]	@ (80248b0 <global_stdio_init.part.0+0x38>)
 8024880:	601a      	str	r2, [r3, #0]
 8024882:	4620      	mov	r0, r4
 8024884:	2200      	movs	r2, #0
 8024886:	2104      	movs	r1, #4
 8024888:	f7ff ff94 	bl	80247b4 <std>
 802488c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8024890:	2201      	movs	r2, #1
 8024892:	2109      	movs	r1, #9
 8024894:	f7ff ff8e 	bl	80247b4 <std>
 8024898:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 802489c:	2202      	movs	r2, #2
 802489e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80248a2:	2112      	movs	r1, #18
 80248a4:	f7ff bf86 	b.w	80247b4 <std>
 80248a8:	2001635c 	.word	0x2001635c
 80248ac:	20016224 	.word	0x20016224
 80248b0:	08024821 	.word	0x08024821

080248b4 <__sfp_lock_acquire>:
 80248b4:	4801      	ldr	r0, [pc, #4]	@ (80248bc <__sfp_lock_acquire+0x8>)
 80248b6:	f000 b962 	b.w	8024b7e <__retarget_lock_acquire_recursive>
 80248ba:	bf00      	nop
 80248bc:	20016366 	.word	0x20016366

080248c0 <__sfp_lock_release>:
 80248c0:	4801      	ldr	r0, [pc, #4]	@ (80248c8 <__sfp_lock_release+0x8>)
 80248c2:	f000 b95d 	b.w	8024b80 <__retarget_lock_release_recursive>
 80248c6:	bf00      	nop
 80248c8:	20016366 	.word	0x20016366

080248cc <__sinit>:
 80248cc:	b510      	push	{r4, lr}
 80248ce:	4604      	mov	r4, r0
 80248d0:	f7ff fff0 	bl	80248b4 <__sfp_lock_acquire>
 80248d4:	6a23      	ldr	r3, [r4, #32]
 80248d6:	b11b      	cbz	r3, 80248e0 <__sinit+0x14>
 80248d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80248dc:	f7ff bff0 	b.w	80248c0 <__sfp_lock_release>
 80248e0:	4b04      	ldr	r3, [pc, #16]	@ (80248f4 <__sinit+0x28>)
 80248e2:	6223      	str	r3, [r4, #32]
 80248e4:	4b04      	ldr	r3, [pc, #16]	@ (80248f8 <__sinit+0x2c>)
 80248e6:	681b      	ldr	r3, [r3, #0]
 80248e8:	2b00      	cmp	r3, #0
 80248ea:	d1f5      	bne.n	80248d8 <__sinit+0xc>
 80248ec:	f7ff ffc4 	bl	8024878 <global_stdio_init.part.0>
 80248f0:	e7f2      	b.n	80248d8 <__sinit+0xc>
 80248f2:	bf00      	nop
 80248f4:	08024839 	.word	0x08024839
 80248f8:	2001635c 	.word	0x2001635c

080248fc <fiprintf>:
 80248fc:	b40e      	push	{r1, r2, r3}
 80248fe:	b503      	push	{r0, r1, lr}
 8024900:	4601      	mov	r1, r0
 8024902:	ab03      	add	r3, sp, #12
 8024904:	4805      	ldr	r0, [pc, #20]	@ (802491c <fiprintf+0x20>)
 8024906:	f853 2b04 	ldr.w	r2, [r3], #4
 802490a:	6800      	ldr	r0, [r0, #0]
 802490c:	9301      	str	r3, [sp, #4]
 802490e:	f000 fa17 	bl	8024d40 <_vfiprintf_r>
 8024912:	b002      	add	sp, #8
 8024914:	f85d eb04 	ldr.w	lr, [sp], #4
 8024918:	b003      	add	sp, #12
 802491a:	4770      	bx	lr
 802491c:	20000118 	.word	0x20000118

08024920 <_fwalk_sglue>:
 8024920:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024924:	4607      	mov	r7, r0
 8024926:	4688      	mov	r8, r1
 8024928:	4614      	mov	r4, r2
 802492a:	2600      	movs	r6, #0
 802492c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8024930:	f1b9 0901 	subs.w	r9, r9, #1
 8024934:	d505      	bpl.n	8024942 <_fwalk_sglue+0x22>
 8024936:	6824      	ldr	r4, [r4, #0]
 8024938:	2c00      	cmp	r4, #0
 802493a:	d1f7      	bne.n	802492c <_fwalk_sglue+0xc>
 802493c:	4630      	mov	r0, r6
 802493e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8024942:	89ab      	ldrh	r3, [r5, #12]
 8024944:	2b01      	cmp	r3, #1
 8024946:	d907      	bls.n	8024958 <_fwalk_sglue+0x38>
 8024948:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802494c:	3301      	adds	r3, #1
 802494e:	d003      	beq.n	8024958 <_fwalk_sglue+0x38>
 8024950:	4629      	mov	r1, r5
 8024952:	4638      	mov	r0, r7
 8024954:	47c0      	blx	r8
 8024956:	4306      	orrs	r6, r0
 8024958:	3568      	adds	r5, #104	@ 0x68
 802495a:	e7e9      	b.n	8024930 <_fwalk_sglue+0x10>

0802495c <__sread>:
 802495c:	b510      	push	{r4, lr}
 802495e:	460c      	mov	r4, r1
 8024960:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8024964:	f000 f898 	bl	8024a98 <_read_r>
 8024968:	2800      	cmp	r0, #0
 802496a:	bfab      	itete	ge
 802496c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802496e:	89a3      	ldrhlt	r3, [r4, #12]
 8024970:	181b      	addge	r3, r3, r0
 8024972:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8024976:	bfac      	ite	ge
 8024978:	6563      	strge	r3, [r4, #84]	@ 0x54
 802497a:	81a3      	strhlt	r3, [r4, #12]
 802497c:	bd10      	pop	{r4, pc}

0802497e <__swrite>:
 802497e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024982:	461f      	mov	r7, r3
 8024984:	898b      	ldrh	r3, [r1, #12]
 8024986:	05db      	lsls	r3, r3, #23
 8024988:	4605      	mov	r5, r0
 802498a:	460c      	mov	r4, r1
 802498c:	4616      	mov	r6, r2
 802498e:	d505      	bpl.n	802499c <__swrite+0x1e>
 8024990:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8024994:	2302      	movs	r3, #2
 8024996:	2200      	movs	r2, #0
 8024998:	f000 f86c 	bl	8024a74 <_lseek_r>
 802499c:	89a3      	ldrh	r3, [r4, #12]
 802499e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80249a2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80249a6:	81a3      	strh	r3, [r4, #12]
 80249a8:	4632      	mov	r2, r6
 80249aa:	463b      	mov	r3, r7
 80249ac:	4628      	mov	r0, r5
 80249ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80249b2:	f000 b8a7 	b.w	8024b04 <_write_r>

080249b6 <__sseek>:
 80249b6:	b510      	push	{r4, lr}
 80249b8:	460c      	mov	r4, r1
 80249ba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80249be:	f000 f859 	bl	8024a74 <_lseek_r>
 80249c2:	1c43      	adds	r3, r0, #1
 80249c4:	89a3      	ldrh	r3, [r4, #12]
 80249c6:	bf15      	itete	ne
 80249c8:	6560      	strne	r0, [r4, #84]	@ 0x54
 80249ca:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80249ce:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80249d2:	81a3      	strheq	r3, [r4, #12]
 80249d4:	bf18      	it	ne
 80249d6:	81a3      	strhne	r3, [r4, #12]
 80249d8:	bd10      	pop	{r4, pc}

080249da <__sclose>:
 80249da:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80249de:	f000 b839 	b.w	8024a54 <_close_r>

080249e2 <memset>:
 80249e2:	4402      	add	r2, r0
 80249e4:	4603      	mov	r3, r0
 80249e6:	4293      	cmp	r3, r2
 80249e8:	d100      	bne.n	80249ec <memset+0xa>
 80249ea:	4770      	bx	lr
 80249ec:	f803 1b01 	strb.w	r1, [r3], #1
 80249f0:	e7f9      	b.n	80249e6 <memset+0x4>

080249f2 <_raise_r>:
 80249f2:	291f      	cmp	r1, #31
 80249f4:	b538      	push	{r3, r4, r5, lr}
 80249f6:	4605      	mov	r5, r0
 80249f8:	460c      	mov	r4, r1
 80249fa:	d904      	bls.n	8024a06 <_raise_r+0x14>
 80249fc:	2316      	movs	r3, #22
 80249fe:	6003      	str	r3, [r0, #0]
 8024a00:	f04f 30ff 	mov.w	r0, #4294967295
 8024a04:	bd38      	pop	{r3, r4, r5, pc}
 8024a06:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8024a08:	b112      	cbz	r2, 8024a10 <_raise_r+0x1e>
 8024a0a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8024a0e:	b94b      	cbnz	r3, 8024a24 <_raise_r+0x32>
 8024a10:	4628      	mov	r0, r5
 8024a12:	f000 f865 	bl	8024ae0 <_getpid_r>
 8024a16:	4622      	mov	r2, r4
 8024a18:	4601      	mov	r1, r0
 8024a1a:	4628      	mov	r0, r5
 8024a1c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8024a20:	f000 b84c 	b.w	8024abc <_kill_r>
 8024a24:	2b01      	cmp	r3, #1
 8024a26:	d00a      	beq.n	8024a3e <_raise_r+0x4c>
 8024a28:	1c59      	adds	r1, r3, #1
 8024a2a:	d103      	bne.n	8024a34 <_raise_r+0x42>
 8024a2c:	2316      	movs	r3, #22
 8024a2e:	6003      	str	r3, [r0, #0]
 8024a30:	2001      	movs	r0, #1
 8024a32:	e7e7      	b.n	8024a04 <_raise_r+0x12>
 8024a34:	2100      	movs	r1, #0
 8024a36:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8024a3a:	4620      	mov	r0, r4
 8024a3c:	4798      	blx	r3
 8024a3e:	2000      	movs	r0, #0
 8024a40:	e7e0      	b.n	8024a04 <_raise_r+0x12>
	...

08024a44 <raise>:
 8024a44:	4b02      	ldr	r3, [pc, #8]	@ (8024a50 <raise+0xc>)
 8024a46:	4601      	mov	r1, r0
 8024a48:	6818      	ldr	r0, [r3, #0]
 8024a4a:	f7ff bfd2 	b.w	80249f2 <_raise_r>
 8024a4e:	bf00      	nop
 8024a50:	20000118 	.word	0x20000118

08024a54 <_close_r>:
 8024a54:	b538      	push	{r3, r4, r5, lr}
 8024a56:	4d06      	ldr	r5, [pc, #24]	@ (8024a70 <_close_r+0x1c>)
 8024a58:	2300      	movs	r3, #0
 8024a5a:	4604      	mov	r4, r0
 8024a5c:	4608      	mov	r0, r1
 8024a5e:	602b      	str	r3, [r5, #0]
 8024a60:	f7dd f97a 	bl	8001d58 <_close>
 8024a64:	1c43      	adds	r3, r0, #1
 8024a66:	d102      	bne.n	8024a6e <_close_r+0x1a>
 8024a68:	682b      	ldr	r3, [r5, #0]
 8024a6a:	b103      	cbz	r3, 8024a6e <_close_r+0x1a>
 8024a6c:	6023      	str	r3, [r4, #0]
 8024a6e:	bd38      	pop	{r3, r4, r5, pc}
 8024a70:	20016360 	.word	0x20016360

08024a74 <_lseek_r>:
 8024a74:	b538      	push	{r3, r4, r5, lr}
 8024a76:	4d07      	ldr	r5, [pc, #28]	@ (8024a94 <_lseek_r+0x20>)
 8024a78:	4604      	mov	r4, r0
 8024a7a:	4608      	mov	r0, r1
 8024a7c:	4611      	mov	r1, r2
 8024a7e:	2200      	movs	r2, #0
 8024a80:	602a      	str	r2, [r5, #0]
 8024a82:	461a      	mov	r2, r3
 8024a84:	f7dd f972 	bl	8001d6c <_lseek>
 8024a88:	1c43      	adds	r3, r0, #1
 8024a8a:	d102      	bne.n	8024a92 <_lseek_r+0x1e>
 8024a8c:	682b      	ldr	r3, [r5, #0]
 8024a8e:	b103      	cbz	r3, 8024a92 <_lseek_r+0x1e>
 8024a90:	6023      	str	r3, [r4, #0]
 8024a92:	bd38      	pop	{r3, r4, r5, pc}
 8024a94:	20016360 	.word	0x20016360

08024a98 <_read_r>:
 8024a98:	b538      	push	{r3, r4, r5, lr}
 8024a9a:	4d07      	ldr	r5, [pc, #28]	@ (8024ab8 <_read_r+0x20>)
 8024a9c:	4604      	mov	r4, r0
 8024a9e:	4608      	mov	r0, r1
 8024aa0:	4611      	mov	r1, r2
 8024aa2:	2200      	movs	r2, #0
 8024aa4:	602a      	str	r2, [r5, #0]
 8024aa6:	461a      	mov	r2, r3
 8024aa8:	f7dd f93a 	bl	8001d20 <_read>
 8024aac:	1c43      	adds	r3, r0, #1
 8024aae:	d102      	bne.n	8024ab6 <_read_r+0x1e>
 8024ab0:	682b      	ldr	r3, [r5, #0]
 8024ab2:	b103      	cbz	r3, 8024ab6 <_read_r+0x1e>
 8024ab4:	6023      	str	r3, [r4, #0]
 8024ab6:	bd38      	pop	{r3, r4, r5, pc}
 8024ab8:	20016360 	.word	0x20016360

08024abc <_kill_r>:
 8024abc:	b538      	push	{r3, r4, r5, lr}
 8024abe:	4d07      	ldr	r5, [pc, #28]	@ (8024adc <_kill_r+0x20>)
 8024ac0:	2300      	movs	r3, #0
 8024ac2:	4604      	mov	r4, r0
 8024ac4:	4608      	mov	r0, r1
 8024ac6:	4611      	mov	r1, r2
 8024ac8:	602b      	str	r3, [r5, #0]
 8024aca:	f7dd f91b 	bl	8001d04 <_kill>
 8024ace:	1c43      	adds	r3, r0, #1
 8024ad0:	d102      	bne.n	8024ad8 <_kill_r+0x1c>
 8024ad2:	682b      	ldr	r3, [r5, #0]
 8024ad4:	b103      	cbz	r3, 8024ad8 <_kill_r+0x1c>
 8024ad6:	6023      	str	r3, [r4, #0]
 8024ad8:	bd38      	pop	{r3, r4, r5, pc}
 8024ada:	bf00      	nop
 8024adc:	20016360 	.word	0x20016360

08024ae0 <_getpid_r>:
 8024ae0:	f7dd b90e 	b.w	8001d00 <_getpid>

08024ae4 <_sbrk_r>:
 8024ae4:	b538      	push	{r3, r4, r5, lr}
 8024ae6:	4d06      	ldr	r5, [pc, #24]	@ (8024b00 <_sbrk_r+0x1c>)
 8024ae8:	2300      	movs	r3, #0
 8024aea:	4604      	mov	r4, r0
 8024aec:	4608      	mov	r0, r1
 8024aee:	602b      	str	r3, [r5, #0]
 8024af0:	f7dd f93e 	bl	8001d70 <_sbrk>
 8024af4:	1c43      	adds	r3, r0, #1
 8024af6:	d102      	bne.n	8024afe <_sbrk_r+0x1a>
 8024af8:	682b      	ldr	r3, [r5, #0]
 8024afa:	b103      	cbz	r3, 8024afe <_sbrk_r+0x1a>
 8024afc:	6023      	str	r3, [r4, #0]
 8024afe:	bd38      	pop	{r3, r4, r5, pc}
 8024b00:	20016360 	.word	0x20016360

08024b04 <_write_r>:
 8024b04:	b538      	push	{r3, r4, r5, lr}
 8024b06:	4d07      	ldr	r5, [pc, #28]	@ (8024b24 <_write_r+0x20>)
 8024b08:	4604      	mov	r4, r0
 8024b0a:	4608      	mov	r0, r1
 8024b0c:	4611      	mov	r1, r2
 8024b0e:	2200      	movs	r2, #0
 8024b10:	602a      	str	r2, [r5, #0]
 8024b12:	461a      	mov	r2, r3
 8024b14:	f7dd f912 	bl	8001d3c <_write>
 8024b18:	1c43      	adds	r3, r0, #1
 8024b1a:	d102      	bne.n	8024b22 <_write_r+0x1e>
 8024b1c:	682b      	ldr	r3, [r5, #0]
 8024b1e:	b103      	cbz	r3, 8024b22 <_write_r+0x1e>
 8024b20:	6023      	str	r3, [r4, #0]
 8024b22:	bd38      	pop	{r3, r4, r5, pc}
 8024b24:	20016360 	.word	0x20016360

08024b28 <__errno>:
 8024b28:	4b01      	ldr	r3, [pc, #4]	@ (8024b30 <__errno+0x8>)
 8024b2a:	6818      	ldr	r0, [r3, #0]
 8024b2c:	4770      	bx	lr
 8024b2e:	bf00      	nop
 8024b30:	20000118 	.word	0x20000118

08024b34 <__libc_init_array>:
 8024b34:	b570      	push	{r4, r5, r6, lr}
 8024b36:	4d0d      	ldr	r5, [pc, #52]	@ (8024b6c <__libc_init_array+0x38>)
 8024b38:	4c0d      	ldr	r4, [pc, #52]	@ (8024b70 <__libc_init_array+0x3c>)
 8024b3a:	1b64      	subs	r4, r4, r5
 8024b3c:	10a4      	asrs	r4, r4, #2
 8024b3e:	2600      	movs	r6, #0
 8024b40:	42a6      	cmp	r6, r4
 8024b42:	d109      	bne.n	8024b58 <__libc_init_array+0x24>
 8024b44:	4d0b      	ldr	r5, [pc, #44]	@ (8024b74 <__libc_init_array+0x40>)
 8024b46:	4c0c      	ldr	r4, [pc, #48]	@ (8024b78 <__libc_init_array+0x44>)
 8024b48:	f000 fd62 	bl	8025610 <_init>
 8024b4c:	1b64      	subs	r4, r4, r5
 8024b4e:	10a4      	asrs	r4, r4, #2
 8024b50:	2600      	movs	r6, #0
 8024b52:	42a6      	cmp	r6, r4
 8024b54:	d105      	bne.n	8024b62 <__libc_init_array+0x2e>
 8024b56:	bd70      	pop	{r4, r5, r6, pc}
 8024b58:	f855 3b04 	ldr.w	r3, [r5], #4
 8024b5c:	4798      	blx	r3
 8024b5e:	3601      	adds	r6, #1
 8024b60:	e7ee      	b.n	8024b40 <__libc_init_array+0xc>
 8024b62:	f855 3b04 	ldr.w	r3, [r5], #4
 8024b66:	4798      	blx	r3
 8024b68:	3601      	adds	r6, #1
 8024b6a:	e7f2      	b.n	8024b52 <__libc_init_array+0x1e>
 8024b6c:	0811fb50 	.word	0x0811fb50
 8024b70:	0811fb50 	.word	0x0811fb50
 8024b74:	0811fb50 	.word	0x0811fb50
 8024b78:	0811fb64 	.word	0x0811fb64

08024b7c <__retarget_lock_init_recursive>:
 8024b7c:	4770      	bx	lr

08024b7e <__retarget_lock_acquire_recursive>:
 8024b7e:	4770      	bx	lr

08024b80 <__retarget_lock_release_recursive>:
 8024b80:	4770      	bx	lr

08024b82 <memcpy>:
 8024b82:	440a      	add	r2, r1
 8024b84:	4291      	cmp	r1, r2
 8024b86:	f100 33ff 	add.w	r3, r0, #4294967295
 8024b8a:	d100      	bne.n	8024b8e <memcpy+0xc>
 8024b8c:	4770      	bx	lr
 8024b8e:	b510      	push	{r4, lr}
 8024b90:	f811 4b01 	ldrb.w	r4, [r1], #1
 8024b94:	f803 4f01 	strb.w	r4, [r3, #1]!
 8024b98:	4291      	cmp	r1, r2
 8024b9a:	d1f9      	bne.n	8024b90 <memcpy+0xe>
 8024b9c:	bd10      	pop	{r4, pc}
	...

08024ba0 <__register_exitproc>:
 8024ba0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024ba4:	4d27      	ldr	r5, [pc, #156]	@ (8024c44 <__register_exitproc+0xa4>)
 8024ba6:	4607      	mov	r7, r0
 8024ba8:	6828      	ldr	r0, [r5, #0]
 8024baa:	4691      	mov	r9, r2
 8024bac:	460e      	mov	r6, r1
 8024bae:	4698      	mov	r8, r3
 8024bb0:	f7ff ffe5 	bl	8024b7e <__retarget_lock_acquire_recursive>
 8024bb4:	4a24      	ldr	r2, [pc, #144]	@ (8024c48 <__register_exitproc+0xa8>)
 8024bb6:	6814      	ldr	r4, [r2, #0]
 8024bb8:	b93c      	cbnz	r4, 8024bca <__register_exitproc+0x2a>
 8024bba:	4b24      	ldr	r3, [pc, #144]	@ (8024c4c <__register_exitproc+0xac>)
 8024bbc:	6013      	str	r3, [r2, #0]
 8024bbe:	4a24      	ldr	r2, [pc, #144]	@ (8024c50 <__register_exitproc+0xb0>)
 8024bc0:	b112      	cbz	r2, 8024bc8 <__register_exitproc+0x28>
 8024bc2:	6812      	ldr	r2, [r2, #0]
 8024bc4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8024bc8:	4c20      	ldr	r4, [pc, #128]	@ (8024c4c <__register_exitproc+0xac>)
 8024bca:	6863      	ldr	r3, [r4, #4]
 8024bcc:	2b1f      	cmp	r3, #31
 8024bce:	dd06      	ble.n	8024bde <__register_exitproc+0x3e>
 8024bd0:	6828      	ldr	r0, [r5, #0]
 8024bd2:	f7ff ffd5 	bl	8024b80 <__retarget_lock_release_recursive>
 8024bd6:	f04f 30ff 	mov.w	r0, #4294967295
 8024bda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8024bde:	b32f      	cbz	r7, 8024c2c <__register_exitproc+0x8c>
 8024be0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8024be4:	b968      	cbnz	r0, 8024c02 <__register_exitproc+0x62>
 8024be6:	4b1b      	ldr	r3, [pc, #108]	@ (8024c54 <__register_exitproc+0xb4>)
 8024be8:	2b00      	cmp	r3, #0
 8024bea:	d0f1      	beq.n	8024bd0 <__register_exitproc+0x30>
 8024bec:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8024bf0:	f7ff fd14 	bl	802461c <malloc>
 8024bf4:	2800      	cmp	r0, #0
 8024bf6:	d0eb      	beq.n	8024bd0 <__register_exitproc+0x30>
 8024bf8:	2300      	movs	r3, #0
 8024bfa:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8024bfe:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8024c02:	6863      	ldr	r3, [r4, #4]
 8024c04:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8024c08:	2201      	movs	r2, #1
 8024c0a:	409a      	lsls	r2, r3
 8024c0c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8024c10:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8024c14:	4313      	orrs	r3, r2
 8024c16:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8024c1a:	2f02      	cmp	r7, #2
 8024c1c:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8024c20:	bf02      	ittt	eq
 8024c22:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8024c26:	4313      	orreq	r3, r2
 8024c28:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8024c2c:	6863      	ldr	r3, [r4, #4]
 8024c2e:	6828      	ldr	r0, [r5, #0]
 8024c30:	1c5a      	adds	r2, r3, #1
 8024c32:	3302      	adds	r3, #2
 8024c34:	6062      	str	r2, [r4, #4]
 8024c36:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8024c3a:	f7ff ffa1 	bl	8024b80 <__retarget_lock_release_recursive>
 8024c3e:	2000      	movs	r0, #0
 8024c40:	e7cb      	b.n	8024bda <__register_exitproc+0x3a>
 8024c42:	bf00      	nop
 8024c44:	20000168 	.word	0x20000168
 8024c48:	200163f4 	.word	0x200163f4
 8024c4c:	20016368 	.word	0x20016368
 8024c50:	08028238 	.word	0x08028238
 8024c54:	0802461d 	.word	0x0802461d

08024c58 <_free_r>:
 8024c58:	b538      	push	{r3, r4, r5, lr}
 8024c5a:	4605      	mov	r5, r0
 8024c5c:	2900      	cmp	r1, #0
 8024c5e:	d041      	beq.n	8024ce4 <_free_r+0x8c>
 8024c60:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8024c64:	1f0c      	subs	r4, r1, #4
 8024c66:	2b00      	cmp	r3, #0
 8024c68:	bfb8      	it	lt
 8024c6a:	18e4      	addlt	r4, r4, r3
 8024c6c:	f7ff fd88 	bl	8024780 <__malloc_lock>
 8024c70:	4a1d      	ldr	r2, [pc, #116]	@ (8024ce8 <_free_r+0x90>)
 8024c72:	6813      	ldr	r3, [r2, #0]
 8024c74:	b933      	cbnz	r3, 8024c84 <_free_r+0x2c>
 8024c76:	6063      	str	r3, [r4, #4]
 8024c78:	6014      	str	r4, [r2, #0]
 8024c7a:	4628      	mov	r0, r5
 8024c7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8024c80:	f7ff bd84 	b.w	802478c <__malloc_unlock>
 8024c84:	42a3      	cmp	r3, r4
 8024c86:	d908      	bls.n	8024c9a <_free_r+0x42>
 8024c88:	6820      	ldr	r0, [r4, #0]
 8024c8a:	1821      	adds	r1, r4, r0
 8024c8c:	428b      	cmp	r3, r1
 8024c8e:	bf01      	itttt	eq
 8024c90:	6819      	ldreq	r1, [r3, #0]
 8024c92:	685b      	ldreq	r3, [r3, #4]
 8024c94:	1809      	addeq	r1, r1, r0
 8024c96:	6021      	streq	r1, [r4, #0]
 8024c98:	e7ed      	b.n	8024c76 <_free_r+0x1e>
 8024c9a:	461a      	mov	r2, r3
 8024c9c:	685b      	ldr	r3, [r3, #4]
 8024c9e:	b10b      	cbz	r3, 8024ca4 <_free_r+0x4c>
 8024ca0:	42a3      	cmp	r3, r4
 8024ca2:	d9fa      	bls.n	8024c9a <_free_r+0x42>
 8024ca4:	6811      	ldr	r1, [r2, #0]
 8024ca6:	1850      	adds	r0, r2, r1
 8024ca8:	42a0      	cmp	r0, r4
 8024caa:	d10b      	bne.n	8024cc4 <_free_r+0x6c>
 8024cac:	6820      	ldr	r0, [r4, #0]
 8024cae:	4401      	add	r1, r0
 8024cb0:	1850      	adds	r0, r2, r1
 8024cb2:	4283      	cmp	r3, r0
 8024cb4:	6011      	str	r1, [r2, #0]
 8024cb6:	d1e0      	bne.n	8024c7a <_free_r+0x22>
 8024cb8:	6818      	ldr	r0, [r3, #0]
 8024cba:	685b      	ldr	r3, [r3, #4]
 8024cbc:	6053      	str	r3, [r2, #4]
 8024cbe:	4408      	add	r0, r1
 8024cc0:	6010      	str	r0, [r2, #0]
 8024cc2:	e7da      	b.n	8024c7a <_free_r+0x22>
 8024cc4:	d902      	bls.n	8024ccc <_free_r+0x74>
 8024cc6:	230c      	movs	r3, #12
 8024cc8:	602b      	str	r3, [r5, #0]
 8024cca:	e7d6      	b.n	8024c7a <_free_r+0x22>
 8024ccc:	6820      	ldr	r0, [r4, #0]
 8024cce:	1821      	adds	r1, r4, r0
 8024cd0:	428b      	cmp	r3, r1
 8024cd2:	bf04      	itt	eq
 8024cd4:	6819      	ldreq	r1, [r3, #0]
 8024cd6:	685b      	ldreq	r3, [r3, #4]
 8024cd8:	6063      	str	r3, [r4, #4]
 8024cda:	bf04      	itt	eq
 8024cdc:	1809      	addeq	r1, r1, r0
 8024cde:	6021      	streq	r1, [r4, #0]
 8024ce0:	6054      	str	r4, [r2, #4]
 8024ce2:	e7ca      	b.n	8024c7a <_free_r+0x22>
 8024ce4:	bd38      	pop	{r3, r4, r5, pc}
 8024ce6:	bf00      	nop
 8024ce8:	20016220 	.word	0x20016220

08024cec <__sfputc_r>:
 8024cec:	6893      	ldr	r3, [r2, #8]
 8024cee:	3b01      	subs	r3, #1
 8024cf0:	2b00      	cmp	r3, #0
 8024cf2:	b410      	push	{r4}
 8024cf4:	6093      	str	r3, [r2, #8]
 8024cf6:	da08      	bge.n	8024d0a <__sfputc_r+0x1e>
 8024cf8:	6994      	ldr	r4, [r2, #24]
 8024cfa:	42a3      	cmp	r3, r4
 8024cfc:	db01      	blt.n	8024d02 <__sfputc_r+0x16>
 8024cfe:	290a      	cmp	r1, #10
 8024d00:	d103      	bne.n	8024d0a <__sfputc_r+0x1e>
 8024d02:	f85d 4b04 	ldr.w	r4, [sp], #4
 8024d06:	f000 bb6b 	b.w	80253e0 <__swbuf_r>
 8024d0a:	6813      	ldr	r3, [r2, #0]
 8024d0c:	1c58      	adds	r0, r3, #1
 8024d0e:	6010      	str	r0, [r2, #0]
 8024d10:	7019      	strb	r1, [r3, #0]
 8024d12:	4608      	mov	r0, r1
 8024d14:	f85d 4b04 	ldr.w	r4, [sp], #4
 8024d18:	4770      	bx	lr

08024d1a <__sfputs_r>:
 8024d1a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024d1c:	4606      	mov	r6, r0
 8024d1e:	460f      	mov	r7, r1
 8024d20:	4614      	mov	r4, r2
 8024d22:	18d5      	adds	r5, r2, r3
 8024d24:	42ac      	cmp	r4, r5
 8024d26:	d101      	bne.n	8024d2c <__sfputs_r+0x12>
 8024d28:	2000      	movs	r0, #0
 8024d2a:	e007      	b.n	8024d3c <__sfputs_r+0x22>
 8024d2c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8024d30:	463a      	mov	r2, r7
 8024d32:	4630      	mov	r0, r6
 8024d34:	f7ff ffda 	bl	8024cec <__sfputc_r>
 8024d38:	1c43      	adds	r3, r0, #1
 8024d3a:	d1f3      	bne.n	8024d24 <__sfputs_r+0xa>
 8024d3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08024d40 <_vfiprintf_r>:
 8024d40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024d44:	460d      	mov	r5, r1
 8024d46:	b09d      	sub	sp, #116	@ 0x74
 8024d48:	4614      	mov	r4, r2
 8024d4a:	4698      	mov	r8, r3
 8024d4c:	4606      	mov	r6, r0
 8024d4e:	b118      	cbz	r0, 8024d58 <_vfiprintf_r+0x18>
 8024d50:	6a03      	ldr	r3, [r0, #32]
 8024d52:	b90b      	cbnz	r3, 8024d58 <_vfiprintf_r+0x18>
 8024d54:	f7ff fdba 	bl	80248cc <__sinit>
 8024d58:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8024d5a:	07d9      	lsls	r1, r3, #31
 8024d5c:	d405      	bmi.n	8024d6a <_vfiprintf_r+0x2a>
 8024d5e:	89ab      	ldrh	r3, [r5, #12]
 8024d60:	059a      	lsls	r2, r3, #22
 8024d62:	d402      	bmi.n	8024d6a <_vfiprintf_r+0x2a>
 8024d64:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8024d66:	f7ff ff0a 	bl	8024b7e <__retarget_lock_acquire_recursive>
 8024d6a:	89ab      	ldrh	r3, [r5, #12]
 8024d6c:	071b      	lsls	r3, r3, #28
 8024d6e:	d501      	bpl.n	8024d74 <_vfiprintf_r+0x34>
 8024d70:	692b      	ldr	r3, [r5, #16]
 8024d72:	b99b      	cbnz	r3, 8024d9c <_vfiprintf_r+0x5c>
 8024d74:	4629      	mov	r1, r5
 8024d76:	4630      	mov	r0, r6
 8024d78:	f000 fb70 	bl	802545c <__swsetup_r>
 8024d7c:	b170      	cbz	r0, 8024d9c <_vfiprintf_r+0x5c>
 8024d7e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8024d80:	07dc      	lsls	r4, r3, #31
 8024d82:	d504      	bpl.n	8024d8e <_vfiprintf_r+0x4e>
 8024d84:	f04f 30ff 	mov.w	r0, #4294967295
 8024d88:	b01d      	add	sp, #116	@ 0x74
 8024d8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024d8e:	89ab      	ldrh	r3, [r5, #12]
 8024d90:	0598      	lsls	r0, r3, #22
 8024d92:	d4f7      	bmi.n	8024d84 <_vfiprintf_r+0x44>
 8024d94:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8024d96:	f7ff fef3 	bl	8024b80 <__retarget_lock_release_recursive>
 8024d9a:	e7f3      	b.n	8024d84 <_vfiprintf_r+0x44>
 8024d9c:	2300      	movs	r3, #0
 8024d9e:	9309      	str	r3, [sp, #36]	@ 0x24
 8024da0:	2320      	movs	r3, #32
 8024da2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8024da6:	f8cd 800c 	str.w	r8, [sp, #12]
 8024daa:	2330      	movs	r3, #48	@ 0x30
 8024dac:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8024f5c <_vfiprintf_r+0x21c>
 8024db0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8024db4:	f04f 0901 	mov.w	r9, #1
 8024db8:	4623      	mov	r3, r4
 8024dba:	469a      	mov	sl, r3
 8024dbc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8024dc0:	b10a      	cbz	r2, 8024dc6 <_vfiprintf_r+0x86>
 8024dc2:	2a25      	cmp	r2, #37	@ 0x25
 8024dc4:	d1f9      	bne.n	8024dba <_vfiprintf_r+0x7a>
 8024dc6:	ebba 0b04 	subs.w	fp, sl, r4
 8024dca:	d00b      	beq.n	8024de4 <_vfiprintf_r+0xa4>
 8024dcc:	465b      	mov	r3, fp
 8024dce:	4622      	mov	r2, r4
 8024dd0:	4629      	mov	r1, r5
 8024dd2:	4630      	mov	r0, r6
 8024dd4:	f7ff ffa1 	bl	8024d1a <__sfputs_r>
 8024dd8:	3001      	adds	r0, #1
 8024dda:	f000 80a7 	beq.w	8024f2c <_vfiprintf_r+0x1ec>
 8024dde:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8024de0:	445a      	add	r2, fp
 8024de2:	9209      	str	r2, [sp, #36]	@ 0x24
 8024de4:	f89a 3000 	ldrb.w	r3, [sl]
 8024de8:	2b00      	cmp	r3, #0
 8024dea:	f000 809f 	beq.w	8024f2c <_vfiprintf_r+0x1ec>
 8024dee:	2300      	movs	r3, #0
 8024df0:	f04f 32ff 	mov.w	r2, #4294967295
 8024df4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8024df8:	f10a 0a01 	add.w	sl, sl, #1
 8024dfc:	9304      	str	r3, [sp, #16]
 8024dfe:	9307      	str	r3, [sp, #28]
 8024e00:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8024e04:	931a      	str	r3, [sp, #104]	@ 0x68
 8024e06:	4654      	mov	r4, sl
 8024e08:	2205      	movs	r2, #5
 8024e0a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8024e0e:	4853      	ldr	r0, [pc, #332]	@ (8024f5c <_vfiprintf_r+0x21c>)
 8024e10:	f7db f9ee 	bl	80001f0 <memchr>
 8024e14:	9a04      	ldr	r2, [sp, #16]
 8024e16:	b9d8      	cbnz	r0, 8024e50 <_vfiprintf_r+0x110>
 8024e18:	06d1      	lsls	r1, r2, #27
 8024e1a:	bf44      	itt	mi
 8024e1c:	2320      	movmi	r3, #32
 8024e1e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8024e22:	0713      	lsls	r3, r2, #28
 8024e24:	bf44      	itt	mi
 8024e26:	232b      	movmi	r3, #43	@ 0x2b
 8024e28:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8024e2c:	f89a 3000 	ldrb.w	r3, [sl]
 8024e30:	2b2a      	cmp	r3, #42	@ 0x2a
 8024e32:	d015      	beq.n	8024e60 <_vfiprintf_r+0x120>
 8024e34:	9a07      	ldr	r2, [sp, #28]
 8024e36:	4654      	mov	r4, sl
 8024e38:	2000      	movs	r0, #0
 8024e3a:	f04f 0c0a 	mov.w	ip, #10
 8024e3e:	4621      	mov	r1, r4
 8024e40:	f811 3b01 	ldrb.w	r3, [r1], #1
 8024e44:	3b30      	subs	r3, #48	@ 0x30
 8024e46:	2b09      	cmp	r3, #9
 8024e48:	d94b      	bls.n	8024ee2 <_vfiprintf_r+0x1a2>
 8024e4a:	b1b0      	cbz	r0, 8024e7a <_vfiprintf_r+0x13a>
 8024e4c:	9207      	str	r2, [sp, #28]
 8024e4e:	e014      	b.n	8024e7a <_vfiprintf_r+0x13a>
 8024e50:	eba0 0308 	sub.w	r3, r0, r8
 8024e54:	fa09 f303 	lsl.w	r3, r9, r3
 8024e58:	4313      	orrs	r3, r2
 8024e5a:	9304      	str	r3, [sp, #16]
 8024e5c:	46a2      	mov	sl, r4
 8024e5e:	e7d2      	b.n	8024e06 <_vfiprintf_r+0xc6>
 8024e60:	9b03      	ldr	r3, [sp, #12]
 8024e62:	1d19      	adds	r1, r3, #4
 8024e64:	681b      	ldr	r3, [r3, #0]
 8024e66:	9103      	str	r1, [sp, #12]
 8024e68:	2b00      	cmp	r3, #0
 8024e6a:	bfbb      	ittet	lt
 8024e6c:	425b      	neglt	r3, r3
 8024e6e:	f042 0202 	orrlt.w	r2, r2, #2
 8024e72:	9307      	strge	r3, [sp, #28]
 8024e74:	9307      	strlt	r3, [sp, #28]
 8024e76:	bfb8      	it	lt
 8024e78:	9204      	strlt	r2, [sp, #16]
 8024e7a:	7823      	ldrb	r3, [r4, #0]
 8024e7c:	2b2e      	cmp	r3, #46	@ 0x2e
 8024e7e:	d10a      	bne.n	8024e96 <_vfiprintf_r+0x156>
 8024e80:	7863      	ldrb	r3, [r4, #1]
 8024e82:	2b2a      	cmp	r3, #42	@ 0x2a
 8024e84:	d132      	bne.n	8024eec <_vfiprintf_r+0x1ac>
 8024e86:	9b03      	ldr	r3, [sp, #12]
 8024e88:	1d1a      	adds	r2, r3, #4
 8024e8a:	681b      	ldr	r3, [r3, #0]
 8024e8c:	9203      	str	r2, [sp, #12]
 8024e8e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8024e92:	3402      	adds	r4, #2
 8024e94:	9305      	str	r3, [sp, #20]
 8024e96:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8024f6c <_vfiprintf_r+0x22c>
 8024e9a:	7821      	ldrb	r1, [r4, #0]
 8024e9c:	2203      	movs	r2, #3
 8024e9e:	4650      	mov	r0, sl
 8024ea0:	f7db f9a6 	bl	80001f0 <memchr>
 8024ea4:	b138      	cbz	r0, 8024eb6 <_vfiprintf_r+0x176>
 8024ea6:	9b04      	ldr	r3, [sp, #16]
 8024ea8:	eba0 000a 	sub.w	r0, r0, sl
 8024eac:	2240      	movs	r2, #64	@ 0x40
 8024eae:	4082      	lsls	r2, r0
 8024eb0:	4313      	orrs	r3, r2
 8024eb2:	3401      	adds	r4, #1
 8024eb4:	9304      	str	r3, [sp, #16]
 8024eb6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8024eba:	4829      	ldr	r0, [pc, #164]	@ (8024f60 <_vfiprintf_r+0x220>)
 8024ebc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8024ec0:	2206      	movs	r2, #6
 8024ec2:	f7db f995 	bl	80001f0 <memchr>
 8024ec6:	2800      	cmp	r0, #0
 8024ec8:	d03f      	beq.n	8024f4a <_vfiprintf_r+0x20a>
 8024eca:	4b26      	ldr	r3, [pc, #152]	@ (8024f64 <_vfiprintf_r+0x224>)
 8024ecc:	bb1b      	cbnz	r3, 8024f16 <_vfiprintf_r+0x1d6>
 8024ece:	9b03      	ldr	r3, [sp, #12]
 8024ed0:	3307      	adds	r3, #7
 8024ed2:	f023 0307 	bic.w	r3, r3, #7
 8024ed6:	3308      	adds	r3, #8
 8024ed8:	9303      	str	r3, [sp, #12]
 8024eda:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024edc:	443b      	add	r3, r7
 8024ede:	9309      	str	r3, [sp, #36]	@ 0x24
 8024ee0:	e76a      	b.n	8024db8 <_vfiprintf_r+0x78>
 8024ee2:	fb0c 3202 	mla	r2, ip, r2, r3
 8024ee6:	460c      	mov	r4, r1
 8024ee8:	2001      	movs	r0, #1
 8024eea:	e7a8      	b.n	8024e3e <_vfiprintf_r+0xfe>
 8024eec:	2300      	movs	r3, #0
 8024eee:	3401      	adds	r4, #1
 8024ef0:	9305      	str	r3, [sp, #20]
 8024ef2:	4619      	mov	r1, r3
 8024ef4:	f04f 0c0a 	mov.w	ip, #10
 8024ef8:	4620      	mov	r0, r4
 8024efa:	f810 2b01 	ldrb.w	r2, [r0], #1
 8024efe:	3a30      	subs	r2, #48	@ 0x30
 8024f00:	2a09      	cmp	r2, #9
 8024f02:	d903      	bls.n	8024f0c <_vfiprintf_r+0x1cc>
 8024f04:	2b00      	cmp	r3, #0
 8024f06:	d0c6      	beq.n	8024e96 <_vfiprintf_r+0x156>
 8024f08:	9105      	str	r1, [sp, #20]
 8024f0a:	e7c4      	b.n	8024e96 <_vfiprintf_r+0x156>
 8024f0c:	fb0c 2101 	mla	r1, ip, r1, r2
 8024f10:	4604      	mov	r4, r0
 8024f12:	2301      	movs	r3, #1
 8024f14:	e7f0      	b.n	8024ef8 <_vfiprintf_r+0x1b8>
 8024f16:	ab03      	add	r3, sp, #12
 8024f18:	9300      	str	r3, [sp, #0]
 8024f1a:	462a      	mov	r2, r5
 8024f1c:	4b12      	ldr	r3, [pc, #72]	@ (8024f68 <_vfiprintf_r+0x228>)
 8024f1e:	a904      	add	r1, sp, #16
 8024f20:	4630      	mov	r0, r6
 8024f22:	f3af 8000 	nop.w
 8024f26:	4607      	mov	r7, r0
 8024f28:	1c78      	adds	r0, r7, #1
 8024f2a:	d1d6      	bne.n	8024eda <_vfiprintf_r+0x19a>
 8024f2c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8024f2e:	07d9      	lsls	r1, r3, #31
 8024f30:	d405      	bmi.n	8024f3e <_vfiprintf_r+0x1fe>
 8024f32:	89ab      	ldrh	r3, [r5, #12]
 8024f34:	059a      	lsls	r2, r3, #22
 8024f36:	d402      	bmi.n	8024f3e <_vfiprintf_r+0x1fe>
 8024f38:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8024f3a:	f7ff fe21 	bl	8024b80 <__retarget_lock_release_recursive>
 8024f3e:	89ab      	ldrh	r3, [r5, #12]
 8024f40:	065b      	lsls	r3, r3, #25
 8024f42:	f53f af1f 	bmi.w	8024d84 <_vfiprintf_r+0x44>
 8024f46:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8024f48:	e71e      	b.n	8024d88 <_vfiprintf_r+0x48>
 8024f4a:	ab03      	add	r3, sp, #12
 8024f4c:	9300      	str	r3, [sp, #0]
 8024f4e:	462a      	mov	r2, r5
 8024f50:	4b05      	ldr	r3, [pc, #20]	@ (8024f68 <_vfiprintf_r+0x228>)
 8024f52:	a904      	add	r1, sp, #16
 8024f54:	4630      	mov	r0, r6
 8024f56:	f000 f879 	bl	802504c <_printf_i>
 8024f5a:	e7e4      	b.n	8024f26 <_vfiprintf_r+0x1e6>
 8024f5c:	08026763 	.word	0x08026763
 8024f60:	0802676d 	.word	0x0802676d
 8024f64:	00000000 	.word	0x00000000
 8024f68:	08024d1b 	.word	0x08024d1b
 8024f6c:	08026769 	.word	0x08026769

08024f70 <_printf_common>:
 8024f70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024f74:	4616      	mov	r6, r2
 8024f76:	4698      	mov	r8, r3
 8024f78:	688a      	ldr	r2, [r1, #8]
 8024f7a:	690b      	ldr	r3, [r1, #16]
 8024f7c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8024f80:	4293      	cmp	r3, r2
 8024f82:	bfb8      	it	lt
 8024f84:	4613      	movlt	r3, r2
 8024f86:	6033      	str	r3, [r6, #0]
 8024f88:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8024f8c:	4607      	mov	r7, r0
 8024f8e:	460c      	mov	r4, r1
 8024f90:	b10a      	cbz	r2, 8024f96 <_printf_common+0x26>
 8024f92:	3301      	adds	r3, #1
 8024f94:	6033      	str	r3, [r6, #0]
 8024f96:	6823      	ldr	r3, [r4, #0]
 8024f98:	0699      	lsls	r1, r3, #26
 8024f9a:	bf42      	ittt	mi
 8024f9c:	6833      	ldrmi	r3, [r6, #0]
 8024f9e:	3302      	addmi	r3, #2
 8024fa0:	6033      	strmi	r3, [r6, #0]
 8024fa2:	6825      	ldr	r5, [r4, #0]
 8024fa4:	f015 0506 	ands.w	r5, r5, #6
 8024fa8:	d106      	bne.n	8024fb8 <_printf_common+0x48>
 8024faa:	f104 0a19 	add.w	sl, r4, #25
 8024fae:	68e3      	ldr	r3, [r4, #12]
 8024fb0:	6832      	ldr	r2, [r6, #0]
 8024fb2:	1a9b      	subs	r3, r3, r2
 8024fb4:	42ab      	cmp	r3, r5
 8024fb6:	dc26      	bgt.n	8025006 <_printf_common+0x96>
 8024fb8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8024fbc:	6822      	ldr	r2, [r4, #0]
 8024fbe:	3b00      	subs	r3, #0
 8024fc0:	bf18      	it	ne
 8024fc2:	2301      	movne	r3, #1
 8024fc4:	0692      	lsls	r2, r2, #26
 8024fc6:	d42b      	bmi.n	8025020 <_printf_common+0xb0>
 8024fc8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8024fcc:	4641      	mov	r1, r8
 8024fce:	4638      	mov	r0, r7
 8024fd0:	47c8      	blx	r9
 8024fd2:	3001      	adds	r0, #1
 8024fd4:	d01e      	beq.n	8025014 <_printf_common+0xa4>
 8024fd6:	6823      	ldr	r3, [r4, #0]
 8024fd8:	6922      	ldr	r2, [r4, #16]
 8024fda:	f003 0306 	and.w	r3, r3, #6
 8024fde:	2b04      	cmp	r3, #4
 8024fe0:	bf02      	ittt	eq
 8024fe2:	68e5      	ldreq	r5, [r4, #12]
 8024fe4:	6833      	ldreq	r3, [r6, #0]
 8024fe6:	1aed      	subeq	r5, r5, r3
 8024fe8:	68a3      	ldr	r3, [r4, #8]
 8024fea:	bf0c      	ite	eq
 8024fec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8024ff0:	2500      	movne	r5, #0
 8024ff2:	4293      	cmp	r3, r2
 8024ff4:	bfc4      	itt	gt
 8024ff6:	1a9b      	subgt	r3, r3, r2
 8024ff8:	18ed      	addgt	r5, r5, r3
 8024ffa:	2600      	movs	r6, #0
 8024ffc:	341a      	adds	r4, #26
 8024ffe:	42b5      	cmp	r5, r6
 8025000:	d11a      	bne.n	8025038 <_printf_common+0xc8>
 8025002:	2000      	movs	r0, #0
 8025004:	e008      	b.n	8025018 <_printf_common+0xa8>
 8025006:	2301      	movs	r3, #1
 8025008:	4652      	mov	r2, sl
 802500a:	4641      	mov	r1, r8
 802500c:	4638      	mov	r0, r7
 802500e:	47c8      	blx	r9
 8025010:	3001      	adds	r0, #1
 8025012:	d103      	bne.n	802501c <_printf_common+0xac>
 8025014:	f04f 30ff 	mov.w	r0, #4294967295
 8025018:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802501c:	3501      	adds	r5, #1
 802501e:	e7c6      	b.n	8024fae <_printf_common+0x3e>
 8025020:	18e1      	adds	r1, r4, r3
 8025022:	1c5a      	adds	r2, r3, #1
 8025024:	2030      	movs	r0, #48	@ 0x30
 8025026:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802502a:	4422      	add	r2, r4
 802502c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8025030:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8025034:	3302      	adds	r3, #2
 8025036:	e7c7      	b.n	8024fc8 <_printf_common+0x58>
 8025038:	2301      	movs	r3, #1
 802503a:	4622      	mov	r2, r4
 802503c:	4641      	mov	r1, r8
 802503e:	4638      	mov	r0, r7
 8025040:	47c8      	blx	r9
 8025042:	3001      	adds	r0, #1
 8025044:	d0e6      	beq.n	8025014 <_printf_common+0xa4>
 8025046:	3601      	adds	r6, #1
 8025048:	e7d9      	b.n	8024ffe <_printf_common+0x8e>
	...

0802504c <_printf_i>:
 802504c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8025050:	7e0f      	ldrb	r7, [r1, #24]
 8025052:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8025054:	2f78      	cmp	r7, #120	@ 0x78
 8025056:	4691      	mov	r9, r2
 8025058:	4680      	mov	r8, r0
 802505a:	460c      	mov	r4, r1
 802505c:	469a      	mov	sl, r3
 802505e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8025062:	d807      	bhi.n	8025074 <_printf_i+0x28>
 8025064:	2f62      	cmp	r7, #98	@ 0x62
 8025066:	d80a      	bhi.n	802507e <_printf_i+0x32>
 8025068:	2f00      	cmp	r7, #0
 802506a:	f000 80d1 	beq.w	8025210 <_printf_i+0x1c4>
 802506e:	2f58      	cmp	r7, #88	@ 0x58
 8025070:	f000 80b8 	beq.w	80251e4 <_printf_i+0x198>
 8025074:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8025078:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802507c:	e03a      	b.n	80250f4 <_printf_i+0xa8>
 802507e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8025082:	2b15      	cmp	r3, #21
 8025084:	d8f6      	bhi.n	8025074 <_printf_i+0x28>
 8025086:	a101      	add	r1, pc, #4	@ (adr r1, 802508c <_printf_i+0x40>)
 8025088:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802508c:	080250e5 	.word	0x080250e5
 8025090:	080250f9 	.word	0x080250f9
 8025094:	08025075 	.word	0x08025075
 8025098:	08025075 	.word	0x08025075
 802509c:	08025075 	.word	0x08025075
 80250a0:	08025075 	.word	0x08025075
 80250a4:	080250f9 	.word	0x080250f9
 80250a8:	08025075 	.word	0x08025075
 80250ac:	08025075 	.word	0x08025075
 80250b0:	08025075 	.word	0x08025075
 80250b4:	08025075 	.word	0x08025075
 80250b8:	080251f7 	.word	0x080251f7
 80250bc:	08025123 	.word	0x08025123
 80250c0:	080251b1 	.word	0x080251b1
 80250c4:	08025075 	.word	0x08025075
 80250c8:	08025075 	.word	0x08025075
 80250cc:	08025219 	.word	0x08025219
 80250d0:	08025075 	.word	0x08025075
 80250d4:	08025123 	.word	0x08025123
 80250d8:	08025075 	.word	0x08025075
 80250dc:	08025075 	.word	0x08025075
 80250e0:	080251b9 	.word	0x080251b9
 80250e4:	6833      	ldr	r3, [r6, #0]
 80250e6:	1d1a      	adds	r2, r3, #4
 80250e8:	681b      	ldr	r3, [r3, #0]
 80250ea:	6032      	str	r2, [r6, #0]
 80250ec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80250f0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80250f4:	2301      	movs	r3, #1
 80250f6:	e09c      	b.n	8025232 <_printf_i+0x1e6>
 80250f8:	6833      	ldr	r3, [r6, #0]
 80250fa:	6820      	ldr	r0, [r4, #0]
 80250fc:	1d19      	adds	r1, r3, #4
 80250fe:	6031      	str	r1, [r6, #0]
 8025100:	0606      	lsls	r6, r0, #24
 8025102:	d501      	bpl.n	8025108 <_printf_i+0xbc>
 8025104:	681d      	ldr	r5, [r3, #0]
 8025106:	e003      	b.n	8025110 <_printf_i+0xc4>
 8025108:	0645      	lsls	r5, r0, #25
 802510a:	d5fb      	bpl.n	8025104 <_printf_i+0xb8>
 802510c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8025110:	2d00      	cmp	r5, #0
 8025112:	da03      	bge.n	802511c <_printf_i+0xd0>
 8025114:	232d      	movs	r3, #45	@ 0x2d
 8025116:	426d      	negs	r5, r5
 8025118:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802511c:	4858      	ldr	r0, [pc, #352]	@ (8025280 <_printf_i+0x234>)
 802511e:	230a      	movs	r3, #10
 8025120:	e011      	b.n	8025146 <_printf_i+0xfa>
 8025122:	6821      	ldr	r1, [r4, #0]
 8025124:	6833      	ldr	r3, [r6, #0]
 8025126:	0608      	lsls	r0, r1, #24
 8025128:	f853 5b04 	ldr.w	r5, [r3], #4
 802512c:	d402      	bmi.n	8025134 <_printf_i+0xe8>
 802512e:	0649      	lsls	r1, r1, #25
 8025130:	bf48      	it	mi
 8025132:	b2ad      	uxthmi	r5, r5
 8025134:	2f6f      	cmp	r7, #111	@ 0x6f
 8025136:	4852      	ldr	r0, [pc, #328]	@ (8025280 <_printf_i+0x234>)
 8025138:	6033      	str	r3, [r6, #0]
 802513a:	bf14      	ite	ne
 802513c:	230a      	movne	r3, #10
 802513e:	2308      	moveq	r3, #8
 8025140:	2100      	movs	r1, #0
 8025142:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8025146:	6866      	ldr	r6, [r4, #4]
 8025148:	60a6      	str	r6, [r4, #8]
 802514a:	2e00      	cmp	r6, #0
 802514c:	db05      	blt.n	802515a <_printf_i+0x10e>
 802514e:	6821      	ldr	r1, [r4, #0]
 8025150:	432e      	orrs	r6, r5
 8025152:	f021 0104 	bic.w	r1, r1, #4
 8025156:	6021      	str	r1, [r4, #0]
 8025158:	d04b      	beq.n	80251f2 <_printf_i+0x1a6>
 802515a:	4616      	mov	r6, r2
 802515c:	fbb5 f1f3 	udiv	r1, r5, r3
 8025160:	fb03 5711 	mls	r7, r3, r1, r5
 8025164:	5dc7      	ldrb	r7, [r0, r7]
 8025166:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802516a:	462f      	mov	r7, r5
 802516c:	42bb      	cmp	r3, r7
 802516e:	460d      	mov	r5, r1
 8025170:	d9f4      	bls.n	802515c <_printf_i+0x110>
 8025172:	2b08      	cmp	r3, #8
 8025174:	d10b      	bne.n	802518e <_printf_i+0x142>
 8025176:	6823      	ldr	r3, [r4, #0]
 8025178:	07df      	lsls	r7, r3, #31
 802517a:	d508      	bpl.n	802518e <_printf_i+0x142>
 802517c:	6923      	ldr	r3, [r4, #16]
 802517e:	6861      	ldr	r1, [r4, #4]
 8025180:	4299      	cmp	r1, r3
 8025182:	bfde      	ittt	le
 8025184:	2330      	movle	r3, #48	@ 0x30
 8025186:	f806 3c01 	strble.w	r3, [r6, #-1]
 802518a:	f106 36ff 	addle.w	r6, r6, #4294967295
 802518e:	1b92      	subs	r2, r2, r6
 8025190:	6122      	str	r2, [r4, #16]
 8025192:	f8cd a000 	str.w	sl, [sp]
 8025196:	464b      	mov	r3, r9
 8025198:	aa03      	add	r2, sp, #12
 802519a:	4621      	mov	r1, r4
 802519c:	4640      	mov	r0, r8
 802519e:	f7ff fee7 	bl	8024f70 <_printf_common>
 80251a2:	3001      	adds	r0, #1
 80251a4:	d14a      	bne.n	802523c <_printf_i+0x1f0>
 80251a6:	f04f 30ff 	mov.w	r0, #4294967295
 80251aa:	b004      	add	sp, #16
 80251ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80251b0:	6823      	ldr	r3, [r4, #0]
 80251b2:	f043 0320 	orr.w	r3, r3, #32
 80251b6:	6023      	str	r3, [r4, #0]
 80251b8:	4832      	ldr	r0, [pc, #200]	@ (8025284 <_printf_i+0x238>)
 80251ba:	2778      	movs	r7, #120	@ 0x78
 80251bc:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80251c0:	6823      	ldr	r3, [r4, #0]
 80251c2:	6831      	ldr	r1, [r6, #0]
 80251c4:	061f      	lsls	r7, r3, #24
 80251c6:	f851 5b04 	ldr.w	r5, [r1], #4
 80251ca:	d402      	bmi.n	80251d2 <_printf_i+0x186>
 80251cc:	065f      	lsls	r7, r3, #25
 80251ce:	bf48      	it	mi
 80251d0:	b2ad      	uxthmi	r5, r5
 80251d2:	6031      	str	r1, [r6, #0]
 80251d4:	07d9      	lsls	r1, r3, #31
 80251d6:	bf44      	itt	mi
 80251d8:	f043 0320 	orrmi.w	r3, r3, #32
 80251dc:	6023      	strmi	r3, [r4, #0]
 80251de:	b11d      	cbz	r5, 80251e8 <_printf_i+0x19c>
 80251e0:	2310      	movs	r3, #16
 80251e2:	e7ad      	b.n	8025140 <_printf_i+0xf4>
 80251e4:	4826      	ldr	r0, [pc, #152]	@ (8025280 <_printf_i+0x234>)
 80251e6:	e7e9      	b.n	80251bc <_printf_i+0x170>
 80251e8:	6823      	ldr	r3, [r4, #0]
 80251ea:	f023 0320 	bic.w	r3, r3, #32
 80251ee:	6023      	str	r3, [r4, #0]
 80251f0:	e7f6      	b.n	80251e0 <_printf_i+0x194>
 80251f2:	4616      	mov	r6, r2
 80251f4:	e7bd      	b.n	8025172 <_printf_i+0x126>
 80251f6:	6833      	ldr	r3, [r6, #0]
 80251f8:	6825      	ldr	r5, [r4, #0]
 80251fa:	6961      	ldr	r1, [r4, #20]
 80251fc:	1d18      	adds	r0, r3, #4
 80251fe:	6030      	str	r0, [r6, #0]
 8025200:	062e      	lsls	r6, r5, #24
 8025202:	681b      	ldr	r3, [r3, #0]
 8025204:	d501      	bpl.n	802520a <_printf_i+0x1be>
 8025206:	6019      	str	r1, [r3, #0]
 8025208:	e002      	b.n	8025210 <_printf_i+0x1c4>
 802520a:	0668      	lsls	r0, r5, #25
 802520c:	d5fb      	bpl.n	8025206 <_printf_i+0x1ba>
 802520e:	8019      	strh	r1, [r3, #0]
 8025210:	2300      	movs	r3, #0
 8025212:	6123      	str	r3, [r4, #16]
 8025214:	4616      	mov	r6, r2
 8025216:	e7bc      	b.n	8025192 <_printf_i+0x146>
 8025218:	6833      	ldr	r3, [r6, #0]
 802521a:	1d1a      	adds	r2, r3, #4
 802521c:	6032      	str	r2, [r6, #0]
 802521e:	681e      	ldr	r6, [r3, #0]
 8025220:	6862      	ldr	r2, [r4, #4]
 8025222:	2100      	movs	r1, #0
 8025224:	4630      	mov	r0, r6
 8025226:	f7da ffe3 	bl	80001f0 <memchr>
 802522a:	b108      	cbz	r0, 8025230 <_printf_i+0x1e4>
 802522c:	1b80      	subs	r0, r0, r6
 802522e:	6060      	str	r0, [r4, #4]
 8025230:	6863      	ldr	r3, [r4, #4]
 8025232:	6123      	str	r3, [r4, #16]
 8025234:	2300      	movs	r3, #0
 8025236:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802523a:	e7aa      	b.n	8025192 <_printf_i+0x146>
 802523c:	6923      	ldr	r3, [r4, #16]
 802523e:	4632      	mov	r2, r6
 8025240:	4649      	mov	r1, r9
 8025242:	4640      	mov	r0, r8
 8025244:	47d0      	blx	sl
 8025246:	3001      	adds	r0, #1
 8025248:	d0ad      	beq.n	80251a6 <_printf_i+0x15a>
 802524a:	6823      	ldr	r3, [r4, #0]
 802524c:	079b      	lsls	r3, r3, #30
 802524e:	d413      	bmi.n	8025278 <_printf_i+0x22c>
 8025250:	68e0      	ldr	r0, [r4, #12]
 8025252:	9b03      	ldr	r3, [sp, #12]
 8025254:	4298      	cmp	r0, r3
 8025256:	bfb8      	it	lt
 8025258:	4618      	movlt	r0, r3
 802525a:	e7a6      	b.n	80251aa <_printf_i+0x15e>
 802525c:	2301      	movs	r3, #1
 802525e:	4632      	mov	r2, r6
 8025260:	4649      	mov	r1, r9
 8025262:	4640      	mov	r0, r8
 8025264:	47d0      	blx	sl
 8025266:	3001      	adds	r0, #1
 8025268:	d09d      	beq.n	80251a6 <_printf_i+0x15a>
 802526a:	3501      	adds	r5, #1
 802526c:	68e3      	ldr	r3, [r4, #12]
 802526e:	9903      	ldr	r1, [sp, #12]
 8025270:	1a5b      	subs	r3, r3, r1
 8025272:	42ab      	cmp	r3, r5
 8025274:	dcf2      	bgt.n	802525c <_printf_i+0x210>
 8025276:	e7eb      	b.n	8025250 <_printf_i+0x204>
 8025278:	2500      	movs	r5, #0
 802527a:	f104 0619 	add.w	r6, r4, #25
 802527e:	e7f5      	b.n	802526c <_printf_i+0x220>
 8025280:	08026774 	.word	0x08026774
 8025284:	08026785 	.word	0x08026785

08025288 <__sflush_r>:
 8025288:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802528c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025290:	0716      	lsls	r6, r2, #28
 8025292:	4605      	mov	r5, r0
 8025294:	460c      	mov	r4, r1
 8025296:	d454      	bmi.n	8025342 <__sflush_r+0xba>
 8025298:	684b      	ldr	r3, [r1, #4]
 802529a:	2b00      	cmp	r3, #0
 802529c:	dc02      	bgt.n	80252a4 <__sflush_r+0x1c>
 802529e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80252a0:	2b00      	cmp	r3, #0
 80252a2:	dd48      	ble.n	8025336 <__sflush_r+0xae>
 80252a4:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80252a6:	2e00      	cmp	r6, #0
 80252a8:	d045      	beq.n	8025336 <__sflush_r+0xae>
 80252aa:	2300      	movs	r3, #0
 80252ac:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80252b0:	682f      	ldr	r7, [r5, #0]
 80252b2:	6a21      	ldr	r1, [r4, #32]
 80252b4:	602b      	str	r3, [r5, #0]
 80252b6:	d030      	beq.n	802531a <__sflush_r+0x92>
 80252b8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80252ba:	89a3      	ldrh	r3, [r4, #12]
 80252bc:	0759      	lsls	r1, r3, #29
 80252be:	d505      	bpl.n	80252cc <__sflush_r+0x44>
 80252c0:	6863      	ldr	r3, [r4, #4]
 80252c2:	1ad2      	subs	r2, r2, r3
 80252c4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80252c6:	b10b      	cbz	r3, 80252cc <__sflush_r+0x44>
 80252c8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80252ca:	1ad2      	subs	r2, r2, r3
 80252cc:	2300      	movs	r3, #0
 80252ce:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80252d0:	6a21      	ldr	r1, [r4, #32]
 80252d2:	4628      	mov	r0, r5
 80252d4:	47b0      	blx	r6
 80252d6:	1c43      	adds	r3, r0, #1
 80252d8:	89a3      	ldrh	r3, [r4, #12]
 80252da:	d106      	bne.n	80252ea <__sflush_r+0x62>
 80252dc:	6829      	ldr	r1, [r5, #0]
 80252de:	291d      	cmp	r1, #29
 80252e0:	d82b      	bhi.n	802533a <__sflush_r+0xb2>
 80252e2:	4a2a      	ldr	r2, [pc, #168]	@ (802538c <__sflush_r+0x104>)
 80252e4:	40ca      	lsrs	r2, r1
 80252e6:	07d6      	lsls	r6, r2, #31
 80252e8:	d527      	bpl.n	802533a <__sflush_r+0xb2>
 80252ea:	2200      	movs	r2, #0
 80252ec:	6062      	str	r2, [r4, #4]
 80252ee:	04d9      	lsls	r1, r3, #19
 80252f0:	6922      	ldr	r2, [r4, #16]
 80252f2:	6022      	str	r2, [r4, #0]
 80252f4:	d504      	bpl.n	8025300 <__sflush_r+0x78>
 80252f6:	1c42      	adds	r2, r0, #1
 80252f8:	d101      	bne.n	80252fe <__sflush_r+0x76>
 80252fa:	682b      	ldr	r3, [r5, #0]
 80252fc:	b903      	cbnz	r3, 8025300 <__sflush_r+0x78>
 80252fe:	6560      	str	r0, [r4, #84]	@ 0x54
 8025300:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8025302:	602f      	str	r7, [r5, #0]
 8025304:	b1b9      	cbz	r1, 8025336 <__sflush_r+0xae>
 8025306:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802530a:	4299      	cmp	r1, r3
 802530c:	d002      	beq.n	8025314 <__sflush_r+0x8c>
 802530e:	4628      	mov	r0, r5
 8025310:	f7ff fca2 	bl	8024c58 <_free_r>
 8025314:	2300      	movs	r3, #0
 8025316:	6363      	str	r3, [r4, #52]	@ 0x34
 8025318:	e00d      	b.n	8025336 <__sflush_r+0xae>
 802531a:	2301      	movs	r3, #1
 802531c:	4628      	mov	r0, r5
 802531e:	47b0      	blx	r6
 8025320:	4602      	mov	r2, r0
 8025322:	1c50      	adds	r0, r2, #1
 8025324:	d1c9      	bne.n	80252ba <__sflush_r+0x32>
 8025326:	682b      	ldr	r3, [r5, #0]
 8025328:	2b00      	cmp	r3, #0
 802532a:	d0c6      	beq.n	80252ba <__sflush_r+0x32>
 802532c:	2b1d      	cmp	r3, #29
 802532e:	d001      	beq.n	8025334 <__sflush_r+0xac>
 8025330:	2b16      	cmp	r3, #22
 8025332:	d11e      	bne.n	8025372 <__sflush_r+0xea>
 8025334:	602f      	str	r7, [r5, #0]
 8025336:	2000      	movs	r0, #0
 8025338:	e022      	b.n	8025380 <__sflush_r+0xf8>
 802533a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802533e:	b21b      	sxth	r3, r3
 8025340:	e01b      	b.n	802537a <__sflush_r+0xf2>
 8025342:	690f      	ldr	r7, [r1, #16]
 8025344:	2f00      	cmp	r7, #0
 8025346:	d0f6      	beq.n	8025336 <__sflush_r+0xae>
 8025348:	0793      	lsls	r3, r2, #30
 802534a:	680e      	ldr	r6, [r1, #0]
 802534c:	bf08      	it	eq
 802534e:	694b      	ldreq	r3, [r1, #20]
 8025350:	600f      	str	r7, [r1, #0]
 8025352:	bf18      	it	ne
 8025354:	2300      	movne	r3, #0
 8025356:	eba6 0807 	sub.w	r8, r6, r7
 802535a:	608b      	str	r3, [r1, #8]
 802535c:	f1b8 0f00 	cmp.w	r8, #0
 8025360:	dde9      	ble.n	8025336 <__sflush_r+0xae>
 8025362:	6a21      	ldr	r1, [r4, #32]
 8025364:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8025366:	4643      	mov	r3, r8
 8025368:	463a      	mov	r2, r7
 802536a:	4628      	mov	r0, r5
 802536c:	47b0      	blx	r6
 802536e:	2800      	cmp	r0, #0
 8025370:	dc08      	bgt.n	8025384 <__sflush_r+0xfc>
 8025372:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025376:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802537a:	81a3      	strh	r3, [r4, #12]
 802537c:	f04f 30ff 	mov.w	r0, #4294967295
 8025380:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025384:	4407      	add	r7, r0
 8025386:	eba8 0800 	sub.w	r8, r8, r0
 802538a:	e7e7      	b.n	802535c <__sflush_r+0xd4>
 802538c:	20400001 	.word	0x20400001

08025390 <_fflush_r>:
 8025390:	b538      	push	{r3, r4, r5, lr}
 8025392:	690b      	ldr	r3, [r1, #16]
 8025394:	4605      	mov	r5, r0
 8025396:	460c      	mov	r4, r1
 8025398:	b913      	cbnz	r3, 80253a0 <_fflush_r+0x10>
 802539a:	2500      	movs	r5, #0
 802539c:	4628      	mov	r0, r5
 802539e:	bd38      	pop	{r3, r4, r5, pc}
 80253a0:	b118      	cbz	r0, 80253aa <_fflush_r+0x1a>
 80253a2:	6a03      	ldr	r3, [r0, #32]
 80253a4:	b90b      	cbnz	r3, 80253aa <_fflush_r+0x1a>
 80253a6:	f7ff fa91 	bl	80248cc <__sinit>
 80253aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80253ae:	2b00      	cmp	r3, #0
 80253b0:	d0f3      	beq.n	802539a <_fflush_r+0xa>
 80253b2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80253b4:	07d0      	lsls	r0, r2, #31
 80253b6:	d404      	bmi.n	80253c2 <_fflush_r+0x32>
 80253b8:	0599      	lsls	r1, r3, #22
 80253ba:	d402      	bmi.n	80253c2 <_fflush_r+0x32>
 80253bc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80253be:	f7ff fbde 	bl	8024b7e <__retarget_lock_acquire_recursive>
 80253c2:	4628      	mov	r0, r5
 80253c4:	4621      	mov	r1, r4
 80253c6:	f7ff ff5f 	bl	8025288 <__sflush_r>
 80253ca:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80253cc:	07da      	lsls	r2, r3, #31
 80253ce:	4605      	mov	r5, r0
 80253d0:	d4e4      	bmi.n	802539c <_fflush_r+0xc>
 80253d2:	89a3      	ldrh	r3, [r4, #12]
 80253d4:	059b      	lsls	r3, r3, #22
 80253d6:	d4e1      	bmi.n	802539c <_fflush_r+0xc>
 80253d8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80253da:	f7ff fbd1 	bl	8024b80 <__retarget_lock_release_recursive>
 80253de:	e7dd      	b.n	802539c <_fflush_r+0xc>

080253e0 <__swbuf_r>:
 80253e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80253e2:	460e      	mov	r6, r1
 80253e4:	4614      	mov	r4, r2
 80253e6:	4605      	mov	r5, r0
 80253e8:	b118      	cbz	r0, 80253f2 <__swbuf_r+0x12>
 80253ea:	6a03      	ldr	r3, [r0, #32]
 80253ec:	b90b      	cbnz	r3, 80253f2 <__swbuf_r+0x12>
 80253ee:	f7ff fa6d 	bl	80248cc <__sinit>
 80253f2:	69a3      	ldr	r3, [r4, #24]
 80253f4:	60a3      	str	r3, [r4, #8]
 80253f6:	89a3      	ldrh	r3, [r4, #12]
 80253f8:	071a      	lsls	r2, r3, #28
 80253fa:	d501      	bpl.n	8025400 <__swbuf_r+0x20>
 80253fc:	6923      	ldr	r3, [r4, #16]
 80253fe:	b943      	cbnz	r3, 8025412 <__swbuf_r+0x32>
 8025400:	4621      	mov	r1, r4
 8025402:	4628      	mov	r0, r5
 8025404:	f000 f82a 	bl	802545c <__swsetup_r>
 8025408:	b118      	cbz	r0, 8025412 <__swbuf_r+0x32>
 802540a:	f04f 37ff 	mov.w	r7, #4294967295
 802540e:	4638      	mov	r0, r7
 8025410:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025412:	6823      	ldr	r3, [r4, #0]
 8025414:	6922      	ldr	r2, [r4, #16]
 8025416:	1a98      	subs	r0, r3, r2
 8025418:	6963      	ldr	r3, [r4, #20]
 802541a:	b2f6      	uxtb	r6, r6
 802541c:	4283      	cmp	r3, r0
 802541e:	4637      	mov	r7, r6
 8025420:	dc05      	bgt.n	802542e <__swbuf_r+0x4e>
 8025422:	4621      	mov	r1, r4
 8025424:	4628      	mov	r0, r5
 8025426:	f7ff ffb3 	bl	8025390 <_fflush_r>
 802542a:	2800      	cmp	r0, #0
 802542c:	d1ed      	bne.n	802540a <__swbuf_r+0x2a>
 802542e:	68a3      	ldr	r3, [r4, #8]
 8025430:	3b01      	subs	r3, #1
 8025432:	60a3      	str	r3, [r4, #8]
 8025434:	6823      	ldr	r3, [r4, #0]
 8025436:	1c5a      	adds	r2, r3, #1
 8025438:	6022      	str	r2, [r4, #0]
 802543a:	701e      	strb	r6, [r3, #0]
 802543c:	6962      	ldr	r2, [r4, #20]
 802543e:	1c43      	adds	r3, r0, #1
 8025440:	429a      	cmp	r2, r3
 8025442:	d004      	beq.n	802544e <__swbuf_r+0x6e>
 8025444:	89a3      	ldrh	r3, [r4, #12]
 8025446:	07db      	lsls	r3, r3, #31
 8025448:	d5e1      	bpl.n	802540e <__swbuf_r+0x2e>
 802544a:	2e0a      	cmp	r6, #10
 802544c:	d1df      	bne.n	802540e <__swbuf_r+0x2e>
 802544e:	4621      	mov	r1, r4
 8025450:	4628      	mov	r0, r5
 8025452:	f7ff ff9d 	bl	8025390 <_fflush_r>
 8025456:	2800      	cmp	r0, #0
 8025458:	d0d9      	beq.n	802540e <__swbuf_r+0x2e>
 802545a:	e7d6      	b.n	802540a <__swbuf_r+0x2a>

0802545c <__swsetup_r>:
 802545c:	b538      	push	{r3, r4, r5, lr}
 802545e:	4b29      	ldr	r3, [pc, #164]	@ (8025504 <__swsetup_r+0xa8>)
 8025460:	4605      	mov	r5, r0
 8025462:	6818      	ldr	r0, [r3, #0]
 8025464:	460c      	mov	r4, r1
 8025466:	b118      	cbz	r0, 8025470 <__swsetup_r+0x14>
 8025468:	6a03      	ldr	r3, [r0, #32]
 802546a:	b90b      	cbnz	r3, 8025470 <__swsetup_r+0x14>
 802546c:	f7ff fa2e 	bl	80248cc <__sinit>
 8025470:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025474:	0719      	lsls	r1, r3, #28
 8025476:	d422      	bmi.n	80254be <__swsetup_r+0x62>
 8025478:	06da      	lsls	r2, r3, #27
 802547a:	d407      	bmi.n	802548c <__swsetup_r+0x30>
 802547c:	2209      	movs	r2, #9
 802547e:	602a      	str	r2, [r5, #0]
 8025480:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8025484:	81a3      	strh	r3, [r4, #12]
 8025486:	f04f 30ff 	mov.w	r0, #4294967295
 802548a:	e033      	b.n	80254f4 <__swsetup_r+0x98>
 802548c:	0758      	lsls	r0, r3, #29
 802548e:	d512      	bpl.n	80254b6 <__swsetup_r+0x5a>
 8025490:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8025492:	b141      	cbz	r1, 80254a6 <__swsetup_r+0x4a>
 8025494:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8025498:	4299      	cmp	r1, r3
 802549a:	d002      	beq.n	80254a2 <__swsetup_r+0x46>
 802549c:	4628      	mov	r0, r5
 802549e:	f7ff fbdb 	bl	8024c58 <_free_r>
 80254a2:	2300      	movs	r3, #0
 80254a4:	6363      	str	r3, [r4, #52]	@ 0x34
 80254a6:	89a3      	ldrh	r3, [r4, #12]
 80254a8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80254ac:	81a3      	strh	r3, [r4, #12]
 80254ae:	2300      	movs	r3, #0
 80254b0:	6063      	str	r3, [r4, #4]
 80254b2:	6923      	ldr	r3, [r4, #16]
 80254b4:	6023      	str	r3, [r4, #0]
 80254b6:	89a3      	ldrh	r3, [r4, #12]
 80254b8:	f043 0308 	orr.w	r3, r3, #8
 80254bc:	81a3      	strh	r3, [r4, #12]
 80254be:	6923      	ldr	r3, [r4, #16]
 80254c0:	b94b      	cbnz	r3, 80254d6 <__swsetup_r+0x7a>
 80254c2:	89a3      	ldrh	r3, [r4, #12]
 80254c4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80254c8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80254cc:	d003      	beq.n	80254d6 <__swsetup_r+0x7a>
 80254ce:	4621      	mov	r1, r4
 80254d0:	4628      	mov	r0, r5
 80254d2:	f000 f83f 	bl	8025554 <__smakebuf_r>
 80254d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80254da:	f013 0201 	ands.w	r2, r3, #1
 80254de:	d00a      	beq.n	80254f6 <__swsetup_r+0x9a>
 80254e0:	2200      	movs	r2, #0
 80254e2:	60a2      	str	r2, [r4, #8]
 80254e4:	6962      	ldr	r2, [r4, #20]
 80254e6:	4252      	negs	r2, r2
 80254e8:	61a2      	str	r2, [r4, #24]
 80254ea:	6922      	ldr	r2, [r4, #16]
 80254ec:	b942      	cbnz	r2, 8025500 <__swsetup_r+0xa4>
 80254ee:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80254f2:	d1c5      	bne.n	8025480 <__swsetup_r+0x24>
 80254f4:	bd38      	pop	{r3, r4, r5, pc}
 80254f6:	0799      	lsls	r1, r3, #30
 80254f8:	bf58      	it	pl
 80254fa:	6962      	ldrpl	r2, [r4, #20]
 80254fc:	60a2      	str	r2, [r4, #8]
 80254fe:	e7f4      	b.n	80254ea <__swsetup_r+0x8e>
 8025500:	2000      	movs	r0, #0
 8025502:	e7f7      	b.n	80254f4 <__swsetup_r+0x98>
 8025504:	20000118 	.word	0x20000118

08025508 <__swhatbuf_r>:
 8025508:	b570      	push	{r4, r5, r6, lr}
 802550a:	460c      	mov	r4, r1
 802550c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025510:	2900      	cmp	r1, #0
 8025512:	b096      	sub	sp, #88	@ 0x58
 8025514:	4615      	mov	r5, r2
 8025516:	461e      	mov	r6, r3
 8025518:	da0d      	bge.n	8025536 <__swhatbuf_r+0x2e>
 802551a:	89a3      	ldrh	r3, [r4, #12]
 802551c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8025520:	f04f 0100 	mov.w	r1, #0
 8025524:	bf14      	ite	ne
 8025526:	2340      	movne	r3, #64	@ 0x40
 8025528:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 802552c:	2000      	movs	r0, #0
 802552e:	6031      	str	r1, [r6, #0]
 8025530:	602b      	str	r3, [r5, #0]
 8025532:	b016      	add	sp, #88	@ 0x58
 8025534:	bd70      	pop	{r4, r5, r6, pc}
 8025536:	466a      	mov	r2, sp
 8025538:	f000 f848 	bl	80255cc <_fstat_r>
 802553c:	2800      	cmp	r0, #0
 802553e:	dbec      	blt.n	802551a <__swhatbuf_r+0x12>
 8025540:	9901      	ldr	r1, [sp, #4]
 8025542:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8025546:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802554a:	4259      	negs	r1, r3
 802554c:	4159      	adcs	r1, r3
 802554e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8025552:	e7eb      	b.n	802552c <__swhatbuf_r+0x24>

08025554 <__smakebuf_r>:
 8025554:	898b      	ldrh	r3, [r1, #12]
 8025556:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8025558:	079d      	lsls	r5, r3, #30
 802555a:	4606      	mov	r6, r0
 802555c:	460c      	mov	r4, r1
 802555e:	d507      	bpl.n	8025570 <__smakebuf_r+0x1c>
 8025560:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8025564:	6023      	str	r3, [r4, #0]
 8025566:	6123      	str	r3, [r4, #16]
 8025568:	2301      	movs	r3, #1
 802556a:	6163      	str	r3, [r4, #20]
 802556c:	b003      	add	sp, #12
 802556e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025570:	ab01      	add	r3, sp, #4
 8025572:	466a      	mov	r2, sp
 8025574:	f7ff ffc8 	bl	8025508 <__swhatbuf_r>
 8025578:	9f00      	ldr	r7, [sp, #0]
 802557a:	4605      	mov	r5, r0
 802557c:	4639      	mov	r1, r7
 802557e:	4630      	mov	r0, r6
 8025580:	f7ff f87e 	bl	8024680 <_malloc_r>
 8025584:	b948      	cbnz	r0, 802559a <__smakebuf_r+0x46>
 8025586:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802558a:	059a      	lsls	r2, r3, #22
 802558c:	d4ee      	bmi.n	802556c <__smakebuf_r+0x18>
 802558e:	f023 0303 	bic.w	r3, r3, #3
 8025592:	f043 0302 	orr.w	r3, r3, #2
 8025596:	81a3      	strh	r3, [r4, #12]
 8025598:	e7e2      	b.n	8025560 <__smakebuf_r+0xc>
 802559a:	89a3      	ldrh	r3, [r4, #12]
 802559c:	6020      	str	r0, [r4, #0]
 802559e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80255a2:	81a3      	strh	r3, [r4, #12]
 80255a4:	9b01      	ldr	r3, [sp, #4]
 80255a6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80255aa:	b15b      	cbz	r3, 80255c4 <__smakebuf_r+0x70>
 80255ac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80255b0:	4630      	mov	r0, r6
 80255b2:	f000 f81d 	bl	80255f0 <_isatty_r>
 80255b6:	b128      	cbz	r0, 80255c4 <__smakebuf_r+0x70>
 80255b8:	89a3      	ldrh	r3, [r4, #12]
 80255ba:	f023 0303 	bic.w	r3, r3, #3
 80255be:	f043 0301 	orr.w	r3, r3, #1
 80255c2:	81a3      	strh	r3, [r4, #12]
 80255c4:	89a3      	ldrh	r3, [r4, #12]
 80255c6:	431d      	orrs	r5, r3
 80255c8:	81a5      	strh	r5, [r4, #12]
 80255ca:	e7cf      	b.n	802556c <__smakebuf_r+0x18>

080255cc <_fstat_r>:
 80255cc:	b538      	push	{r3, r4, r5, lr}
 80255ce:	4d07      	ldr	r5, [pc, #28]	@ (80255ec <_fstat_r+0x20>)
 80255d0:	2300      	movs	r3, #0
 80255d2:	4604      	mov	r4, r0
 80255d4:	4608      	mov	r0, r1
 80255d6:	4611      	mov	r1, r2
 80255d8:	602b      	str	r3, [r5, #0]
 80255da:	f7dc fbc0 	bl	8001d5e <_fstat>
 80255de:	1c43      	adds	r3, r0, #1
 80255e0:	d102      	bne.n	80255e8 <_fstat_r+0x1c>
 80255e2:	682b      	ldr	r3, [r5, #0]
 80255e4:	b103      	cbz	r3, 80255e8 <_fstat_r+0x1c>
 80255e6:	6023      	str	r3, [r4, #0]
 80255e8:	bd38      	pop	{r3, r4, r5, pc}
 80255ea:	bf00      	nop
 80255ec:	20016360 	.word	0x20016360

080255f0 <_isatty_r>:
 80255f0:	b538      	push	{r3, r4, r5, lr}
 80255f2:	4d06      	ldr	r5, [pc, #24]	@ (802560c <_isatty_r+0x1c>)
 80255f4:	2300      	movs	r3, #0
 80255f6:	4604      	mov	r4, r0
 80255f8:	4608      	mov	r0, r1
 80255fa:	602b      	str	r3, [r5, #0]
 80255fc:	f7dc fbb4 	bl	8001d68 <_isatty>
 8025600:	1c43      	adds	r3, r0, #1
 8025602:	d102      	bne.n	802560a <_isatty_r+0x1a>
 8025604:	682b      	ldr	r3, [r5, #0]
 8025606:	b103      	cbz	r3, 802560a <_isatty_r+0x1a>
 8025608:	6023      	str	r3, [r4, #0]
 802560a:	bd38      	pop	{r3, r4, r5, pc}
 802560c:	20016360 	.word	0x20016360

08025610 <_init>:
 8025610:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025612:	bf00      	nop
 8025614:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8025616:	bc08      	pop	{r3}
 8025618:	469e      	mov	lr, r3
 802561a:	4770      	bx	lr

0802561c <_fini>:
 802561c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802561e:	bf00      	nop
 8025620:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8025622:	bc08      	pop	{r3}
 8025624:	469e      	mov	lr, r3
 8025626:	4770      	bx	lr
